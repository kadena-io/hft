;;load policy manager, ledger
(load "../policy-manager/policy-manager.repl")
(typecheck "marmalade-v2.quote-manager")

(begin-tx "Create abc accounts for tests")

  (env-hash (hash "accept-offer-with-royalties"))

  (env-data {
    "seller-guard": {"keys": ["account"], "pred": "keys-all"},
    "creator-guard": {"keys": ["creator"], "pred": "keys-all"},
    "bidder-guard": {"keys": ["bidder"], "pred": "keys-all"}
  })
  (coin.create-account "k:account" (read-keyset 'seller-guard))
  (coin.create-account "k:creator" (read-keyset 'creator-guard))
  (coin.create-account "k:bidder" (read-keyset 'bidder-guard))
  (test-capability (coin.COINBASE))
  (coin.coinbase "k:bidder" (read-keyset 'bidder-guard) 25.0)
(commit-tx)

(begin-tx "Create add mint token with royalties")
  (use marmalade-v2.ledger)
  (use marmalade-v2.policy-manager)
  (use marmalade-v2.util-v1)
  (use mini-guard-utils)
    (env-data {
      "token-id": (create-token-id {
        'uri: "test-quote-royalty-uri",
        'precision: 0,
        'policies: (create-policies {
           'non-fungible-policy: false
          ,'royalty-policy: true
          ,'collection-policy: false
          ,'guard-policy: false
        })
      } ALWAYS-TRUE)
     ,"royalty_spec": {
        "fungible": coin
        ,"creator": "k:creator"
        ,"creator-guard":  {"keys": ["creator"], "pred": "keys-all"}
        ,"royalty-rate": 0.05
      }
     ,"account-guard":  {"keys": ["account"], "pred": "keys-all"}
    })

    (expect "create a token with royalty-policy"
      true
      (create-token (read-msg 'token-id) 0 "test-quote-royalty-uri" (create-policies {
        'non-fungible-policy: false
        ,'royalty-policy: true
        ,'collection-policy: false
        ,'guard-policy: false
      }) ALWAYS-TRUE))

    (env-sigs [
      { 'key: 'any
      ,'caps: [
      (marmalade-v2.ledger.MINT (read-msg 'token-id) "k:account" 1.0)]
    }])

    (expect "mint 1.0 amount "
       true
       (mint (read-msg 'token-id) "k:account" (read-keyset 'account-guard ) 1.0))

     (expect "create, mint token events"
        [ {"name": "marmalade-v2.royalty-policy-v1.ROYALTY","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" {"creator": "k:creator","creator-guard": (at 'creator-guard (read-msg 'royalty_spec)),"fungible": coin,"royalty-rate": 0.05}]}
          {"name": "marmalade-v2.ledger.TOKEN","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" 0 [marmalade-v2.royalty-policy-v1] "test-quote-royalty-uri" ALWAYS-TRUE]}
          {"name": "marmalade-v2.ledger.MINT","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" 1.0]}
          {"name": "marmalade-v2.ledger.ACCOUNT_GUARD","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" (read-keyset 'account-guard)]}
          {"name": "marmalade-v2.ledger.RECONCILE","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" 1.0 {"account": "","current": 0.0,"previous": 0.0} {"account": "k:account","current": 1.0,"previous": 0.0}]} {"name": "marmalade-v2.ledger.SUPPLY","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" 1.0]}
        ]
        (map (remove "module-hash")  (env-events true))
     )
(commit-tx)

(begin-tx "Create an offer with quotes")
  (use marmalade-v2.ledger)
  (use marmalade-v2.policy-manager)
  (use marmalade-v2.util-v1)
  (env-hash (hash "accept-offer-with-royalties"))

  (env-data {
    "token-id": "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI"
   ,"quote": {
      "spec": {
        "seller-fungible-account": {
            "account": "k:account"
           ,"guard": {"keys": ["account"], "pred": "keys-all"}
          }
        ,"fungible": coin
        ,"price": 10.0
        ,"amount": 1.0
        }
      ,"seller-guard": {"keys": ["account"], "pred": "keys-all"}
      ,"quote-guards": [{"keys": ["market"], "pred": "keys-all"}]
    }
  })

  (env-sigs [
    { 'key: 'account
    ,'caps: [
      (marmalade-v2.ledger.OFFER "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" 1.0 0)
     ]}])

  (expect "Offer token for sale"
    "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"
    (sale (read-msg 'token-id) "k:account" 1.0 0))

  (env-data {
    "account-guard": {"keys": ["account"], "pred": "keys-all"}
   ,"market-guard": {"keys": ["market"], "pred": "keys-all"}
   ,"token-id": "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI"
  })

  (expect "Offer with quote events"
    [ {"name": "marmalade-v2.quote-manager.QUOTE","params": ["4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" 0 {"amount": 1.0,"fungible": coin,"price": 10.0,"seller-fungible-account": {"account": "k:account","guard": (read-keyset 'account-guard )}}]}
      {"name": "marmalade-v2.quote-manager.QUOTE-GUARDS","params": ["4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" (read-keyset 'account-guard) [(read-keyset 'market-guard)]]}
      {"name": "marmalade-v2.ledger.OFFER","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" 1.0 0]}
      {"name": "marmalade-v2.ledger.SALE","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" 1.0 0 "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"]}
      {"name": "marmalade-v2.ledger.ACCOUNT_GUARD","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "c:s0U-eAHPqrKNfJElCDaypSWOOryXXOqwwWV2FA8usNo" (account-guard (read-string "token-id") "c:s0U-eAHPqrKNfJElCDaypSWOOryXXOqwwWV2FA8usNo")]}
      {"name": "marmalade-v2.ledger.TRANSFER","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" "c:s0U-eAHPqrKNfJElCDaypSWOOryXXOqwwWV2FA8usNo" 1.0]}
      {"name": "marmalade-v2.ledger.RECONCILE","params": ["t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" 1.0 {"account": "k:account","current": 0.0,"previous": 1.0} {"account": "c:s0U-eAHPqrKNfJElCDaypSWOOryXXOqwwWV2FA8usNo","current": 1.0,"previous": 0.0}]}]
     (map (remove "module-hash")  (env-events true))
  )

(commit-tx)

(begin-tx "remove quote guard, add quote guard")
  (use marmalade-v2.ledger)
  (use marmalade-v2.policy-manager)
  (use marmalade-v2.quote-manager)
  (use marmalade-v2.util-v1)

  (env-sigs [
    { 'key: 'any
    ,'caps: [(marmalade-v2.quote-manager.UPDATE-QUOTE-GUARD "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o")]}
    ])

  (expect-failure "remove quote guard fails without seller sig"
    "Keyset failure (keys-all):"
    (marmalade-v2.quote-manager.remove-quote-guard  "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" (read-keyset 'market-guard) ))

  (env-sigs [
    { 'key: 'account
    ,'caps: [(marmalade-v2.quote-manager.UPDATE-QUOTE-GUARD "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o")]}
    ])

  (expect "seller can remove quote guard"
    true
    (marmalade-v2.quote-manager.remove-quote-guard  "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" (read-keyset 'market-guard) ))

   (env-data {
      "token-id": "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI"
      ,"sale-id": "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"
      ,"buyer": "k:bidder"
      ,"buyer-guard": {"keys": ["bidder"], "pred": "keys-all"}
    })

    (env-sigs [
      { 'key: 'market
      ,'caps: [
          (marmalade-v2.policy-manager.RESERVE-SALE-AT-PRICE (read-msg 'sale-id) 20.0 (read-msg 'buyer) (read-keyset 'buyer-guard))
        ]}
      ])

  (expect-failure "update-quote-price cannot be called directly"
    "(require-capability (policy-ma...: Failure: require-capability: not granted: (marmalade-v2.policy-manager.UPDATE-QUOTE-PRICE-CALL"
    (update-quote-price (read-msg 'sale-id) 20.0 (read-msg 'buyer))
  )

  (expect-failure "Reserve sale fails when quote guard is empty, test update-quote-price"
    "None of the guards passed"
    (reserve-sale-at-price (read-msg 'sale-id) 20.0 (read-msg 'buyer) (read-keyset 'buyer-guard) (read-msg 'buyer)))

  (env-sigs [
    { 'key: 'any
    ,'caps: [(marmalade-v2.quote-manager.UPDATE-QUOTE-GUARD "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o")]}
    ])

  (env-data {
     "account-guard": {"keys": ["account"], "pred": "keys-all"}
    ,"market-guard": {"keys": ["market"], "pred": "keys-all"}
   })

 (expect-failure "remove quote guard fails without seller sig"
   "Keyset failure (keys-all):"
   (marmalade-v2.quote-manager.add-quote-guard  "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" (read-keyset 'market-guard) ))

 (env-sigs [
   { 'key: 'account
   ,'caps: [(marmalade-v2.quote-manager.UPDATE-QUOTE-GUARD "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o")]}
   ])

  (expect "seller can add quote guard"
    true
    (marmalade-v2.quote-manager.add-quote-guard  "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" (read-keyset 'market-guard) ))

  (expect "Quote guard Events"
    [ {"name": "marmalade-v2.quote-manager.QUOTE-GUARDS","params": ["4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" (read-keyset 'account-guard) []]}
      {"name": "marmalade-v2.quote-manager.QUOTE-GUARDS","params": ["4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o" "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" (read-keyset 'account-guard) [ (read-keyset 'market-guard) ]]}]
     (map (remove "module-hash")  (env-events true))
  )

(commit-tx)

(begin-tx "Reserve sale (update-quote-price) for the bidder, and process buy")
  (use marmalade-v2.ledger)
  (use marmalade-v2.policy-manager)
  (use marmalade-v2.quote-manager)
  (use marmalade-v2.util-v1)

  (env-data {
      "token-id": "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI"
     ,"sale-id": "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"
     ,"bidder": "k:bidder"
     ,"buyer": "k:buyer"
     ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
   })

   (env-sigs [
      { 'key: 'bidder
      ,'caps: [
          (coin.TRANSFER "k:bidder" "c:yk0ICQ5W7xvtcDUaXSOyBYD4nMKhm-GXdVxY1mC0PQs" 20.0)
      ]}
      { 'key: 'market
      ,'caps: [
          (marmalade-v2.policy-manager.RESERVE-SALE-AT-PRICE (read-msg 'sale-id) 20.0 (read-msg 'buyer) (read-keyset 'buyer-guard))
        ]}
    ])

   (expect "Update the quote and reserve sale for the bidder"
     true
     (reserve-sale-at-price (read-msg 'sale-id) 20.0 (read-msg 'buyer) (read-keyset 'buyer-guard) (read-msg 'bidder)))

  (env-sigs [
     { 'key: 'any
     ,'caps: [
         (marmalade-v2.ledger.BUY "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI" "k:account" "k:buyer"  1.0 0 (read-string 'sale-id))
       ]
     }
   ])

 (env-data {
     "token-id": "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI"
    ,"sale-id": "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"
    ,"buyer": "k:buyer1"
    ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
  })

  (expect-failure "continue buy fails if buyer doesn't match reserved buyer"
    "Reserved buyer must be buyer"
    (continue-pact 1 false (read-msg 'sale-id)))

  (env-data {
      "token-id": "t:dxhD6igHw2OaaV_fwrFX4nJUrWsslZk6k-LuRFyOGuI"
     ,"sale-id": "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"
     ,"buyer": "k:buyer"
     ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
   })

  (expect "continue buy succeeds, and can be called by anyone"
    "4OsyAnzjiE0phoCAJ3tZ_bRR2OH3TXk7gP5Cobq4E8o"
    (continue-pact 1 false (read-msg 'sale-id)))

  (expect "Seller account has increased with 20 tokens minus royalty fees"
    19.0
    (coin.get-balance "k:account"))

  (expect "Creator account has received 5% royalties"
    1.0
    (coin.get-balance "k:creator"))

(rollback-tx)
