;;load policy manager, ledger
(begin-tx)
(load "../../policy-manager/policy-manager.repl")
(commit-tx)

(begin-tx)
(use kip.token-policy-v2 [token-policies concrete-policy QUOTE_POLICY NON_FUNGIBLE_POLICY ROYALTY_POLICY COLLECTION_POLICY])

(module util GOV
  (defcap GOV () true)

  (defconst DEFAULT_CONCRETE_POLICY_WITH_ROYALTY:object{concrete-policy}
    { 'quote-policy: true
     ,'non-fungible-policy: true
     ,'royalty-policy: true
     ,'collection-policy:false
     ,'guard-policy: true
    }
  )
  (defconst DEFAULT_POLICIES_WITH_ROYALTY:object{token-policies}
    { 'concrete-policies:DEFAULT_CONCRETE_POLICY_WITH_ROYALTY
     ,'immutable-policies: []
     ,'adjustable-policies:[]
    })
)
(commit-tx)

(begin-tx)
(use marmalade.ledger)
(use marmalade.policy-manager)
(test-capability (coin.COINBASE))
(env-data {
  "creator-guard": {"keys": ["creator"], "pred": "keys-all"}
})
(coin.coinbase "creator-account" (read-keyset 'creator-guard) 2.0)
(commit-tx)
(begin-tx)
(use marmalade.ledger)
(use marmalade.policy-manager)
(env-data {
  "token-id": (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES_WITH_ROYALTY } )
 ,"account": "account"
 ,"account-guard": {"keys": ["account"], "pred": "keys-all"}
 ,"royalty_spec": {
    "fungible": coin
   ,"creator": 'creator-account
   ,"creator-guard":  {"keys": ["creator"], "pred": "keys-all"}
   ,"royalty-rate": -0.000001
  }
})

(env-keys ['marmalade-admin ])

(commit-tx)

(begin-tx)
(use marmalade.ledger)
(use marmalade.policy-manager)
(expect-failure "create-token with negative royalty rate fails"
  "Invalid royalty rate"
  (create-token (read-msg 'token-id) 0 "test-royalty-uri" util.DEFAULT_POLICIES_WITH_ROYALTY ))
(rollback-tx)

(begin-tx)
(use marmalade.ledger)
(use marmalade.policy-manager)
(env-data {
  "token-id": (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES_WITH_ROYALTY } )
 ,"account": "account"
 ,"account-guard": {"keys": ["account"], "pred": "keys-all"}
 ,"royalty_spec": {
    "fungible": coin
   ,"creator": 'creator-account
   ,"creator-guard":  {"keys": ["creator"], "pred": "keys-all"}
   ,"royalty-rate": 0.05
  }
})

(expect "create a default token with quote-policy, non-fungible-policy"
  true
  (create-token (read-msg 'token-id) 0 "test-royalty-uri" util.DEFAULT_POLICIES_WITH_ROYALTY ))

(env-sigs [
  { 'key: 'account
  ,'caps: [(marmalade.ledger.MINT "t:RrGm1DQPjuSxKHkKNm5kXJf34zo_G9goEycEZ4kk_no" "account" 1.0)]
  }])

(expect "mint a default token with quote-policy, non-fungible-policy"
  true
  (mint (read-msg 'token-id )  (read-msg 'account ) (read-keyset 'account-guard ) 1.0))
(commit-tx)

(begin-tx "start an offer")

(env-hash (hash "offer-royalty-0"))
(use marmalade.ledger)

(test-capability (coin.COINBASE))
(env-data {
  "seller-guard": {"keys": ["seller"], "pred": "keys-all"}
})
(coin.coinbase "seller-account" (read-keyset 'seller-guard) 2.0)

(env-data {
  "token-id": (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES_WITH_ROYALTY } )
 ,"quote": {
   "fungible": coin
  ,"price": 2.0
  ,"amount": 1.0
  ,"seller-guard": {"keys": ["seller"], "pred": "keys-all"}}
  })

(env-chain-data {"block-time": (time "2023-07-20T11:26:35Z")})
(env-sigs [
  { 'key: 'account
   ,'caps: [
   (marmalade.ledger.OFFER "t:RrGm1DQPjuSxKHkKNm5kXJf34zo_G9goEycEZ4kk_no" "account" 1.0 (time "2023-07-22T11:26:35Z") )]
   }])

(expect "stat offer by running step 0 of sale"
  true
  (sale (read-msg 'token-id) 'account 1.0 (time "2023-07-22T11:26:35Z")))

(env-data { "recipient-guard": {"keys": ["seller"], "pred": "keys-all"}})

; (expect "events"
;   []
;   (map (remove 'module-hash)  (env-events true)))

(env-data {
  "buyer": "buyer-account"
 ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
 ,"market-guard": {"keys": ["market"], "pred": "keys-all"}
 ,"marketplace-fee": {
   "marketplace-account":"marketplace"
  ,"mk-fee-percentage": 0.05
  }})
(test-capability (coin.COINBASE))
(coin.coinbase "buyer-account" (read-keyset 'buyer-guard) 2.0)

(env-sigs
 [{'key:'buyer
  ,'caps: [
    (BUY (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: util.DEFAULT_POLICIES_WITH_ROYALTY } ) "account" "buyer-account"  1.0 (time  "2023-07-22T11:26:35Z") "0HZ-zWbio-_Q0whoIO_BU2_tjLVm9rvZbc2ZxkbhWeM")
    (coin.TRANSFER "buyer-account" "c:z85Gnsq2GGFlAPL4lmU1beh3QCi2rOt_VHHZZ6hjU2g" 2.0)
   ]}])

(env-hash (hash "offer-royalty-0"))

(expect "Buy succeeds"
  true
  (continue-pact 1))

(env-data {
  "buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}})

(commit-tx)
