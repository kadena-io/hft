;;load policy manager, ledger
(load "../../policy-manager/policy-manager.repl")

(begin-tx)
(use marmalade.policy-manager [concrete-policy concrete-policy])
(use marmalade.ledger)

(env-data {
  "creator-guard": {"keys": ["creator"], "pred": "keys-all"}
})
(marmalade.abc.create-account "k:creator" (read-keyset 'creator-guard))
(commit-tx)
(begin-tx)
(use marmalade.ledger)
(use marmalade.util-v1)

(env-data {
  "token-id": (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: (create-policies DEFAULT_ROYALTY)} )
 ,"account": "account"
 ,"account-guard": {"keys": ["account"], "pred": "keys-all"}
 ,"royalty_spec": {
    "fungible": marmalade.abc
   ,"creator": "k:creator"
   ,"creator-guard":  {"keys": ["creator"], "pred": "keys-all"}
   ,"royalty-rate": -0.000001
  }
})

(env-keys ['marmalade-admin ])

(commit-tx)

(begin-tx)
(use marmalade.ledger)

(use marmalade.util-v1)

(expect-failure "create-token with negative royalty rate fails"
  "Invalid royalty rate"
  (create-token (read-msg 'token-id) 0 "test-royalty-uri" (create-policies DEFAULT_ROYALTY) ))
(rollback-tx)

(begin-tx)
(use marmalade.ledger)

(use marmalade.util-v1)

(env-data {
  "token-id": (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: (create-policies DEFAULT_ROYALTY) } )
 ,"account": "k:account"
 ,"account-guard": {"keys": ["account"], "pred": "keys-all"}
 ,"royalty_spec": {
    "fungible": marmalade.abc
   ,"creator": "k:creator"
   ,"creator-guard":  {"keys": ["creator"], "pred": "keys-all"}
   ,"royalty-rate": 0.05
  }
})

(expect "create a default token with quote-policy, non-fungible-policy"
  true
  (create-token (read-msg 'token-id) 0 "test-royalty-uri" (create-policies DEFAULT_ROYALTY) ))

(env-sigs [
  { 'key: 'account
  ,'caps: [(marmalade.ledger.MINT (read-msg 'token-id) "k:account" 1.0)]
  }])

(expect "mint a default token with quote-policy, non-fungible-policy"
  true
  (mint (read-msg 'token-id )  (read-msg 'account ) (read-keyset 'account-guard ) 1.0))
(commit-tx)

(begin-tx "start an offer")

(env-hash (hash "offer-royalty-0"))
(use marmalade.ledger)

(use marmalade.util-v1)

(env-data {
  "seller-guard": {"keys": ["account"], "pred": "keys-all"}
})
(marmalade.abc.create-account "k:account" (read-keyset 'seller-guard))

(env-data {
  "token-id": (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: (create-policies DEFAULT_ROYALTY) } )

  ,"quote":{
     "spec": {
       "fungible": marmalade.abc
       ,"price": 2.0
       ,"amount": 1.0
       ,"seller-account": {
           "account": "k:account"
          ,"guard": {"keys": ["account"], "pred": "keys-all"}
         }
     }
     ,"seller-guard": {"keys": ["account"], "pred": "keys-all"}
     ,"quote-guards": []
   }
  })

(env-chain-data {"block-time": (time "2023-07-20T11:26:35Z")})
(env-sigs [
  { 'key: 'account
   ,'caps: [
   (marmalade.ledger.OFFER (read-msg 'token-id) "k:account" 1.0 (time "2023-07-22T11:26:35Z") )]
   }])

(expect "stat offer by running step 0 of sale"
  true
  (sale (read-msg 'token-id) "k:account" 1.0 (time "2023-07-22T11:26:35Z")))

(env-data { "recipient-guard": {"keys": ["seller"], "pred": "keys-all"}})

(env-data {
  "buyer": "k:buyer"
 ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
 })

(marmalade.abc.create-account "k:buyer" (read-keyset 'buyer-guard))
(marmalade.abc.fund "k:buyer" 2.0)

(env-sigs
 [{'key:'buyer
  ,'caps: [
    (marmalade.ledger.BUY (create-token-id { 'uri: "test-royalty-uri", 'precision: 0, 'policies: (create-policies DEFAULT_ROYALTY) } ) "k:account" "k:buyer"  1.0 (time  "2023-07-22T11:26:35Z") "0HZ-zWbio-_Q0whoIO_BU2_tjLVm9rvZbc2ZxkbhWeM")
    (marmalade.abc.TRANSFER "k:buyer" "c:fxI0Y77myZacaggonS_TaF8YxH_cGKFoSLMgZVQAUfc" 2.0)
   ]}])

(env-hash (hash "offer-royalty-0"))

(expect "Buy succeeds"
  true
  (continue-pact 1))

(env-data {
  "buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}})

(commit-tx)
