(begin-tx)
(env-data
  { 'ns-admin-keyset: []
  , 'ns-genesis-keyset:[]
  , 'ns-operate-keyset:[] })
(load "root/fungible-v2.pact")
(load "root/gas-payer-v1.pact")
(load "root/coin.pact")
(load "root/ns.pact")

(define-namespace 'kip (sig-keyset) (sig-keyset))

(load "kip/account-protocols-v1.pact")
(load "kip/manifest.pact")
(load "kip/token-policy-v1.pact")
(load "kip/poly-fungible-v2.pact")

(define-namespace 'util (sig-keyset) (sig-keyset))
(load "util/fungible-util.pact")
(commit-tx)

(begin-tx)
(env-data
 { 'marmalade-admin: ["marmalade-admin"]
 , 'marmalade-ns-user: ["marmalade-admin"]
 , 'marmalade-ns-admin: ["marmalade-admin"]
 , 'ns: "marmalade"
 , 'upgrade: false })
 (env-sigs [
   { 'key: 'marmalade-admin
    ,'caps: []
    }])
(load "ns-marmalade.pact")
(load "ledger.pact")
(load "policy.pact")
(load "fixed-quote-policy.pact")
(load "fixed-quote-royalty-policy.pact")
(load "kadcar-factory.pact")


(commit-tx)

(begin-tx "creating accounts")


(env-data {"bob": {"keys": ["bob"], "pred": "keys-all"}})
(coin.create-account 'bob (read-keyset 'bob))

(commit-tx)
(begin-tx)
(env-data {"admin": {"keys": ["admin"], "pred": "keys-all"}})
(coin.create-account 'admin (read-keyset 'admin))

(commit-tx)


(begin-tx)
(env-data {"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}})
(coin.create-account 'coin-buyer (read-keyset 'coin-buyer))

(commit-tx)
;;;;;;; create and Mint first Kadcar NFT ;;;;;;;

(begin-tx "Create & Mint first Kadcar K#1")
(env-hash (hash "create-and-mint"))
(env-data {
   'upgrade: false
  ,'ns: "marmalade"
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  , "bob": {"keys": ["bob"], "pred": "keys-all"}
  ,'bob-guard: {"keys": ["bob"], "pred": "keys-all"}
  ,'admin-guard: {"keys": ["bob"], "pred": "keys-all"}
  ,'token_spec: {
    'fungible: coin
    ,'creator: "creator"
    ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
    ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
    ,'royalty-rate: 0.03
    ,'max-supply: 1.0
    ,'min-amount: 0.0
    ,'owner: "creator"
    , 'latest-spec: {}
  }
  ,'vehicle_spec: {
    'vin: "1"
    ,'make: "Kadcars"
    ,'model: "K2"
  }
  })
(env-sigs
  [{'key:'dummy
   ,'caps:
    [(marmalade.ledger.MINT "K2#1" "bob" 1.0)
     ]},
   { 'key: 'marmalade-admin
    ,'caps:[]
     },
   { 'key: 'bob
    ,'caps:[]
     }
   ])

(use kip.token-manifest)
(use marmalade.ledger)
(coin.create-account "creator" (read-keyset 'creator-guard))

(expect "Create token K2#1"
  "created token Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I"
  (marmalade.kadcar-factory.create-k2 "1"))

;  (create-token "K2#1" 1
;  (create-manifest (uri "text" "Kadcars-Image-uri") [(create-datum (uri "pact:schema" "kadcars-schema") {"speed":100})]) marmalade.fixed-quote-royalty-policy))

  (env-sigs
    [{'key:'mint
     ,'caps:
      [(marmalade.ledger.MINT "Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" "bob" 1.0), (coin.TRANSFER "bob" "admin" 1.1)
       ]},
       { 'key: 'bob
        ,'caps:[]
         }])

(expect "mint K2#1 to bob, success"
  true
  (mint "Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" "bob" (read-keyset 'bob-guard) 1.0))

(expect "Bob is credited"
  1.0
  (get-balance "Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" 'bob))

(expect "Create and mint fqp token EVENTS"
  [{"name": "marmalade.ledger.TOKEN","params": ["Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" 1 0.0 marmalade.fixed-quote-royalty-policy]}
  ,{"name": "marmalade.ledger.MINT","params": ["Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" "bob" 1.0]}
  ,{"name": "coin.TRANSFER",	"params": ["bob" "admin" 1.1]}
  ,{"name": "marmalade.ledger.ACCOUNT_GUARD","params": ["Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" "bob" (read-keyset 'bob-guard) ]}
  ,{"name": "marmalade.ledger.RECONCILE","params": ["Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" 1.0
    {"account": "","current": 0.0,"previous": 0.0}
    {"account": "bob","current": 1.0,"previous": 0.0}]}
  ,{"name": "marmalade.ledger.SUPPLY","params": ["Kadcars#K2:xIBr9iRAPRSzBIAM-f9VuWMcrPTAJKBgM8hNxYS5u3I" 1.0]}]
  (map (remove 'module-hash) (env-events true)))

(commit-tx)


;;;;;;; create and Mint second Kadcar NFT ;;;;;;;

(begin-tx "Create & Mint second Kadcar K:2#2")
(env-hash (hash "create-and-mint-2"))
(env-data {
   'upgrade: false
  ,'ns: "marmalade"
  ,'creator: "creator"
  ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
  ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
  ,'bob-guard: {"keys": ["bob"], "pred": "keys-all"}
  ,'token_spec: {
    'fungible: coin
    ,'creator: "creator"
    ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
    ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
    ,'royalty-rate: 0.03
    ,'max-supply: 1.0
    ,'min-amount: 1.0
    ,'owner: "creator"
    , 'latest-spec: {}
  },
  'vehicle_spec: {
    'vin: "2"
    ,'make: "Kadcars"
    ,'model: "K2"
  }
  })
(env-sigs
  [{'key:'dummy
   ,'caps:
    [(marmalade.ledger.MINT "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" 1.0)
     ]},
   { 'key: 'marmalade-admin
    ,'caps:[]
     },
     { 'key: 'bob
      ,'caps:[]
       }
   ])

(use kip.token-manifest)
(use marmalade.ledger)
(use marmalade.kadcar-factory)

(expect "Create token Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
  "created token Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
  (marmalade.kadcar-factory.create-k2 "2"))
;  (create-token "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" 1
;    (create-manifest (uri "text" "Kadcars-Image-uri") [(create-datum (uri "pact:schema" "kadcars-schema") {"speed":100})]) marmalade.fixed-quote-royalty-policy))

(env-sigs
  [{'key:'mint
   ,'caps:
    [(marmalade.ledger.MINT "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" 1.0), (coin.TRANSFER "bob" "admin" 1.1)
     ]},
     { 'key: 'bob
      ,'caps:[]
       }])

(expect "mint Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA to bob, success"
  true
  (marmalade.kadcar-factory.mint-k2 "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" (read-keyset 'bob-guard)))

;  (mint 'Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA "bob" (read-keyset 'bob-guard) 1.0))

(expect "Bob is credited"
  1.0
  (get-balance "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" 'bob))
(get-manifest "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA")

(expect "Create and mint fqp token EVENTS"
  [{"name": "marmalade.ledger.TOKEN","params": ["Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" 1 0.0 marmalade.fixed-quote-royalty-policy]}
  ,{"name": "marmalade.ledger.MINT","params": ["Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" 1.0]}
  ,{"name": "coin.TRANSFER",	"params": ["bob" "admin" 1.1]}
  ,{"name": "marmalade.ledger.ACCOUNT_GUARD","params": ["Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" (read-keyset 'bob-guard) ]}
  ,{"name": "marmalade.ledger.RECONCILE","params": ["Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" 1.0
    {"account": "","current": 0.0,"previous": 0.0}
    {"account": "bob","current": 1.0,"previous": 0.0}]}
  ,{"name": "marmalade.ledger.SUPPLY","params": ["Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" 1.0]}

  ]
  (map (remove 'module-hash) (env-events true)))
(format "NOW TESTING NEW ONE" [])
(get-k2-manifest "any")
(commit-tx)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; OFFER AND BUYING ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(begin-tx "Sale Offer")

(env-data
 {
  "quote": {
      "price": 10.0
     ,"recipient": "bob"
     ,"recipient-guard": {"keys": ["bob"], "pred":"keys-all"}
   }
 ,"buyer": "coin-buyer"
 ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
 ,"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,'token: "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
 ,"bob": {"keys": ["bob"], "pred": "keys-all"}
 ,'token_spec: {
   'fungible: coin
   ,'creator: "creator"
   ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
   ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
   ,'royalty-rate: 0.03
   ,'max-supply: 1.0
   ,'min-amount: 0.0
   ,'owner: "creator"
  , 'latest-spec: {}
 }})
(use marmalade.ledger)
(env-sigs
 [{'key:'bob
  ,'caps:
   [(marmalade.ledger.OFFER (read-msg 'token) "bob" 1.0 120)]}
   ])

 (expect "Sale succeeds"
  true
  (sale (read-msg 'token) 'bob 1.0 120))
(expect "coin balance of coin-buyer is unchanged"
 100.0
 (coin.get-balance 'coin-buyer))

(expect "Seller is debited, sale account is credited Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
 [0.0 1.0]
(map (get-balance (read-msg 'token)) ['bob (sale-account)]))

  (expect "OFFER events"
    [{"name": "marmalade.ledger.OFFER","params": [(read-msg 'token) "bob" 1.0 120]},
     {"name": "marmalade.ledger.SALE","params": [(read-msg 'token) "bob" 1.0 120 (pact-id)]},
     {"name": "marmalade.fixed-quote-royalty-policy.QUOTE","params": [(pact-id) (read-msg 'token) 1.0 10.0 10.0 0.30000000000 "creator" (read-msg "quote")]},
     {"name": "marmalade.ledger.ACCOUNT_GUARD","params": [(read-msg 'token) (sale-account) (create-pact-guard "SALE")]},
     {"name": "marmalade.ledger.TRANSFER","params": [(read-msg 'token) "bob" (sale-account) 1.0]},
     {"name": "marmalade.ledger.RECONCILE","params": [(read-msg 'token) 1.0
     { "account": "bob",
       "current": 0.0,
       "previous": 1.0
     }  { "account": (sale-account),
       "current": 1.0,
       "previous": 0.0
       }]}]
   (map (remove 'module-hash) (env-events true)))


(env-sigs [
 {'key: 'coin-buyer
,'caps: [
 (coin.TRANSFER "coin-buyer" "bob" 10.0)
 (coin.TRANSFER "coin-buyer" "creator" 1.0)
  (marmalade.ledger.BUY "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "bob" "coin-buyer" 1.0 120 "ZC72yKJMFMI941Gz5JDJcyOhI1XkOptJJqox4w5Qig4")
]}])

(map (coin.get-balance ) ['coin-buyer 'bob 'creator])
(read-keyset 'buyer-guard)
(expect "buy suceeds"
 true
 (continue-pact 1))

(expect "Seller is debited, sale account is debited, buyer is credited on K:2#2 balance"
 [0.0 0.0 1.0]
 (map (get-balance (read-msg 'token)) ['bob (sale-account) 'coin-buyer]))

(expect "coin-buyer is debited on coin balance by price"
 [90.000000000000 107.500000000000 100.300000000000]
 (map (coin.get-balance ) ['coin-buyer 'bob 'creator]))

(get-ledger)

 (expect "minted tokens:"
  [1.0 0.0 1.0 0.0]
  (map (get-account-minted ) (get-ledger)))

(expect "minted tokens:"
 1.0
 (get-balance "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "coin-buyer"))


 (expect "minted tokens:"
  1.0
  (get-balance "K2#1" "bob"))

(expect "minted tokens:"
   0.0
   (get-balance "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" "p:ZC72yKJMFMI941Gz5JDJcyOhI1XkOptJJqox4w5Qig4:SALE"))
(commit-tx)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; UPGRADING MANIFEST ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(begin-tx "Upgrading manifest")
(use marmalade.kadcar-factory)

(env-data
 {
 "buyer": "coin-buyer"
 ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
 ,"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,'token: "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
 ,"bob": {"keys": ["bob"], "pred": "keys-all"}
 ,'token_spec: {
   'fungible: coin
   ,'creator: "creator"
   ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
   ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
   ,'royalty-rate: 0.03
   ,'max-supply: 1.0
   ,'min-amount: 0.0
   ,'owner: "creator"
   , 'latest-spec: {}
 }})
(use marmalade.ledger)
(env-sigs
 [{'key:'bob
  ,'caps:
   [(marmalade.ledger.OFFER (read-msg 'token) "bob" 1.0 120)]}
   ])


(upgrade-manifest "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA" (build-k2-manifest-with-id "555"))
(get-manifest "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA")
(commit-tx)




;;;;;;;;;;;;;;;;;;;;;; testing get stuff bruh

(begin-tx "I already said im testing getters")

(env-data
 {
 "buyer": "coin-buyer"
 ,"buyer-guard": {"keys": ["buyer"], "pred": "keys-all"}
 ,"coin-buyer": {"keys": ["coin-buyer"], "pred": "keys-all"}
 ,'token: "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA"
 ,"bob": {"keys": ["bob"], "pred": "keys-all"}
 ,'token_spec: {
   'fungible: coin
   ,'creator: "creator"
   ,'creator-guard: {"keys": ["creator"], "pred": "keys-all"}
   ,'mint-guard: {"keys": ["mint"], "pred": "keys-all"}
   ,'royalty-rate: 0.03
   ,'max-supply: 1.0
   ,'min-amount: 0.0
   ,'owner: "creator"
   , 'latest-spec: {}
 }})
(use marmalade.ledger)
(env-sigs
 [{'key:'bob
  ,'caps:
   []}]
)

(get-manifest "K2#1")
(get-manifest "Kadcars#K2:UACSy_9_N0wSB1QX9NeELtcSoZbxaAUx4V8BjwWj4aA")
