Typechecking module ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}
===== Fun: (defun marmalade.ledger.get-manifest:object:(defsc...
trackAST: (get-manifest_id0, string)
trackAST: (at1, <at1>)
trackAST: (string2, string)
trackAST: (read3, <read3>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4, table:{marmalade.ledger.token-schema})
trackAST: (get-manifest5, object:{kip.token-manifest.manifest})
assocAST: (get-manifest5, <get-manifest5>, object:{kip.token-manifest.manifest}) => (at1, <at1>, <at1>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3_row}>, roleTy=<read3>
tryFunType: cand: table:table:<{read3_row}> key:string -> object:<{read3_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3_row}>, AST=read3::<read3>, tyVar=<read3>, resolvedTy=<read3>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3_row}>, AST=marmalade.ledger.tokens4::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=get-manifest_id0::string, tyVar=<get-manifest_id0>, resolvedTy=string})]
tryFunType: trying table:table:<{read3_row}> key:string -> object:<{read3_row}> with [(string, [(get-manifest_id0, <get-manifest_id0>, string)]), (table:<{read3_row}>, [(marmalade.ledger.tokens4, <marmalade.ledger.tokens4>, table:{marmalade.ledger.token-schema})]), (object:<{read3_row}>, [(read3, <read3>, <read3>)])]
Solved overload with table:table:<{read3_row}> key:string -> object:<{read3_row}>: [(string, (string, [(get-manifest_id0, <get-manifest_id0>)])), (table:<{read3_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4, <marmalade.ledger.tokens4>)])), (object:<{read3_row}>, (object:<{read3_row}>, [(read3, <read3>)]))]
Adjusting type for solution: ((get-manifest_id0, <get-manifest_id0>), string, string)
assocTy: (<get-manifest_id0>, string) <=> string
assocTy: (<get-manifest_id0>, string) <= string
assocTy: (<get-manifest_id0>, string) <=> string
assocTy: (<get-manifest_id0>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4, <marmalade.ledger.tokens4>), table:<{read3_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4>, table:{marmalade.ledger.token-schema}) <=> table:<{read3_row}>
assocTy: (<{read3_row}>, <{read3_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3_row}>, <{read3_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3_row}>)
assocTy: (<marmalade.ledger.tokens4>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3, <read3>), object:<{read3_row}>, object:<{read3_row}>)
assocTy: (<read3>, <read3>) <=> object:<{read3_row}>
assocTy: (<read3>, <read3>) <= object:<{read3_row}>
assocTy: tracking/updating type variable <read3> <= object:<{read3_row}>
assocTy: (<read3>, object:{marmalade.ledger.token-schema}) <=> object:<{read3_row}>
assocTy: (<{read3_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1_a>, roleTy=object:{kip.token-manifest.manifest}
tryFunType: failed: idx:integer list:[<at1_l>] -> <at1_a>: roles=[(RetVar, RoleTys { candArgTy=<at1_a>, AST=at1::<at1>, tyVar=<get-manifest5>, resolvedTy=object:{kip.token-manifest.manifest}}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1_a>, roleTy=object:{kip.token-manifest.manifest}
tryFunType: cand: idx:string object:object:<{at1_o}> -> <at1_a>, roles=[(RetVar, RoleTys { candArgTy=<at1_a>, AST=at1::<at1>, tyVar=<get-manifest5>, resolvedTy=object:{kip.token-manifest.manifest}}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2::string, tyVar=<string2>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1_o}>, AST=read3::<read3>, tyVar=<read3>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1_o}> -> <at1_a> with [(<at1_a>, [(at1, <get-manifest5>, object:{kip.token-manifest.manifest})]), (string, [(string2, <string2>, string)]), (object:<{at1_o}>, [(read3, <read3>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1_o}> -> <at1_a>: [(<at1_a>, (object:{kip.token-manifest.manifest}, [(at1, <get-manifest5>)])), (string, (string, [(string2, <string2>)])), (object:<{at1_o}>, (object:{marmalade.ledger.token-schema}, [(read3, <read3>)]))]
Adjusting type for solution: ((at1, <get-manifest5>), <at1_a>, object:{kip.token-manifest.manifest})
assocTy: (<get-manifest5>, object:{kip.token-manifest.manifest}) <=> <at1_a>
assocTy: object:{kip.token-manifest.manifest} => <at1_a>
assocTy: (<get-manifest5>, object:{kip.token-manifest.manifest}) <=> object:{kip.token-manifest.manifest}
assocTy: (<get-manifest5>, object:{kip.token-manifest.manifest}) <= object:{kip.token-manifest.manifest}
Adjusting type for solution: ((string2, <string2>), string, string)
assocTy: (<string2>, string) <=> string
assocTy: (<string2>, string) <= string
assocTy: (<string2>, string) <=> string
assocTy: (<string2>, string) <= string
Adjusting type for solution: ((read3, <read3>), object:<{at1_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3>, object:{marmalade.ledger.token-schema}) <=> object:<{at1_o}>
assocTy: (<{at1_o}>, <{at1_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1_o}>, <{at1_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1_o}>)
assocTy: (<read3>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.get-manifest:object:(defsc...
===== Fun: (defun marmalade.ledger.update-supply:bool (id:str...
trackAST: (update-supply_id7, string)
trackAST: (update-supply_amount8, decimal)
trackAST: (require-capability9, <require-capability9>)
trackAST: (bool10, bool)
trackAST: (UPDATE_SUPPLY11, <h>)
assocAST: (bool10, <bool10>, bool) => (UPDATE_SUPPLY11, <h>, <h>)
trackAST: (UPDATE_SUPPLY12, <UPDATE_SUPPLY12>)
assocAST: (bool10, <bool10>, bool) => (UPDATE_SUPPLY12, <UPDATE_SUPPLY12>, <UPDATE_SUPPLY12>)
trackAST: (with-default-read13, <with-default-read13>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens14, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object15, object:*)
trackAST: (decimal16, decimal)
trackAST: (BindSchema17, <BindSchema17>)
trackAST: (BindSchema17_s18, <BindSchema17_s18_ag>)
trackAST: (string19, string)
trackAST: (BindLet20, <BindLet20>)
trackAST: (BindLet20_new-supply21, <BindLet20_new-supply21_ah>)
trackAST: (+22, <+22>)
assocAST: (+22, <+22>, <+22>) => (BindLet20_new-supply21, <BindLet20_new-supply21_ah>, <BindLet20_new-supply21_ah>)
trackAST: (update23, <update23>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens24, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object25, object:*)
trackAST: (emit-event26, <emit-event26>)
trackAST: (SUPPLY_id27, string)
trackAST: (SUPPLY_supply28, decimal)
trackAST: (bool29, bool)
trackAST: (SUPPLY30, bool)
assocAST: (bool29, <bool29>, bool) => (SUPPLY30, <SUPPLY30>, bool)
trackAST: (SUPPLY31, <SUPPLY31>)
assocAST: (bool29, <bool29>, bool) => (SUPPLY31, <SUPPLY31>, <SUPPLY31>)
assocAST: (emit-event26, <emit-event26>, <emit-event26>) => (BindLet20, <BindLet20>, <BindLet20>)
assocAST: (BindLet20, <emit-event26>, <emit-event26>) => (BindSchema17, <BindSchema17>, <BindSchema17>)
trackAST: (BindSchema17schema32, *)
trackAST: (update-supply33, bool)
assocAST: (update-supply33, <update-supply33>, bool) => (with-default-read13, <with-default-read13>, <with-default-read13>)
--------------------------------
 Substitute defuns:

assocTy: (<bool10>, bool) <=> <UPDATE_SUPPLY12_h>
assocTy: bool => <UPDATE_SUPPLY12_h>
trackAST: (inlinedCallArgs34, <inlinedCallArgs34>)
assocTy: (<inlinedCallArgs34>, <inlinedCallArgs34>) <=> <UPDATE_SUPPLY12_h>
assocTy: (<inlinedCallArgs34>, <inlinedCallArgs34>) <= <UPDATE_SUPPLY12_h>
assocTy: tracking/updating type variable <inlinedCallArgs34> <= <UPDATE_SUPPLY12_h>
assocTy: (<bool29>, bool) <=> bool
assocTy: (<bool29>, bool) <= bool
trackAST: (inlinedCallArgs35, <inlinedCallArgs35>)
assocTy: (<inlinedCallArgs35>, <inlinedCallArgs35>) <=> bool
assocTy: (<inlinedCallArgs35>, <inlinedCallArgs35>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs35> <= bool
trackAST: (inlinedCallArgs35_id36, string)
assocAST: (update-supply_id7, <update-supply_id7>, string) => (inlinedCallArgs35_id36, <inlinedCallArgs35_id36>, string)
trackAST: (inlinedCallArgs35_supply37, decimal)
assocAST: (inlinedCallArgs35_supply37, <inlinedCallArgs35_supply37>, decimal) => (BindLet20_new-supply21, <+22>, <+22>)
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool10>, bool) <=> bool
assocTy: (<bool10>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability9>, <require-capability9>) <=> bool
assocTy: (<require-capability9>, <require-capability9>) <= bool
assocTy: tracking/updating type variable <require-capability9> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read13_row}> key:string defaults:object:~<{with-default-read13_row}> bindings:binding:~<{with-default-read13_row}> -> <with-default-read13_a>
assocTy: (<marmalade.ledger.tokens14>, table:{marmalade.ledger.token-schema}) <=> table:<{with-default-read13_row}>
assocTy: (<{with-default-read13_row}>, <{with-default-read13_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-default-read13_row}>, <{with-default-read13_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-default-read13_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-default-read13_row}>)
assocTy: (<update-supply_id7>, string) <=> string
assocTy: (<update-supply_id7>, string) <= string
assocTy: (<object15>, object:*) <=> object:~<{with-default-read13_row}>
assocTy: (<object15>, object:*) <= object:~<{with-default-read13_row}>
assocTy: (<update-supply33>, bool) <=> <with-default-read13_a>
assocTy: bool => <with-default-read13_a>
assocTy: (<emit-event26>, <emit-event26>) <=> <with-default-read13_a>
assocTy: (<emit-event26>, <emit-event26>) <= <with-default-read13_a>
assocTy: tracking/updating type variable <emit-event26> <= <with-default-read13_a>
assocTy: (<BindSchema17schema32>, *) <=> binding:~<{with-default-read13_row}>
assocTy: (<BindSchema17schema32>, *) <= binding:~<{with-default-read13_row}>
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update23_row}> key:string object:object:~<{update23_row}> -> string
assocTy: (<marmalade.ledger.tokens24>, table:{marmalade.ledger.token-schema}) <=> table:<{update23_row}>
assocTy: (<{update23_row}>, <{update23_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{update23_row}>, <{update23_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{update23_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{update23_row}>)
assocTy: (<update-supply_id7>, string) <=> string
assocTy: (<update-supply_id7>, string) <= string
assocTy: (<object25>, object:*) <=> object:~<{update23_row}>
assocTy: (<object25>, object:*) <= object:~<{update23_row}>
assocTy: (<update23>, <update23>) <=> string
assocTy: (<update23>, <update23>) <= string
assocTy: tracking/updating type variable <update23> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool29>, bool) <=> bool
assocTy: (<bool29>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event26>, bool) <=> bool
assocTy: (<emit-event26>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema17schema32::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema17_s18_ag>, <BindSchema17_s18_ag>) <=> decimal
assocTy: (<BindSchema17_s18_ag>, <BindSchema17_s18_ag>) <= decimal
assocTy: tracking/updating type variable <BindSchema17_s18_ag> <= decimal
applySchemas [object]: (object25::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<inlinedCallArgs35_supply37>, decimal) <=> decimal
assocTy: (<inlinedCallArgs35_supply37>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object25>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object25>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
applySchemas [object]: (object15::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<decimal16>, decimal) <=> decimal
assocTy: (<decimal16>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object15>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object15>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=<+22_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+22_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+22_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+22_a[integer,decimal]> y:<+22_a[integer,decimal]> -> <+22_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+22_a[integer,decimal]>, AST=+22::<+22>, tyVar=<inlinedCallArgs35_supply37>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+22_a[integer,decimal]>, AST=BindSchema17_s18::<BindSchema17_s18_ag>, tyVar=<BindSchema17_s18_ag>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+22_a[integer,decimal]>, AST=update-supply_amount8::decimal, tyVar=<update-supply_amount8>, resolvedTy=decimal})]
tryFunType: trying x:<+22_a[integer,decimal]> y:<+22_a[integer,decimal]> -> <+22_a[integer,decimal]> with [(<+22_a[integer,decimal]>, [(+22, <inlinedCallArgs35_supply37>, decimal), (update-supply_amount8, <update-supply_amount8>, decimal), (BindSchema17_s18, <BindSchema17_s18_ag>, decimal)])]
Solved overload with x:<+22_a[integer,decimal]> y:<+22_a[integer,decimal]> -> <+22_a[integer,decimal]>: [(<+22_a[integer,decimal]>, (decimal, [(+22, <inlinedCallArgs35_supply37>), (update-supply_amount8, <update-supply_amount8>), (BindSchema17_s18, <BindSchema17_s18_ag>)]))]
Adjusting type for solution: ((+22, <inlinedCallArgs35_supply37>), <+22_a[integer,decimal]>, decimal)
assocTy: (<inlinedCallArgs35_supply37>, decimal) <=> <+22_a[integer,decimal]>
assocTy: decimal => <+22_a[integer,decimal]>
assocTy: (<inlinedCallArgs35_supply37>, decimal) <=> decimal
assocTy: (<inlinedCallArgs35_supply37>, decimal) <= decimal
Adjusting type for solution: ((update-supply_amount8, <update-supply_amount8>), <+22_a[integer,decimal]>, decimal)
assocTy: (<update-supply_amount8>, decimal) <=> <+22_a[integer,decimal]>
assocTy: (<update-supply_amount8>, decimal) <=> decimal
assocTy: (<update-supply_amount8>, decimal) <= decimal
Adjusting type for solution: ((BindSchema17_s18, <BindSchema17_s18_ag>), <+22_a[integer,decimal]>, decimal)
assocTy: (<BindSchema17_s18_ag>, decimal) <=> <+22_a[integer,decimal]>
assocTy: (<BindSchema17_s18_ag>, decimal) <=> decimal
assocTy: (<BindSchema17_s18_ag>, decimal) <= decimal
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.update-supply:bool (id:str...
===== Fun: (defun marmalade.ledger.sale-account:string ())
trackAST: (format39, <format39>)
trackAST: (string40, string)
trackAST: (list41, [<at>])
trackAST: (pact-id42, <pact-id42>)
trackAST: (sale-account43, string)
assocAST: (sale-account43, <sale-account43>, string) => (format39, <format39>, <format39>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string40>, string) <=> string
assocTy: (<string40>, string) <= string
assocTy: (<list41>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account43>, string) <=> string
assocTy: (<sale-account43>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id42>, <pact-id42>) <=> string
assocTy: (<pact-id42>, <pact-id42>) <= string
assocTy: tracking/updating type variable <pact-id42> <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list41::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.sale-account:string ())
===== Fun: (defun marmalade.ledger.create-token:bool (id:stri...
trackAST: (create-token_id45, string)
trackAST: (create-token_precision46, integer)
trackAST: (create-token_manifest47, object:{kip.token-manifest.manifest})
trackAST: (create-token_policy48, module{kip.token-policy-v1})
trackAST: (enforce-verify-manifest_manifest49, object:{kip.token-manifest.manifest})
trackAST: (enforce50, <enforce50>)
trackAST: (verify-manifest_manifest51, object:{kip.token-manifest.manifest})
trackAST: (bind52, <bind52>)
trackAST: (BindSchema53, <BindSchema53>)
trackAST: (BindSchema53_uri54, <BindSchema53_uri54_c>)
trackAST: (string55, string)
trackAST: (BindSchema53_data56, <BindSchema53_data56_d>)
trackAST: (string57, string)
trackAST: (=58, <=58>)
trackAST: (create-manifest_uri59, object:{kip.token-manifest.mf-uri})
trackAST: (create-manifest_data60, [object:{kip.token-manifest.mf-datum}])
TObject: TyAny
trackAST: (object61, object:*)
trackAST: (hash-contents_uri62, object:{kip.token-manifest.mf-uri})
trackAST: (hash-contents_hashes63, [string])
trackAST: (hash64, <hash64>)
TObject: TyAny
trackAST: (object65, object:*)
trackAST: (hash-contents66, string)
assocAST: (hash-contents66, <hash-contents66>, string) => (hash64, <hash64>, <hash64>)
trackAST: (hash-contents67, <hash-contents67>)
trackAST: (map68, <map68>)
trackAST: (at69, <at69>)
trackAST: (string70, string)
trackAST: (at_x_p71, <at_x_p71>)
Adding fresh arg to partial application: at_x_p71::TyVar {_tyVar = TypeVar {_tvName = "at_x_p71", _tvConstraint = []}}
assocAST: (hash64, <hash-contents66>, string) => (hash-contents67, <hash-contents67>, <hash-contents67>)
trackAST: (create-manifest72, object:{kip.token-manifest.manifest})
assocAST: (create-manifest72, <create-manifest72>, object:{kip.token-manifest.manifest}) => (object61, <object61>, object:*)
trackAST: (create-manifest73, <create-manifest73>)
assocAST: (object61, <create-manifest72>, object:{kip.token-manifest.manifest}) => (create-manifest73, <create-manifest73>, <create-manifest73>)
assocAST: (=58, <=58>, <=58>) => (BindSchema53, <BindSchema53>, <BindSchema53>)
trackAST: (BindSchema53schema74, *)
trackAST: (verify-manifest75, bool)
assocAST: (verify-manifest75, <verify-manifest75>, bool) => (bind52, <bind52>, <bind52>)
trackAST: (verify-manifest76, <verify-manifest76>)
assocAST: (bind52, <verify-manifest75>, bool) => (verify-manifest76, <verify-manifest76>, <verify-manifest76>)
trackAST: (string77, string)
trackAST: (enforce-verify-manifest78, bool)
assocAST: (enforce-verify-manifest78, <enforce-verify-manifest78>, bool) => (enforce50, <enforce50>, <enforce50>)
trackAST: (enforce-verify-manifest79, <enforce-verify-manifest79>)
assocAST: (enforce50, <enforce-verify-manifest78>, bool) => (enforce-verify-manifest79, <enforce-verify-manifest79>, <enforce-verify-manifest79>)
trackAST: (enforce-init_token80, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-init81, bool)
trackAST: (enforce-init82, <enforce-init82>)
TObject: TyAny
trackAST: (object83, object:*)
trackAST: (decimal84, decimal)
assocAST: (enforce-init81, <enforce-init81>, bool) => (enforce-init82, <enforce-init82>, <enforce-init82>)
trackAST: (insert85, <insert85>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens86, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object87, object:*)
trackAST: (decimal88, decimal)
trackAST: (emit-event89, <emit-event89>)
trackAST: (TOKEN_id90, string)
trackAST: (TOKEN_precision91, integer)
trackAST: (TOKEN_supply92, decimal)
trackAST: (TOKEN_policy93, module{kip.token-policy-v1})
trackAST: (bool94, bool)
trackAST: (TOKEN95, bool)
assocAST: (bool94, <bool94>, bool) => (TOKEN95, <TOKEN95>, bool)
trackAST: (TOKEN96, <TOKEN96>)
trackAST: (decimal97, decimal)
assocAST: (bool94, <bool94>, bool) => (TOKEN96, <TOKEN96>, <TOKEN96>)
trackAST: (create-token98, bool)
assocAST: (create-token98, <create-token98>, bool) => (emit-event89, <emit-event89>, <emit-event89>)
--------------------------------
 Substitute defuns:

assocTy: (<hash-contents66>, string) <=> string
assocTy: (<hash-contents66>, string) <= string
trackAST: (inlinedCallArgs99, <inlinedCallArgs99>)
assocTy: (<inlinedCallArgs99>, <inlinedCallArgs99>) <=> string
assocTy: (<inlinedCallArgs99>, <inlinedCallArgs99>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs99> <= string
trackAST: (inlinedCallArgs99_uri100, object:{kip.token-manifest.mf-uri})
assocAST: (create-manifest_uri59, <create-manifest_uri59>, object:{kip.token-manifest.mf-uri}) => (inlinedCallArgs99_uri100, <inlinedCallArgs99_uri100>, object:{kip.token-manifest.mf-uri})
trackAST: (inlinedCallArgs99_hashes101, [string])
assocAST: (inlinedCallArgs99_hashes101, <inlinedCallArgs99_hashes101>, [string]) => (map68, <map68>, <map68>)
assocAST: (inlinedCallArgs99_uri100, <create-manifest_uri59>, object:{kip.token-manifest.mf-uri}) => (hash-contents_uri62, <hash-contents_uri62>, object:{kip.token-manifest.mf-uri})
assocAST: (inlinedCallArgs99_hashes101, <inlinedCallArgs99_hashes101>, [string]) => (hash-contents_hashes63, <hash-contents_hashes63>, [string])
assocTy: (<create-manifest72>, object:{kip.token-manifest.manifest}) <=> object:{kip.token-manifest.manifest}
assocTy: (<create-manifest72>, object:{kip.token-manifest.manifest}) <= object:{kip.token-manifest.manifest}
trackAST: (inlinedCallArgs102, <inlinedCallArgs102>)
assocTy: (<inlinedCallArgs102>, <inlinedCallArgs102>) <=> object:{kip.token-manifest.manifest}
assocTy: (<inlinedCallArgs102>, <inlinedCallArgs102>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <inlinedCallArgs102> <= object:{kip.token-manifest.manifest}
trackAST: (inlinedCallArgs102_uri103, object:{kip.token-manifest.mf-uri})
assocAST: (inlinedCallArgs102_uri103, <inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) => (BindSchema53_uri54, <BindSchema53_uri54_c>, <BindSchema53_uri54_c>)
trackAST: (inlinedCallArgs102_data104, [object:{kip.token-manifest.mf-datum}])
assocAST: (inlinedCallArgs102_data104, <inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) => (BindSchema53_data56, <BindSchema53_data56_d>, <BindSchema53_data56_d>)
assocAST: (inlinedCallArgs102_uri103, <inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) => (create-manifest_uri59, <create-manifest_uri59>, object:{kip.token-manifest.mf-uri})
assocAST: (inlinedCallArgs102_uri103, <inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) => (create-manifest_uri59, <inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri})
assocAST: (inlinedCallArgs102_uri103, <inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) => (create-manifest_uri59, <inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri})
assocAST: (inlinedCallArgs102_data104, <inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) => (create-manifest_data60, <create-manifest_data60>, [object:{kip.token-manifest.mf-datum}])
assocAST: (inlinedCallArgs102_data104, <inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) => (create-manifest_data60, <inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}])
assocAST: (inlinedCallArgs102_data104, <inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) => (create-manifest_data60, <inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}])
assocTy: (<verify-manifest75>, bool) <=> bool
assocTy: (<verify-manifest75>, bool) <= bool
trackAST: (inlinedCallArgs105, <inlinedCallArgs105>)
assocTy: (<inlinedCallArgs105>, <inlinedCallArgs105>) <=> bool
assocTy: (<inlinedCallArgs105>, <inlinedCallArgs105>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs105> <= bool
trackAST: (inlinedCallArgs105_manifest106, object:{kip.token-manifest.manifest})
assocAST: (enforce-verify-manifest_manifest49, <enforce-verify-manifest_manifest49>, object:{kip.token-manifest.manifest}) => (inlinedCallArgs105_manifest106, <inlinedCallArgs105_manifest106>, object:{kip.token-manifest.manifest})
assocAST: (inlinedCallArgs105_manifest106, <enforce-verify-manifest_manifest49>, object:{kip.token-manifest.manifest}) => (verify-manifest_manifest51, <verify-manifest_manifest51>, object:{kip.token-manifest.manifest})
assocAST: (inlinedCallArgs105_manifest106, <enforce-verify-manifest_manifest49>, object:{kip.token-manifest.manifest}) => (verify-manifest_manifest51, <enforce-verify-manifest_manifest49>, object:{kip.token-manifest.manifest})
assocTy: (<enforce-verify-manifest78>, bool) <=> bool
assocTy: (<enforce-verify-manifest78>, bool) <= bool
trackAST: (inlinedCallArgs107, <inlinedCallArgs107>)
assocTy: (<inlinedCallArgs107>, <inlinedCallArgs107>) <=> bool
assocTy: (<inlinedCallArgs107>, <inlinedCallArgs107>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs107> <= bool
trackAST: (inlinedCallArgs107_manifest108, object:{kip.token-manifest.manifest})
assocAST: (create-token_manifest47, <create-token_manifest47>, object:{kip.token-manifest.manifest}) => (inlinedCallArgs107_manifest108, <inlinedCallArgs107_manifest108>, object:{kip.token-manifest.manifest})
assocAST: (inlinedCallArgs107_manifest108, <create-token_manifest47>, object:{kip.token-manifest.manifest}) => (enforce-verify-manifest_manifest49, <enforce-verify-manifest_manifest49>, object:{kip.token-manifest.manifest})
assocAST: (inlinedCallArgs107_manifest108, <create-token_manifest47>, object:{kip.token-manifest.manifest}) => (enforce-verify-manifest_manifest49, <create-token_manifest47>, object:{kip.token-manifest.manifest})
assocTy: (<enforce-init81>, bool) <=> bool
assocTy: (<enforce-init81>, bool) <= bool
trackAST: (inlinedCallArgs109, <inlinedCallArgs109>)
assocTy: (<inlinedCallArgs109>, <inlinedCallArgs109>) <=> bool
assocTy: (<inlinedCallArgs109>, <inlinedCallArgs109>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs109> <= bool
trackAST: (inlinedCallArgs109_token110, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs109_token110, <inlinedCallArgs109_token110>, object:{kip.token-policy-v1.token-info}) => (object83, <object83>, object:*)
assocTy: (<bool94>, bool) <=> bool
assocTy: (<bool94>, bool) <= bool
trackAST: (inlinedCallArgs111, <inlinedCallArgs111>)
assocTy: (<inlinedCallArgs111>, <inlinedCallArgs111>) <=> bool
assocTy: (<inlinedCallArgs111>, <inlinedCallArgs111>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs111> <= bool
trackAST: (inlinedCallArgs111_id112, string)
assocAST: (create-token_id45, <create-token_id45>, string) => (inlinedCallArgs111_id112, <inlinedCallArgs111_id112>, string)
trackAST: (inlinedCallArgs111_precision113, integer)
assocAST: (create-token_precision46, <create-token_precision46>, integer) => (inlinedCallArgs111_precision113, <inlinedCallArgs111_precision113>, integer)
trackAST: (inlinedCallArgs111_supply114, decimal)
assocAST: (decimal97, <decimal97>, decimal) => (inlinedCallArgs111_supply114, <inlinedCallArgs111_supply114>, decimal)
trackAST: (inlinedCallArgs111_policy115, module{kip.token-policy-v1})
assocAST: (create-token_policy48, <create-token_policy48>, module{kip.token-policy-v1}) => (inlinedCallArgs111_policy115, <inlinedCallArgs111_policy115>, module{kip.token-policy-v1})
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<verify-manifest75>, bool) <=> bool
assocTy: (<verify-manifest75>, bool) <= bool
assocTy: (<string77>, string) <=> string
assocTy: (<string77>, string) <= string
assocTy: (<enforce-verify-manifest78>, bool) <=> bool
assocTy: (<enforce-verify-manifest78>, bool) <= bool
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind52_row}> binding:binding:<{bind52_row}> -> <bind52_a>
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <=> object:<{bind52_row}>
assocTy: (<{bind52_row}>, <{bind52_row}>) <=> {kip.token-manifest.manifest}
assocTy: (<{bind52_row}>, <{bind52_row}>) <= {kip.token-manifest.manifest}
assocTy: tracking/updating type variable <{bind52_row}> <= {kip.token-manifest.manifest}
assocTy: noop: (object:{kip.token-manifest.manifest}, object:<{bind52_row}>)
assocTy: (<verify-manifest75>, bool) <=> <bind52_a>
assocTy: bool => <bind52_a>
assocTy: (<=58>, <=58>) <=> <bind52_a>
assocTy: (<=58>, <=58>) <= <bind52_a>
assocTy: tracking/updating type variable <=58> <= <bind52_a>
assocTy: (<BindSchema53schema74>, *) <=> binding:<{bind52_row}>
assocTy: (<BindSchema53schema74>, *) <= binding:<{bind52_row}>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=58_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=58_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<create-manifest72>, object:{kip.token-manifest.manifest}) <=> <=58_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: object:{kip.token-manifest.manifest} => <=58_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <=> <=58_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=58>, bool) <=> bool
assocTy: (<=58>, bool) <= bool
Mangled funtype: app:x:<b> -> <a> list:[<b>] -> [<a>] -> app:x:<map68_b> -> <map68_a> list:[<map68_b>] -> [<map68_a>]
associating partial AST app with lambda return type: FunType {_ftArgs = [Arg {_aName = "x", _aType = TyVar {_tyVar = TypeVar {_tvName = "map68_b", _tvConstraint = []}}, _aInfo = }], _ftReturn = TyVar {_tyVar = TypeVar {_tvName = "map68_a", _tvConstraint = []}}}
assocTy: (<at69>, <at69>) <=> <map68_a>
assocTy: (<at69>, <at69>) <= <map68_a>
assocTy: tracking/updating type variable <at69> <= <map68_a>
associating partial AST args with lambda arg types
assocTy: (<at_x_p71>, <at_x_p71>) <=> <map68_b>
assocTy: (<at_x_p71>, <at_x_p71>) <= <map68_b>
assocTy: tracking/updating type variable <at_x_p71> <= <map68_b>
assocTy: (<inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) <=> [<map68_b>]
assocTy: (<map68_b>, <map68_b>) <=> object:{kip.token-manifest.mf-datum}
assocTy: (<map68_b>, <map68_b>) <= object:{kip.token-manifest.mf-datum}
assocTy: tracking/updating type variable <map68_b> <= object:{kip.token-manifest.mf-datum}
assocTy: noop: ([object:{kip.token-manifest.mf-datum}], [<map68_b>])
assocTy: (<inlinedCallArgs99_hashes101>, [string]) <=> [<map68_a>]
assocTy: (<map68_a>, <map68_a>) <=> string
assocTy: (<map68_a>, <map68_a>) <= string
assocTy: tracking/updating type variable <map68_a> <= string
assocTy: noop: ([string], [<map68_a>])
Mangled funtype: value:<a> -> string -> value:<hash64_a> -> string
assocTy: (<object65>, object:*) <=> <hash64_a>
assocTy: object:* => <hash64_a>
assocTy: (<hash-contents66>, string) <=> string
assocTy: (<hash-contents66>, string) <= string
Mangled funtype: app:x:<b> -> <a> list:[<b>] -> [<a>] -> app:x:<map68_b> -> <map68_a> list:[<map68_b>] -> [<map68_a>]
associating partial AST app with lambda return type: FunType {_ftArgs = [Arg {_aName = "x", _aType = TyVar {_tyVar = TypeVar {_tvName = "map68_b", _tvConstraint = []}}, _aInfo = }], _ftReturn = TyVar {_tyVar = TypeVar {_tvName = "map68_a", _tvConstraint = []}}}
assocTy: (<at69>, string) <=> <map68_a>
associating partial AST args with lambda arg types
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <=> <map68_b>
assocTy: (<inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) <=> [<map68_b>]
assocTy: (<map68_b>, object:{kip.token-manifest.mf-datum}) <=> object:{kip.token-manifest.mf-datum}
assocTy: (<map68_b>, object:{kip.token-manifest.mf-datum}) <= object:{kip.token-manifest.mf-datum}
assocTy: noop: ([object:{kip.token-manifest.mf-datum}], [<map68_b>])
assocTy: (<inlinedCallArgs99_hashes101>, [string]) <=> [<map68_a>]
assocTy: (<map68_a>, string) <=> string
assocTy: (<map68_a>, string) <= string
assocTy: noop: ([string], [<map68_a>])
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{insert85_row}> key:string object:object:<{insert85_row}> -> string
assocTy: (<marmalade.ledger.tokens86>, table:{marmalade.ledger.token-schema}) <=> table:<{insert85_row}>
assocTy: (<{insert85_row}>, <{insert85_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{insert85_row}>, <{insert85_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{insert85_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{insert85_row}>)
assocTy: (<create-token_id45>, string) <=> string
assocTy: (<create-token_id45>, string) <= string
assocTy: (<object87>, object:*) <=> object:<{insert85_row}>
assocTy: (<object87>, object:*) <= object:<{insert85_row}>
assocTy: (<insert85>, <insert85>) <=> string
assocTy: (<insert85>, <insert85>) <= string
assocTy: tracking/updating type variable <insert85> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool94>, bool) <=> bool
assocTy: (<bool94>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<create-token98>, bool) <=> bool
assocTy: (<create-token98>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema53schema74::*, {kip.token-manifest.manifest})
assocTy: (<inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) <=> [object:{kip.token-manifest.mf-datum}]
assocTy: (<inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) <= [object:{kip.token-manifest.mf-datum}]
assocTy: (<inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) <=> object:{kip.token-manifest.mf-uri}
assocTy: (<inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) <= object:{kip.token-manifest.mf-uri}
applySchemas [object]: (object61::object:*, {kip.token-manifest.manifest}, FullSchema)
assocTy: (<inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) <=> [object:{kip.token-manifest.mf-datum}]
assocTy: (<inlinedCallArgs102_data104>, [object:{kip.token-manifest.mf-datum}]) <= [object:{kip.token-manifest.mf-datum}]
assocTy: (<hash-contents66>, string) <=> string
assocTy: (<hash-contents66>, string) <= string
assocTy: (<inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) <=> object:{kip.token-manifest.mf-uri}
assocTy: (<inlinedCallArgs102_uri103>, object:{kip.token-manifest.mf-uri}) <= object:{kip.token-manifest.mf-uri}
applySchemas [object]: (object83::object:*, {kip.token-policy-v1.token-info}, FullSchema)
assocTy: (<create-token_id45>, string) <=> string
assocTy: (<create-token_id45>, string) <= string
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <=> object:{kip.token-manifest.manifest}
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <= object:{kip.token-manifest.manifest}
assocTy: (<create-token_precision46>, integer) <=> integer
assocTy: (<create-token_precision46>, integer) <= integer
assocTy: (<decimal84>, decimal) <=> decimal
assocTy: (<decimal84>, decimal) <= decimal
applySchemas [object]: (object83::object:*, {kip.token-policy-v1.token-info}, FullSchema)
assocTy: (<create-token_id45>, string) <=> string
assocTy: (<create-token_id45>, string) <= string
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <=> object:{kip.token-manifest.manifest}
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <= object:{kip.token-manifest.manifest}
assocTy: (<create-token_precision46>, integer) <=> integer
assocTy: (<create-token_precision46>, integer) <= integer
assocTy: (<decimal84>, decimal) <=> decimal
assocTy: (<decimal84>, decimal) <= decimal
applySchemas [object]: (object87::object:*, {marmalade.ledger.token-schema}, FullSchema)
assocTy: (<create-token_id45>, string) <=> string
assocTy: (<create-token_id45>, string) <= string
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <=> object:{kip.token-manifest.manifest}
assocTy: (<create-token_manifest47>, object:{kip.token-manifest.manifest}) <= object:{kip.token-manifest.manifest}
assocTy: (<create-token_policy48>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<create-token_policy48>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<create-token_precision46>, integer) <=> integer
assocTy: (<create-token_precision46>, integer) <= integer
assocTy: (<decimal88>, decimal) <=> decimal
assocTy: (<decimal88>, decimal) <= decimal
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at69_l>], roleTy=object:{kip.token-manifest.mf-datum}
tryFunType: unify role: role=RetVar, candTy=<at69_a>, roleTy=string
tryFunType: failed: idx:integer list:[<at69_l>] -> <at69_a>: roles=[(RetVar, RoleTys { candArgTy=<at69_a>, AST=at69::<at69>, tyVar=<at69>, resolvedTy=string}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at69_o}>, roleTy=object:{kip.token-manifest.mf-datum}
tryFunType: unify role: role=RetVar, candTy=<at69_a>, roleTy=string
tryFunType: cand: idx:string object:object:<{at69_o}> -> <at69_a>, roles=[(RetVar, RoleTys { candArgTy=<at69_a>, AST=at69::<at69>, tyVar=<at69>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=string, AST=string70::string, tyVar=<string70>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at69_o}>, AST=at_x_p71::<at_x_p71>, tyVar=<at_x_p71>, resolvedTy=object:{kip.token-manifest.mf-datum}})]
tryFunType: trying idx:string object:object:<{at69_o}> -> <at69_a> with [(<at69_a>, [(at69, <at69>, string)]), (string, [(string70, <string70>, string)]), (object:<{at69_o}>, [(at_x_p71, <at_x_p71>, object:{kip.token-manifest.mf-datum})])]
Solved overload with idx:string object:object:<{at69_o}> -> <at69_a>: [(<at69_a>, (string, [(at69, <at69>)])), (string, (string, [(string70, <string70>)])), (object:<{at69_o}>, (object:{kip.token-manifest.mf-datum}, [(at_x_p71, <at_x_p71>)]))]
Adjusting type for solution: ((at69, <at69>), <at69_a>, string)
assocTy: (<at69>, string) <=> <at69_a>
assocTy: string => <at69_a>
assocTy: (<at69>, string) <=> string
assocTy: (<at69>, string) <= string
Adjusting type for solution: ((string70, <string70>), string, string)
assocTy: (<string70>, string) <=> string
assocTy: (<string70>, string) <= string
assocTy: (<string70>, string) <=> string
assocTy: (<string70>, string) <= string
Adjusting type for solution: ((at_x_p71, <at_x_p71>), object:<{at69_o}>, object:{kip.token-manifest.mf-datum})
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <=> object:<{at69_o}>
assocTy: (<{at69_o}>, <{at69_o}>) <=> {kip.token-manifest.mf-datum}
assocTy: (<{at69_o}>, <{at69_o}>) <= {kip.token-manifest.mf-datum}
assocTy: tracking/updating type variable <{at69_o}> <= {kip.token-manifest.mf-datum}
assocTy: noop: (object:{kip.token-manifest.mf-datum}, object:<{at69_o}>)
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <=> object:{kip.token-manifest.mf-datum}
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <= object:{kip.token-manifest.mf-datum}
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at69_l>], roleTy=object:{kip.token-manifest.mf-datum}
tryFunType: unify role: role=RetVar, candTy=<at69_a>, roleTy=string
tryFunType: failed: idx:integer list:[<at69_l>] -> <at69_a>: roles=[(RetVar, RoleTys { candArgTy=<at69_a>, AST=at69::<at69>, tyVar=<at69>, resolvedTy=string}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at69_o}>, roleTy=object:{kip.token-manifest.mf-datum}
tryFunType: unify role: role=RetVar, candTy=<at69_a>, roleTy=string
tryFunType: cand: idx:string object:object:<{at69_o}> -> <at69_a>, roles=[(RetVar, RoleTys { candArgTy=<at69_a>, AST=at69::<at69>, tyVar=<at69>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=string, AST=string70::string, tyVar=<string70>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at69_o}>, AST=at_x_p71::<at_x_p71>, tyVar=<at_x_p71>, resolvedTy=object:{kip.token-manifest.mf-datum}})]
tryFunType: trying idx:string object:object:<{at69_o}> -> <at69_a> with [(<at69_a>, [(at69, <at69>, string)]), (string, [(string70, <string70>, string)]), (object:<{at69_o}>, [(at_x_p71, <at_x_p71>, object:{kip.token-manifest.mf-datum})])]
Solved overload with idx:string object:object:<{at69_o}> -> <at69_a>: [(<at69_a>, (string, [(at69, <at69>)])), (string, (string, [(string70, <string70>)])), (object:<{at69_o}>, (object:{kip.token-manifest.mf-datum}, [(at_x_p71, <at_x_p71>)]))]
Adjusting type for solution: ((at69, <at69>), <at69_a>, string)
assocTy: (<at69>, string) <=> <at69_a>
assocTy: (<at69>, string) <=> string
assocTy: (<at69>, string) <= string
Adjusting type for solution: ((string70, <string70>), string, string)
assocTy: (<string70>, string) <=> string
assocTy: (<string70>, string) <= string
assocTy: (<string70>, string) <=> string
assocTy: (<string70>, string) <= string
Adjusting type for solution: ((at_x_p71, <at_x_p71>), object:<{at69_o}>, object:{kip.token-manifest.mf-datum})
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <=> object:<{at69_o}>
assocTy: (<{at69_o}>, {kip.token-manifest.mf-datum}) <=> {kip.token-manifest.mf-datum}
assocTy: (<{at69_o}>, {kip.token-manifest.mf-datum}) <= {kip.token-manifest.mf-datum}
assocTy: noop: (object:{kip.token-manifest.mf-datum}, object:<{at69_o}>)
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <=> object:{kip.token-manifest.mf-datum}
assocTy: (<at_x_p71>, object:{kip.token-manifest.mf-datum}) <= object:{kip.token-manifest.mf-datum}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.create-token:bool (id:stri...
===== Fun: (defun marmalade.ledger.enforce-unit:bool (id:stri...
trackAST: (enforce-unit_id117, string)
trackAST: (enforce-unit_amount118, decimal)
trackAST: (BindLet119, <BindLet119>)
trackAST: (BindLet119_p120, <BindLet119_p120_ai>)
trackAST: (precision_id121, string)
trackAST: (at122, <at122>)
trackAST: (string123, string)
trackAST: (read124, <read124>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens125, table:{marmalade.ledger.token-schema})
trackAST: (precision126, integer)
assocAST: (precision126, <precision126>, integer) => (at122, <at122>, <at122>)
trackAST: (precision127, <precision127>)
assocAST: (at122, <precision126>, integer) => (precision127, <precision127>, <precision127>)
assocAST: (precision127, <precision126>, integer) => (BindLet119_p120, <BindLet119_p120_ai>, <BindLet119_p120_ai>)
trackAST: (enforce128, <enforce128>)
trackAST: (=129, <=129>)
trackAST: (floor130, <floor130>)
trackAST: (string131, string)
assocAST: (enforce128, <enforce128>, <enforce128>) => (BindLet119, <BindLet119>, <BindLet119>)
trackAST: (enforce-unit132, bool)
assocAST: (enforce-unit132, <enforce-unit132>, bool) => (BindLet119, <enforce128>, <enforce128>)
--------------------------------
 Substitute defuns:

assocTy: (<precision126>, integer) <=> integer
assocTy: (<precision126>, integer) <= integer
trackAST: (inlinedCallArgs133, <inlinedCallArgs133>)
assocTy: (<inlinedCallArgs133>, <inlinedCallArgs133>) <=> integer
assocTy: (<inlinedCallArgs133>, <inlinedCallArgs133>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs133> <= integer
trackAST: (inlinedCallArgs133_id134, string)
assocAST: (enforce-unit_id117, <enforce-unit_id117>, string) => (inlinedCallArgs133_id134, <inlinedCallArgs133_id134>, string)
assocAST: (inlinedCallArgs133_id134, <enforce-unit_id117>, string) => (precision_id121, <precision_id121>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=129>, <=129>) <=> bool
assocTy: (<=129>, <=129>) <= bool
assocTy: tracking/updating type variable <=129> <= bool
assocTy: (<string131>, string) <=> string
assocTy: (<string131>, string) <= string
assocTy: (<enforce-unit132>, bool) <=> bool
assocTy: (<enforce-unit132>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor130>, <floor130>) <=> <=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor130>, <floor130>) <= <=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor130> <= <=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<enforce-unit_amount118>, decimal) <=> <=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=129_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=129>, bool) <=> bool
assocTy: (<=129>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor130::<floor130>, tyVar=<floor130>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=enforce-unit_amount118::decimal, tyVar=<enforce-unit_amount118>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet119_p120::<BindLet119_p120_ai>, tyVar=<precision126>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet119_p120, <precision126>, integer)]), (decimal, [(floor130, <floor130>, decimal), (enforce-unit_amount118, <enforce-unit_amount118>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet119_p120, <precision126>)])), (decimal, (decimal, [(floor130, <floor130>), (enforce-unit_amount118, <enforce-unit_amount118>)]))]
Adjusting type for solution: ((BindLet119_p120, <precision126>), integer, integer)
assocTy: (<precision126>, integer) <=> integer
assocTy: (<precision126>, integer) <= integer
assocTy: (<precision126>, integer) <=> integer
assocTy: (<precision126>, integer) <= integer
Adjusting type for solution: ((floor130, <floor130>), decimal, decimal)
assocTy: (<floor130>, decimal) <=> decimal
assocTy: (<floor130>, decimal) <= decimal
assocTy: (<floor130>, decimal) <=> decimal
assocTy: (<floor130>, decimal) <= decimal
Adjusting type for solution: ((enforce-unit_amount118, <enforce-unit_amount118>), decimal, decimal)
assocTy: (<enforce-unit_amount118>, decimal) <=> decimal
assocTy: (<enforce-unit_amount118>, decimal) <= decimal
assocTy: (<enforce-unit_amount118>, decimal) <=> decimal
assocTy: (<enforce-unit_amount118>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read124_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read124_row}>, roleTy=<read124>
tryFunType: cand: table:table:<{read124_row}> key:string -> object:<{read124_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read124_row}>, AST=read124::<read124>, tyVar=<read124>, resolvedTy=<read124>}), (ArgVar 0, RoleTys { candArgTy=table:<{read124_row}>, AST=marmalade.ledger.tokens125::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens125>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs133_id134::string, tyVar=<enforce-unit_id117>, resolvedTy=string})]
tryFunType: trying table:table:<{read124_row}> key:string -> object:<{read124_row}> with [(string, [(inlinedCallArgs133_id134, <enforce-unit_id117>, string)]), (table:<{read124_row}>, [(marmalade.ledger.tokens125, <marmalade.ledger.tokens125>, table:{marmalade.ledger.token-schema})]), (object:<{read124_row}>, [(read124, <read124>, <read124>)])]
Solved overload with table:table:<{read124_row}> key:string -> object:<{read124_row}>: [(string, (string, [(inlinedCallArgs133_id134, <enforce-unit_id117>)])), (table:<{read124_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens125, <marmalade.ledger.tokens125>)])), (object:<{read124_row}>, (object:<{read124_row}>, [(read124, <read124>)]))]
Adjusting type for solution: ((inlinedCallArgs133_id134, <enforce-unit_id117>), string, string)
assocTy: (<enforce-unit_id117>, string) <=> string
assocTy: (<enforce-unit_id117>, string) <= string
assocTy: (<enforce-unit_id117>, string) <=> string
assocTy: (<enforce-unit_id117>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens125, <marmalade.ledger.tokens125>), table:<{read124_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens125>, table:{marmalade.ledger.token-schema}) <=> table:<{read124_row}>
assocTy: (<{read124_row}>, <{read124_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read124_row}>, <{read124_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read124_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read124_row}>)
assocTy: (<marmalade.ledger.tokens125>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens125>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read124, <read124>), object:<{read124_row}>, object:<{read124_row}>)
assocTy: (<read124>, <read124>) <=> object:<{read124_row}>
assocTy: (<read124>, <read124>) <= object:<{read124_row}>
assocTy: tracking/updating type variable <read124> <= object:<{read124_row}>
assocTy: (<read124>, object:{marmalade.ledger.token-schema}) <=> object:<{read124_row}>
assocTy: (<{read124_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read124_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read124_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at122_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at122_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at122_l>] -> <at122_a>: roles=[(RetVar, RoleTys { candArgTy=<at122_a>, AST=at122::<at122>, tyVar=<precision126>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at122_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at122_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at122_o}> -> <at122_a>, roles=[(RetVar, RoleTys { candArgTy=<at122_a>, AST=at122::<at122>, tyVar=<precision126>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string123::string, tyVar=<string123>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at122_o}>, AST=read124::<read124>, tyVar=<read124>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at122_o}> -> <at122_a> with [(<at122_a>, [(at122, <precision126>, integer)]), (string, [(string123, <string123>, string)]), (object:<{at122_o}>, [(read124, <read124>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at122_o}> -> <at122_a>: [(<at122_a>, (integer, [(at122, <precision126>)])), (string, (string, [(string123, <string123>)])), (object:<{at122_o}>, (object:{marmalade.ledger.token-schema}, [(read124, <read124>)]))]
Adjusting type for solution: ((at122, <precision126>), <at122_a>, integer)
assocTy: (<precision126>, integer) <=> <at122_a>
assocTy: integer => <at122_a>
assocTy: (<precision126>, integer) <=> integer
assocTy: (<precision126>, integer) <= integer
Adjusting type for solution: ((string123, <string123>), string, string)
assocTy: (<string123>, string) <=> string
assocTy: (<string123>, string) <= string
assocTy: (<string123>, string) <=> string
assocTy: (<string123>, string) <= string
Adjusting type for solution: ((read124, <read124>), object:<{at122_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read124>, object:{marmalade.ledger.token-schema}) <=> object:<{at122_o}>
assocTy: (<{at122_o}>, <{at122_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at122_o}>, <{at122_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at122_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at122_o}>)
assocTy: (<read124>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read124>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.enforce-unit:bool (id:stri...
===== Fun: (defun marmalade.ledger.enforce-transfer-policy:<s...
trackAST: (enforce-transfer-policy_id136, string)
trackAST: (enforce-transfer-policy_sender137, string)
trackAST: (enforce-transfer-policy_receiver138, string)
trackAST: (enforce-transfer-policy_amount139, decimal)
trackAST: (bind140, <bind140>)
trackAST: (get-policy-info_id141, string)
trackAST: (with-read142, <with-read142>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens143, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema144, <BindSchema144>)
trackAST: (BindSchema144_policy145, module{kip.token-policy-v1})
trackAST: (string146, string)
trackAST: (BindSchema144_supply147, <BindSchema144_supply147_k>)
trackAST: (string148, string)
trackAST: (BindSchema144_precision149, <BindSchema144_precision149_l>)
trackAST: (string150, string)
trackAST: (BindSchema144_manifest151, <BindSchema144_manifest151_m>)
trackAST: (string152, string)
TObject: TyAny
trackAST: (object153, object:*)
TObject: TyAny
trackAST: (object154, object:*)
assocAST: (object153, <object153>, object:*) => (BindSchema144, <BindSchema144>, <BindSchema144>)
trackAST: (BindSchema144schema155, *)
trackAST: (get-policy-info156, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info156, <get-policy-info156>, object:{marmalade.ledger.policy-info}) => (with-read142, <with-read142>, <with-read142>)
trackAST: (get-policy-info157, <get-policy-info157>)
assocAST: (with-read142, <get-policy-info156>, object:{marmalade.ledger.policy-info}) => (get-policy-info157, <get-policy-info157>, <get-policy-info157>)
trackAST: (BindSchema158, <BindSchema158>)
trackAST: (BindSchema158_policy159, module{kip.token-policy-v1})
trackAST: (string160, string)
trackAST: (BindSchema158_token161, <BindSchema158_token161_t>)
trackAST: (string162, string)
trackAST: (enforce-transfer_token163, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-transfer_sender164, string)
trackAST: (enforce-transfer_guard165, guard)
trackAST: (enforce-transfer_receiver166, string)
trackAST: (enforce-transfer_amount167, decimal)
trackAST: (enforce-transfer168, bool)
trackAST: (enforce-transfer169, <enforce-transfer169>)
trackAST: (account-guard_id170, string)
trackAST: (account-guard_account171, string)
trackAST: (with-read172, <with-read172>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger173, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id174, string)
trackAST: (key_account175, string)
trackAST: (format176, <format176>)
trackAST: (string177, string)
trackAST: (list178, [<ak>])
trackAST: (key179, string)
assocAST: (key179, <key179>, string) => (format176, <format176>, <format176>)
trackAST: (key180, <key180>)
assocAST: (format176, <key179>, string) => (key180, <key180>, <key180>)
trackAST: (BindSchema181, <BindSchema181>)
trackAST: (BindSchema181_guard182, <BindSchema181_guard182_f>)
trackAST: (string183, string)
assocAST: (BindSchema181_guard182, <BindSchema181_guard182_f>, <BindSchema181_guard182_f>) => (BindSchema181, <BindSchema181>, <BindSchema181>)
trackAST: (BindSchema181schema184, *)
trackAST: (account-guard185, guard)
assocAST: (account-guard185, <account-guard185>, guard) => (with-read172, <with-read172>, <with-read172>)
trackAST: (account-guard186, <account-guard186>)
assocAST: (with-read172, <account-guard185>, guard) => (account-guard186, <account-guard186>, <account-guard186>)
assocAST: (enforce-transfer168, <enforce-transfer168>, bool) => (enforce-transfer169, <enforce-transfer169>, <enforce-transfer169>)
assocAST: (enforce-transfer169, <enforce-transfer168>, bool) => (BindSchema158, <BindSchema158>, <BindSchema158>)
trackAST: (BindSchema158schema187, *)
trackAST: (enforce-transfer-policy188, <s>)
assocAST: (bind140, <bind140>, <bind140>) => (enforce-transfer-policy188, <s>, <s>)
--------------------------------
 Substitute defuns:

assocTy: (<key179>, string) <=> string
assocTy: (<key179>, string) <= string
trackAST: (inlinedCallArgs189, <inlinedCallArgs189>)
assocTy: (<inlinedCallArgs189>, <inlinedCallArgs189>) <=> string
assocTy: (<inlinedCallArgs189>, <inlinedCallArgs189>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs189> <= string
trackAST: (inlinedCallArgs189_id190, string)
assocAST: (account-guard_id170, <account-guard_id170>, string) => (inlinedCallArgs189_id190, <inlinedCallArgs189_id190>, string)
trackAST: (inlinedCallArgs189_account191, string)
assocAST: (account-guard_account171, <account-guard_account171>, string) => (inlinedCallArgs189_account191, <inlinedCallArgs189_account191>, string)
assocAST: (inlinedCallArgs189_id190, <account-guard_id170>, string) => (key_id174, <key_id174>, string)
assocAST: (inlinedCallArgs189_account191, <account-guard_account171>, string) => (key_account175, <key_account175>, string)
assocTy: (<account-guard185>, guard) <=> guard
assocTy: (<account-guard185>, guard) <= guard
trackAST: (inlinedCallArgs192, <inlinedCallArgs192>)
assocTy: (<inlinedCallArgs192>, <inlinedCallArgs192>) <=> guard
assocTy: (<inlinedCallArgs192>, <inlinedCallArgs192>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs192> <= guard
trackAST: (inlinedCallArgs192_id193, string)
assocAST: (enforce-transfer-policy_id136, <enforce-transfer-policy_id136>, string) => (inlinedCallArgs192_id193, <inlinedCallArgs192_id193>, string)
trackAST: (inlinedCallArgs192_account194, string)
assocAST: (enforce-transfer-policy_sender137, <enforce-transfer-policy_sender137>, string) => (inlinedCallArgs192_account194, <inlinedCallArgs192_account194>, string)
assocAST: (inlinedCallArgs192_id193, <enforce-transfer-policy_id136>, string) => (account-guard_id170, <account-guard_id170>, string)
assocAST: (inlinedCallArgs192_id193, <enforce-transfer-policy_id136>, string) => (account-guard_id170, <enforce-transfer-policy_id136>, string)
assocAST: (inlinedCallArgs192_account194, <enforce-transfer-policy_sender137>, string) => (account-guard_account171, <account-guard_account171>, string)
assocAST: (inlinedCallArgs192_account194, <enforce-transfer-policy_sender137>, string) => (account-guard_account171, <enforce-transfer-policy_sender137>, string)
assocTy: (<enforce-transfer168>, bool) <=> bool
assocTy: (<enforce-transfer168>, bool) <= bool
trackAST: (inlinedCallArgs195, <inlinedCallArgs195>)
assocTy: (<inlinedCallArgs195>, <inlinedCallArgs195>) <=> bool
assocTy: (<inlinedCallArgs195>, <inlinedCallArgs195>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs195> <= bool
trackAST: (inlinedCallArgs195_token196, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs195_token196, <inlinedCallArgs195_token196>, object:{kip.token-policy-v1.token-info}) => (BindSchema158_token161, <BindSchema158_token161_t>, <BindSchema158_token161_t>)
trackAST: (inlinedCallArgs195_sender197, string)
assocAST: (enforce-transfer-policy_sender137, <enforce-transfer-policy_sender137>, string) => (inlinedCallArgs195_sender197, <inlinedCallArgs195_sender197>, string)
trackAST: (inlinedCallArgs195_guard198, guard)
assocAST: (account-guard186, <account-guard185>, guard) => (inlinedCallArgs195_guard198, <inlinedCallArgs195_guard198>, guard)
trackAST: (inlinedCallArgs195_receiver199, string)
assocAST: (enforce-transfer-policy_receiver138, <enforce-transfer-policy_receiver138>, string) => (inlinedCallArgs195_receiver199, <inlinedCallArgs195_receiver199>, string)
trackAST: (inlinedCallArgs195_amount200, decimal)
assocAST: (enforce-transfer-policy_amount139, <enforce-transfer-policy_amount139>, decimal) => (inlinedCallArgs195_amount200, <inlinedCallArgs195_amount200>, decimal)
assocTy: (<get-policy-info156>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info156>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs201, <inlinedCallArgs201>)
assocTy: (<inlinedCallArgs201>, <inlinedCallArgs201>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs201>, <inlinedCallArgs201>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs201> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs201_id202, string)
assocAST: (enforce-transfer-policy_id136, <enforce-transfer-policy_id136>, string) => (inlinedCallArgs201_id202, <inlinedCallArgs201_id202>, string)
assocAST: (inlinedCallArgs201_id202, <enforce-transfer-policy_id136>, string) => (get-policy-info_id141, <get-policy-info_id141>, string)
assocAST: (inlinedCallArgs201_id202, <enforce-transfer-policy_id136>, string) => (get-policy-info_id141, <enforce-transfer-policy_id136>, string)
--------------------------------
Substitute natives:

Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind140_row}> binding:binding:<{bind140_row}> -> <bind140_a>
assocTy: (<get-policy-info156>, object:{marmalade.ledger.policy-info}) <=> object:<{bind140_row}>
assocTy: (<{bind140_row}>, <{bind140_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind140_row}>, <{bind140_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind140_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind140_row}>)
assocTy: (<bind140>, <bind140>) <=> <bind140_a>
assocTy: (<bind140>, <bind140>) <= <bind140_a>
assocTy: tracking/updating type variable <bind140> <= <bind140_a>
assocTy: (<enforce-transfer168>, bool) <=> <bind140_a>
assocTy: bool => <bind140_a>
assocTy: (<BindSchema158schema187>, *) <=> binding:<{bind140_row}>
assocTy: (<BindSchema158schema187>, *) <= binding:<{bind140_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read172_row}> key:string bindings:binding:<{with-read172_row}> -> <with-read172_a>
assocTy: (<marmalade.ledger.ledger173>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read172_row}>
assocTy: (<{with-read172_row}>, <{with-read172_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read172_row}>, <{with-read172_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read172_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read172_row}>)
assocTy: (<key179>, string) <=> string
assocTy: (<key179>, string) <= string
assocTy: (<account-guard185>, guard) <=> <with-read172_a>
assocTy: guard => <with-read172_a>
assocTy: (<BindSchema181_guard182_f>, <BindSchema181_guard182_f>) <=> <with-read172_a>
assocTy: (<BindSchema181_guard182_f>, <BindSchema181_guard182_f>) <= <with-read172_a>
assocTy: tracking/updating type variable <BindSchema181_guard182_f> <= <with-read172_a>
assocTy: (<BindSchema181schema184>, *) <=> binding:<{with-read172_row}>
assocTy: (<BindSchema181schema184>, *) <= binding:<{with-read172_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string177>, string) <=> string
assocTy: (<string177>, string) <= string
assocTy: (<list178>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key179>, string) <=> string
assocTy: (<key179>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read172_row}> key:string bindings:binding:<{with-read172_row}> -> <with-read172_a>
assocTy: (<marmalade.ledger.ledger173>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read172_row}>
assocTy: (<{with-read172_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read172_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read172_row}>)
assocTy: (<key179>, string) <=> string
assocTy: (<key179>, string) <= string
assocTy: (<account-guard185>, guard) <=> <with-read172_a>
assocTy: (<BindSchema181_guard182_f>, guard) <=> <with-read172_a>
assocTy: (<BindSchema181schema184>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read172_row}>
assocTy: (<{with-read172_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read172_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read172_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string177>, string) <=> string
assocTy: (<string177>, string) <= string
assocTy: (<list178>, [*]) <=> [*]
assocTy: (<list178>, [*]) <= [*]
assocTy: (<key179>, string) <=> string
assocTy: (<key179>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read142_row}> key:string bindings:binding:<{with-read142_row}> -> <with-read142_a>
assocTy: (<marmalade.ledger.tokens143>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read142_row}>
assocTy: (<{with-read142_row}>, <{with-read142_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read142_row}>, <{with-read142_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read142_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read142_row}>)
assocTy: (<enforce-transfer-policy_id136>, string) <=> string
assocTy: (<enforce-transfer-policy_id136>, string) <= string
assocTy: (<get-policy-info156>, object:{marmalade.ledger.policy-info}) <=> <with-read142_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read142_a>
assocTy: (<object153>, object:*) <=> <with-read142_a>
assocTy: (<BindSchema144schema155>, *) <=> binding:<{with-read142_row}>
assocTy: (<BindSchema144schema155>, *) <= binding:<{with-read142_row}>
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema158schema187::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema158_policy159>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema158_policy159>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs195_token196>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs195_token196>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema181schema184::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema181_guard182_f>, guard) <=> guard
assocTy: (<BindSchema181_guard182_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list178::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema181schema184::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema181_guard182_f>, guard) <=> guard
assocTy: (<BindSchema181_guard182_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list178::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema144schema155::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema144_manifest151_m>, <BindSchema144_manifest151_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema144_manifest151_m>, <BindSchema144_manifest151_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema144_manifest151_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema144_policy145>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema144_policy145>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema144_precision149_l>, <BindSchema144_precision149_l>) <=> integer
assocTy: (<BindSchema144_precision149_l>, <BindSchema144_precision149_l>) <= integer
assocTy: tracking/updating type variable <BindSchema144_precision149_l> <= integer
assocTy: (<BindSchema144_supply147_k>, <BindSchema144_supply147_k>) <=> decimal
assocTy: (<BindSchema144_supply147_k>, <BindSchema144_supply147_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema144_supply147_k> <= decimal
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.enforce-transfer-policy:<s...
===== Fun: (defun marmalade.ledger.ledger-guard:guard () Ledg...
trackAST: (create-module-guard204, <create-module-guard204>)
trackAST: (string205, string)
trackAST: (ledger-guard206, guard)
assocAST: (ledger-guard206, <ledger-guard206>, guard) => (create-module-guard204, <create-module-guard204>, <create-module-guard204>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: name:string -> guard -> name:string -> guard
assocTy: (<string205>, string) <=> string
assocTy: (<string205>, string) <= string
assocTy: (<ledger-guard206>, guard) <=> guard
assocTy: (<ledger-guard206>, guard) <= guard
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.ledger-guard:guard () Ledg...
===== Table: (deftable tokens:(defschema token-schema  [id:stri...

===== Done: (deftable tokens:(defschema token-schema  [id:stri...
===== Fun: (defun marmalade.ledger.offer:bool (id:string sell...
trackAST: (offer_id209, string)
trackAST: (offer_seller210, string)
trackAST: (offer_amount211, decimal)
trackAST: (require-capability212, <require-capability212>)
trackAST: (SALE_PRIVATE_sale-id213, string)
trackAST: (bool214, bool)
trackAST: (SALE_PRIVATE215, bool)
assocAST: (bool214, <bool214>, bool) => (SALE_PRIVATE215, <SALE_PRIVATE215>, bool)
trackAST: (SALE_PRIVATE216, <SALE_PRIVATE216>)
trackAST: (pact-id217, <pact-id217>)
assocAST: (bool214, <bool214>, bool) => (SALE_PRIVATE216, <SALE_PRIVATE216>, <SALE_PRIVATE216>)
trackAST: (bind218, <bind218>)
trackAST: (get-policy-info_id219, string)
trackAST: (with-read220, <with-read220>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens221, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema222, <BindSchema222>)
trackAST: (BindSchema222_policy223, module{kip.token-policy-v1})
trackAST: (string224, string)
trackAST: (BindSchema222_supply225, <BindSchema222_supply225_k>)
trackAST: (string226, string)
trackAST: (BindSchema222_precision227, <BindSchema222_precision227_l>)
trackAST: (string228, string)
trackAST: (BindSchema222_manifest229, <BindSchema222_manifest229_m>)
trackAST: (string230, string)
TObject: TyAny
trackAST: (object231, object:*)
TObject: TyAny
trackAST: (object232, object:*)
assocAST: (object231, <object231>, object:*) => (BindSchema222, <BindSchema222>, <BindSchema222>)
trackAST: (BindSchema222schema233, *)
trackAST: (get-policy-info234, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info234, <get-policy-info234>, object:{marmalade.ledger.policy-info}) => (with-read220, <with-read220>, <with-read220>)
trackAST: (get-policy-info235, <get-policy-info235>)
assocAST: (with-read220, <get-policy-info234>, object:{marmalade.ledger.policy-info}) => (get-policy-info235, <get-policy-info235>, <get-policy-info235>)
trackAST: (BindSchema236, <BindSchema236>)
trackAST: (BindSchema236_policy237, module{kip.token-policy-v1})
trackAST: (string238, string)
trackAST: (BindSchema236_token239, <BindSchema236_token239_al>)
trackAST: (string240, string)
trackAST: (enforce-offer_token241, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-offer_seller242, string)
trackAST: (enforce-offer_amount243, decimal)
trackAST: (enforce-offer_sale-id244, string)
trackAST: (enforce-offer245, bool)
trackAST: (enforce-offer246, <enforce-offer246>)
trackAST: (pact-id247, <pact-id247>)
assocAST: (enforce-offer245, <enforce-offer245>, bool) => (enforce-offer246, <enforce-offer246>, <enforce-offer246>)
assocAST: (enforce-offer246, <enforce-offer245>, bool) => (BindSchema236, <BindSchema236>, <BindSchema236>)
trackAST: (BindSchema236schema248, *)
trackAST: (BindLet249, <BindLet249>)
trackAST: (BindLet249_sender250, <BindLet249_sender250_am>)
trackAST: (debit_id251, string)
trackAST: (debit_account252, string)
trackAST: (debit_amount253, decimal)
trackAST: (require-capability254, <require-capability254>)
trackAST: (DEBIT_id255, string)
trackAST: (DEBIT_sender256, string)
trackAST: (enforce-guard257, <enforce-guard257>)
trackAST: (account-guard_id258, string)
trackAST: (account-guard_account259, string)
trackAST: (with-read260, <with-read260>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger261, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id262, string)
trackAST: (key_account263, string)
trackAST: (format264, <format264>)
trackAST: (string265, string)
trackAST: (list266, [<ak>])
trackAST: (key267, string)
assocAST: (key267, <key267>, string) => (format264, <format264>, <format264>)
trackAST: (key268, <key268>)
assocAST: (format264, <key267>, string) => (key268, <key268>, <key268>)
trackAST: (BindSchema269, <BindSchema269>)
trackAST: (BindSchema269_guard270, <BindSchema269_guard270_f>)
trackAST: (string271, string)
assocAST: (BindSchema269_guard270, <BindSchema269_guard270_f>, <BindSchema269_guard270_f>) => (BindSchema269, <BindSchema269>, <BindSchema269>)
trackAST: (BindSchema269schema272, *)
trackAST: (account-guard273, guard)
assocAST: (account-guard273, <account-guard273>, guard) => (with-read260, <with-read260>, <with-read260>)
trackAST: (account-guard274, <account-guard274>)
assocAST: (with-read260, <account-guard273>, guard) => (account-guard274, <account-guard274>, <account-guard274>)
trackAST: (DEBIT275, <e>)
assocAST: (enforce-guard257, <enforce-guard257>, <enforce-guard257>) => (DEBIT275, <e>, <e>)
trackAST: (DEBIT276, <DEBIT276>)
assocAST: (enforce-guard257, <enforce-guard257>, <enforce-guard257>) => (DEBIT276, <DEBIT276>, <DEBIT276>)
trackAST: (enforce-unit_id277, string)
trackAST: (enforce-unit_amount278, decimal)
trackAST: (BindLet279, <BindLet279>)
trackAST: (BindLet279_p280, <BindLet279_p280_ai>)
trackAST: (precision_id281, string)
trackAST: (at282, <at282>)
trackAST: (string283, string)
trackAST: (read284, <read284>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens285, table:{marmalade.ledger.token-schema})
trackAST: (precision286, integer)
assocAST: (precision286, <precision286>, integer) => (at282, <at282>, <at282>)
trackAST: (precision287, <precision287>)
assocAST: (at282, <precision286>, integer) => (precision287, <precision287>, <precision287>)
assocAST: (precision287, <precision286>, integer) => (BindLet279_p280, <BindLet279_p280_ai>, <BindLet279_p280_ai>)
trackAST: (enforce288, <enforce288>)
trackAST: (=289, <=289>)
trackAST: (floor290, <floor290>)
trackAST: (string291, string)
assocAST: (enforce288, <enforce288>, <enforce288>) => (BindLet279, <BindLet279>, <BindLet279>)
trackAST: (enforce-unit292, bool)
assocAST: (enforce-unit292, <enforce-unit292>, bool) => (BindLet279, <enforce288>, <enforce288>)
trackAST: (enforce-unit293, <enforce-unit293>)
assocAST: (BindLet279, <enforce-unit292>, bool) => (enforce-unit293, <enforce-unit293>, <enforce-unit293>)
trackAST: (with-read294, <with-read294>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger295, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id296, string)
trackAST: (key_account297, string)
trackAST: (format298, <format298>)
trackAST: (string299, string)
trackAST: (list300, [<ak>])
trackAST: (key301, string)
assocAST: (key301, <key301>, string) => (format298, <format298>, <format298>)
trackAST: (key302, <key302>)
assocAST: (format298, <key301>, string) => (key302, <key302>, <key302>)
trackAST: (BindSchema303, <BindSchema303>)
trackAST: (BindSchema303_old-bal304, <BindSchema303_old-bal304_aa>)
trackAST: (string305, string)
trackAST: (enforce306, <enforce306>)
trackAST: (<=307, <<=307>)
trackAST: (string308, string)
trackAST: (BindLet309, <BindLet309>)
trackAST: (BindLet309_new-bal310, <BindLet309_new-bal310_ab>)
trackAST: (-311, <-311>)
assocAST: (-311, <-311>, <-311>) => (BindLet309_new-bal310, <BindLet309_new-bal310_ab>, <BindLet309_new-bal310_ab>)
trackAST: (update312, <update312>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger313, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id314, string)
trackAST: (key_account315, string)
trackAST: (format316, <format316>)
trackAST: (string317, string)
trackAST: (list318, [<ak>])
trackAST: (key319, string)
assocAST: (key319, <key319>, string) => (format316, <format316>, <format316>)
trackAST: (key320, <key320>)
assocAST: (format316, <key319>, string) => (key320, <key320>, <key320>)
TObject: TyAny
trackAST: (object321, object:*)
TObject: TyAny
trackAST: (object322, object:*)
assocAST: (object322, <object322>, object:*) => (BindLet309, <BindLet309>, <BindLet309>)
assocAST: (BindLet309, <object322>, object:*) => (BindSchema303, <BindSchema303>, <BindSchema303>)
trackAST: (BindSchema303schema323, *)
trackAST: (debit324, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit324, <debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read294, <with-read294>, <with-read294>)
trackAST: (debit325, <debit325>)
assocAST: (with-read294, <debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit325, <debit325>, <debit325>)
assocAST: (debit325, <debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet249_sender250, <BindLet249_sender250_am>, <BindLet249_sender250_am>)
trackAST: (BindLet249_receiver326, <BindLet249_receiver326_an>)
trackAST: (credit_id327, string)
trackAST: (credit_account328, string)
trackAST: (credit_guard329, guard)
trackAST: (credit_amount330, decimal)
trackAST: (enforce-valid-account_account331, string)
trackAST: (enforce332, <enforce332>)
trackAST: (>333, <>333>)
trackAST: (length334, <length334>)
trackAST: (integer335, integer)
trackAST: (string336, string)
trackAST: (enforce-valid-account337, <c>)
assocAST: (enforce332, <enforce332>, <enforce332>) => (enforce-valid-account337, <c>, <c>)
trackAST: (enforce-valid-account338, <enforce-valid-account338>)
assocAST: (enforce332, <enforce332>, <enforce332>) => (enforce-valid-account338, <enforce-valid-account338>, <enforce-valid-account338>)
trackAST: (enforce-unit_id339, string)
trackAST: (enforce-unit_amount340, decimal)
trackAST: (BindLet341, <BindLet341>)
trackAST: (BindLet341_p342, <BindLet341_p342_ai>)
trackAST: (precision_id343, string)
trackAST: (at344, <at344>)
trackAST: (string345, string)
trackAST: (read346, <read346>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens347, table:{marmalade.ledger.token-schema})
trackAST: (precision348, integer)
assocAST: (precision348, <precision348>, integer) => (at344, <at344>, <at344>)
trackAST: (precision349, <precision349>)
assocAST: (at344, <precision348>, integer) => (precision349, <precision349>, <precision349>)
assocAST: (precision349, <precision348>, integer) => (BindLet341_p342, <BindLet341_p342_ai>, <BindLet341_p342_ai>)
trackAST: (enforce350, <enforce350>)
trackAST: (=351, <=351>)
trackAST: (floor352, <floor352>)
trackAST: (string353, string)
assocAST: (enforce350, <enforce350>, <enforce350>) => (BindLet341, <BindLet341>, <BindLet341>)
trackAST: (enforce-unit354, bool)
assocAST: (enforce-unit354, <enforce-unit354>, bool) => (BindLet341, <enforce350>, <enforce350>)
trackAST: (enforce-unit355, <enforce-unit355>)
assocAST: (BindLet341, <enforce-unit354>, bool) => (enforce-unit355, <enforce-unit355>, <enforce-unit355>)
trackAST: (require-capability356, <require-capability356>)
trackAST: (CREDIT_id357, string)
trackAST: (CREDIT_receiver358, string)
trackAST: (bool359, bool)
trackAST: (CREDIT360, <g>)
assocAST: (bool359, <bool359>, bool) => (CREDIT360, <g>, <g>)
trackAST: (CREDIT361, <CREDIT361>)
assocAST: (bool359, <bool359>, bool) => (CREDIT361, <CREDIT361>, <CREDIT361>)
trackAST: (with-default-read362, <with-default-read362>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger363, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id364, string)
trackAST: (key_account365, string)
trackAST: (format366, <format366>)
trackAST: (string367, string)
trackAST: (list368, [<ak>])
trackAST: (key369, string)
assocAST: (key369, <key369>, string) => (format366, <format366>, <format366>)
trackAST: (key370, <key370>)
assocAST: (format366, <key369>, string) => (key370, <key370>, <key370>)
TObject: TyAny
trackAST: (object371, object:*)
trackAST: (decimal372, decimal)
trackAST: (BindSchema373, <BindSchema373>)
trackAST: (BindSchema373_old-bal374, <BindSchema373_old-bal374_ac>)
trackAST: (string375, string)
trackAST: (BindSchema373_retg376, <BindSchema373_retg376_ad>)
trackAST: (string377, string)
trackAST: (enforce378, <enforce378>)
trackAST: (=379, <=379>)
trackAST: (string380, string)
trackAST: (BindLet381, <BindLet381>)
trackAST: (BindLet381_is-new382, <BindLet381_is-new382_ae>)
trackAST: (if383, <if383>)
trackAST: (=384, <=384>)
trackAST: (decimal385, decimal)
trackAST: (enforce-reserved_account386, string)
trackAST: (enforce-reserved_guard387, guard)
trackAST: (BindLet388, <BindLet388>)
trackAST: (BindLet388_r389, <BindLet388_r389_g>)
trackAST: (check-reserved_account390, string)
trackAST: (BindLet391, <BindLet391>)
trackAST: (BindLet391_pfx392, <BindLet391_pfx392_f>)
trackAST: (take393, <take393>)
trackAST: (integer394, integer)
assocAST: (take393, <take393>, <take393>) => (BindLet391_pfx392, <BindLet391_pfx392_f>, <BindLet391_pfx392_f>)
trackAST: (if395, <if395>)
trackAST: (=396, <=396>)
trackAST: (string397, string)
trackAST: (take398, <take398>)
trackAST: (integer399, integer)
trackAST: (take400, <take400>)
trackAST: (integer401, integer)
trackAST: (string402, string)
assocAST: (if395, <if395>, <if395>) => (BindLet391, <BindLet391>, <BindLet391>)
trackAST: (check-reserved403, string)
assocAST: (check-reserved403, <check-reserved403>, string) => (BindLet391, <if395>, <if395>)
trackAST: (check-reserved404, <check-reserved404>)
assocAST: (BindLet391, <check-reserved403>, string) => (check-reserved404, <check-reserved404>, <check-reserved404>)
assocAST: (check-reserved404, <check-reserved403>, string) => (BindLet388_r389, <BindLet388_r389_g>, <BindLet388_r389_g>)
trackAST: (if405, <if405>)
trackAST: (=406, <=406>)
trackAST: (string407, string)
trackAST: (bool408, bool)
trackAST: (if409, <if409>)
trackAST: (=410, <=410>)
trackAST: (string411, string)
trackAST: (enforce412, <enforce412>)
trackAST: (=413, <=413>)
trackAST: (format414, <format414>)
trackAST: (string415, string)
trackAST: (list416, [<h>])
trackAST: (format417, <format417>)
trackAST: (string418, string)
trackAST: (list419, [<i>])
trackAST: (drop420, <drop420>)
trackAST: (integer421, integer)
trackAST: (string422, string)
trackAST: (enforce423, <enforce423>)
trackAST: (bool424, bool)
trackAST: (format425, <format425>)
trackAST: (string426, string)
trackAST: (list427, [<j>])
assocAST: (if405, <if405>, <if405>) => (BindLet388, <BindLet388>, <BindLet388>)
trackAST: (enforce-reserved428, bool)
assocAST: (enforce-reserved428, <enforce-reserved428>, bool) => (BindLet388, <if405>, <if405>)
trackAST: (enforce-reserved429, <enforce-reserved429>)
assocAST: (BindLet388, <enforce-reserved428>, bool) => (enforce-reserved429, <enforce-reserved429>, <enforce-reserved429>)
trackAST: (bool430, bool)
assocAST: (if383, <if383>, <if383>) => (BindLet381_is-new382, <BindLet381_is-new382_ae>, <BindLet381_is-new382_ae>)
trackAST: (BindLet431, <BindLet431>)
trackAST: (BindLet431_new-bal432, <BindLet431_new-bal432_af>)
trackAST: (if433, <if433>)
trackAST: (+434, <+434>)
assocAST: (if433, <if433>, <if433>) => (BindLet431_new-bal432, <BindLet431_new-bal432_af>, <BindLet431_new-bal432_af>)
trackAST: (write435, <write435>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger436, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id437, string)
trackAST: (key_account438, string)
trackAST: (format439, <format439>)
trackAST: (string440, string)
trackAST: (list441, [<ak>])
trackAST: (key442, string)
assocAST: (key442, <key442>, string) => (format439, <format439>, <format439>)
trackAST: (key443, <key443>)
assocAST: (format439, <key442>, string) => (key443, <key443>, <key443>)
TObject: TyAny
trackAST: (object444, object:*)
trackAST: (if445, <if445>)
trackAST: (emit-event446, <emit-event446>)
trackAST: (ACCOUNT_GUARD_id447, string)
trackAST: (ACCOUNT_GUARD_account448, string)
trackAST: (ACCOUNT_GUARD_guard449, guard)
trackAST: (bool450, bool)
trackAST: (ACCOUNT_GUARD451, bool)
assocAST: (bool450, <bool450>, bool) => (ACCOUNT_GUARD451, <ACCOUNT_GUARD451>, bool)
trackAST: (ACCOUNT_GUARD452, <ACCOUNT_GUARD452>)
assocAST: (bool450, <bool450>, bool) => (ACCOUNT_GUARD452, <ACCOUNT_GUARD452>, <ACCOUNT_GUARD452>)
trackAST: (bool453, bool)
TObject: TyAny
trackAST: (object454, object:*)
trackAST: (if455, <if455>)
trackAST: (decimal456, decimal)
assocAST: (object454, <object454>, object:*) => (BindLet431, <BindLet431>, <BindLet431>)
assocAST: (BindLet431, <object454>, object:*) => (BindLet381, <BindLet381>, <BindLet381>)
assocAST: (BindLet381, <object454>, object:*) => (BindSchema373, <BindSchema373>, <BindSchema373>)
trackAST: (BindSchema373schema457, *)
trackAST: (credit458, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit458, <credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read362, <with-default-read362>, <with-default-read362>)
trackAST: (credit459, <credit459>)
trackAST: (format460, <format460>)
trackAST: (string461, string)
trackAST: (list462, [<at>])
trackAST: (pact-id463, <pact-id463>)
trackAST: (sale-account464, string)
assocAST: (sale-account464, <sale-account464>, string) => (format460, <format460>, <format460>)
trackAST: (sale-account465, <sale-account465>)
assocAST: (format460, <sale-account464>, string) => (sale-account465, <sale-account465>, <sale-account465>)
trackAST: (create-pact-guard466, <create-pact-guard466>)
trackAST: (string467, string)
assocAST: (with-default-read362, <credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit459, <credit459>, <credit459>)
assocAST: (credit459, <credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet249_receiver326, <BindLet249_receiver326_an>, <BindLet249_receiver326_an>)
trackAST: (emit-event468, <emit-event468>)
trackAST: (TRANSFER_id469, string)
trackAST: (TRANSFER_sender470, string)
trackAST: (TRANSFER_receiver471, string)
trackAST: (TRANSFER_amount472, decimal)
trackAST: (enforce-unit_id473, string)
trackAST: (enforce-unit_amount474, decimal)
trackAST: (BindLet475, <BindLet475>)
trackAST: (BindLet475_p476, <BindLet475_p476_ai>)
trackAST: (precision_id477, string)
trackAST: (at478, <at478>)
trackAST: (string479, string)
trackAST: (read480, <read480>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens481, table:{marmalade.ledger.token-schema})
trackAST: (precision482, integer)
assocAST: (precision482, <precision482>, integer) => (at478, <at478>, <at478>)
trackAST: (precision483, <precision483>)
assocAST: (at478, <precision482>, integer) => (precision483, <precision483>, <precision483>)
assocAST: (precision483, <precision482>, integer) => (BindLet475_p476, <BindLet475_p476_ai>, <BindLet475_p476_ai>)
trackAST: (enforce484, <enforce484>)
trackAST: (=485, <=485>)
trackAST: (floor486, <floor486>)
trackAST: (string487, string)
assocAST: (enforce484, <enforce484>, <enforce484>) => (BindLet475, <BindLet475>, <BindLet475>)
trackAST: (enforce-unit488, bool)
assocAST: (enforce-unit488, <enforce-unit488>, bool) => (BindLet475, <enforce484>, <enforce484>)
trackAST: (enforce-unit489, <enforce-unit489>)
assocAST: (BindLet475, <enforce-unit488>, bool) => (enforce-unit489, <enforce-unit489>, <enforce-unit489>)
trackAST: (enforce490, <enforce490>)
trackAST: (>491, <>491>)
trackAST: (decimal492, decimal)
trackAST: (string493, string)
trackAST: (compose-capability494, <compose-capability494>)
trackAST: (DEBIT_id495, string)
trackAST: (DEBIT_sender496, string)
trackAST: (enforce-guard497, <enforce-guard497>)
trackAST: (account-guard_id498, string)
trackAST: (account-guard_account499, string)
trackAST: (with-read500, <with-read500>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger501, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id502, string)
trackAST: (key_account503, string)
trackAST: (format504, <format504>)
trackAST: (string505, string)
trackAST: (list506, [<ak>])
trackAST: (key507, string)
assocAST: (key507, <key507>, string) => (format504, <format504>, <format504>)
trackAST: (key508, <key508>)
assocAST: (format504, <key507>, string) => (key508, <key508>, <key508>)
trackAST: (BindSchema509, <BindSchema509>)
trackAST: (BindSchema509_guard510, <BindSchema509_guard510_f>)
trackAST: (string511, string)
assocAST: (BindSchema509_guard510, <BindSchema509_guard510_f>, <BindSchema509_guard510_f>) => (BindSchema509, <BindSchema509>, <BindSchema509>)
trackAST: (BindSchema509schema512, *)
trackAST: (account-guard513, guard)
assocAST: (account-guard513, <account-guard513>, guard) => (with-read500, <with-read500>, <with-read500>)
trackAST: (account-guard514, <account-guard514>)
assocAST: (with-read500, <account-guard513>, guard) => (account-guard514, <account-guard514>, <account-guard514>)
trackAST: (DEBIT515, <e>)
assocAST: (enforce-guard497, <enforce-guard497>, <enforce-guard497>) => (DEBIT515, <e>, <e>)
trackAST: (DEBIT516, <DEBIT516>)
assocAST: (enforce-guard497, <enforce-guard497>, <enforce-guard497>) => (DEBIT516, <DEBIT516>, <DEBIT516>)
trackAST: (compose-capability517, <compose-capability517>)
trackAST: (CREDIT_id518, string)
trackAST: (CREDIT_receiver519, string)
trackAST: (bool520, bool)
trackAST: (CREDIT521, <g>)
assocAST: (bool520, <bool520>, bool) => (CREDIT521, <g>, <g>)
trackAST: (CREDIT522, <CREDIT522>)
assocAST: (bool520, <bool520>, bool) => (CREDIT522, <CREDIT522>, <CREDIT522>)
trackAST: (TRANSFER523, bool)
assocAST: (TRANSFER523, <TRANSFER523>, bool) => (compose-capability517, <compose-capability517>, <compose-capability517>)
trackAST: (TRANSFER524, <TRANSFER524>)
trackAST: (format525, <format525>)
trackAST: (string526, string)
trackAST: (list527, [<at>])
trackAST: (pact-id528, <pact-id528>)
trackAST: (sale-account529, string)
assocAST: (sale-account529, <sale-account529>, string) => (format525, <format525>, <format525>)
trackAST: (sale-account530, <sale-account530>)
assocAST: (format525, <sale-account529>, string) => (sale-account530, <sale-account530>, <sale-account530>)
assocAST: (compose-capability517, <TRANSFER523>, bool) => (TRANSFER524, <TRANSFER524>, <TRANSFER524>)
trackAST: (emit-event531, <emit-event531>)
trackAST: (RECONCILE_token-id532, string)
trackAST: (RECONCILE_amount533, decimal)
trackAST: (RECONCILE_sender534, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver535, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool536, bool)
trackAST: (RECONCILE537, bool)
assocAST: (bool536, <bool536>, bool) => (RECONCILE537, <RECONCILE537>, bool)
trackAST: (RECONCILE538, <RECONCILE538>)
assocAST: (bool536, <bool536>, bool) => (RECONCILE538, <RECONCILE538>, <RECONCILE538>)
assocAST: (emit-event531, <emit-event531>, <emit-event531>) => (BindLet249, <BindLet249>, <BindLet249>)
trackAST: (offer539, bool)
assocAST: (offer539, <offer539>, bool) => (BindLet249, <emit-event531>, <emit-event531>)
--------------------------------
 Substitute defuns:

assocTy: (<bool214>, bool) <=> bool
assocTy: (<bool214>, bool) <= bool
trackAST: (inlinedCallArgs540, <inlinedCallArgs540>)
assocTy: (<inlinedCallArgs540>, <inlinedCallArgs540>) <=> bool
assocTy: (<inlinedCallArgs540>, <inlinedCallArgs540>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs540> <= bool
trackAST: (inlinedCallArgs540_sale-id541, string)
assocAST: (inlinedCallArgs540_sale-id541, <inlinedCallArgs540_sale-id541>, string) => (pact-id217, <pact-id217>, <pact-id217>)
assocTy: (<enforce-offer245>, bool) <=> bool
assocTy: (<enforce-offer245>, bool) <= bool
trackAST: (inlinedCallArgs542, <inlinedCallArgs542>)
assocTy: (<inlinedCallArgs542>, <inlinedCallArgs542>) <=> bool
assocTy: (<inlinedCallArgs542>, <inlinedCallArgs542>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs542> <= bool
trackAST: (inlinedCallArgs542_token543, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs542_token543, <inlinedCallArgs542_token543>, object:{kip.token-policy-v1.token-info}) => (BindSchema236_token239, <BindSchema236_token239_al>, <BindSchema236_token239_al>)
trackAST: (inlinedCallArgs542_seller544, string)
assocAST: (offer_seller210, <offer_seller210>, string) => (inlinedCallArgs542_seller544, <inlinedCallArgs542_seller544>, string)
trackAST: (inlinedCallArgs542_amount545, decimal)
assocAST: (offer_amount211, <offer_amount211>, decimal) => (inlinedCallArgs542_amount545, <inlinedCallArgs542_amount545>, decimal)
trackAST: (inlinedCallArgs542_sale-id546, string)
assocAST: (inlinedCallArgs542_sale-id546, <inlinedCallArgs542_sale-id546>, string) => (pact-id247, <pact-id247>, <pact-id247>)
assocTy: (<get-policy-info234>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info234>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs547, <inlinedCallArgs547>)
assocTy: (<inlinedCallArgs547>, <inlinedCallArgs547>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs547>, <inlinedCallArgs547>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs547> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs547_id548, string)
assocAST: (offer_id209, <offer_id209>, string) => (inlinedCallArgs547_id548, <inlinedCallArgs547_id548>, string)
assocAST: (inlinedCallArgs547_id548, <offer_id209>, string) => (get-policy-info_id219, <get-policy-info_id219>, string)
assocAST: (inlinedCallArgs547_id548, <offer_id209>, string) => (get-policy-info_id219, <offer_id209>, string)
assocTy: (<key267>, string) <=> string
assocTy: (<key267>, string) <= string
trackAST: (inlinedCallArgs549, <inlinedCallArgs549>)
assocTy: (<inlinedCallArgs549>, <inlinedCallArgs549>) <=> string
assocTy: (<inlinedCallArgs549>, <inlinedCallArgs549>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs549> <= string
trackAST: (inlinedCallArgs549_id550, string)
assocAST: (account-guard_id258, <account-guard_id258>, string) => (inlinedCallArgs549_id550, <inlinedCallArgs549_id550>, string)
trackAST: (inlinedCallArgs549_account551, string)
assocAST: (account-guard_account259, <account-guard_account259>, string) => (inlinedCallArgs549_account551, <inlinedCallArgs549_account551>, string)
assocAST: (inlinedCallArgs549_id550, <account-guard_id258>, string) => (key_id262, <key_id262>, string)
assocAST: (inlinedCallArgs549_account551, <account-guard_account259>, string) => (key_account263, <key_account263>, string)
assocTy: (<account-guard273>, guard) <=> guard
assocTy: (<account-guard273>, guard) <= guard
trackAST: (inlinedCallArgs552, <inlinedCallArgs552>)
assocTy: (<inlinedCallArgs552>, <inlinedCallArgs552>) <=> guard
assocTy: (<inlinedCallArgs552>, <inlinedCallArgs552>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs552> <= guard
trackAST: (inlinedCallArgs552_id553, string)
assocAST: (DEBIT_id255, <DEBIT_id255>, string) => (inlinedCallArgs552_id553, <inlinedCallArgs552_id553>, string)
trackAST: (inlinedCallArgs552_account554, string)
assocAST: (DEBIT_sender256, <DEBIT_sender256>, string) => (inlinedCallArgs552_account554, <inlinedCallArgs552_account554>, string)
assocAST: (inlinedCallArgs552_id553, <DEBIT_id255>, string) => (account-guard_id258, <account-guard_id258>, string)
assocAST: (inlinedCallArgs552_id553, <DEBIT_id255>, string) => (account-guard_id258, <DEBIT_id255>, string)
assocAST: (inlinedCallArgs552_account554, <DEBIT_sender256>, string) => (account-guard_account259, <account-guard_account259>, string)
assocAST: (inlinedCallArgs552_account554, <DEBIT_sender256>, string) => (account-guard_account259, <DEBIT_sender256>, string)
assocTy: (<enforce-guard257>, <enforce-guard257>) <=> <DEBIT276_e>
assocTy: (<enforce-guard257>, <enforce-guard257>) <= <DEBIT276_e>
assocTy: tracking/updating type variable <enforce-guard257> <= <DEBIT276_e>
trackAST: (inlinedCallArgs555, <inlinedCallArgs555>)
assocTy: (<inlinedCallArgs555>, <inlinedCallArgs555>) <=> <DEBIT276_e>
assocTy: (<inlinedCallArgs555>, <inlinedCallArgs555>) <= <DEBIT276_e>
assocTy: tracking/updating type variable <inlinedCallArgs555> <= <DEBIT276_e>
trackAST: (inlinedCallArgs555_id556, string)
assocAST: (debit_id251, <debit_id251>, string) => (inlinedCallArgs555_id556, <inlinedCallArgs555_id556>, string)
trackAST: (inlinedCallArgs555_sender557, string)
assocAST: (debit_account252, <debit_account252>, string) => (inlinedCallArgs555_sender557, <inlinedCallArgs555_sender557>, string)
assocAST: (inlinedCallArgs555_id556, <debit_id251>, string) => (DEBIT_id255, <DEBIT_id255>, string)
assocAST: (inlinedCallArgs555_id556, <debit_id251>, string) => (DEBIT_id255, <debit_id251>, string)
assocAST: (inlinedCallArgs555_sender557, <debit_account252>, string) => (DEBIT_sender256, <DEBIT_sender256>, string)
assocAST: (inlinedCallArgs555_sender557, <debit_account252>, string) => (DEBIT_sender256, <debit_account252>, string)
assocTy: (<precision286>, integer) <=> integer
assocTy: (<precision286>, integer) <= integer
trackAST: (inlinedCallArgs558, <inlinedCallArgs558>)
assocTy: (<inlinedCallArgs558>, <inlinedCallArgs558>) <=> integer
assocTy: (<inlinedCallArgs558>, <inlinedCallArgs558>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs558> <= integer
trackAST: (inlinedCallArgs558_id559, string)
assocAST: (enforce-unit_id277, <enforce-unit_id277>, string) => (inlinedCallArgs558_id559, <inlinedCallArgs558_id559>, string)
assocAST: (inlinedCallArgs558_id559, <enforce-unit_id277>, string) => (precision_id281, <precision_id281>, string)
assocTy: (<enforce-unit292>, bool) <=> bool
assocTy: (<enforce-unit292>, bool) <= bool
trackAST: (inlinedCallArgs560, <inlinedCallArgs560>)
assocTy: (<inlinedCallArgs560>, <inlinedCallArgs560>) <=> bool
assocTy: (<inlinedCallArgs560>, <inlinedCallArgs560>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs560> <= bool
trackAST: (inlinedCallArgs560_id561, string)
assocAST: (debit_id251, <debit_id251>, string) => (inlinedCallArgs560_id561, <inlinedCallArgs560_id561>, string)
trackAST: (inlinedCallArgs560_amount562, decimal)
assocAST: (debit_amount253, <debit_amount253>, decimal) => (inlinedCallArgs560_amount562, <inlinedCallArgs560_amount562>, decimal)
assocAST: (inlinedCallArgs560_id561, <debit_id251>, string) => (enforce-unit_id277, <enforce-unit_id277>, string)
assocAST: (inlinedCallArgs560_id561, <debit_id251>, string) => (enforce-unit_id277, <debit_id251>, string)
assocAST: (inlinedCallArgs560_amount562, <debit_amount253>, decimal) => (enforce-unit_amount278, <enforce-unit_amount278>, decimal)
assocAST: (inlinedCallArgs560_amount562, <debit_amount253>, decimal) => (enforce-unit_amount278, <debit_amount253>, decimal)
assocTy: (<key319>, string) <=> string
assocTy: (<key319>, string) <= string
trackAST: (inlinedCallArgs563, <inlinedCallArgs563>)
assocTy: (<inlinedCallArgs563>, <inlinedCallArgs563>) <=> string
assocTy: (<inlinedCallArgs563>, <inlinedCallArgs563>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs563> <= string
trackAST: (inlinedCallArgs563_id564, string)
assocAST: (debit_id251, <debit_id251>, string) => (inlinedCallArgs563_id564, <inlinedCallArgs563_id564>, string)
trackAST: (inlinedCallArgs563_account565, string)
assocAST: (debit_account252, <debit_account252>, string) => (inlinedCallArgs563_account565, <inlinedCallArgs563_account565>, string)
assocAST: (inlinedCallArgs563_id564, <debit_id251>, string) => (key_id314, <key_id314>, string)
assocAST: (inlinedCallArgs563_account565, <debit_account252>, string) => (key_account315, <key_account315>, string)
assocTy: (<key301>, string) <=> string
assocTy: (<key301>, string) <= string
trackAST: (inlinedCallArgs566, <inlinedCallArgs566>)
assocTy: (<inlinedCallArgs566>, <inlinedCallArgs566>) <=> string
assocTy: (<inlinedCallArgs566>, <inlinedCallArgs566>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs566> <= string
trackAST: (inlinedCallArgs566_id567, string)
assocAST: (debit_id251, <debit_id251>, string) => (inlinedCallArgs566_id567, <inlinedCallArgs566_id567>, string)
trackAST: (inlinedCallArgs566_account568, string)
assocAST: (debit_account252, <debit_account252>, string) => (inlinedCallArgs566_account568, <inlinedCallArgs566_account568>, string)
assocAST: (inlinedCallArgs566_id567, <debit_id251>, string) => (key_id296, <key_id296>, string)
assocAST: (inlinedCallArgs566_account568, <debit_account252>, string) => (key_account297, <key_account297>, string)
assocTy: (<debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs569, <inlinedCallArgs569>)
assocTy: (<inlinedCallArgs569>, <inlinedCallArgs569>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs569>, <inlinedCallArgs569>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs569> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs569_id570, string)
assocAST: (offer_id209, <offer_id209>, string) => (inlinedCallArgs569_id570, <inlinedCallArgs569_id570>, string)
trackAST: (inlinedCallArgs569_account571, string)
assocAST: (offer_seller210, <offer_seller210>, string) => (inlinedCallArgs569_account571, <inlinedCallArgs569_account571>, string)
trackAST: (inlinedCallArgs569_amount572, decimal)
assocAST: (offer_amount211, <offer_amount211>, decimal) => (inlinedCallArgs569_amount572, <inlinedCallArgs569_amount572>, decimal)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <debit_id251>, string)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <debit_account252>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <offer_seller210>, string)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_amount572, <offer_amount211>, decimal) => (debit_amount253, <debit_amount253>, decimal)
assocAST: (inlinedCallArgs569_amount572, <offer_amount211>, decimal) => (debit_amount253, <offer_amount211>, decimal)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_id570, <offer_id209>, string) => (debit_id251, <offer_id209>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <offer_seller210>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <offer_seller210>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <offer_seller210>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <offer_seller210>, string)
assocAST: (inlinedCallArgs569_account571, <offer_seller210>, string) => (debit_account252, <offer_seller210>, string)
assocAST: (inlinedCallArgs569_amount572, <offer_amount211>, decimal) => (debit_amount253, <offer_amount211>, decimal)
assocAST: (inlinedCallArgs569_amount572, <offer_amount211>, decimal) => (debit_amount253, <offer_amount211>, decimal)
assocTy: (<enforce332>, <enforce332>) <=> <enforce-valid-account338_c>
assocTy: (<enforce332>, <enforce332>) <= <enforce-valid-account338_c>
assocTy: tracking/updating type variable <enforce332> <= <enforce-valid-account338_c>
trackAST: (inlinedCallArgs573, <inlinedCallArgs573>)
assocTy: (<inlinedCallArgs573>, <inlinedCallArgs573>) <=> <enforce-valid-account338_c>
assocTy: (<inlinedCallArgs573>, <inlinedCallArgs573>) <= <enforce-valid-account338_c>
assocTy: tracking/updating type variable <inlinedCallArgs573> <= <enforce-valid-account338_c>
trackAST: (inlinedCallArgs573_account574, string)
assocAST: (credit_account328, <credit_account328>, string) => (inlinedCallArgs573_account574, <inlinedCallArgs573_account574>, string)
assocAST: (inlinedCallArgs573_account574, <credit_account328>, string) => (enforce-valid-account_account331, <enforce-valid-account_account331>, string)
assocTy: (<precision348>, integer) <=> integer
assocTy: (<precision348>, integer) <= integer
trackAST: (inlinedCallArgs575, <inlinedCallArgs575>)
assocTy: (<inlinedCallArgs575>, <inlinedCallArgs575>) <=> integer
assocTy: (<inlinedCallArgs575>, <inlinedCallArgs575>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs575> <= integer
trackAST: (inlinedCallArgs575_id576, string)
assocAST: (enforce-unit_id339, <enforce-unit_id339>, string) => (inlinedCallArgs575_id576, <inlinedCallArgs575_id576>, string)
assocAST: (inlinedCallArgs575_id576, <enforce-unit_id339>, string) => (precision_id343, <precision_id343>, string)
assocTy: (<enforce-unit354>, bool) <=> bool
assocTy: (<enforce-unit354>, bool) <= bool
trackAST: (inlinedCallArgs577, <inlinedCallArgs577>)
assocTy: (<inlinedCallArgs577>, <inlinedCallArgs577>) <=> bool
assocTy: (<inlinedCallArgs577>, <inlinedCallArgs577>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs577> <= bool
trackAST: (inlinedCallArgs577_id578, string)
assocAST: (credit_id327, <credit_id327>, string) => (inlinedCallArgs577_id578, <inlinedCallArgs577_id578>, string)
trackAST: (inlinedCallArgs577_amount579, decimal)
assocAST: (credit_amount330, <credit_amount330>, decimal) => (inlinedCallArgs577_amount579, <inlinedCallArgs577_amount579>, decimal)
assocAST: (inlinedCallArgs577_id578, <credit_id327>, string) => (enforce-unit_id339, <enforce-unit_id339>, string)
assocAST: (inlinedCallArgs577_id578, <credit_id327>, string) => (enforce-unit_id339, <credit_id327>, string)
assocAST: (inlinedCallArgs577_amount579, <credit_amount330>, decimal) => (enforce-unit_amount340, <enforce-unit_amount340>, decimal)
assocAST: (inlinedCallArgs577_amount579, <credit_amount330>, decimal) => (enforce-unit_amount340, <credit_amount330>, decimal)
assocTy: (<bool359>, bool) <=> <CREDIT361_g>
assocTy: bool => <CREDIT361_g>
trackAST: (inlinedCallArgs580, <inlinedCallArgs580>)
assocTy: (<inlinedCallArgs580>, <inlinedCallArgs580>) <=> <CREDIT361_g>
assocTy: (<inlinedCallArgs580>, <inlinedCallArgs580>) <= <CREDIT361_g>
assocTy: tracking/updating type variable <inlinedCallArgs580> <= <CREDIT361_g>
trackAST: (inlinedCallArgs580_id581, string)
assocAST: (credit_id327, <credit_id327>, string) => (inlinedCallArgs580_id581, <inlinedCallArgs580_id581>, string)
trackAST: (inlinedCallArgs580_receiver582, string)
assocAST: (credit_account328, <credit_account328>, string) => (inlinedCallArgs580_receiver582, <inlinedCallArgs580_receiver582>, string)
assocTy: (<check-reserved403>, string) <=> string
assocTy: (<check-reserved403>, string) <= string
trackAST: (inlinedCallArgs583, <inlinedCallArgs583>)
assocTy: (<inlinedCallArgs583>, <inlinedCallArgs583>) <=> string
assocTy: (<inlinedCallArgs583>, <inlinedCallArgs583>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs583> <= string
trackAST: (inlinedCallArgs583_account584, string)
assocAST: (enforce-reserved_account386, <enforce-reserved_account386>, string) => (inlinedCallArgs583_account584, <inlinedCallArgs583_account584>, string)
assocAST: (inlinedCallArgs583_account584, <enforce-reserved_account386>, string) => (check-reserved_account390, <check-reserved_account390>, string)
assocTy: (<enforce-reserved428>, bool) <=> bool
assocTy: (<enforce-reserved428>, bool) <= bool
trackAST: (inlinedCallArgs585, <inlinedCallArgs585>)
assocTy: (<inlinedCallArgs585>, <inlinedCallArgs585>) <=> bool
assocTy: (<inlinedCallArgs585>, <inlinedCallArgs585>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs585> <= bool
trackAST: (inlinedCallArgs585_account586, string)
assocAST: (credit_account328, <credit_account328>, string) => (inlinedCallArgs585_account586, <inlinedCallArgs585_account586>, string)
trackAST: (inlinedCallArgs585_guard587, guard)
assocAST: (credit_guard329, <credit_guard329>, guard) => (inlinedCallArgs585_guard587, <inlinedCallArgs585_guard587>, guard)
assocAST: (inlinedCallArgs585_account586, <credit_account328>, string) => (enforce-reserved_account386, <enforce-reserved_account386>, string)
assocAST: (inlinedCallArgs585_account586, <credit_account328>, string) => (enforce-reserved_account386, <credit_account328>, string)
assocAST: (inlinedCallArgs585_account586, <credit_account328>, string) => (enforce-reserved_account386, <credit_account328>, string)
assocAST: (inlinedCallArgs585_guard587, <credit_guard329>, guard) => (enforce-reserved_guard387, <enforce-reserved_guard387>, guard)
assocTy: (<key442>, string) <=> string
assocTy: (<key442>, string) <= string
trackAST: (inlinedCallArgs588, <inlinedCallArgs588>)
assocTy: (<inlinedCallArgs588>, <inlinedCallArgs588>) <=> string
assocTy: (<inlinedCallArgs588>, <inlinedCallArgs588>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs588> <= string
trackAST: (inlinedCallArgs588_id589, string)
assocAST: (credit_id327, <credit_id327>, string) => (inlinedCallArgs588_id589, <inlinedCallArgs588_id589>, string)
trackAST: (inlinedCallArgs588_account590, string)
assocAST: (credit_account328, <credit_account328>, string) => (inlinedCallArgs588_account590, <inlinedCallArgs588_account590>, string)
assocAST: (inlinedCallArgs588_id589, <credit_id327>, string) => (key_id437, <key_id437>, string)
assocAST: (inlinedCallArgs588_account590, <credit_account328>, string) => (key_account438, <key_account438>, string)
assocTy: (<bool450>, bool) <=> bool
assocTy: (<bool450>, bool) <= bool
trackAST: (inlinedCallArgs591, <inlinedCallArgs591>)
assocTy: (<inlinedCallArgs591>, <inlinedCallArgs591>) <=> bool
assocTy: (<inlinedCallArgs591>, <inlinedCallArgs591>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs591> <= bool
trackAST: (inlinedCallArgs591_id592, string)
assocAST: (credit_id327, <credit_id327>, string) => (inlinedCallArgs591_id592, <inlinedCallArgs591_id592>, string)
trackAST: (inlinedCallArgs591_account593, string)
assocAST: (credit_account328, <credit_account328>, string) => (inlinedCallArgs591_account593, <inlinedCallArgs591_account593>, string)
trackAST: (inlinedCallArgs591_guard594, guard)
assocAST: (inlinedCallArgs591_guard594, <inlinedCallArgs591_guard594>, guard) => (BindSchema373_retg376, <BindSchema373_retg376_ad>, <BindSchema373_retg376_ad>)
assocTy: (<key369>, string) <=> string
assocTy: (<key369>, string) <= string
trackAST: (inlinedCallArgs595, <inlinedCallArgs595>)
assocTy: (<inlinedCallArgs595>, <inlinedCallArgs595>) <=> string
assocTy: (<inlinedCallArgs595>, <inlinedCallArgs595>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs595> <= string
trackAST: (inlinedCallArgs595_id596, string)
assocAST: (credit_id327, <credit_id327>, string) => (inlinedCallArgs595_id596, <inlinedCallArgs595_id596>, string)
trackAST: (inlinedCallArgs595_account597, string)
assocAST: (credit_account328, <credit_account328>, string) => (inlinedCallArgs595_account597, <inlinedCallArgs595_account597>, string)
assocAST: (inlinedCallArgs595_id596, <credit_id327>, string) => (key_id364, <key_id364>, string)
assocAST: (inlinedCallArgs595_account597, <credit_account328>, string) => (key_account365, <key_account365>, string)
assocTy: (<sale-account464>, string) <=> string
assocTy: (<sale-account464>, string) <= string
trackAST: (inlinedCallArgs598, <inlinedCallArgs598>)
assocTy: (<inlinedCallArgs598>, <inlinedCallArgs598>) <=> string
assocTy: (<inlinedCallArgs598>, <inlinedCallArgs598>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs598> <= string
assocTy: (<credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs599, <inlinedCallArgs599>)
assocTy: (<inlinedCallArgs599>, <inlinedCallArgs599>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs599>, <inlinedCallArgs599>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs599> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs599_id600, string)
assocAST: (offer_id209, <offer_id209>, string) => (inlinedCallArgs599_id600, <inlinedCallArgs599_id600>, string)
trackAST: (inlinedCallArgs599_account601, string)
assocAST: (sale-account465, <sale-account464>, string) => (inlinedCallArgs599_account601, <inlinedCallArgs599_account601>, string)
trackAST: (inlinedCallArgs599_guard602, guard)
assocAST: (inlinedCallArgs599_guard602, <inlinedCallArgs599_guard602>, guard) => (create-pact-guard466, <create-pact-guard466>, <create-pact-guard466>)
trackAST: (inlinedCallArgs599_amount603, decimal)
assocAST: (offer_amount211, <offer_amount211>, decimal) => (inlinedCallArgs599_amount603, <inlinedCallArgs599_amount603>, decimal)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <credit_account328>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <credit_id327>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_amount603, <offer_amount211>, decimal) => (credit_amount330, <credit_amount330>, decimal)
assocAST: (inlinedCallArgs599_amount603, <offer_amount211>, decimal) => (credit_amount330, <offer_amount211>, decimal)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_id600, <offer_id209>, string) => (credit_id327, <offer_id209>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_account601, <sale-account464>, string) => (credit_account328, <sale-account464>, string)
assocAST: (inlinedCallArgs599_guard602, <inlinedCallArgs599_guard602>, guard) => (credit_guard329, <credit_guard329>, guard)
assocAST: (inlinedCallArgs599_guard602, <inlinedCallArgs599_guard602>, guard) => (credit_guard329, <inlinedCallArgs599_guard602>, guard)
assocAST: (inlinedCallArgs599_guard602, <inlinedCallArgs599_guard602>, guard) => (credit_guard329, <inlinedCallArgs599_guard602>, guard)
assocAST: (inlinedCallArgs599_guard602, <inlinedCallArgs599_guard602>, guard) => (credit_guard329, <inlinedCallArgs599_guard602>, guard)
assocAST: (inlinedCallArgs599_amount603, <offer_amount211>, decimal) => (credit_amount330, <offer_amount211>, decimal)
assocAST: (inlinedCallArgs599_amount603, <offer_amount211>, decimal) => (credit_amount330, <offer_amount211>, decimal)
assocTy: (<precision482>, integer) <=> integer
assocTy: (<precision482>, integer) <= integer
trackAST: (inlinedCallArgs604, <inlinedCallArgs604>)
assocTy: (<inlinedCallArgs604>, <inlinedCallArgs604>) <=> integer
assocTy: (<inlinedCallArgs604>, <inlinedCallArgs604>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs604> <= integer
trackAST: (inlinedCallArgs604_id605, string)
assocAST: (enforce-unit_id473, <enforce-unit_id473>, string) => (inlinedCallArgs604_id605, <inlinedCallArgs604_id605>, string)
assocAST: (inlinedCallArgs604_id605, <enforce-unit_id473>, string) => (precision_id477, <precision_id477>, string)
assocTy: (<enforce-unit488>, bool) <=> bool
assocTy: (<enforce-unit488>, bool) <= bool
trackAST: (inlinedCallArgs606, <inlinedCallArgs606>)
assocTy: (<inlinedCallArgs606>, <inlinedCallArgs606>) <=> bool
assocTy: (<inlinedCallArgs606>, <inlinedCallArgs606>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs606> <= bool
trackAST: (inlinedCallArgs606_id607, string)
assocAST: (TRANSFER_id469, <TRANSFER_id469>, string) => (inlinedCallArgs606_id607, <inlinedCallArgs606_id607>, string)
trackAST: (inlinedCallArgs606_amount608, decimal)
assocAST: (TRANSFER_amount472, <TRANSFER_amount472>, decimal) => (inlinedCallArgs606_amount608, <inlinedCallArgs606_amount608>, decimal)
assocAST: (inlinedCallArgs606_id607, <TRANSFER_id469>, string) => (enforce-unit_id473, <enforce-unit_id473>, string)
assocAST: (inlinedCallArgs606_id607, <TRANSFER_id469>, string) => (enforce-unit_id473, <TRANSFER_id469>, string)
assocAST: (inlinedCallArgs606_amount608, <TRANSFER_amount472>, decimal) => (enforce-unit_amount474, <enforce-unit_amount474>, decimal)
assocAST: (inlinedCallArgs606_amount608, <TRANSFER_amount472>, decimal) => (enforce-unit_amount474, <TRANSFER_amount472>, decimal)
assocTy: (<key507>, string) <=> string
assocTy: (<key507>, string) <= string
trackAST: (inlinedCallArgs609, <inlinedCallArgs609>)
assocTy: (<inlinedCallArgs609>, <inlinedCallArgs609>) <=> string
assocTy: (<inlinedCallArgs609>, <inlinedCallArgs609>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs609> <= string
trackAST: (inlinedCallArgs609_id610, string)
assocAST: (account-guard_id498, <account-guard_id498>, string) => (inlinedCallArgs609_id610, <inlinedCallArgs609_id610>, string)
trackAST: (inlinedCallArgs609_account611, string)
assocAST: (account-guard_account499, <account-guard_account499>, string) => (inlinedCallArgs609_account611, <inlinedCallArgs609_account611>, string)
assocAST: (inlinedCallArgs609_id610, <account-guard_id498>, string) => (key_id502, <key_id502>, string)
assocAST: (inlinedCallArgs609_account611, <account-guard_account499>, string) => (key_account503, <key_account503>, string)
assocTy: (<account-guard513>, guard) <=> guard
assocTy: (<account-guard513>, guard) <= guard
trackAST: (inlinedCallArgs612, <inlinedCallArgs612>)
assocTy: (<inlinedCallArgs612>, <inlinedCallArgs612>) <=> guard
assocTy: (<inlinedCallArgs612>, <inlinedCallArgs612>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs612> <= guard
trackAST: (inlinedCallArgs612_id613, string)
assocAST: (DEBIT_id495, <DEBIT_id495>, string) => (inlinedCallArgs612_id613, <inlinedCallArgs612_id613>, string)
trackAST: (inlinedCallArgs612_account614, string)
assocAST: (DEBIT_sender496, <DEBIT_sender496>, string) => (inlinedCallArgs612_account614, <inlinedCallArgs612_account614>, string)
assocAST: (inlinedCallArgs612_id613, <DEBIT_id495>, string) => (account-guard_id498, <account-guard_id498>, string)
assocAST: (inlinedCallArgs612_id613, <DEBIT_id495>, string) => (account-guard_id498, <DEBIT_id495>, string)
assocAST: (inlinedCallArgs612_account614, <DEBIT_sender496>, string) => (account-guard_account499, <account-guard_account499>, string)
assocAST: (inlinedCallArgs612_account614, <DEBIT_sender496>, string) => (account-guard_account499, <DEBIT_sender496>, string)
assocTy: (<enforce-guard497>, <enforce-guard497>) <=> <DEBIT516_e>
assocTy: (<enforce-guard497>, <enforce-guard497>) <= <DEBIT516_e>
assocTy: tracking/updating type variable <enforce-guard497> <= <DEBIT516_e>
trackAST: (inlinedCallArgs615, <inlinedCallArgs615>)
assocTy: (<inlinedCallArgs615>, <inlinedCallArgs615>) <=> <DEBIT516_e>
assocTy: (<inlinedCallArgs615>, <inlinedCallArgs615>) <= <DEBIT516_e>
assocTy: tracking/updating type variable <inlinedCallArgs615> <= <DEBIT516_e>
trackAST: (inlinedCallArgs615_id616, string)
assocAST: (TRANSFER_id469, <TRANSFER_id469>, string) => (inlinedCallArgs615_id616, <inlinedCallArgs615_id616>, string)
trackAST: (inlinedCallArgs615_sender617, string)
assocAST: (TRANSFER_sender470, <TRANSFER_sender470>, string) => (inlinedCallArgs615_sender617, <inlinedCallArgs615_sender617>, string)
assocAST: (inlinedCallArgs615_id616, <TRANSFER_id469>, string) => (DEBIT_id495, <DEBIT_id495>, string)
assocAST: (inlinedCallArgs615_id616, <TRANSFER_id469>, string) => (DEBIT_id495, <TRANSFER_id469>, string)
assocAST: (inlinedCallArgs615_sender617, <TRANSFER_sender470>, string) => (DEBIT_sender496, <DEBIT_sender496>, string)
assocAST: (inlinedCallArgs615_sender617, <TRANSFER_sender470>, string) => (DEBIT_sender496, <TRANSFER_sender470>, string)
assocTy: (<bool520>, bool) <=> <CREDIT522_g>
assocTy: bool => <CREDIT522_g>
trackAST: (inlinedCallArgs618, <inlinedCallArgs618>)
assocTy: (<inlinedCallArgs618>, <inlinedCallArgs618>) <=> <CREDIT522_g>
assocTy: (<inlinedCallArgs618>, <inlinedCallArgs618>) <= <CREDIT522_g>
assocTy: tracking/updating type variable <inlinedCallArgs618> <= <CREDIT522_g>
trackAST: (inlinedCallArgs618_id619, string)
assocAST: (TRANSFER_id469, <TRANSFER_id469>, string) => (inlinedCallArgs618_id619, <inlinedCallArgs618_id619>, string)
trackAST: (inlinedCallArgs618_receiver620, string)
assocAST: (TRANSFER_receiver471, <TRANSFER_receiver471>, string) => (inlinedCallArgs618_receiver620, <inlinedCallArgs618_receiver620>, string)
assocTy: (<sale-account529>, string) <=> string
assocTy: (<sale-account529>, string) <= string
trackAST: (inlinedCallArgs621, <inlinedCallArgs621>)
assocTy: (<inlinedCallArgs621>, <inlinedCallArgs621>) <=> string
assocTy: (<inlinedCallArgs621>, <inlinedCallArgs621>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs621> <= string
assocTy: (<TRANSFER523>, bool) <=> bool
assocTy: (<TRANSFER523>, bool) <= bool
trackAST: (inlinedCallArgs622, <inlinedCallArgs622>)
assocTy: (<inlinedCallArgs622>, <inlinedCallArgs622>) <=> bool
assocTy: (<inlinedCallArgs622>, <inlinedCallArgs622>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs622> <= bool
trackAST: (inlinedCallArgs622_id623, string)
assocAST: (offer_id209, <offer_id209>, string) => (inlinedCallArgs622_id623, <inlinedCallArgs622_id623>, string)
trackAST: (inlinedCallArgs622_sender624, string)
assocAST: (offer_seller210, <offer_seller210>, string) => (inlinedCallArgs622_sender624, <inlinedCallArgs622_sender624>, string)
trackAST: (inlinedCallArgs622_receiver625, string)
assocAST: (sale-account530, <sale-account529>, string) => (inlinedCallArgs622_receiver625, <inlinedCallArgs622_receiver625>, string)
trackAST: (inlinedCallArgs622_amount626, decimal)
assocAST: (offer_amount211, <offer_amount211>, decimal) => (inlinedCallArgs622_amount626, <inlinedCallArgs622_amount626>, decimal)
assocAST: (inlinedCallArgs622_id623, <offer_id209>, string) => (TRANSFER_id469, <TRANSFER_id469>, string)
assocAST: (inlinedCallArgs622_id623, <offer_id209>, string) => (TRANSFER_id469, <offer_id209>, string)
assocAST: (inlinedCallArgs622_amount626, <offer_amount211>, decimal) => (TRANSFER_amount472, <TRANSFER_amount472>, decimal)
assocAST: (inlinedCallArgs622_amount626, <offer_amount211>, decimal) => (TRANSFER_amount472, <offer_amount211>, decimal)
assocAST: (inlinedCallArgs622_amount626, <offer_amount211>, decimal) => (TRANSFER_amount472, <offer_amount211>, decimal)
assocAST: (inlinedCallArgs622_id623, <offer_id209>, string) => (TRANSFER_id469, <offer_id209>, string)
assocAST: (inlinedCallArgs622_id623, <offer_id209>, string) => (TRANSFER_id469, <offer_id209>, string)
assocAST: (inlinedCallArgs622_sender624, <offer_seller210>, string) => (TRANSFER_sender470, <TRANSFER_sender470>, string)
assocAST: (inlinedCallArgs622_sender624, <offer_seller210>, string) => (TRANSFER_sender470, <offer_seller210>, string)
assocAST: (inlinedCallArgs622_id623, <offer_id209>, string) => (TRANSFER_id469, <offer_id209>, string)
assocAST: (inlinedCallArgs622_id623, <offer_id209>, string) => (TRANSFER_id469, <offer_id209>, string)
assocAST: (inlinedCallArgs622_receiver625, <sale-account529>, string) => (TRANSFER_receiver471, <TRANSFER_receiver471>, string)
assocAST: (inlinedCallArgs622_receiver625, <sale-account529>, string) => (TRANSFER_receiver471, <sale-account529>, string)
assocTy: (<bool536>, bool) <=> bool
assocTy: (<bool536>, bool) <= bool
trackAST: (inlinedCallArgs627, <inlinedCallArgs627>)
assocTy: (<inlinedCallArgs627>, <inlinedCallArgs627>) <=> bool
assocTy: (<inlinedCallArgs627>, <inlinedCallArgs627>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs627> <= bool
trackAST: (inlinedCallArgs627_token-id628, string)
assocAST: (offer_id209, <offer_id209>, string) => (inlinedCallArgs627_token-id628, <inlinedCallArgs627_token-id628>, string)
trackAST: (inlinedCallArgs627_amount629, decimal)
assocAST: (offer_amount211, <offer_amount211>, decimal) => (inlinedCallArgs627_amount629, <inlinedCallArgs627_amount629>, decimal)
trackAST: (inlinedCallArgs627_sender630, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet249_sender250, <debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs627_sender630, <inlinedCallArgs627_sender630>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs627_receiver631, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet249_receiver326, <credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs627_receiver631, <inlinedCallArgs627_receiver631>, object:{kip.poly-fungible-v3.receiver-balance-change})
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool214>, bool) <=> bool
assocTy: (<bool214>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability212>, <require-capability212>) <=> bool
assocTy: (<require-capability212>, <require-capability212>) <= bool
assocTy: tracking/updating type variable <require-capability212> <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs540_sale-id541>, string) <=> string
assocTy: (<inlinedCallArgs540_sale-id541>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs540_sale-id541>, string) <=> string
assocTy: (<inlinedCallArgs540_sale-id541>, string) <= string
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind218_row}> binding:binding:<{bind218_row}> -> <bind218_a>
assocTy: (<get-policy-info234>, object:{marmalade.ledger.policy-info}) <=> object:<{bind218_row}>
assocTy: (<{bind218_row}>, <{bind218_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind218_row}>, <{bind218_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind218_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind218_row}>)
assocTy: (<bind218>, <bind218>) <=> <bind218_a>
assocTy: (<bind218>, <bind218>) <= <bind218_a>
assocTy: tracking/updating type variable <bind218> <= <bind218_a>
assocTy: (<enforce-offer245>, bool) <=> <bind218_a>
assocTy: bool => <bind218_a>
assocTy: (<BindSchema236schema248>, *) <=> binding:<{bind218_row}>
assocTy: (<BindSchema236schema248>, *) <= binding:<{bind218_row}>
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs542_sale-id546>, string) <=> string
assocTy: (<inlinedCallArgs542_sale-id546>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs542_sale-id546>, string) <=> string
assocTy: (<inlinedCallArgs542_sale-id546>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read220_row}> key:string bindings:binding:<{with-read220_row}> -> <with-read220_a>
assocTy: (<marmalade.ledger.tokens221>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read220_row}>
assocTy: (<{with-read220_row}>, <{with-read220_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read220_row}>, <{with-read220_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read220_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read220_row}>)
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
assocTy: (<get-policy-info234>, object:{marmalade.ledger.policy-info}) <=> <with-read220_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read220_a>
assocTy: (<object231>, object:*) <=> <with-read220_a>
assocTy: (<BindSchema222schema233>, *) <=> binding:<{with-read220_row}>
assocTy: (<BindSchema222schema233>, *) <= binding:<{with-read220_row}>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard257>, <DEBIT276_e>) <=> bool
assocTy: (<enforce-guard257>, <DEBIT276_e>) <= bool
assocTy: tracking/updating type variable <DEBIT276_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability254>, <require-capability254>) <=> bool
assocTy: (<require-capability254>, <require-capability254>) <= bool
assocTy: tracking/updating type variable <require-capability254> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read260_row}> key:string bindings:binding:<{with-read260_row}> -> <with-read260_a>
assocTy: (<marmalade.ledger.ledger261>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read260_row}>
assocTy: (<{with-read260_row}>, <{with-read260_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read260_row}>, <{with-read260_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read260_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read260_row}>)
assocTy: (<key267>, string) <=> string
assocTy: (<key267>, string) <= string
assocTy: (<account-guard273>, guard) <=> <with-read260_a>
assocTy: guard => <with-read260_a>
assocTy: (<BindSchema269_guard270_f>, <BindSchema269_guard270_f>) <=> <with-read260_a>
assocTy: (<BindSchema269_guard270_f>, <BindSchema269_guard270_f>) <= <with-read260_a>
assocTy: tracking/updating type variable <BindSchema269_guard270_f> <= <with-read260_a>
assocTy: (<BindSchema269schema272>, *) <=> binding:<{with-read260_row}>
assocTy: (<BindSchema269schema272>, *) <= binding:<{with-read260_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string265>, string) <=> string
assocTy: (<string265>, string) <= string
assocTy: (<list266>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key267>, string) <=> string
assocTy: (<key267>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=289>, <=289>) <=> bool
assocTy: (<=289>, <=289>) <= bool
assocTy: tracking/updating type variable <=289> <= bool
assocTy: (<string291>, string) <=> string
assocTy: (<string291>, string) <= string
assocTy: (<enforce-unit292>, bool) <=> bool
assocTy: (<enforce-unit292>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor290>, <floor290>) <=> <=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor290>, <floor290>) <= <=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor290> <= <=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<offer_amount211>, decimal) <=> <=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=289_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=289>, bool) <=> bool
assocTy: (<=289>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read294_row}> key:string bindings:binding:<{with-read294_row}> -> <with-read294_a>
assocTy: (<marmalade.ledger.ledger295>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read294_row}>
assocTy: (<{with-read294_row}>, <{with-read294_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read294_row}>, <{with-read294_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read294_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read294_row}>)
assocTy: (<key301>, string) <=> string
assocTy: (<key301>, string) <= string
assocTy: (<debit324>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read294_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read294_a>
assocTy: (<object322>, object:*) <=> <with-read294_a>
assocTy: (<BindSchema303schema323>, *) <=> binding:<{with-read294_row}>
assocTy: (<BindSchema303schema323>, *) <= binding:<{with-read294_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=307>, <<=307>) <=> bool
assocTy: (<<=307>, <<=307>) <= bool
assocTy: tracking/updating type variable <<=307> <= bool
assocTy: (<string308>, string) <=> string
assocTy: (<string308>, string) <= string
assocTy: (<enforce306>, <enforce306>) <=> bool
assocTy: (<enforce306>, <enforce306>) <= bool
assocTy: tracking/updating type variable <enforce306> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=307_a[integer,decimal,string,time]> y:<<=307_a[integer,decimal,string,time]> -> bool
assocTy: (<offer_amount211>, decimal) <=> <<=307_a[integer,decimal,string,time]>
assocTy: decimal => <<=307_a[integer,decimal,string,time]>
assocTy: (<BindSchema303_old-bal304_aa>, <BindSchema303_old-bal304_aa>) <=> <<=307_a[integer,decimal,string,time]>
assocTy: (<BindSchema303_old-bal304_aa>, <BindSchema303_old-bal304_aa>) <= <<=307_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema303_old-bal304_aa> <= <<=307_a[integer,decimal,string,time]>
assocTy: (<<=307>, bool) <=> bool
assocTy: (<<=307>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update312_row}> key:string object:object:~<{update312_row}> -> string
assocTy: (<marmalade.ledger.ledger313>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update312_row}>
assocTy: (<{update312_row}>, <{update312_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update312_row}>, <{update312_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update312_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update312_row}>)
assocTy: (<key319>, string) <=> string
assocTy: (<key319>, string) <= string
assocTy: (<object321>, object:*) <=> object:~<{update312_row}>
assocTy: (<object321>, object:*) <= object:~<{update312_row}>
assocTy: (<update312>, <update312>) <=> string
assocTy: (<update312>, <update312>) <= string
assocTy: tracking/updating type variable <update312> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string317>, string) <=> string
assocTy: (<string317>, string) <= string
assocTy: (<list318>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key319>, string) <=> string
assocTy: (<key319>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string299>, string) <=> string
assocTy: (<string299>, string) <= string
assocTy: (<list300>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key301>, string) <=> string
assocTy: (<key301>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string461>, string) <=> string
assocTy: (<string461>, string) <= string
assocTy: (<list462>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account464>, string) <=> string
assocTy: (<sale-account464>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id463>, <pact-id463>) <=> string
assocTy: (<pact-id463>, <pact-id463>) <= string
assocTy: tracking/updating type variable <pact-id463> <= string
Mangled funtype: name:string -> guard -> name:string -> guard
assocTy: (<string467>, string) <=> string
assocTy: (<string467>, string) <= string
assocTy: (<inlinedCallArgs599_guard602>, guard) <=> guard
assocTy: (<inlinedCallArgs599_guard602>, guard) <= guard
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>333>, <>333>) <=> bool
assocTy: (<>333>, <>333>) <= bool
assocTy: tracking/updating type variable <>333> <= bool
assocTy: (<string336>, string) <=> string
assocTy: (<string336>, string) <= string
assocTy: (<enforce332>, <enforce-valid-account338_c>) <=> bool
assocTy: (<enforce332>, <enforce-valid-account338_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account338_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>333_a[integer,decimal,string,time]> y:<>333_a[integer,decimal,string,time]> -> bool
assocTy: (<length334>, <length334>) <=> <>333_a[integer,decimal,string,time]>
assocTy: (<length334>, <length334>) <= <>333_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length334> <= <>333_a[integer,decimal,string,time]>
assocTy: (<integer335>, integer) <=> <>333_a[integer,decimal,string,time]>
assocTy: integer => <>333_a[integer,decimal,string,time]>
assocTy: (<>333>, bool) <=> bool
assocTy: (<>333>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length334_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<sale-account464>, string) <=> <length334_a[[<l>],string,object:<{o}>]>
assocTy: string => <length334_a[[<l>],string,object:<{o}>]>
assocTy: (<length334>, integer) <=> integer
assocTy: (<length334>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=351>, <=351>) <=> bool
assocTy: (<=351>, <=351>) <= bool
assocTy: tracking/updating type variable <=351> <= bool
assocTy: (<string353>, string) <=> string
assocTy: (<string353>, string) <= string
assocTy: (<enforce-unit354>, bool) <=> bool
assocTy: (<enforce-unit354>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor352>, <floor352>) <=> <=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor352>, <floor352>) <= <=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor352> <= <=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<offer_amount211>, decimal) <=> <=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=351_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=351>, bool) <=> bool
assocTy: (<=351>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool359>, bool) <=> bool
assocTy: (<bool359>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability356>, <require-capability356>) <=> bool
assocTy: (<require-capability356>, <require-capability356>) <= bool
assocTy: tracking/updating type variable <require-capability356> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read362_row}> key:string defaults:object:~<{with-default-read362_row}> bindings:binding:~<{with-default-read362_row}> -> <with-default-read362_a>
assocTy: (<marmalade.ledger.ledger363>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read362_row}>
assocTy: (<{with-default-read362_row}>, <{with-default-read362_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read362_row}>, <{with-default-read362_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read362_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read362_row}>)
assocTy: (<key369>, string) <=> string
assocTy: (<key369>, string) <= string
assocTy: (<object371>, object:*) <=> object:~<{with-default-read362_row}>
assocTy: (<object371>, object:*) <= object:~<{with-default-read362_row}>
assocTy: (<credit458>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read362_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read362_a>
assocTy: (<object454>, object:*) <=> <with-default-read362_a>
assocTy: (<BindSchema373schema457>, *) <=> binding:~<{with-default-read362_row}>
assocTy: (<BindSchema373schema457>, *) <= binding:~<{with-default-read362_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=379>, <=379>) <=> bool
assocTy: (<=379>, <=379>) <= bool
assocTy: tracking/updating type variable <=379> <= bool
assocTy: (<string380>, string) <=> string
assocTy: (<string380>, string) <= string
assocTy: (<enforce378>, <enforce378>) <=> bool
assocTy: (<enforce378>, <enforce378>) <= bool
assocTy: tracking/updating type variable <enforce378> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=379_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=379_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs591_guard594>, guard) <=> <=379_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=379_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<inlinedCallArgs599_guard602>, guard) <=> <=379_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=379>, bool) <=> bool
assocTy: (<=379>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if383_a> else:<if383_a> -> <if383_a>
assocTy: (<=384>, <=384>) <=> bool
assocTy: (<=384>, <=384>) <= bool
assocTy: tracking/updating type variable <=384> <= bool
assocTy: (<enforce-reserved428>, bool) <=> <if383_a>
assocTy: bool => <if383_a>
assocTy: (<bool430>, bool) <=> <if383_a>
assocTy: (<if383>, <if383>) <=> <if383_a>
assocTy: (<if383>, <if383>) <= <if383_a>
assocTy: tracking/updating type variable <if383> <= <if383_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema373_old-bal374_ac>, <BindSchema373_old-bal374_ac>) <=> <=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema373_old-bal374_ac>, <BindSchema373_old-bal374_ac>) <= <=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema373_old-bal374_ac> <= <=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal385>, decimal) <=> <=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=384_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=384>, bool) <=> bool
assocTy: (<=384>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if395_a> else:<if395_a> -> <if395_a>
assocTy: (<=396>, <=396>) <=> bool
assocTy: (<=396>, <=396>) <= bool
assocTy: tracking/updating type variable <=396> <= bool
assocTy: (<take400>, <take400>) <=> <if395_a>
assocTy: (<take400>, <take400>) <= <if395_a>
assocTy: tracking/updating type variable <take400> <= <if395_a>
assocTy: (<string402>, string) <=> <if395_a>
assocTy: string => <if395_a>
assocTy: (<check-reserved403>, string) <=> <if395_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string397>, string) <=> <=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take398>, <take398>) <=> <=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take398>, <take398>) <= <=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take398> <= <=396_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=396>, bool) <=> bool
assocTy: (<=396>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if405_a> else:<if405_a> -> <if405_a>
assocTy: (<=406>, <=406>) <=> bool
assocTy: (<=406>, <=406>) <= bool
assocTy: tracking/updating type variable <=406> <= bool
assocTy: (<bool408>, bool) <=> <if405_a>
assocTy: bool => <if405_a>
assocTy: (<if409>, <if409>) <=> <if405_a>
assocTy: (<if409>, <if409>) <= <if405_a>
assocTy: tracking/updating type variable <if409> <= <if405_a>
assocTy: (<enforce-reserved428>, bool) <=> <if405_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=406_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=406_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string407>, string) <=> <=406_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=406_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved403>, string) <=> <=406_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=406>, bool) <=> bool
assocTy: (<=406>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if409_a> else:<if409_a> -> <if409_a>
assocTy: (<=410>, <=410>) <=> bool
assocTy: (<=410>, <=410>) <= bool
assocTy: tracking/updating type variable <=410> <= bool
assocTy: (<enforce412>, <enforce412>) <=> <if409_a>
assocTy: (<enforce412>, <enforce412>) <= <if409_a>
assocTy: tracking/updating type variable <enforce412> <= <if409_a>
assocTy: (<enforce423>, <enforce423>) <=> <if409_a>
assocTy: (<enforce423>, <enforce423>) <= <if409_a>
assocTy: tracking/updating type variable <enforce423> <= <if409_a>
assocTy: (<if409>, bool) <=> <if409_a>
assocTy: bool => <if409_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=410_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=410_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string411>, string) <=> <=410_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=410_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved403>, string) <=> <=410_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=410>, bool) <=> bool
assocTy: (<=410>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=413>, <=413>) <=> bool
assocTy: (<=413>, <=413>) <= bool
assocTy: tracking/updating type variable <=413> <= bool
assocTy: (<string422>, string) <=> string
assocTy: (<string422>, string) <= string
assocTy: (<enforce412>, bool) <=> bool
assocTy: (<enforce412>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format414>, <format414>) <=> <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format414>, <format414>) <= <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format414> <= <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format417>, <format417>) <=> <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format417>, <format417>) <= <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format417> <= <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=413>, bool) <=> bool
assocTy: (<=413>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string415>, string) <=> string
assocTy: (<string415>, string) <= string
assocTy: (<list416>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format414>, <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format414>, <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=413_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string418>, string) <=> string
assocTy: (<string418>, string) <= string
assocTy: (<list419>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format417>, string) <=> string
assocTy: (<format417>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool424>, bool) <=> bool
assocTy: (<bool424>, bool) <= bool
assocTy: (<format425>, <format425>) <=> string
assocTy: (<format425>, <format425>) <= string
assocTy: tracking/updating type variable <format425> <= string
assocTy: (<enforce423>, bool) <=> bool
assocTy: (<enforce423>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string426>, string) <=> string
assocTy: (<string426>, string) <= string
assocTy: (<list427>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format425>, string) <=> string
assocTy: (<format425>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if433_a> else:<if433_a> -> <if433_a>
assocTy: (<if383>, bool) <=> bool
assocTy: (<if383>, bool) <= bool
assocTy: (<offer_amount211>, decimal) <=> <if433_a>
assocTy: decimal => <if433_a>
assocTy: (<+434>, <+434>) <=> <if433_a>
assocTy: (<+434>, <+434>) <= <if433_a>
assocTy: tracking/updating type variable <+434> <= <if433_a>
assocTy: (<if433>, <if433>) <=> <if433_a>
assocTy: (<if433>, <if433>) <= <if433_a>
assocTy: tracking/updating type variable <if433> <= <if433_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write435_row}> key:string object:object:<{write435_row}> -> string
assocTy: (<marmalade.ledger.ledger436>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write435_row}>
assocTy: (<{write435_row}>, <{write435_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write435_row}>, <{write435_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write435_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write435_row}>)
assocTy: (<key442>, string) <=> string
assocTy: (<key442>, string) <= string
assocTy: (<object444>, object:*) <=> object:<{write435_row}>
assocTy: (<object444>, object:*) <= object:<{write435_row}>
assocTy: (<write435>, <write435>) <=> string
assocTy: (<write435>, <write435>) <= string
assocTy: tracking/updating type variable <write435> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string440>, string) <=> string
assocTy: (<string440>, string) <= string
assocTy: (<list441>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key442>, string) <=> string
assocTy: (<key442>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if445_a> else:<if445_a> -> <if445_a>
assocTy: (<if383>, bool) <=> bool
assocTy: (<if383>, bool) <= bool
assocTy: (<emit-event446>, <emit-event446>) <=> <if445_a>
assocTy: (<emit-event446>, <emit-event446>) <= <if445_a>
assocTy: tracking/updating type variable <emit-event446> <= <if445_a>
assocTy: (<bool453>, bool) <=> <if445_a>
assocTy: bool => <if445_a>
assocTy: (<if445>, <if445>) <=> <if445_a>
assocTy: (<if445>, <if445>) <= <if445_a>
assocTy: tracking/updating type variable <if445> <= <if445_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool450>, bool) <=> bool
assocTy: (<bool450>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event446>, bool) <=> bool
assocTy: (<emit-event446>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if455_a> else:<if455_a> -> <if455_a>
assocTy: (<if383>, bool) <=> bool
assocTy: (<if383>, bool) <= bool
assocTy: (<decimal456>, decimal) <=> <if455_a>
assocTy: decimal => <if455_a>
assocTy: (<BindSchema373_old-bal374_ac>, decimal) <=> <if455_a>
assocTy: (<if455>, <if455>) <=> <if455_a>
assocTy: (<if455>, <if455>) <= <if455_a>
assocTy: tracking/updating type variable <if455> <= <if455_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string367>, string) <=> string
assocTy: (<string367>, string) <= string
assocTy: (<list368>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key369>, string) <=> string
assocTy: (<key369>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string461>, string) <=> string
assocTy: (<string461>, string) <= string
assocTy: (<list462>, [*]) <=> [*]
assocTy: (<list462>, [*]) <= [*]
assocTy: (<sale-account464>, string) <=> string
assocTy: (<sale-account464>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id463>, string) <=> string
assocTy: (<pact-id463>, string) <= string
Mangled funtype: name:string -> guard -> name:string -> guard
assocTy: (<string467>, string) <=> string
assocTy: (<string467>, string) <= string
assocTy: (<inlinedCallArgs599_guard602>, guard) <=> guard
assocTy: (<inlinedCallArgs599_guard602>, guard) <= guard
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER523>, bool) <=> bool
assocTy: (<TRANSFER523>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event468>, <emit-event468>) <=> bool
assocTy: (<emit-event468>, <emit-event468>) <= bool
assocTy: tracking/updating type variable <emit-event468> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string526>, string) <=> string
assocTy: (<string526>, string) <= string
assocTy: (<list527>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account529>, string) <=> string
assocTy: (<sale-account529>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id528>, <pact-id528>) <=> string
assocTy: (<pact-id528>, <pact-id528>) <= string
assocTy: tracking/updating type variable <pact-id528> <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=485>, <=485>) <=> bool
assocTy: (<=485>, <=485>) <= bool
assocTy: tracking/updating type variable <=485> <= bool
assocTy: (<string487>, string) <=> string
assocTy: (<string487>, string) <= string
assocTy: (<enforce-unit488>, bool) <=> bool
assocTy: (<enforce-unit488>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor486>, <floor486>) <=> <=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor486>, <floor486>) <= <=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor486> <= <=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<offer_amount211>, decimal) <=> <=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=485_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=485>, bool) <=> bool
assocTy: (<=485>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>491>, <>491>) <=> bool
assocTy: (<>491>, <>491>) <= bool
assocTy: tracking/updating type variable <>491> <= bool
assocTy: (<string493>, string) <=> string
assocTy: (<string493>, string) <= string
assocTy: (<enforce490>, <enforce490>) <=> bool
assocTy: (<enforce490>, <enforce490>) <= bool
assocTy: tracking/updating type variable <enforce490> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>491_a[integer,decimal,string,time]> y:<>491_a[integer,decimal,string,time]> -> bool
assocTy: (<offer_amount211>, decimal) <=> <>491_a[integer,decimal,string,time]>
assocTy: decimal => <>491_a[integer,decimal,string,time]>
assocTy: (<decimal492>, decimal) <=> <>491_a[integer,decimal,string,time]>
assocTy: (<>491>, bool) <=> bool
assocTy: (<>491>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard497>, <DEBIT516_e>) <=> bool
assocTy: (<enforce-guard497>, <DEBIT516_e>) <= bool
assocTy: tracking/updating type variable <DEBIT516_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability494>, <compose-capability494>) <=> bool
assocTy: (<compose-capability494>, <compose-capability494>) <= bool
assocTy: tracking/updating type variable <compose-capability494> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read500_row}> key:string bindings:binding:<{with-read500_row}> -> <with-read500_a>
assocTy: (<marmalade.ledger.ledger501>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read500_row}>
assocTy: (<{with-read500_row}>, <{with-read500_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read500_row}>, <{with-read500_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read500_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read500_row}>)
assocTy: (<key507>, string) <=> string
assocTy: (<key507>, string) <= string
assocTy: (<account-guard513>, guard) <=> <with-read500_a>
assocTy: guard => <with-read500_a>
assocTy: (<BindSchema509_guard510_f>, <BindSchema509_guard510_f>) <=> <with-read500_a>
assocTy: (<BindSchema509_guard510_f>, <BindSchema509_guard510_f>) <= <with-read500_a>
assocTy: tracking/updating type variable <BindSchema509_guard510_f> <= <with-read500_a>
assocTy: (<BindSchema509schema512>, *) <=> binding:<{with-read500_row}>
assocTy: (<BindSchema509schema512>, *) <= binding:<{with-read500_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string505>, string) <=> string
assocTy: (<string505>, string) <= string
assocTy: (<list506>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key507>, string) <=> string
assocTy: (<key507>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool520>, bool) <=> bool
assocTy: (<bool520>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER523>, bool) <=> bool
assocTy: (<TRANSFER523>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string526>, string) <=> string
assocTy: (<string526>, string) <= string
assocTy: (<list527>, [*]) <=> [*]
assocTy: (<list527>, [*]) <= [*]
assocTy: (<sale-account529>, string) <=> string
assocTy: (<sale-account529>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id528>, string) <=> string
assocTy: (<pact-id528>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool536>, bool) <=> bool
assocTy: (<bool536>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<offer539>, bool) <=> bool
assocTy: (<offer539>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema236schema248::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema236_policy237>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema236_policy237>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs542_token543>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs542_token543>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema222schema233::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema222_manifest229_m>, <BindSchema222_manifest229_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema222_manifest229_m>, <BindSchema222_manifest229_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema222_manifest229_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema222_policy223>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema222_policy223>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema222_precision227_l>, <BindSchema222_precision227_l>) <=> integer
assocTy: (<BindSchema222_precision227_l>, <BindSchema222_precision227_l>) <= integer
assocTy: tracking/updating type variable <BindSchema222_precision227_l> <= integer
assocTy: (<BindSchema222_supply225_k>, <BindSchema222_supply225_k>) <=> decimal
assocTy: (<BindSchema222_supply225_k>, <BindSchema222_supply225_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema222_supply225_k> <= decimal
applySchemas [binding]: (BindSchema269schema272::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema269_guard270_f>, guard) <=> guard
assocTy: (<BindSchema269_guard270_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list266::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema303schema323::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema303_old-bal304_aa>, decimal) <=> decimal
assocTy: (<BindSchema303_old-bal304_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list318::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object321::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-311>, <-311>) <=> decimal
assocTy: (<-311>, <-311>) <= decimal
assocTy: tracking/updating type variable <-311> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object321>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object321>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list300::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list462::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema373schema457::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema373_old-bal374_ac>, decimal) <=> decimal
assocTy: (<BindSchema373_old-bal374_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs591_guard594>, guard) <=> guard
assocTy: (<inlinedCallArgs591_guard594>, guard) <= guard
Skipping TC on specified heterogenous list for node: list416::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list419::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list427::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list441::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object444::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<sale-account464>, string) <=> string
assocTy: (<sale-account464>, string) <= string
assocTy: (<if433>, decimal) <=> decimal
assocTy: (<if433>, decimal) <= decimal
assocTy: (<inlinedCallArgs591_guard594>, guard) <=> guard
assocTy: (<inlinedCallArgs591_guard594>, guard) <= guard
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
Skipping TC on specified heterogenous list for node: list368::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object371::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal372>, decimal) <=> decimal
assocTy: (<decimal372>, decimal) <= decimal
assocTy: (<inlinedCallArgs599_guard602>, guard) <=> guard
assocTy: (<inlinedCallArgs599_guard602>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object371>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object371>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list462::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list527::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema509schema512::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema509_guard510_f>, guard) <=> guard
assocTy: (<BindSchema509_guard510_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list506::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list527::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard497::<enforce-guard497>, tyVar=<enforce-guard497>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard514::<account-guard514>, tyVar=<account-guard513>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard497, <enforce-guard497>, bool)]), (guard, [(account-guard514, <account-guard513>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard497, <enforce-guard497>)])), (guard, (guard, [(account-guard514, <account-guard513>)]))]
Adjusting type for solution: ((enforce-guard497, <enforce-guard497>), bool, bool)
assocTy: (<enforce-guard497>, bool) <=> bool
assocTy: (<enforce-guard497>, bool) <= bool
assocTy: (<enforce-guard497>, bool) <=> bool
assocTy: (<enforce-guard497>, bool) <= bool
Adjusting type for solution: ((account-guard514, <account-guard513>), guard, guard)
assocTy: (<account-guard513>, guard) <=> guard
assocTy: (<account-guard513>, guard) <= guard
assocTy: (<account-guard513>, guard) <=> guard
assocTy: (<account-guard513>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor486::<floor486>, tyVar=<floor486>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs606_amount608::decimal, tyVar=<offer_amount211>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet475_p476::<BindLet475_p476_ai>, tyVar=<precision482>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet475_p476, <precision482>, integer)]), (decimal, [(floor486, <floor486>, decimal), (inlinedCallArgs606_amount608, <offer_amount211>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet475_p476, <precision482>)])), (decimal, (decimal, [(floor486, <floor486>), (inlinedCallArgs606_amount608, <offer_amount211>)]))]
Adjusting type for solution: ((BindLet475_p476, <precision482>), integer, integer)
assocTy: (<precision482>, integer) <=> integer
assocTy: (<precision482>, integer) <= integer
assocTy: (<precision482>, integer) <=> integer
assocTy: (<precision482>, integer) <= integer
Adjusting type for solution: ((floor486, <floor486>), decimal, decimal)
assocTy: (<floor486>, decimal) <=> decimal
assocTy: (<floor486>, decimal) <= decimal
assocTy: (<floor486>, decimal) <=> decimal
assocTy: (<floor486>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs606_amount608, <offer_amount211>), decimal, decimal)
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read480_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read480_row}>, roleTy=<read480>
tryFunType: cand: table:table:<{read480_row}> key:string -> object:<{read480_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read480_row}>, AST=read480::<read480>, tyVar=<read480>, resolvedTy=<read480>}), (ArgVar 0, RoleTys { candArgTy=table:<{read480_row}>, AST=marmalade.ledger.tokens481::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens481>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs604_id605::string, tyVar=<offer_id209>, resolvedTy=string})]
tryFunType: trying table:table:<{read480_row}> key:string -> object:<{read480_row}> with [(string, [(inlinedCallArgs604_id605, <offer_id209>, string)]), (table:<{read480_row}>, [(marmalade.ledger.tokens481, <marmalade.ledger.tokens481>, table:{marmalade.ledger.token-schema})]), (object:<{read480_row}>, [(read480, <read480>, <read480>)])]
Solved overload with table:table:<{read480_row}> key:string -> object:<{read480_row}>: [(string, (string, [(inlinedCallArgs604_id605, <offer_id209>)])), (table:<{read480_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens481, <marmalade.ledger.tokens481>)])), (object:<{read480_row}>, (object:<{read480_row}>, [(read480, <read480>)]))]
Adjusting type for solution: ((inlinedCallArgs604_id605, <offer_id209>), string, string)
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens481, <marmalade.ledger.tokens481>), table:<{read480_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens481>, table:{marmalade.ledger.token-schema}) <=> table:<{read480_row}>
assocTy: (<{read480_row}>, <{read480_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read480_row}>, <{read480_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read480_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read480_row}>)
assocTy: (<marmalade.ledger.tokens481>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens481>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read480, <read480>), object:<{read480_row}>, object:<{read480_row}>)
assocTy: (<read480>, <read480>) <=> object:<{read480_row}>
assocTy: (<read480>, <read480>) <= object:<{read480_row}>
assocTy: tracking/updating type variable <read480> <= object:<{read480_row}>
assocTy: (<read480>, object:{marmalade.ledger.token-schema}) <=> object:<{read480_row}>
assocTy: (<{read480_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read480_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read480_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at478_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at478_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at478_l>] -> <at478_a>: roles=[(RetVar, RoleTys { candArgTy=<at478_a>, AST=at478::<at478>, tyVar=<precision482>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at478_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at478_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at478_o}> -> <at478_a>, roles=[(RetVar, RoleTys { candArgTy=<at478_a>, AST=at478::<at478>, tyVar=<precision482>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string479::string, tyVar=<string479>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at478_o}>, AST=read480::<read480>, tyVar=<read480>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at478_o}> -> <at478_a> with [(<at478_a>, [(at478, <precision482>, integer)]), (string, [(string479, <string479>, string)]), (object:<{at478_o}>, [(read480, <read480>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at478_o}> -> <at478_a>: [(<at478_a>, (integer, [(at478, <precision482>)])), (string, (string, [(string479, <string479>)])), (object:<{at478_o}>, (object:{marmalade.ledger.token-schema}, [(read480, <read480>)]))]
Adjusting type for solution: ((at478, <precision482>), <at478_a>, integer)
assocTy: (<precision482>, integer) <=> <at478_a>
assocTy: integer => <at478_a>
assocTy: (<precision482>, integer) <=> integer
assocTy: (<precision482>, integer) <= integer
Adjusting type for solution: ((string479, <string479>), string, string)
assocTy: (<string479>, string) <=> string
assocTy: (<string479>, string) <= string
assocTy: (<string479>, string) <=> string
assocTy: (<string479>, string) <= string
Adjusting type for solution: ((read480, <read480>), object:<{at478_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read480>, object:{marmalade.ledger.token-schema}) <=> object:<{at478_o}>
assocTy: (<{at478_o}>, <{at478_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at478_o}>, <{at478_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at478_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at478_o}>)
assocTy: (<read480>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read480>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+434_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+434_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+434_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+434_a[integer,decimal]> y:<+434_a[integer,decimal]> -> <+434_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+434_a[integer,decimal]>, AST=+434::<+434>, tyVar=<+434>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+434_a[integer,decimal]>, AST=BindSchema373_old-bal374::<BindSchema373_old-bal374_ac>, tyVar=<BindSchema373_old-bal374_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+434_a[integer,decimal]>, AST=inlinedCallArgs599_amount603::decimal, tyVar=<offer_amount211>, resolvedTy=decimal})]
tryFunType: trying x:<+434_a[integer,decimal]> y:<+434_a[integer,decimal]> -> <+434_a[integer,decimal]> with [(<+434_a[integer,decimal]>, [(+434, <+434>, decimal), (inlinedCallArgs599_amount603, <offer_amount211>, decimal), (BindSchema373_old-bal374, <BindSchema373_old-bal374_ac>, decimal)])]
Solved overload with x:<+434_a[integer,decimal]> y:<+434_a[integer,decimal]> -> <+434_a[integer,decimal]>: [(<+434_a[integer,decimal]>, (decimal, [(+434, <+434>), (inlinedCallArgs599_amount603, <offer_amount211>), (BindSchema373_old-bal374, <BindSchema373_old-bal374_ac>)]))]
Adjusting type for solution: ((+434, <+434>), <+434_a[integer,decimal]>, decimal)
assocTy: (<+434>, decimal) <=> <+434_a[integer,decimal]>
assocTy: decimal => <+434_a[integer,decimal]>
assocTy: (<+434>, decimal) <=> decimal
assocTy: (<+434>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs599_amount603, <offer_amount211>), <+434_a[integer,decimal]>, decimal)
assocTy: (<offer_amount211>, decimal) <=> <+434_a[integer,decimal]>
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
Adjusting type for solution: ((BindSchema373_old-bal374, <BindSchema373_old-bal374_ac>), <+434_a[integer,decimal]>, decimal)
assocTy: (<BindSchema373_old-bal374_ac>, decimal) <=> <+434_a[integer,decimal]>
assocTy: (<BindSchema373_old-bal374_ac>, decimal) <=> decimal
assocTy: (<BindSchema373_old-bal374_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop420_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop420_a[[<l>],string]>, roleTy=<drop420>
tryFunType: cand: count:integer list:<drop420_a[[<l>],string]> -> <drop420_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop420_a[[<l>],string]>, AST=drop420::<drop420>, tyVar=<drop420>, resolvedTy=<drop420>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer421::integer, tyVar=<integer421>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop420_a[[<l>],string]>, AST=inlinedCallArgs585_account586::string, tyVar=<sale-account464>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop420_a[[<l>],string]> -> <drop420_a[[<l>],string]> with [(<drop420_a[[<l>],string]>, [(drop420, <drop420>, <drop420>), (inlinedCallArgs585_account586, <sale-account464>, string)]), (integer, [(integer421, <integer421>, integer)])]
Solved overload with count:integer list:<drop420_a[[<l>],string]> -> <drop420_a[[<l>],string]>: [(<drop420_a[[<l>],string]>, (string, [(drop420, <drop420>), (inlinedCallArgs585_account586, <sale-account464>)])), (integer, (integer, [(integer421, <integer421>)]))]
Adjusting type for solution: ((drop420, <drop420>), <drop420_a[[<l>],string]>, string)
assocTy: (<drop420>, <drop420>) <=> <drop420_a[[<l>],string]>
assocTy: (<drop420>, <drop420>) <= <drop420_a[[<l>],string]>
assocTy: tracking/updating type variable <drop420> <= <drop420_a[[<l>],string]>
assocTy: (<drop420>, <drop420_a[[<l>],string]>) <=> string
assocTy: (<drop420>, <drop420_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop420_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs585_account586, <sale-account464>), <drop420_a[[<l>],string]>, string)
assocTy: (<sale-account464>, string) <=> <drop420_a[[<l>],string]>
assocTy: (<sale-account464>, string) <=> string
assocTy: (<sale-account464>, string) <= string
Adjusting type for solution: ((integer421, <integer421>), integer, integer)
assocTy: (<integer421>, integer) <=> integer
assocTy: (<integer421>, integer) <= integer
assocTy: (<integer421>, integer) <=> integer
assocTy: (<integer421>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take400_a[[<l>],string]>, roleTy=<take393>
tryFunType: unify role: role=RetVar, candTy=<take400_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take400_a[[<l>],string]> -> <take400_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take400_a[[<l>],string]>, AST=take400::<take400>, tyVar=<take400>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer401::integer, tyVar=<integer401>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take400_a[[<l>],string]>, AST=BindLet391_pfx392::<BindLet391_pfx392_f>, tyVar=<take393>, resolvedTy=<take393>})]
tryFunType: trying count:integer list:<take400_a[[<l>],string]> -> <take400_a[[<l>],string]> with [(<take400_a[[<l>],string]>, [(take400, <take400>, string), (BindLet391_pfx392, <take393>, <take393>)]), (integer, [(integer401, <integer401>, integer)])]
Solved overload with count:integer list:<take400_a[[<l>],string]> -> <take400_a[[<l>],string]>: [(<take400_a[[<l>],string]>, (string, [(take400, <take400>), (BindLet391_pfx392, <take393>)])), (integer, (integer, [(integer401, <integer401>)]))]
Adjusting type for solution: ((take400, <take400>), <take400_a[[<l>],string]>, string)
assocTy: (<take400>, string) <=> <take400_a[[<l>],string]>
assocTy: string => <take400_a[[<l>],string]>
assocTy: (<take400>, string) <=> string
assocTy: (<take400>, string) <= string
Adjusting type for solution: ((BindLet391_pfx392, <take393>), <take400_a[[<l>],string]>, string)
assocTy: (<take393>, <take393>) <=> <take400_a[[<l>],string]>
assocTy: (<take393>, <take393>) <= <take400_a[[<l>],string]>
assocTy: tracking/updating type variable <take393> <= <take400_a[[<l>],string]>
assocTy: (<take393>, string) <=> string
assocTy: (<take393>, string) <= string
Adjusting type for solution: ((integer401, <integer401>), integer, integer)
assocTy: (<integer401>, integer) <=> integer
assocTy: (<integer401>, integer) <= integer
assocTy: (<integer401>, integer) <=> integer
assocTy: (<integer401>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take398_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take398_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take398_a[[<l>],string]> -> <take398_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take398_a[[<l>],string]>, AST=take398::<take398>, tyVar=<take398>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer399::integer, tyVar=<integer399>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take398_a[[<l>],string]>, AST=BindLet391_pfx392::<BindLet391_pfx392_f>, tyVar=<take393>, resolvedTy=string})]
tryFunType: trying count:integer list:<take398_a[[<l>],string]> -> <take398_a[[<l>],string]> with [(<take398_a[[<l>],string]>, [(take398, <take398>, string), (BindLet391_pfx392, <take393>, string)]), (integer, [(integer399, <integer399>, integer)])]
Solved overload with count:integer list:<take398_a[[<l>],string]> -> <take398_a[[<l>],string]>: [(<take398_a[[<l>],string]>, (string, [(take398, <take398>), (BindLet391_pfx392, <take393>)])), (integer, (integer, [(integer399, <integer399>)]))]
Adjusting type for solution: ((take398, <take398>), <take398_a[[<l>],string]>, string)
assocTy: (<take398>, string) <=> <take398_a[[<l>],string]>
assocTy: string => <take398_a[[<l>],string]>
assocTy: (<take398>, string) <=> string
assocTy: (<take398>, string) <= string
Adjusting type for solution: ((BindLet391_pfx392, <take393>), <take398_a[[<l>],string]>, string)
assocTy: (<take393>, string) <=> <take398_a[[<l>],string]>
assocTy: (<take393>, string) <=> string
assocTy: (<take393>, string) <= string
Adjusting type for solution: ((integer399, <integer399>), integer, integer)
assocTy: (<integer399>, integer) <=> integer
assocTy: (<integer399>, integer) <= integer
assocTy: (<integer399>, integer) <=> integer
assocTy: (<integer399>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take393_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take393_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take393_a[[<l>],string]> -> <take393_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take393_a[[<l>],string]>, AST=take393::<take393>, tyVar=<take393>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer394::integer, tyVar=<integer394>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take393_a[[<l>],string]>, AST=inlinedCallArgs583_account584::string, tyVar=<sale-account464>, resolvedTy=string})]
tryFunType: trying count:integer list:<take393_a[[<l>],string]> -> <take393_a[[<l>],string]> with [(<take393_a[[<l>],string]>, [(take393, <take393>, string), (inlinedCallArgs583_account584, <sale-account464>, string)]), (integer, [(integer394, <integer394>, integer)])]
Solved overload with count:integer list:<take393_a[[<l>],string]> -> <take393_a[[<l>],string]>: [(<take393_a[[<l>],string]>, (string, [(take393, <take393>), (inlinedCallArgs583_account584, <sale-account464>)])), (integer, (integer, [(integer394, <integer394>)]))]
Adjusting type for solution: ((take393, <take393>), <take393_a[[<l>],string]>, string)
assocTy: (<take393>, string) <=> <take393_a[[<l>],string]>
assocTy: string => <take393_a[[<l>],string]>
assocTy: (<take393>, string) <=> string
assocTy: (<take393>, string) <= string
Adjusting type for solution: ((inlinedCallArgs583_account584, <sale-account464>), <take393_a[[<l>],string]>, string)
assocTy: (<sale-account464>, string) <=> <take393_a[[<l>],string]>
assocTy: (<sale-account464>, string) <=> string
assocTy: (<sale-account464>, string) <= string
Adjusting type for solution: ((integer394, <integer394>), integer, integer)
assocTy: (<integer394>, integer) <=> integer
assocTy: (<integer394>, integer) <= integer
assocTy: (<integer394>, integer) <=> integer
assocTy: (<integer394>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor352::<floor352>, tyVar=<floor352>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs577_amount579::decimal, tyVar=<offer_amount211>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet341_p342::<BindLet341_p342_ai>, tyVar=<precision348>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet341_p342, <precision348>, integer)]), (decimal, [(floor352, <floor352>, decimal), (inlinedCallArgs577_amount579, <offer_amount211>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet341_p342, <precision348>)])), (decimal, (decimal, [(floor352, <floor352>), (inlinedCallArgs577_amount579, <offer_amount211>)]))]
Adjusting type for solution: ((BindLet341_p342, <precision348>), integer, integer)
assocTy: (<precision348>, integer) <=> integer
assocTy: (<precision348>, integer) <= integer
assocTy: (<precision348>, integer) <=> integer
assocTy: (<precision348>, integer) <= integer
Adjusting type for solution: ((floor352, <floor352>), decimal, decimal)
assocTy: (<floor352>, decimal) <=> decimal
assocTy: (<floor352>, decimal) <= decimal
assocTy: (<floor352>, decimal) <=> decimal
assocTy: (<floor352>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs577_amount579, <offer_amount211>), decimal, decimal)
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read346_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read346_row}>, roleTy=<read346>
tryFunType: cand: table:table:<{read346_row}> key:string -> object:<{read346_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read346_row}>, AST=read346::<read346>, tyVar=<read346>, resolvedTy=<read346>}), (ArgVar 0, RoleTys { candArgTy=table:<{read346_row}>, AST=marmalade.ledger.tokens347::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens347>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs575_id576::string, tyVar=<offer_id209>, resolvedTy=string})]
tryFunType: trying table:table:<{read346_row}> key:string -> object:<{read346_row}> with [(string, [(inlinedCallArgs575_id576, <offer_id209>, string)]), (table:<{read346_row}>, [(marmalade.ledger.tokens347, <marmalade.ledger.tokens347>, table:{marmalade.ledger.token-schema})]), (object:<{read346_row}>, [(read346, <read346>, <read346>)])]
Solved overload with table:table:<{read346_row}> key:string -> object:<{read346_row}>: [(string, (string, [(inlinedCallArgs575_id576, <offer_id209>)])), (table:<{read346_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens347, <marmalade.ledger.tokens347>)])), (object:<{read346_row}>, (object:<{read346_row}>, [(read346, <read346>)]))]
Adjusting type for solution: ((inlinedCallArgs575_id576, <offer_id209>), string, string)
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens347, <marmalade.ledger.tokens347>), table:<{read346_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens347>, table:{marmalade.ledger.token-schema}) <=> table:<{read346_row}>
assocTy: (<{read346_row}>, <{read346_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read346_row}>, <{read346_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read346_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read346_row}>)
assocTy: (<marmalade.ledger.tokens347>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens347>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read346, <read346>), object:<{read346_row}>, object:<{read346_row}>)
assocTy: (<read346>, <read346>) <=> object:<{read346_row}>
assocTy: (<read346>, <read346>) <= object:<{read346_row}>
assocTy: tracking/updating type variable <read346> <= object:<{read346_row}>
assocTy: (<read346>, object:{marmalade.ledger.token-schema}) <=> object:<{read346_row}>
assocTy: (<{read346_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read346_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read346_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at344_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at344_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at344_l>] -> <at344_a>: roles=[(RetVar, RoleTys { candArgTy=<at344_a>, AST=at344::<at344>, tyVar=<precision348>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at344_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at344_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at344_o}> -> <at344_a>, roles=[(RetVar, RoleTys { candArgTy=<at344_a>, AST=at344::<at344>, tyVar=<precision348>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string345::string, tyVar=<string345>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at344_o}>, AST=read346::<read346>, tyVar=<read346>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at344_o}> -> <at344_a> with [(<at344_a>, [(at344, <precision348>, integer)]), (string, [(string345, <string345>, string)]), (object:<{at344_o}>, [(read346, <read346>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at344_o}> -> <at344_a>: [(<at344_a>, (integer, [(at344, <precision348>)])), (string, (string, [(string345, <string345>)])), (object:<{at344_o}>, (object:{marmalade.ledger.token-schema}, [(read346, <read346>)]))]
Adjusting type for solution: ((at344, <precision348>), <at344_a>, integer)
assocTy: (<precision348>, integer) <=> <at344_a>
assocTy: integer => <at344_a>
assocTy: (<precision348>, integer) <=> integer
assocTy: (<precision348>, integer) <= integer
Adjusting type for solution: ((string345, <string345>), string, string)
assocTy: (<string345>, string) <=> string
assocTy: (<string345>, string) <= string
assocTy: (<string345>, string) <=> string
assocTy: (<string345>, string) <= string
Adjusting type for solution: ((read346, <read346>), object:<{at344_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read346>, object:{marmalade.ledger.token-schema}) <=> object:<{at344_o}>
assocTy: (<{at344_o}>, <{at344_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at344_o}>, <{at344_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at344_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at344_o}>)
assocTy: (<read346>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read346>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-311_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-311_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-311_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-311_a[integer,decimal]> y:<-311_a[integer,decimal]> -> <-311_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-311_a[integer,decimal]>, AST=-311::<-311>, tyVar=<-311>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-311_a[integer,decimal]>, AST=BindSchema303_old-bal304::<BindSchema303_old-bal304_aa>, tyVar=<BindSchema303_old-bal304_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-311_a[integer,decimal]>, AST=inlinedCallArgs569_amount572::decimal, tyVar=<offer_amount211>, resolvedTy=decimal})]
tryFunType: trying x:<-311_a[integer,decimal]> y:<-311_a[integer,decimal]> -> <-311_a[integer,decimal]> with [(<-311_a[integer,decimal]>, [(-311, <-311>, decimal), (inlinedCallArgs569_amount572, <offer_amount211>, decimal), (BindSchema303_old-bal304, <BindSchema303_old-bal304_aa>, decimal)])]
Solved overload with x:<-311_a[integer,decimal]> y:<-311_a[integer,decimal]> -> <-311_a[integer,decimal]>: [(<-311_a[integer,decimal]>, (decimal, [(-311, <-311>), (inlinedCallArgs569_amount572, <offer_amount211>), (BindSchema303_old-bal304, <BindSchema303_old-bal304_aa>)]))]
Adjusting type for solution: ((-311, <-311>), <-311_a[integer,decimal]>, decimal)
assocTy: (<-311>, decimal) <=> <-311_a[integer,decimal]>
assocTy: decimal => <-311_a[integer,decimal]>
assocTy: (<-311>, decimal) <=> decimal
assocTy: (<-311>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs569_amount572, <offer_amount211>), <-311_a[integer,decimal]>, decimal)
assocTy: (<offer_amount211>, decimal) <=> <-311_a[integer,decimal]>
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
Adjusting type for solution: ((BindSchema303_old-bal304, <BindSchema303_old-bal304_aa>), <-311_a[integer,decimal]>, decimal)
assocTy: (<BindSchema303_old-bal304_aa>, decimal) <=> <-311_a[integer,decimal]>
assocTy: (<BindSchema303_old-bal304_aa>, decimal) <=> decimal
assocTy: (<BindSchema303_old-bal304_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor290::<floor290>, tyVar=<floor290>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs560_amount562::decimal, tyVar=<offer_amount211>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet279_p280::<BindLet279_p280_ai>, tyVar=<precision286>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet279_p280, <precision286>, integer)]), (decimal, [(floor290, <floor290>, decimal), (inlinedCallArgs560_amount562, <offer_amount211>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet279_p280, <precision286>)])), (decimal, (decimal, [(floor290, <floor290>), (inlinedCallArgs560_amount562, <offer_amount211>)]))]
Adjusting type for solution: ((BindLet279_p280, <precision286>), integer, integer)
assocTy: (<precision286>, integer) <=> integer
assocTy: (<precision286>, integer) <= integer
assocTy: (<precision286>, integer) <=> integer
assocTy: (<precision286>, integer) <= integer
Adjusting type for solution: ((floor290, <floor290>), decimal, decimal)
assocTy: (<floor290>, decimal) <=> decimal
assocTy: (<floor290>, decimal) <= decimal
assocTy: (<floor290>, decimal) <=> decimal
assocTy: (<floor290>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs560_amount562, <offer_amount211>), decimal, decimal)
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
assocTy: (<offer_amount211>, decimal) <=> decimal
assocTy: (<offer_amount211>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read284_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read284_row}>, roleTy=<read284>
tryFunType: cand: table:table:<{read284_row}> key:string -> object:<{read284_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read284_row}>, AST=read284::<read284>, tyVar=<read284>, resolvedTy=<read284>}), (ArgVar 0, RoleTys { candArgTy=table:<{read284_row}>, AST=marmalade.ledger.tokens285::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens285>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs558_id559::string, tyVar=<offer_id209>, resolvedTy=string})]
tryFunType: trying table:table:<{read284_row}> key:string -> object:<{read284_row}> with [(string, [(inlinedCallArgs558_id559, <offer_id209>, string)]), (table:<{read284_row}>, [(marmalade.ledger.tokens285, <marmalade.ledger.tokens285>, table:{marmalade.ledger.token-schema})]), (object:<{read284_row}>, [(read284, <read284>, <read284>)])]
Solved overload with table:table:<{read284_row}> key:string -> object:<{read284_row}>: [(string, (string, [(inlinedCallArgs558_id559, <offer_id209>)])), (table:<{read284_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens285, <marmalade.ledger.tokens285>)])), (object:<{read284_row}>, (object:<{read284_row}>, [(read284, <read284>)]))]
Adjusting type for solution: ((inlinedCallArgs558_id559, <offer_id209>), string, string)
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
assocTy: (<offer_id209>, string) <=> string
assocTy: (<offer_id209>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens285, <marmalade.ledger.tokens285>), table:<{read284_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens285>, table:{marmalade.ledger.token-schema}) <=> table:<{read284_row}>
assocTy: (<{read284_row}>, <{read284_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read284_row}>, <{read284_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read284_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read284_row}>)
assocTy: (<marmalade.ledger.tokens285>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens285>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read284, <read284>), object:<{read284_row}>, object:<{read284_row}>)
assocTy: (<read284>, <read284>) <=> object:<{read284_row}>
assocTy: (<read284>, <read284>) <= object:<{read284_row}>
assocTy: tracking/updating type variable <read284> <= object:<{read284_row}>
assocTy: (<read284>, object:{marmalade.ledger.token-schema}) <=> object:<{read284_row}>
assocTy: (<{read284_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read284_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read284_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at282_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at282_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at282_l>] -> <at282_a>: roles=[(RetVar, RoleTys { candArgTy=<at282_a>, AST=at282::<at282>, tyVar=<precision286>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at282_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at282_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at282_o}> -> <at282_a>, roles=[(RetVar, RoleTys { candArgTy=<at282_a>, AST=at282::<at282>, tyVar=<precision286>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string283::string, tyVar=<string283>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at282_o}>, AST=read284::<read284>, tyVar=<read284>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at282_o}> -> <at282_a> with [(<at282_a>, [(at282, <precision286>, integer)]), (string, [(string283, <string283>, string)]), (object:<{at282_o}>, [(read284, <read284>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at282_o}> -> <at282_a>: [(<at282_a>, (integer, [(at282, <precision286>)])), (string, (string, [(string283, <string283>)])), (object:<{at282_o}>, (object:{marmalade.ledger.token-schema}, [(read284, <read284>)]))]
Adjusting type for solution: ((at282, <precision286>), <at282_a>, integer)
assocTy: (<precision286>, integer) <=> <at282_a>
assocTy: integer => <at282_a>
assocTy: (<precision286>, integer) <=> integer
assocTy: (<precision286>, integer) <= integer
Adjusting type for solution: ((string283, <string283>), string, string)
assocTy: (<string283>, string) <=> string
assocTy: (<string283>, string) <= string
assocTy: (<string283>, string) <=> string
assocTy: (<string283>, string) <= string
Adjusting type for solution: ((read284, <read284>), object:<{at282_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read284>, object:{marmalade.ledger.token-schema}) <=> object:<{at282_o}>
assocTy: (<{at282_o}>, <{at282_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at282_o}>, <{at282_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at282_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at282_o}>)
assocTy: (<read284>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read284>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard257::<enforce-guard257>, tyVar=<enforce-guard257>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard274::<account-guard274>, tyVar=<account-guard273>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard257, <enforce-guard257>, bool)]), (guard, [(account-guard274, <account-guard273>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard257, <enforce-guard257>)])), (guard, (guard, [(account-guard274, <account-guard273>)]))]
Adjusting type for solution: ((enforce-guard257, <enforce-guard257>), bool, bool)
assocTy: (<enforce-guard257>, bool) <=> bool
assocTy: (<enforce-guard257>, bool) <= bool
assocTy: (<enforce-guard257>, bool) <=> bool
assocTy: (<enforce-guard257>, bool) <= bool
Adjusting type for solution: ((account-guard274, <account-guard273>), guard, guard)
assocTy: (<account-guard273>, guard) <=> guard
assocTy: (<account-guard273>, guard) <= guard
assocTy: (<account-guard273>, guard) <=> guard
assocTy: (<account-guard273>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.offer:bool (id:string sell...
===== Fun: (defcap marmalade.ledger.OFFER:bool (id:string sel...
trackAST: (OFFER_id633, string)
trackAST: (OFFER_seller634, string)
trackAST: (OFFER_amount635, decimal)
trackAST: (OFFER_timeout636, integer)
trackAST: (enforce637, <enforce637>)
trackAST: (sale-active_timeout638, integer)
trackAST: (<639, <<639>)
trackAST: (at640, <at640>)
trackAST: (string641, string)
trackAST: (chain-data642, <chain-data642>)
trackAST: (sale-active643, bool)
assocAST: (sale-active643, <sale-active643>, bool) => (<639, <<639>, <<639>)
trackAST: (sale-active644, <sale-active644>)
assocAST: (<639, <sale-active643>, bool) => (sale-active644, <sale-active644>, <sale-active644>)
trackAST: (string645, string)
trackAST: (compose-capability646, <compose-capability646>)
trackAST: (DEBIT_id647, string)
trackAST: (DEBIT_sender648, string)
trackAST: (enforce-guard649, <enforce-guard649>)
trackAST: (account-guard_id650, string)
trackAST: (account-guard_account651, string)
trackAST: (with-read652, <with-read652>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger653, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id654, string)
trackAST: (key_account655, string)
trackAST: (format656, <format656>)
trackAST: (string657, string)
trackAST: (list658, [<ak>])
trackAST: (key659, string)
assocAST: (key659, <key659>, string) => (format656, <format656>, <format656>)
trackAST: (key660, <key660>)
assocAST: (format656, <key659>, string) => (key660, <key660>, <key660>)
trackAST: (BindSchema661, <BindSchema661>)
trackAST: (BindSchema661_guard662, <BindSchema661_guard662_f>)
trackAST: (string663, string)
assocAST: (BindSchema661_guard662, <BindSchema661_guard662_f>, <BindSchema661_guard662_f>) => (BindSchema661, <BindSchema661>, <BindSchema661>)
trackAST: (BindSchema661schema664, *)
trackAST: (account-guard665, guard)
assocAST: (account-guard665, <account-guard665>, guard) => (with-read652, <with-read652>, <with-read652>)
trackAST: (account-guard666, <account-guard666>)
assocAST: (with-read652, <account-guard665>, guard) => (account-guard666, <account-guard666>, <account-guard666>)
trackAST: (DEBIT667, <e>)
assocAST: (enforce-guard649, <enforce-guard649>, <enforce-guard649>) => (DEBIT667, <e>, <e>)
trackAST: (DEBIT668, <DEBIT668>)
assocAST: (enforce-guard649, <enforce-guard649>, <enforce-guard649>) => (DEBIT668, <DEBIT668>, <DEBIT668>)
trackAST: (compose-capability669, <compose-capability669>)
trackAST: (CREDIT_id670, string)
trackAST: (CREDIT_receiver671, string)
trackAST: (bool672, bool)
trackAST: (CREDIT673, <g>)
assocAST: (bool672, <bool672>, bool) => (CREDIT673, <g>, <g>)
trackAST: (CREDIT674, <CREDIT674>)
trackAST: (format675, <format675>)
trackAST: (string676, string)
trackAST: (list677, [<at>])
trackAST: (pact-id678, <pact-id678>)
trackAST: (sale-account679, string)
assocAST: (sale-account679, <sale-account679>, string) => (format675, <format675>, <format675>)
trackAST: (sale-account680, <sale-account680>)
assocAST: (format675, <sale-account679>, string) => (sale-account680, <sale-account680>, <sale-account680>)
assocAST: (bool672, <bool672>, bool) => (CREDIT674, <CREDIT674>, <CREDIT674>)
trackAST: (OFFER681, bool)
assocAST: (OFFER681, <OFFER681>, bool) => (compose-capability669, <compose-capability669>, <compose-capability669>)
--------------------------------
 Substitute defuns:

assocTy: (<sale-active643>, bool) <=> bool
assocTy: (<sale-active643>, bool) <= bool
trackAST: (inlinedCallArgs682, <inlinedCallArgs682>)
assocTy: (<inlinedCallArgs682>, <inlinedCallArgs682>) <=> bool
assocTy: (<inlinedCallArgs682>, <inlinedCallArgs682>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs682> <= bool
trackAST: (inlinedCallArgs682_timeout683, integer)
assocAST: (OFFER_timeout636, <OFFER_timeout636>, integer) => (inlinedCallArgs682_timeout683, <inlinedCallArgs682_timeout683>, integer)
assocAST: (inlinedCallArgs682_timeout683, <OFFER_timeout636>, integer) => (sale-active_timeout638, <sale-active_timeout638>, integer)
assocTy: (<key659>, string) <=> string
assocTy: (<key659>, string) <= string
trackAST: (inlinedCallArgs684, <inlinedCallArgs684>)
assocTy: (<inlinedCallArgs684>, <inlinedCallArgs684>) <=> string
assocTy: (<inlinedCallArgs684>, <inlinedCallArgs684>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs684> <= string
trackAST: (inlinedCallArgs684_id685, string)
assocAST: (account-guard_id650, <account-guard_id650>, string) => (inlinedCallArgs684_id685, <inlinedCallArgs684_id685>, string)
trackAST: (inlinedCallArgs684_account686, string)
assocAST: (account-guard_account651, <account-guard_account651>, string) => (inlinedCallArgs684_account686, <inlinedCallArgs684_account686>, string)
assocAST: (inlinedCallArgs684_id685, <account-guard_id650>, string) => (key_id654, <key_id654>, string)
assocAST: (inlinedCallArgs684_account686, <account-guard_account651>, string) => (key_account655, <key_account655>, string)
assocTy: (<account-guard665>, guard) <=> guard
assocTy: (<account-guard665>, guard) <= guard
trackAST: (inlinedCallArgs687, <inlinedCallArgs687>)
assocTy: (<inlinedCallArgs687>, <inlinedCallArgs687>) <=> guard
assocTy: (<inlinedCallArgs687>, <inlinedCallArgs687>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs687> <= guard
trackAST: (inlinedCallArgs687_id688, string)
assocAST: (DEBIT_id647, <DEBIT_id647>, string) => (inlinedCallArgs687_id688, <inlinedCallArgs687_id688>, string)
trackAST: (inlinedCallArgs687_account689, string)
assocAST: (DEBIT_sender648, <DEBIT_sender648>, string) => (inlinedCallArgs687_account689, <inlinedCallArgs687_account689>, string)
assocAST: (inlinedCallArgs687_id688, <DEBIT_id647>, string) => (account-guard_id650, <account-guard_id650>, string)
assocAST: (inlinedCallArgs687_id688, <DEBIT_id647>, string) => (account-guard_id650, <DEBIT_id647>, string)
assocAST: (inlinedCallArgs687_account689, <DEBIT_sender648>, string) => (account-guard_account651, <account-guard_account651>, string)
assocAST: (inlinedCallArgs687_account689, <DEBIT_sender648>, string) => (account-guard_account651, <DEBIT_sender648>, string)
assocTy: (<enforce-guard649>, <enforce-guard649>) <=> <DEBIT668_e>
assocTy: (<enforce-guard649>, <enforce-guard649>) <= <DEBIT668_e>
assocTy: tracking/updating type variable <enforce-guard649> <= <DEBIT668_e>
trackAST: (inlinedCallArgs690, <inlinedCallArgs690>)
assocTy: (<inlinedCallArgs690>, <inlinedCallArgs690>) <=> <DEBIT668_e>
assocTy: (<inlinedCallArgs690>, <inlinedCallArgs690>) <= <DEBIT668_e>
assocTy: tracking/updating type variable <inlinedCallArgs690> <= <DEBIT668_e>
trackAST: (inlinedCallArgs690_id691, string)
assocAST: (OFFER_id633, <OFFER_id633>, string) => (inlinedCallArgs690_id691, <inlinedCallArgs690_id691>, string)
trackAST: (inlinedCallArgs690_sender692, string)
assocAST: (OFFER_seller634, <OFFER_seller634>, string) => (inlinedCallArgs690_sender692, <inlinedCallArgs690_sender692>, string)
assocAST: (inlinedCallArgs690_id691, <OFFER_id633>, string) => (DEBIT_id647, <DEBIT_id647>, string)
assocAST: (inlinedCallArgs690_id691, <OFFER_id633>, string) => (DEBIT_id647, <OFFER_id633>, string)
assocAST: (inlinedCallArgs690_sender692, <OFFER_seller634>, string) => (DEBIT_sender648, <DEBIT_sender648>, string)
assocAST: (inlinedCallArgs690_sender692, <OFFER_seller634>, string) => (DEBIT_sender648, <OFFER_seller634>, string)
assocTy: (<sale-account679>, string) <=> string
assocTy: (<sale-account679>, string) <= string
trackAST: (inlinedCallArgs693, <inlinedCallArgs693>)
assocTy: (<inlinedCallArgs693>, <inlinedCallArgs693>) <=> string
assocTy: (<inlinedCallArgs693>, <inlinedCallArgs693>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs693> <= string
assocTy: (<bool672>, bool) <=> <CREDIT674_g>
assocTy: bool => <CREDIT674_g>
trackAST: (inlinedCallArgs694, <inlinedCallArgs694>)
assocTy: (<inlinedCallArgs694>, <inlinedCallArgs694>) <=> <CREDIT674_g>
assocTy: (<inlinedCallArgs694>, <inlinedCallArgs694>) <= <CREDIT674_g>
assocTy: tracking/updating type variable <inlinedCallArgs694> <= <CREDIT674_g>
trackAST: (inlinedCallArgs694_id695, string)
assocAST: (OFFER_id633, <OFFER_id633>, string) => (inlinedCallArgs694_id695, <inlinedCallArgs694_id695>, string)
trackAST: (inlinedCallArgs694_receiver696, string)
assocAST: (sale-account680, <sale-account679>, string) => (inlinedCallArgs694_receiver696, <inlinedCallArgs694_receiver696>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<sale-active643>, bool) <=> bool
assocTy: (<sale-active643>, bool) <= bool
assocTy: (<string645>, string) <=> string
assocTy: (<string645>, string) <= string
assocTy: (<enforce637>, <enforce637>) <=> bool
assocTy: (<enforce637>, <enforce637>) <= bool
assocTy: tracking/updating type variable <enforce637> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<639_a[integer,decimal,string,time]> y:<<639_a[integer,decimal,string,time]> -> bool
assocTy: (<at640>, <at640>) <=> <<639_a[integer,decimal,string,time]>
assocTy: (<at640>, <at640>) <= <<639_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at640> <= <<639_a[integer,decimal,string,time]>
assocTy: (<OFFER_timeout636>, integer) <=> <<639_a[integer,decimal,string,time]>
assocTy: integer => <<639_a[integer,decimal,string,time]>
assocTy: (<sale-active643>, bool) <=> bool
assocTy: (<sale-active643>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data642>, <chain-data642>) <=> object:{.public-chain-data}
assocTy: (<chain-data642>, <chain-data642>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data642> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard649>, <DEBIT668_e>) <=> bool
assocTy: (<enforce-guard649>, <DEBIT668_e>) <= bool
assocTy: tracking/updating type variable <DEBIT668_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability646>, <compose-capability646>) <=> bool
assocTy: (<compose-capability646>, <compose-capability646>) <= bool
assocTy: tracking/updating type variable <compose-capability646> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read652_row}> key:string bindings:binding:<{with-read652_row}> -> <with-read652_a>
assocTy: (<marmalade.ledger.ledger653>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read652_row}>
assocTy: (<{with-read652_row}>, <{with-read652_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read652_row}>, <{with-read652_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read652_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read652_row}>)
assocTy: (<key659>, string) <=> string
assocTy: (<key659>, string) <= string
assocTy: (<account-guard665>, guard) <=> <with-read652_a>
assocTy: guard => <with-read652_a>
assocTy: (<BindSchema661_guard662_f>, <BindSchema661_guard662_f>) <=> <with-read652_a>
assocTy: (<BindSchema661_guard662_f>, <BindSchema661_guard662_f>) <= <with-read652_a>
assocTy: tracking/updating type variable <BindSchema661_guard662_f> <= <with-read652_a>
assocTy: (<BindSchema661schema664>, *) <=> binding:<{with-read652_row}>
assocTy: (<BindSchema661schema664>, *) <= binding:<{with-read652_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string657>, string) <=> string
assocTy: (<string657>, string) <= string
assocTy: (<list658>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key659>, string) <=> string
assocTy: (<key659>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool672>, bool) <=> bool
assocTy: (<bool672>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<OFFER681>, bool) <=> bool
assocTy: (<OFFER681>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string676>, string) <=> string
assocTy: (<string676>, string) <= string
assocTy: (<list677>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account679>, string) <=> string
assocTy: (<sale-account679>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id678>, <pact-id678>) <=> string
assocTy: (<pact-id678>, <pact-id678>) <= string
assocTy: tracking/updating type variable <pact-id678> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string676>, string) <=> string
assocTy: (<string676>, string) <= string
assocTy: (<list677>, [*]) <=> [*]
assocTy: (<list677>, [*]) <= [*]
assocTy: (<sale-account679>, string) <=> string
assocTy: (<sale-account679>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id678>, string) <=> string
assocTy: (<pact-id678>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema661schema664::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema661_guard662_f>, guard) <=> guard
assocTy: (<BindSchema661_guard662_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list658::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list677::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list677::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard649::<enforce-guard649>, tyVar=<enforce-guard649>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard666::<account-guard666>, tyVar=<account-guard665>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard649, <enforce-guard649>, bool)]), (guard, [(account-guard666, <account-guard665>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard649, <enforce-guard649>)])), (guard, (guard, [(account-guard666, <account-guard665>)]))]
Adjusting type for solution: ((enforce-guard649, <enforce-guard649>), bool, bool)
assocTy: (<enforce-guard649>, bool) <=> bool
assocTy: (<enforce-guard649>, bool) <= bool
assocTy: (<enforce-guard649>, bool) <=> bool
assocTy: (<enforce-guard649>, bool) <= bool
Adjusting type for solution: ((account-guard666, <account-guard665>), guard, guard)
assocTy: (<account-guard665>, guard) <=> guard
assocTy: (<account-guard665>, guard) <= guard
assocTy: (<account-guard665>, guard) <=> guard
assocTy: (<account-guard665>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at640_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at640_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at640_l>] -> <at640_a>: roles=[(RetVar, RoleTys { candArgTy=<at640_a>, AST=at640::<at640>, tyVar=<at640>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at640_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at640_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at640_o}> -> <at640_a>, roles=[(RetVar, RoleTys { candArgTy=<at640_a>, AST=at640::<at640>, tyVar=<at640>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string641::string, tyVar=<string641>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at640_o}>, AST=chain-data642::<chain-data642>, tyVar=<chain-data642>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at640_o}> -> <at640_a> with [(<at640_a>, [(at640, <at640>, integer)]), (string, [(string641, <string641>, string)]), (object:<{at640_o}>, [(chain-data642, <chain-data642>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at640_o}> -> <at640_a>: [(<at640_a>, (integer, [(at640, <at640>)])), (string, (string, [(string641, <string641>)])), (object:<{at640_o}>, (object:{.public-chain-data}, [(chain-data642, <chain-data642>)]))]
Adjusting type for solution: ((at640, <at640>), <at640_a>, integer)
assocTy: (<at640>, integer) <=> <at640_a>
assocTy: integer => <at640_a>
assocTy: (<at640>, integer) <=> integer
assocTy: (<at640>, integer) <= integer
Adjusting type for solution: ((string641, <string641>), string, string)
assocTy: (<string641>, string) <=> string
assocTy: (<string641>, string) <= string
assocTy: (<string641>, string) <=> string
assocTy: (<string641>, string) <= string
Adjusting type for solution: ((chain-data642, <chain-data642>), object:<{at640_o}>, object:{.public-chain-data})
assocTy: (<chain-data642>, object:{.public-chain-data}) <=> object:<{at640_o}>
assocTy: (<{at640_o}>, <{at640_o}>) <=> {.public-chain-data}
assocTy: (<{at640_o}>, <{at640_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at640_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at640_o}>)
assocTy: (<chain-data642>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data642>, object:{.public-chain-data}) <= object:{.public-chain-data}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.OFFER:bool (id:string sel...
===== Fun: (defun marmalade.ledger.create-account:bool (id:st...
trackAST: (create-account_id698, string)
trackAST: (create-account_account699, string)
trackAST: (create-account_guard700, guard)
trackAST: (enforce-valid-account_account701, string)
trackAST: (enforce702, <enforce702>)
trackAST: (>703, <>703>)
trackAST: (length704, <length704>)
trackAST: (integer705, integer)
trackAST: (string706, string)
trackAST: (enforce-valid-account707, <c>)
assocAST: (enforce702, <enforce702>, <enforce702>) => (enforce-valid-account707, <c>, <c>)
trackAST: (enforce-valid-account708, <enforce-valid-account708>)
assocAST: (enforce702, <enforce702>, <enforce702>) => (enforce-valid-account708, <enforce-valid-account708>, <enforce-valid-account708>)
trackAST: (enforce-reserved_account709, string)
trackAST: (enforce-reserved_guard710, guard)
trackAST: (BindLet711, <BindLet711>)
trackAST: (BindLet711_r712, <BindLet711_r712_g>)
trackAST: (check-reserved_account713, string)
trackAST: (BindLet714, <BindLet714>)
trackAST: (BindLet714_pfx715, <BindLet714_pfx715_f>)
trackAST: (take716, <take716>)
trackAST: (integer717, integer)
assocAST: (take716, <take716>, <take716>) => (BindLet714_pfx715, <BindLet714_pfx715_f>, <BindLet714_pfx715_f>)
trackAST: (if718, <if718>)
trackAST: (=719, <=719>)
trackAST: (string720, string)
trackAST: (take721, <take721>)
trackAST: (integer722, integer)
trackAST: (take723, <take723>)
trackAST: (integer724, integer)
trackAST: (string725, string)
assocAST: (if718, <if718>, <if718>) => (BindLet714, <BindLet714>, <BindLet714>)
trackAST: (check-reserved726, string)
assocAST: (check-reserved726, <check-reserved726>, string) => (BindLet714, <if718>, <if718>)
trackAST: (check-reserved727, <check-reserved727>)
assocAST: (BindLet714, <check-reserved726>, string) => (check-reserved727, <check-reserved727>, <check-reserved727>)
assocAST: (check-reserved727, <check-reserved726>, string) => (BindLet711_r712, <BindLet711_r712_g>, <BindLet711_r712_g>)
trackAST: (if728, <if728>)
trackAST: (=729, <=729>)
trackAST: (string730, string)
trackAST: (bool731, bool)
trackAST: (if732, <if732>)
trackAST: (=733, <=733>)
trackAST: (string734, string)
trackAST: (enforce735, <enforce735>)
trackAST: (=736, <=736>)
trackAST: (format737, <format737>)
trackAST: (string738, string)
trackAST: (list739, [<h>])
trackAST: (format740, <format740>)
trackAST: (string741, string)
trackAST: (list742, [<i>])
trackAST: (drop743, <drop743>)
trackAST: (integer744, integer)
trackAST: (string745, string)
trackAST: (enforce746, <enforce746>)
trackAST: (bool747, bool)
trackAST: (format748, <format748>)
trackAST: (string749, string)
trackAST: (list750, [<j>])
assocAST: (if728, <if728>, <if728>) => (BindLet711, <BindLet711>, <BindLet711>)
trackAST: (enforce-reserved751, bool)
assocAST: (enforce-reserved751, <enforce-reserved751>, bool) => (BindLet711, <if728>, <if728>)
trackAST: (enforce-reserved752, <enforce-reserved752>)
assocAST: (BindLet711, <enforce-reserved751>, bool) => (enforce-reserved752, <enforce-reserved752>, <enforce-reserved752>)
trackAST: (insert753, <insert753>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger754, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id755, string)
trackAST: (key_account756, string)
trackAST: (format757, <format757>)
trackAST: (string758, string)
trackAST: (list759, [<ak>])
trackAST: (key760, string)
assocAST: (key760, <key760>, string) => (format757, <format757>, <format757>)
trackAST: (key761, <key761>)
assocAST: (format757, <key760>, string) => (key761, <key761>, <key761>)
TObject: TyAny
trackAST: (object762, object:*)
trackAST: (decimal763, decimal)
trackAST: (emit-event764, <emit-event764>)
trackAST: (ACCOUNT_GUARD_id765, string)
trackAST: (ACCOUNT_GUARD_account766, string)
trackAST: (ACCOUNT_GUARD_guard767, guard)
trackAST: (bool768, bool)
trackAST: (ACCOUNT_GUARD769, bool)
assocAST: (bool768, <bool768>, bool) => (ACCOUNT_GUARD769, <ACCOUNT_GUARD769>, bool)
trackAST: (ACCOUNT_GUARD770, <ACCOUNT_GUARD770>)
assocAST: (bool768, <bool768>, bool) => (ACCOUNT_GUARD770, <ACCOUNT_GUARD770>, <ACCOUNT_GUARD770>)
trackAST: (create-account771, bool)
assocAST: (create-account771, <create-account771>, bool) => (emit-event764, <emit-event764>, <emit-event764>)
--------------------------------
 Substitute defuns:

assocTy: (<enforce702>, <enforce702>) <=> <enforce-valid-account708_c>
assocTy: (<enforce702>, <enforce702>) <= <enforce-valid-account708_c>
assocTy: tracking/updating type variable <enforce702> <= <enforce-valid-account708_c>
trackAST: (inlinedCallArgs772, <inlinedCallArgs772>)
assocTy: (<inlinedCallArgs772>, <inlinedCallArgs772>) <=> <enforce-valid-account708_c>
assocTy: (<inlinedCallArgs772>, <inlinedCallArgs772>) <= <enforce-valid-account708_c>
assocTy: tracking/updating type variable <inlinedCallArgs772> <= <enforce-valid-account708_c>
trackAST: (inlinedCallArgs772_account773, string)
assocAST: (create-account_account699, <create-account_account699>, string) => (inlinedCallArgs772_account773, <inlinedCallArgs772_account773>, string)
assocAST: (inlinedCallArgs772_account773, <create-account_account699>, string) => (enforce-valid-account_account701, <enforce-valid-account_account701>, string)
assocTy: (<check-reserved726>, string) <=> string
assocTy: (<check-reserved726>, string) <= string
trackAST: (inlinedCallArgs774, <inlinedCallArgs774>)
assocTy: (<inlinedCallArgs774>, <inlinedCallArgs774>) <=> string
assocTy: (<inlinedCallArgs774>, <inlinedCallArgs774>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs774> <= string
trackAST: (inlinedCallArgs774_account775, string)
assocAST: (enforce-reserved_account709, <enforce-reserved_account709>, string) => (inlinedCallArgs774_account775, <inlinedCallArgs774_account775>, string)
assocAST: (inlinedCallArgs774_account775, <enforce-reserved_account709>, string) => (check-reserved_account713, <check-reserved_account713>, string)
assocTy: (<enforce-reserved751>, bool) <=> bool
assocTy: (<enforce-reserved751>, bool) <= bool
trackAST: (inlinedCallArgs776, <inlinedCallArgs776>)
assocTy: (<inlinedCallArgs776>, <inlinedCallArgs776>) <=> bool
assocTy: (<inlinedCallArgs776>, <inlinedCallArgs776>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs776> <= bool
trackAST: (inlinedCallArgs776_account777, string)
assocAST: (create-account_account699, <create-account_account699>, string) => (inlinedCallArgs776_account777, <inlinedCallArgs776_account777>, string)
trackAST: (inlinedCallArgs776_guard778, guard)
assocAST: (create-account_guard700, <create-account_guard700>, guard) => (inlinedCallArgs776_guard778, <inlinedCallArgs776_guard778>, guard)
assocAST: (inlinedCallArgs776_account777, <create-account_account699>, string) => (enforce-reserved_account709, <enforce-reserved_account709>, string)
assocAST: (inlinedCallArgs776_account777, <create-account_account699>, string) => (enforce-reserved_account709, <create-account_account699>, string)
assocAST: (inlinedCallArgs776_account777, <create-account_account699>, string) => (enforce-reserved_account709, <create-account_account699>, string)
assocAST: (inlinedCallArgs776_guard778, <create-account_guard700>, guard) => (enforce-reserved_guard710, <enforce-reserved_guard710>, guard)
assocTy: (<key760>, string) <=> string
assocTy: (<key760>, string) <= string
trackAST: (inlinedCallArgs779, <inlinedCallArgs779>)
assocTy: (<inlinedCallArgs779>, <inlinedCallArgs779>) <=> string
assocTy: (<inlinedCallArgs779>, <inlinedCallArgs779>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs779> <= string
trackAST: (inlinedCallArgs779_id780, string)
assocAST: (create-account_id698, <create-account_id698>, string) => (inlinedCallArgs779_id780, <inlinedCallArgs779_id780>, string)
trackAST: (inlinedCallArgs779_account781, string)
assocAST: (create-account_account699, <create-account_account699>, string) => (inlinedCallArgs779_account781, <inlinedCallArgs779_account781>, string)
assocAST: (inlinedCallArgs779_id780, <create-account_id698>, string) => (key_id755, <key_id755>, string)
assocAST: (inlinedCallArgs779_account781, <create-account_account699>, string) => (key_account756, <key_account756>, string)
assocTy: (<bool768>, bool) <=> bool
assocTy: (<bool768>, bool) <= bool
trackAST: (inlinedCallArgs782, <inlinedCallArgs782>)
assocTy: (<inlinedCallArgs782>, <inlinedCallArgs782>) <=> bool
assocTy: (<inlinedCallArgs782>, <inlinedCallArgs782>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs782> <= bool
trackAST: (inlinedCallArgs782_id783, string)
assocAST: (create-account_id698, <create-account_id698>, string) => (inlinedCallArgs782_id783, <inlinedCallArgs782_id783>, string)
trackAST: (inlinedCallArgs782_account784, string)
assocAST: (create-account_account699, <create-account_account699>, string) => (inlinedCallArgs782_account784, <inlinedCallArgs782_account784>, string)
trackAST: (inlinedCallArgs782_guard785, guard)
assocAST: (create-account_guard700, <create-account_guard700>, guard) => (inlinedCallArgs782_guard785, <inlinedCallArgs782_guard785>, guard)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>703>, <>703>) <=> bool
assocTy: (<>703>, <>703>) <= bool
assocTy: tracking/updating type variable <>703> <= bool
assocTy: (<string706>, string) <=> string
assocTy: (<string706>, string) <= string
assocTy: (<enforce702>, <enforce-valid-account708_c>) <=> bool
assocTy: (<enforce702>, <enforce-valid-account708_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account708_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>703_a[integer,decimal,string,time]> y:<>703_a[integer,decimal,string,time]> -> bool
assocTy: (<length704>, <length704>) <=> <>703_a[integer,decimal,string,time]>
assocTy: (<length704>, <length704>) <= <>703_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length704> <= <>703_a[integer,decimal,string,time]>
assocTy: (<integer705>, integer) <=> <>703_a[integer,decimal,string,time]>
assocTy: integer => <>703_a[integer,decimal,string,time]>
assocTy: (<>703>, bool) <=> bool
assocTy: (<>703>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length704_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<create-account_account699>, string) <=> <length704_a[[<l>],string,object:<{o}>]>
assocTy: string => <length704_a[[<l>],string,object:<{o}>]>
assocTy: (<length704>, integer) <=> integer
assocTy: (<length704>, integer) <= integer
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if718_a> else:<if718_a> -> <if718_a>
assocTy: (<=719>, <=719>) <=> bool
assocTy: (<=719>, <=719>) <= bool
assocTy: tracking/updating type variable <=719> <= bool
assocTy: (<take723>, <take723>) <=> <if718_a>
assocTy: (<take723>, <take723>) <= <if718_a>
assocTy: tracking/updating type variable <take723> <= <if718_a>
assocTy: (<string725>, string) <=> <if718_a>
assocTy: string => <if718_a>
assocTy: (<check-reserved726>, string) <=> <if718_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string720>, string) <=> <=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take721>, <take721>) <=> <=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take721>, <take721>) <= <=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take721> <= <=719_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=719>, bool) <=> bool
assocTy: (<=719>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if728_a> else:<if728_a> -> <if728_a>
assocTy: (<=729>, <=729>) <=> bool
assocTy: (<=729>, <=729>) <= bool
assocTy: tracking/updating type variable <=729> <= bool
assocTy: (<bool731>, bool) <=> <if728_a>
assocTy: bool => <if728_a>
assocTy: (<if732>, <if732>) <=> <if728_a>
assocTy: (<if732>, <if732>) <= <if728_a>
assocTy: tracking/updating type variable <if732> <= <if728_a>
assocTy: (<enforce-reserved751>, bool) <=> <if728_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string730>, string) <=> <=729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved726>, string) <=> <=729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=729>, bool) <=> bool
assocTy: (<=729>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if732_a> else:<if732_a> -> <if732_a>
assocTy: (<=733>, <=733>) <=> bool
assocTy: (<=733>, <=733>) <= bool
assocTy: tracking/updating type variable <=733> <= bool
assocTy: (<enforce735>, <enforce735>) <=> <if732_a>
assocTy: (<enforce735>, <enforce735>) <= <if732_a>
assocTy: tracking/updating type variable <enforce735> <= <if732_a>
assocTy: (<enforce746>, <enforce746>) <=> <if732_a>
assocTy: (<enforce746>, <enforce746>) <= <if732_a>
assocTy: tracking/updating type variable <enforce746> <= <if732_a>
assocTy: (<if732>, bool) <=> <if732_a>
assocTy: bool => <if732_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=733_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=733_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string734>, string) <=> <=733_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=733_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved726>, string) <=> <=733_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=733>, bool) <=> bool
assocTy: (<=733>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=736>, <=736>) <=> bool
assocTy: (<=736>, <=736>) <= bool
assocTy: tracking/updating type variable <=736> <= bool
assocTy: (<string745>, string) <=> string
assocTy: (<string745>, string) <= string
assocTy: (<enforce735>, bool) <=> bool
assocTy: (<enforce735>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format737>, <format737>) <=> <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format737>, <format737>) <= <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format737> <= <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format740>, <format740>) <=> <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format740>, <format740>) <= <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format740> <= <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=736>, bool) <=> bool
assocTy: (<=736>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string738>, string) <=> string
assocTy: (<string738>, string) <= string
assocTy: (<list739>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format737>, <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format737>, <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string741>, string) <=> string
assocTy: (<string741>, string) <= string
assocTy: (<list742>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format740>, string) <=> string
assocTy: (<format740>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool747>, bool) <=> bool
assocTy: (<bool747>, bool) <= bool
assocTy: (<format748>, <format748>) <=> string
assocTy: (<format748>, <format748>) <= string
assocTy: tracking/updating type variable <format748> <= string
assocTy: (<enforce746>, bool) <=> bool
assocTy: (<enforce746>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string749>, string) <=> string
assocTy: (<string749>, string) <= string
assocTy: (<list750>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format748>, string) <=> string
assocTy: (<format748>, string) <= string
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{insert753_row}> key:string object:object:<{insert753_row}> -> string
assocTy: (<marmalade.ledger.ledger754>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{insert753_row}>
assocTy: (<{insert753_row}>, <{insert753_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{insert753_row}>, <{insert753_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{insert753_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{insert753_row}>)
assocTy: (<key760>, string) <=> string
assocTy: (<key760>, string) <= string
assocTy: (<object762>, object:*) <=> object:<{insert753_row}>
assocTy: (<object762>, object:*) <= object:<{insert753_row}>
assocTy: (<insert753>, <insert753>) <=> string
assocTy: (<insert753>, <insert753>) <= string
assocTy: tracking/updating type variable <insert753> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string758>, string) <=> string
assocTy: (<string758>, string) <= string
assocTy: (<list759>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key760>, string) <=> string
assocTy: (<key760>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool768>, bool) <=> bool
assocTy: (<bool768>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<create-account771>, bool) <=> bool
assocTy: (<create-account771>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list739::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list742::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list750::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list759::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object762::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<create-account_account699>, string) <=> string
assocTy: (<create-account_account699>, string) <= string
assocTy: (<decimal763>, decimal) <=> decimal
assocTy: (<decimal763>, decimal) <= decimal
assocTy: (<create-account_guard700>, guard) <=> guard
assocTy: (<create-account_guard700>, guard) <= guard
assocTy: (<create-account_id698>, string) <=> string
assocTy: (<create-account_id698>, string) <= string
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop743_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop743_a[[<l>],string]>, roleTy=<drop743>
tryFunType: cand: count:integer list:<drop743_a[[<l>],string]> -> <drop743_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop743_a[[<l>],string]>, AST=drop743::<drop743>, tyVar=<drop743>, resolvedTy=<drop743>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer744::integer, tyVar=<integer744>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop743_a[[<l>],string]>, AST=inlinedCallArgs776_account777::string, tyVar=<create-account_account699>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop743_a[[<l>],string]> -> <drop743_a[[<l>],string]> with [(<drop743_a[[<l>],string]>, [(drop743, <drop743>, <drop743>), (inlinedCallArgs776_account777, <create-account_account699>, string)]), (integer, [(integer744, <integer744>, integer)])]
Solved overload with count:integer list:<drop743_a[[<l>],string]> -> <drop743_a[[<l>],string]>: [(<drop743_a[[<l>],string]>, (string, [(drop743, <drop743>), (inlinedCallArgs776_account777, <create-account_account699>)])), (integer, (integer, [(integer744, <integer744>)]))]
Adjusting type for solution: ((drop743, <drop743>), <drop743_a[[<l>],string]>, string)
assocTy: (<drop743>, <drop743>) <=> <drop743_a[[<l>],string]>
assocTy: (<drop743>, <drop743>) <= <drop743_a[[<l>],string]>
assocTy: tracking/updating type variable <drop743> <= <drop743_a[[<l>],string]>
assocTy: (<drop743>, <drop743_a[[<l>],string]>) <=> string
assocTy: (<drop743>, <drop743_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop743_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs776_account777, <create-account_account699>), <drop743_a[[<l>],string]>, string)
assocTy: (<create-account_account699>, string) <=> <drop743_a[[<l>],string]>
assocTy: (<create-account_account699>, string) <=> string
assocTy: (<create-account_account699>, string) <= string
Adjusting type for solution: ((integer744, <integer744>), integer, integer)
assocTy: (<integer744>, integer) <=> integer
assocTy: (<integer744>, integer) <= integer
assocTy: (<integer744>, integer) <=> integer
assocTy: (<integer744>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take723_a[[<l>],string]>, roleTy=<take716>
tryFunType: unify role: role=RetVar, candTy=<take723_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take723_a[[<l>],string]> -> <take723_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take723_a[[<l>],string]>, AST=take723::<take723>, tyVar=<take723>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer724::integer, tyVar=<integer724>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take723_a[[<l>],string]>, AST=BindLet714_pfx715::<BindLet714_pfx715_f>, tyVar=<take716>, resolvedTy=<take716>})]
tryFunType: trying count:integer list:<take723_a[[<l>],string]> -> <take723_a[[<l>],string]> with [(<take723_a[[<l>],string]>, [(take723, <take723>, string), (BindLet714_pfx715, <take716>, <take716>)]), (integer, [(integer724, <integer724>, integer)])]
Solved overload with count:integer list:<take723_a[[<l>],string]> -> <take723_a[[<l>],string]>: [(<take723_a[[<l>],string]>, (string, [(take723, <take723>), (BindLet714_pfx715, <take716>)])), (integer, (integer, [(integer724, <integer724>)]))]
Adjusting type for solution: ((take723, <take723>), <take723_a[[<l>],string]>, string)
assocTy: (<take723>, string) <=> <take723_a[[<l>],string]>
assocTy: string => <take723_a[[<l>],string]>
assocTy: (<take723>, string) <=> string
assocTy: (<take723>, string) <= string
Adjusting type for solution: ((BindLet714_pfx715, <take716>), <take723_a[[<l>],string]>, string)
assocTy: (<take716>, <take716>) <=> <take723_a[[<l>],string]>
assocTy: (<take716>, <take716>) <= <take723_a[[<l>],string]>
assocTy: tracking/updating type variable <take716> <= <take723_a[[<l>],string]>
assocTy: (<take716>, string) <=> string
assocTy: (<take716>, string) <= string
Adjusting type for solution: ((integer724, <integer724>), integer, integer)
assocTy: (<integer724>, integer) <=> integer
assocTy: (<integer724>, integer) <= integer
assocTy: (<integer724>, integer) <=> integer
assocTy: (<integer724>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take721_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take721_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take721_a[[<l>],string]> -> <take721_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take721_a[[<l>],string]>, AST=take721::<take721>, tyVar=<take721>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer722::integer, tyVar=<integer722>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take721_a[[<l>],string]>, AST=BindLet714_pfx715::<BindLet714_pfx715_f>, tyVar=<take716>, resolvedTy=string})]
tryFunType: trying count:integer list:<take721_a[[<l>],string]> -> <take721_a[[<l>],string]> with [(<take721_a[[<l>],string]>, [(take721, <take721>, string), (BindLet714_pfx715, <take716>, string)]), (integer, [(integer722, <integer722>, integer)])]
Solved overload with count:integer list:<take721_a[[<l>],string]> -> <take721_a[[<l>],string]>: [(<take721_a[[<l>],string]>, (string, [(take721, <take721>), (BindLet714_pfx715, <take716>)])), (integer, (integer, [(integer722, <integer722>)]))]
Adjusting type for solution: ((take721, <take721>), <take721_a[[<l>],string]>, string)
assocTy: (<take721>, string) <=> <take721_a[[<l>],string]>
assocTy: string => <take721_a[[<l>],string]>
assocTy: (<take721>, string) <=> string
assocTy: (<take721>, string) <= string
Adjusting type for solution: ((BindLet714_pfx715, <take716>), <take721_a[[<l>],string]>, string)
assocTy: (<take716>, string) <=> <take721_a[[<l>],string]>
assocTy: (<take716>, string) <=> string
assocTy: (<take716>, string) <= string
Adjusting type for solution: ((integer722, <integer722>), integer, integer)
assocTy: (<integer722>, integer) <=> integer
assocTy: (<integer722>, integer) <= integer
assocTy: (<integer722>, integer) <=> integer
assocTy: (<integer722>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take716_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take716_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take716_a[[<l>],string]> -> <take716_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take716_a[[<l>],string]>, AST=take716::<take716>, tyVar=<take716>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer717::integer, tyVar=<integer717>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take716_a[[<l>],string]>, AST=inlinedCallArgs774_account775::string, tyVar=<create-account_account699>, resolvedTy=string})]
tryFunType: trying count:integer list:<take716_a[[<l>],string]> -> <take716_a[[<l>],string]> with [(<take716_a[[<l>],string]>, [(take716, <take716>, string), (inlinedCallArgs774_account775, <create-account_account699>, string)]), (integer, [(integer717, <integer717>, integer)])]
Solved overload with count:integer list:<take716_a[[<l>],string]> -> <take716_a[[<l>],string]>: [(<take716_a[[<l>],string]>, (string, [(take716, <take716>), (inlinedCallArgs774_account775, <create-account_account699>)])), (integer, (integer, [(integer717, <integer717>)]))]
Adjusting type for solution: ((take716, <take716>), <take716_a[[<l>],string]>, string)
assocTy: (<take716>, string) <=> <take716_a[[<l>],string]>
assocTy: string => <take716_a[[<l>],string]>
assocTy: (<take716>, string) <=> string
assocTy: (<take716>, string) <= string
Adjusting type for solution: ((inlinedCallArgs774_account775, <create-account_account699>), <take716_a[[<l>],string]>, string)
assocTy: (<create-account_account699>, string) <=> <take716_a[[<l>],string]>
assocTy: (<create-account_account699>, string) <=> string
assocTy: (<create-account_account699>, string) <= string
Adjusting type for solution: ((integer717, <integer717>), integer, integer)
assocTy: (<integer717>, integer) <=> integer
assocTy: (<integer717>, integer) <= integer
assocTy: (<integer717>, integer) <=> integer
assocTy: (<integer717>, integer) <= integer
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.create-account:bool (id:st...
===== Fun: (defcap marmalade.ledger.SUPPLY:bool (id:string su...
trackAST: (SUPPLY_id787, string)
trackAST: (SUPPLY_supply788, decimal)
trackAST: (bool789, bool)
trackAST: (SUPPLY790, bool)
assocAST: (bool789, <bool789>, bool) => (SUPPLY790, <SUPPLY790>, bool)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.SUPPLY:bool (id:string su...
===== Fun: (defcap marmalade.ledger.ACCOUNT_GUARD:bool (id:st...
trackAST: (ACCOUNT_GUARD_id792, string)
trackAST: (ACCOUNT_GUARD_account793, string)
trackAST: (ACCOUNT_GUARD_guard794, guard)
trackAST: (bool795, bool)
trackAST: (ACCOUNT_GUARD796, bool)
assocAST: (bool795, <bool795>, bool) => (ACCOUNT_GUARD796, <ACCOUNT_GUARD796>, bool)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.ACCOUNT_GUARD:bool (id:st...
===== Fun: (defcap marmalade.ledger.TOKEN:bool (id:string pre...
trackAST: (TOKEN_id798, string)
trackAST: (TOKEN_precision799, integer)
trackAST: (TOKEN_supply800, decimal)
trackAST: (TOKEN_policy801, module{kip.token-policy-v1})
trackAST: (bool802, bool)
trackAST: (TOKEN803, bool)
assocAST: (bool802, <bool802>, bool) => (TOKEN803, <TOKEN803>, bool)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.TOKEN:bool (id:string pre...
===== Fun: (defun marmalade.ledger.burn:bool (id:string accou...
trackAST: (burn_id805, string)
trackAST: (burn_account806, string)
trackAST: (burn_amount807, decimal)
trackAST: (with-capability808, <with-capability808>)
trackAST: (BURN_id809, string)
trackAST: (BURN_account810, string)
trackAST: (BURN_amount811, decimal)
trackAST: (enforce812, <enforce812>)
trackAST: (<813, <<813>)
trackAST: (decimal814, decimal)
trackAST: (string815, string)
trackAST: (compose-capability816, <compose-capability816>)
trackAST: (DEBIT_id817, string)
trackAST: (DEBIT_sender818, string)
trackAST: (enforce-guard819, <enforce-guard819>)
trackAST: (account-guard_id820, string)
trackAST: (account-guard_account821, string)
trackAST: (with-read822, <with-read822>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger823, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id824, string)
trackAST: (key_account825, string)
trackAST: (format826, <format826>)
trackAST: (string827, string)
trackAST: (list828, [<ak>])
trackAST: (key829, string)
assocAST: (key829, <key829>, string) => (format826, <format826>, <format826>)
trackAST: (key830, <key830>)
assocAST: (format826, <key829>, string) => (key830, <key830>, <key830>)
trackAST: (BindSchema831, <BindSchema831>)
trackAST: (BindSchema831_guard832, <BindSchema831_guard832_f>)
trackAST: (string833, string)
assocAST: (BindSchema831_guard832, <BindSchema831_guard832_f>, <BindSchema831_guard832_f>) => (BindSchema831, <BindSchema831>, <BindSchema831>)
trackAST: (BindSchema831schema834, *)
trackAST: (account-guard835, guard)
assocAST: (account-guard835, <account-guard835>, guard) => (with-read822, <with-read822>, <with-read822>)
trackAST: (account-guard836, <account-guard836>)
assocAST: (with-read822, <account-guard835>, guard) => (account-guard836, <account-guard836>, <account-guard836>)
trackAST: (DEBIT837, <e>)
assocAST: (enforce-guard819, <enforce-guard819>, <enforce-guard819>) => (DEBIT837, <e>, <e>)
trackAST: (DEBIT838, <DEBIT838>)
assocAST: (enforce-guard819, <enforce-guard819>, <enforce-guard819>) => (DEBIT838, <DEBIT838>, <DEBIT838>)
trackAST: (compose-capability839, <compose-capability839>)
trackAST: (bool840, bool)
trackAST: (UPDATE_SUPPLY841, <h>)
assocAST: (bool840, <bool840>, bool) => (UPDATE_SUPPLY841, <h>, <h>)
trackAST: (UPDATE_SUPPLY842, <UPDATE_SUPPLY842>)
assocAST: (bool840, <bool840>, bool) => (UPDATE_SUPPLY842, <UPDATE_SUPPLY842>, <UPDATE_SUPPLY842>)
trackAST: (BURN843, <j>)
assocAST: (compose-capability839, <compose-capability839>, <compose-capability839>) => (BURN843, <j>, <j>)
trackAST: (BURN844, <BURN844>)
assocAST: (compose-capability839, <compose-capability839>, <compose-capability839>) => (BURN844, <BURN844>, <BURN844>)
trackAST: (list845, [*])
trackAST: (bind846, <bind846>)
trackAST: (get-policy-info_id847, string)
trackAST: (with-read848, <with-read848>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens849, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema850, <BindSchema850>)
trackAST: (BindSchema850_policy851, module{kip.token-policy-v1})
trackAST: (string852, string)
trackAST: (BindSchema850_supply853, <BindSchema850_supply853_k>)
trackAST: (string854, string)
trackAST: (BindSchema850_precision855, <BindSchema850_precision855_l>)
trackAST: (string856, string)
trackAST: (BindSchema850_manifest857, <BindSchema850_manifest857_m>)
trackAST: (string858, string)
TObject: TyAny
trackAST: (object859, object:*)
TObject: TyAny
trackAST: (object860, object:*)
assocAST: (object859, <object859>, object:*) => (BindSchema850, <BindSchema850>, <BindSchema850>)
trackAST: (BindSchema850schema861, *)
trackAST: (get-policy-info862, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info862, <get-policy-info862>, object:{marmalade.ledger.policy-info}) => (with-read848, <with-read848>, <with-read848>)
trackAST: (get-policy-info863, <get-policy-info863>)
assocAST: (with-read848, <get-policy-info862>, object:{marmalade.ledger.policy-info}) => (get-policy-info863, <get-policy-info863>, <get-policy-info863>)
trackAST: (BindSchema864, <BindSchema864>)
trackAST: (BindSchema864_policy865, module{kip.token-policy-v1})
trackAST: (string866, string)
trackAST: (BindSchema864_token867, <BindSchema864_token867_y>)
trackAST: (string868, string)
trackAST: (enforce-burn_token869, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-burn_account870, string)
trackAST: (enforce-burn_amount871, decimal)
trackAST: (enforce-burn872, bool)
trackAST: (enforce-burn873, <enforce-burn873>)
assocAST: (enforce-burn872, <enforce-burn872>, bool) => (enforce-burn873, <enforce-burn873>, <enforce-burn873>)
assocAST: (enforce-burn873, <enforce-burn872>, bool) => (BindSchema864, <BindSchema864>, <BindSchema864>)
trackAST: (BindSchema864schema874, *)
trackAST: (BindLet875, <BindLet875>)
trackAST: (BindLet875_sender876, <BindLet875_sender876_z>)
trackAST: (debit_id877, string)
trackAST: (debit_account878, string)
trackAST: (debit_amount879, decimal)
trackAST: (require-capability880, <require-capability880>)
trackAST: (DEBIT_id881, string)
trackAST: (DEBIT_sender882, string)
trackAST: (enforce-guard883, <enforce-guard883>)
trackAST: (account-guard_id884, string)
trackAST: (account-guard_account885, string)
trackAST: (with-read886, <with-read886>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger887, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id888, string)
trackAST: (key_account889, string)
trackAST: (format890, <format890>)
trackAST: (string891, string)
trackAST: (list892, [<ak>])
trackAST: (key893, string)
assocAST: (key893, <key893>, string) => (format890, <format890>, <format890>)
trackAST: (key894, <key894>)
assocAST: (format890, <key893>, string) => (key894, <key894>, <key894>)
trackAST: (BindSchema895, <BindSchema895>)
trackAST: (BindSchema895_guard896, <BindSchema895_guard896_f>)
trackAST: (string897, string)
assocAST: (BindSchema895_guard896, <BindSchema895_guard896_f>, <BindSchema895_guard896_f>) => (BindSchema895, <BindSchema895>, <BindSchema895>)
trackAST: (BindSchema895schema898, *)
trackAST: (account-guard899, guard)
assocAST: (account-guard899, <account-guard899>, guard) => (with-read886, <with-read886>, <with-read886>)
trackAST: (account-guard900, <account-guard900>)
assocAST: (with-read886, <account-guard899>, guard) => (account-guard900, <account-guard900>, <account-guard900>)
trackAST: (DEBIT901, <e>)
assocAST: (enforce-guard883, <enforce-guard883>, <enforce-guard883>) => (DEBIT901, <e>, <e>)
trackAST: (DEBIT902, <DEBIT902>)
assocAST: (enforce-guard883, <enforce-guard883>, <enforce-guard883>) => (DEBIT902, <DEBIT902>, <DEBIT902>)
trackAST: (enforce-unit_id903, string)
trackAST: (enforce-unit_amount904, decimal)
trackAST: (BindLet905, <BindLet905>)
trackAST: (BindLet905_p906, <BindLet905_p906_ai>)
trackAST: (precision_id907, string)
trackAST: (at908, <at908>)
trackAST: (string909, string)
trackAST: (read910, <read910>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens911, table:{marmalade.ledger.token-schema})
trackAST: (precision912, integer)
assocAST: (precision912, <precision912>, integer) => (at908, <at908>, <at908>)
trackAST: (precision913, <precision913>)
assocAST: (at908, <precision912>, integer) => (precision913, <precision913>, <precision913>)
assocAST: (precision913, <precision912>, integer) => (BindLet905_p906, <BindLet905_p906_ai>, <BindLet905_p906_ai>)
trackAST: (enforce914, <enforce914>)
trackAST: (=915, <=915>)
trackAST: (floor916, <floor916>)
trackAST: (string917, string)
assocAST: (enforce914, <enforce914>, <enforce914>) => (BindLet905, <BindLet905>, <BindLet905>)
trackAST: (enforce-unit918, bool)
assocAST: (enforce-unit918, <enforce-unit918>, bool) => (BindLet905, <enforce914>, <enforce914>)
trackAST: (enforce-unit919, <enforce-unit919>)
assocAST: (BindLet905, <enforce-unit918>, bool) => (enforce-unit919, <enforce-unit919>, <enforce-unit919>)
trackAST: (with-read920, <with-read920>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger921, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id922, string)
trackAST: (key_account923, string)
trackAST: (format924, <format924>)
trackAST: (string925, string)
trackAST: (list926, [<ak>])
trackAST: (key927, string)
assocAST: (key927, <key927>, string) => (format924, <format924>, <format924>)
trackAST: (key928, <key928>)
assocAST: (format924, <key927>, string) => (key928, <key928>, <key928>)
trackAST: (BindSchema929, <BindSchema929>)
trackAST: (BindSchema929_old-bal930, <BindSchema929_old-bal930_aa>)
trackAST: (string931, string)
trackAST: (enforce932, <enforce932>)
trackAST: (<=933, <<=933>)
trackAST: (string934, string)
trackAST: (BindLet935, <BindLet935>)
trackAST: (BindLet935_new-bal936, <BindLet935_new-bal936_ab>)
trackAST: (-937, <-937>)
assocAST: (-937, <-937>, <-937>) => (BindLet935_new-bal936, <BindLet935_new-bal936_ab>, <BindLet935_new-bal936_ab>)
trackAST: (update938, <update938>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger939, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id940, string)
trackAST: (key_account941, string)
trackAST: (format942, <format942>)
trackAST: (string943, string)
trackAST: (list944, [<ak>])
trackAST: (key945, string)
assocAST: (key945, <key945>, string) => (format942, <format942>, <format942>)
trackAST: (key946, <key946>)
assocAST: (format942, <key945>, string) => (key946, <key946>, <key946>)
TObject: TyAny
trackAST: (object947, object:*)
TObject: TyAny
trackAST: (object948, object:*)
assocAST: (object948, <object948>, object:*) => (BindLet935, <BindLet935>, <BindLet935>)
assocAST: (BindLet935, <object948>, object:*) => (BindSchema929, <BindSchema929>, <BindSchema929>)
trackAST: (BindSchema929schema949, *)
trackAST: (debit950, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit950, <debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read920, <with-read920>, <with-read920>)
trackAST: (debit951, <debit951>)
assocAST: (with-read920, <debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit951, <debit951>, <debit951>)
assocAST: (debit951, <debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet875_sender876, <BindLet875_sender876_z>, <BindLet875_sender876_z>)
trackAST: (BindLet875_receiver952, object:{kip.poly-fungible-v3.receiver-balance-change})
TObject: TyAny
trackAST: (object953, object:*)
trackAST: (string954, string)
trackAST: (decimal955, decimal)
trackAST: (decimal956, decimal)
assocAST: (BindLet875_receiver952, <BindLet875_receiver952>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (object953, <object953>, object:*)
trackAST: (emit-event957, <emit-event957>)
trackAST: (RECONCILE_token-id958, string)
trackAST: (RECONCILE_amount959, decimal)
trackAST: (RECONCILE_sender960, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver961, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool962, bool)
trackAST: (RECONCILE963, bool)
assocAST: (bool962, <bool962>, bool) => (RECONCILE963, <RECONCILE963>, bool)
trackAST: (RECONCILE964, <RECONCILE964>)
assocAST: (bool962, <bool962>, bool) => (RECONCILE964, <RECONCILE964>, <RECONCILE964>)
trackAST: (update-supply_id965, string)
trackAST: (update-supply_amount966, decimal)
trackAST: (require-capability967, <require-capability967>)
trackAST: (bool968, bool)
trackAST: (UPDATE_SUPPLY969, <h>)
assocAST: (bool968, <bool968>, bool) => (UPDATE_SUPPLY969, <h>, <h>)
trackAST: (UPDATE_SUPPLY970, <UPDATE_SUPPLY970>)
assocAST: (bool968, <bool968>, bool) => (UPDATE_SUPPLY970, <UPDATE_SUPPLY970>, <UPDATE_SUPPLY970>)
trackAST: (with-default-read971, <with-default-read971>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens972, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object973, object:*)
trackAST: (decimal974, decimal)
trackAST: (BindSchema975, <BindSchema975>)
trackAST: (BindSchema975_s976, <BindSchema975_s976_ag>)
trackAST: (string977, string)
trackAST: (BindLet978, <BindLet978>)
trackAST: (BindLet978_new-supply979, <BindLet978_new-supply979_ah>)
trackAST: (+980, <+980>)
assocAST: (+980, <+980>, <+980>) => (BindLet978_new-supply979, <BindLet978_new-supply979_ah>, <BindLet978_new-supply979_ah>)
trackAST: (update981, <update981>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens982, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object983, object:*)
trackAST: (emit-event984, <emit-event984>)
trackAST: (SUPPLY_id985, string)
trackAST: (SUPPLY_supply986, decimal)
trackAST: (bool987, bool)
trackAST: (SUPPLY988, bool)
assocAST: (bool987, <bool987>, bool) => (SUPPLY988, <SUPPLY988>, bool)
trackAST: (SUPPLY989, <SUPPLY989>)
assocAST: (bool987, <bool987>, bool) => (SUPPLY989, <SUPPLY989>, <SUPPLY989>)
assocAST: (emit-event984, <emit-event984>, <emit-event984>) => (BindLet978, <BindLet978>, <BindLet978>)
assocAST: (BindLet978, <emit-event984>, <emit-event984>) => (BindSchema975, <BindSchema975>, <BindSchema975>)
trackAST: (BindSchema975schema990, *)
trackAST: (update-supply991, bool)
assocAST: (update-supply991, <update-supply991>, bool) => (with-default-read971, <with-default-read971>, <with-default-read971>)
trackAST: (update-supply992, <update-supply992>)
trackAST: (-993, <-993>)
assocAST: (with-default-read971, <update-supply991>, bool) => (update-supply992, <update-supply992>, <update-supply992>)
assocAST: (update-supply992, <update-supply991>, bool) => (BindLet875, <BindLet875>, <BindLet875>)
trackAST: (burn994, bool)
assocAST: (burn994, <burn994>, bool) => (with-capability808, <with-capability808>, <with-capability808>)
--------------------------------
 Substitute defuns:

assocTy: (<enforce-burn872>, bool) <=> bool
assocTy: (<enforce-burn872>, bool) <= bool
trackAST: (inlinedCallArgs995, <inlinedCallArgs995>)
assocTy: (<inlinedCallArgs995>, <inlinedCallArgs995>) <=> bool
assocTy: (<inlinedCallArgs995>, <inlinedCallArgs995>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs995> <= bool
trackAST: (inlinedCallArgs995_token996, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs995_token996, <inlinedCallArgs995_token996>, object:{kip.token-policy-v1.token-info}) => (BindSchema864_token867, <BindSchema864_token867_y>, <BindSchema864_token867_y>)
trackAST: (inlinedCallArgs995_account997, string)
assocAST: (burn_account806, <burn_account806>, string) => (inlinedCallArgs995_account997, <inlinedCallArgs995_account997>, string)
trackAST: (inlinedCallArgs995_amount998, decimal)
assocAST: (burn_amount807, <burn_amount807>, decimal) => (inlinedCallArgs995_amount998, <inlinedCallArgs995_amount998>, decimal)
assocTy: (<get-policy-info862>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info862>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs999, <inlinedCallArgs999>)
assocTy: (<inlinedCallArgs999>, <inlinedCallArgs999>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs999>, <inlinedCallArgs999>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs999> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs999_id1000, string)
assocAST: (burn_id805, <burn_id805>, string) => (inlinedCallArgs999_id1000, <inlinedCallArgs999_id1000>, string)
assocAST: (inlinedCallArgs999_id1000, <burn_id805>, string) => (get-policy-info_id847, <get-policy-info_id847>, string)
assocAST: (inlinedCallArgs999_id1000, <burn_id805>, string) => (get-policy-info_id847, <burn_id805>, string)
assocTy: (<key893>, string) <=> string
assocTy: (<key893>, string) <= string
trackAST: (inlinedCallArgs1001, <inlinedCallArgs1001>)
assocTy: (<inlinedCallArgs1001>, <inlinedCallArgs1001>) <=> string
assocTy: (<inlinedCallArgs1001>, <inlinedCallArgs1001>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1001> <= string
trackAST: (inlinedCallArgs1001_id1002, string)
assocAST: (account-guard_id884, <account-guard_id884>, string) => (inlinedCallArgs1001_id1002, <inlinedCallArgs1001_id1002>, string)
trackAST: (inlinedCallArgs1001_account1003, string)
assocAST: (account-guard_account885, <account-guard_account885>, string) => (inlinedCallArgs1001_account1003, <inlinedCallArgs1001_account1003>, string)
assocAST: (inlinedCallArgs1001_id1002, <account-guard_id884>, string) => (key_id888, <key_id888>, string)
assocAST: (inlinedCallArgs1001_account1003, <account-guard_account885>, string) => (key_account889, <key_account889>, string)
assocTy: (<account-guard899>, guard) <=> guard
assocTy: (<account-guard899>, guard) <= guard
trackAST: (inlinedCallArgs1004, <inlinedCallArgs1004>)
assocTy: (<inlinedCallArgs1004>, <inlinedCallArgs1004>) <=> guard
assocTy: (<inlinedCallArgs1004>, <inlinedCallArgs1004>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1004> <= guard
trackAST: (inlinedCallArgs1004_id1005, string)
assocAST: (DEBIT_id881, <DEBIT_id881>, string) => (inlinedCallArgs1004_id1005, <inlinedCallArgs1004_id1005>, string)
trackAST: (inlinedCallArgs1004_account1006, string)
assocAST: (DEBIT_sender882, <DEBIT_sender882>, string) => (inlinedCallArgs1004_account1006, <inlinedCallArgs1004_account1006>, string)
assocAST: (inlinedCallArgs1004_id1005, <DEBIT_id881>, string) => (account-guard_id884, <account-guard_id884>, string)
assocAST: (inlinedCallArgs1004_id1005, <DEBIT_id881>, string) => (account-guard_id884, <DEBIT_id881>, string)
assocAST: (inlinedCallArgs1004_account1006, <DEBIT_sender882>, string) => (account-guard_account885, <account-guard_account885>, string)
assocAST: (inlinedCallArgs1004_account1006, <DEBIT_sender882>, string) => (account-guard_account885, <DEBIT_sender882>, string)
assocTy: (<enforce-guard883>, <enforce-guard883>) <=> <DEBIT902_e>
assocTy: (<enforce-guard883>, <enforce-guard883>) <= <DEBIT902_e>
assocTy: tracking/updating type variable <enforce-guard883> <= <DEBIT902_e>
trackAST: (inlinedCallArgs1007, <inlinedCallArgs1007>)
assocTy: (<inlinedCallArgs1007>, <inlinedCallArgs1007>) <=> <DEBIT902_e>
assocTy: (<inlinedCallArgs1007>, <inlinedCallArgs1007>) <= <DEBIT902_e>
assocTy: tracking/updating type variable <inlinedCallArgs1007> <= <DEBIT902_e>
trackAST: (inlinedCallArgs1007_id1008, string)
assocAST: (debit_id877, <debit_id877>, string) => (inlinedCallArgs1007_id1008, <inlinedCallArgs1007_id1008>, string)
trackAST: (inlinedCallArgs1007_sender1009, string)
assocAST: (debit_account878, <debit_account878>, string) => (inlinedCallArgs1007_sender1009, <inlinedCallArgs1007_sender1009>, string)
assocAST: (inlinedCallArgs1007_id1008, <debit_id877>, string) => (DEBIT_id881, <DEBIT_id881>, string)
assocAST: (inlinedCallArgs1007_id1008, <debit_id877>, string) => (DEBIT_id881, <debit_id877>, string)
assocAST: (inlinedCallArgs1007_sender1009, <debit_account878>, string) => (DEBIT_sender882, <DEBIT_sender882>, string)
assocAST: (inlinedCallArgs1007_sender1009, <debit_account878>, string) => (DEBIT_sender882, <debit_account878>, string)
assocTy: (<precision912>, integer) <=> integer
assocTy: (<precision912>, integer) <= integer
trackAST: (inlinedCallArgs1010, <inlinedCallArgs1010>)
assocTy: (<inlinedCallArgs1010>, <inlinedCallArgs1010>) <=> integer
assocTy: (<inlinedCallArgs1010>, <inlinedCallArgs1010>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1010> <= integer
trackAST: (inlinedCallArgs1010_id1011, string)
assocAST: (enforce-unit_id903, <enforce-unit_id903>, string) => (inlinedCallArgs1010_id1011, <inlinedCallArgs1010_id1011>, string)
assocAST: (inlinedCallArgs1010_id1011, <enforce-unit_id903>, string) => (precision_id907, <precision_id907>, string)
assocTy: (<enforce-unit918>, bool) <=> bool
assocTy: (<enforce-unit918>, bool) <= bool
trackAST: (inlinedCallArgs1012, <inlinedCallArgs1012>)
assocTy: (<inlinedCallArgs1012>, <inlinedCallArgs1012>) <=> bool
assocTy: (<inlinedCallArgs1012>, <inlinedCallArgs1012>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1012> <= bool
trackAST: (inlinedCallArgs1012_id1013, string)
assocAST: (debit_id877, <debit_id877>, string) => (inlinedCallArgs1012_id1013, <inlinedCallArgs1012_id1013>, string)
trackAST: (inlinedCallArgs1012_amount1014, decimal)
assocAST: (debit_amount879, <debit_amount879>, decimal) => (inlinedCallArgs1012_amount1014, <inlinedCallArgs1012_amount1014>, decimal)
assocAST: (inlinedCallArgs1012_id1013, <debit_id877>, string) => (enforce-unit_id903, <enforce-unit_id903>, string)
assocAST: (inlinedCallArgs1012_id1013, <debit_id877>, string) => (enforce-unit_id903, <debit_id877>, string)
assocAST: (inlinedCallArgs1012_amount1014, <debit_amount879>, decimal) => (enforce-unit_amount904, <enforce-unit_amount904>, decimal)
assocAST: (inlinedCallArgs1012_amount1014, <debit_amount879>, decimal) => (enforce-unit_amount904, <debit_amount879>, decimal)
assocTy: (<key945>, string) <=> string
assocTy: (<key945>, string) <= string
trackAST: (inlinedCallArgs1015, <inlinedCallArgs1015>)
assocTy: (<inlinedCallArgs1015>, <inlinedCallArgs1015>) <=> string
assocTy: (<inlinedCallArgs1015>, <inlinedCallArgs1015>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1015> <= string
trackAST: (inlinedCallArgs1015_id1016, string)
assocAST: (debit_id877, <debit_id877>, string) => (inlinedCallArgs1015_id1016, <inlinedCallArgs1015_id1016>, string)
trackAST: (inlinedCallArgs1015_account1017, string)
assocAST: (debit_account878, <debit_account878>, string) => (inlinedCallArgs1015_account1017, <inlinedCallArgs1015_account1017>, string)
assocAST: (inlinedCallArgs1015_id1016, <debit_id877>, string) => (key_id940, <key_id940>, string)
assocAST: (inlinedCallArgs1015_account1017, <debit_account878>, string) => (key_account941, <key_account941>, string)
assocTy: (<key927>, string) <=> string
assocTy: (<key927>, string) <= string
trackAST: (inlinedCallArgs1018, <inlinedCallArgs1018>)
assocTy: (<inlinedCallArgs1018>, <inlinedCallArgs1018>) <=> string
assocTy: (<inlinedCallArgs1018>, <inlinedCallArgs1018>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1018> <= string
trackAST: (inlinedCallArgs1018_id1019, string)
assocAST: (debit_id877, <debit_id877>, string) => (inlinedCallArgs1018_id1019, <inlinedCallArgs1018_id1019>, string)
trackAST: (inlinedCallArgs1018_account1020, string)
assocAST: (debit_account878, <debit_account878>, string) => (inlinedCallArgs1018_account1020, <inlinedCallArgs1018_account1020>, string)
assocAST: (inlinedCallArgs1018_id1019, <debit_id877>, string) => (key_id922, <key_id922>, string)
assocAST: (inlinedCallArgs1018_account1020, <debit_account878>, string) => (key_account923, <key_account923>, string)
assocTy: (<debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs1021, <inlinedCallArgs1021>)
assocTy: (<inlinedCallArgs1021>, <inlinedCallArgs1021>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs1021>, <inlinedCallArgs1021>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs1021> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs1021_id1022, string)
assocAST: (burn_id805, <burn_id805>, string) => (inlinedCallArgs1021_id1022, <inlinedCallArgs1021_id1022>, string)
trackAST: (inlinedCallArgs1021_account1023, string)
assocAST: (burn_account806, <burn_account806>, string) => (inlinedCallArgs1021_account1023, <inlinedCallArgs1021_account1023>, string)
trackAST: (inlinedCallArgs1021_amount1024, decimal)
assocAST: (burn_amount807, <burn_amount807>, decimal) => (inlinedCallArgs1021_amount1024, <inlinedCallArgs1021_amount1024>, decimal)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <debit_id877>, string)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <debit_account878>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <burn_account806>, string)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_amount1024, <burn_amount807>, decimal) => (debit_amount879, <debit_amount879>, decimal)
assocAST: (inlinedCallArgs1021_amount1024, <burn_amount807>, decimal) => (debit_amount879, <burn_amount807>, decimal)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_id1022, <burn_id805>, string) => (debit_id877, <burn_id805>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <burn_account806>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <burn_account806>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <burn_account806>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <burn_account806>, string)
assocAST: (inlinedCallArgs1021_account1023, <burn_account806>, string) => (debit_account878, <burn_account806>, string)
assocAST: (inlinedCallArgs1021_amount1024, <burn_amount807>, decimal) => (debit_amount879, <burn_amount807>, decimal)
assocAST: (inlinedCallArgs1021_amount1024, <burn_amount807>, decimal) => (debit_amount879, <burn_amount807>, decimal)
assocTy: (<bool962>, bool) <=> bool
assocTy: (<bool962>, bool) <= bool
trackAST: (inlinedCallArgs1025, <inlinedCallArgs1025>)
assocTy: (<inlinedCallArgs1025>, <inlinedCallArgs1025>) <=> bool
assocTy: (<inlinedCallArgs1025>, <inlinedCallArgs1025>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1025> <= bool
trackAST: (inlinedCallArgs1025_token-id1026, string)
assocAST: (burn_id805, <burn_id805>, string) => (inlinedCallArgs1025_token-id1026, <inlinedCallArgs1025_token-id1026>, string)
trackAST: (inlinedCallArgs1025_amount1027, decimal)
assocAST: (burn_amount807, <burn_amount807>, decimal) => (inlinedCallArgs1025_amount1027, <inlinedCallArgs1025_amount1027>, decimal)
trackAST: (inlinedCallArgs1025_sender1028, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet875_sender876, <debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs1025_sender1028, <inlinedCallArgs1025_sender1028>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs1025_receiver1029, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet875_receiver952, <BindLet875_receiver952>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs1025_receiver1029, <inlinedCallArgs1025_receiver1029>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<bool968>, bool) <=> <UPDATE_SUPPLY970_h>
assocTy: bool => <UPDATE_SUPPLY970_h>
trackAST: (inlinedCallArgs1030, <inlinedCallArgs1030>)
assocTy: (<inlinedCallArgs1030>, <inlinedCallArgs1030>) <=> <UPDATE_SUPPLY970_h>
assocTy: (<inlinedCallArgs1030>, <inlinedCallArgs1030>) <= <UPDATE_SUPPLY970_h>
assocTy: tracking/updating type variable <inlinedCallArgs1030> <= <UPDATE_SUPPLY970_h>
assocTy: (<bool987>, bool) <=> bool
assocTy: (<bool987>, bool) <= bool
trackAST: (inlinedCallArgs1031, <inlinedCallArgs1031>)
assocTy: (<inlinedCallArgs1031>, <inlinedCallArgs1031>) <=> bool
assocTy: (<inlinedCallArgs1031>, <inlinedCallArgs1031>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1031> <= bool
trackAST: (inlinedCallArgs1031_id1032, string)
assocAST: (update-supply_id965, <update-supply_id965>, string) => (inlinedCallArgs1031_id1032, <inlinedCallArgs1031_id1032>, string)
trackAST: (inlinedCallArgs1031_supply1033, decimal)
assocAST: (inlinedCallArgs1031_supply1033, <inlinedCallArgs1031_supply1033>, decimal) => (BindLet978_new-supply979, <+980>, <+980>)
assocTy: (<update-supply991>, bool) <=> bool
assocTy: (<update-supply991>, bool) <= bool
trackAST: (inlinedCallArgs1034, <inlinedCallArgs1034>)
assocTy: (<inlinedCallArgs1034>, <inlinedCallArgs1034>) <=> bool
assocTy: (<inlinedCallArgs1034>, <inlinedCallArgs1034>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1034> <= bool
trackAST: (inlinedCallArgs1034_id1035, string)
assocAST: (burn_id805, <burn_id805>, string) => (inlinedCallArgs1034_id1035, <inlinedCallArgs1034_id1035>, string)
trackAST: (inlinedCallArgs1034_amount1036, decimal)
assocAST: (inlinedCallArgs1034_amount1036, <inlinedCallArgs1034_amount1036>, decimal) => (-993, <-993>, <-993>)
assocAST: (inlinedCallArgs1034_id1035, <burn_id805>, string) => (update-supply_id965, <update-supply_id965>, string)
assocAST: (inlinedCallArgs1034_id1035, <burn_id805>, string) => (update-supply_id965, <burn_id805>, string)
assocAST: (inlinedCallArgs1034_id1035, <burn_id805>, string) => (update-supply_id965, <burn_id805>, string)
assocAST: (inlinedCallArgs1034_id1035, <burn_id805>, string) => (update-supply_id965, <burn_id805>, string)
assocAST: (inlinedCallArgs1034_amount1036, <inlinedCallArgs1034_amount1036>, decimal) => (update-supply_amount966, <update-supply_amount966>, decimal)
assocTy: (<key829>, string) <=> string
assocTy: (<key829>, string) <= string
trackAST: (inlinedCallArgs1037, <inlinedCallArgs1037>)
assocTy: (<inlinedCallArgs1037>, <inlinedCallArgs1037>) <=> string
assocTy: (<inlinedCallArgs1037>, <inlinedCallArgs1037>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1037> <= string
trackAST: (inlinedCallArgs1037_id1038, string)
assocAST: (account-guard_id820, <account-guard_id820>, string) => (inlinedCallArgs1037_id1038, <inlinedCallArgs1037_id1038>, string)
trackAST: (inlinedCallArgs1037_account1039, string)
assocAST: (account-guard_account821, <account-guard_account821>, string) => (inlinedCallArgs1037_account1039, <inlinedCallArgs1037_account1039>, string)
assocAST: (inlinedCallArgs1037_id1038, <account-guard_id820>, string) => (key_id824, <key_id824>, string)
assocAST: (inlinedCallArgs1037_account1039, <account-guard_account821>, string) => (key_account825, <key_account825>, string)
assocTy: (<account-guard835>, guard) <=> guard
assocTy: (<account-guard835>, guard) <= guard
trackAST: (inlinedCallArgs1040, <inlinedCallArgs1040>)
assocTy: (<inlinedCallArgs1040>, <inlinedCallArgs1040>) <=> guard
assocTy: (<inlinedCallArgs1040>, <inlinedCallArgs1040>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1040> <= guard
trackAST: (inlinedCallArgs1040_id1041, string)
assocAST: (DEBIT_id817, <DEBIT_id817>, string) => (inlinedCallArgs1040_id1041, <inlinedCallArgs1040_id1041>, string)
trackAST: (inlinedCallArgs1040_account1042, string)
assocAST: (DEBIT_sender818, <DEBIT_sender818>, string) => (inlinedCallArgs1040_account1042, <inlinedCallArgs1040_account1042>, string)
assocAST: (inlinedCallArgs1040_id1041, <DEBIT_id817>, string) => (account-guard_id820, <account-guard_id820>, string)
assocAST: (inlinedCallArgs1040_id1041, <DEBIT_id817>, string) => (account-guard_id820, <DEBIT_id817>, string)
assocAST: (inlinedCallArgs1040_account1042, <DEBIT_sender818>, string) => (account-guard_account821, <account-guard_account821>, string)
assocAST: (inlinedCallArgs1040_account1042, <DEBIT_sender818>, string) => (account-guard_account821, <DEBIT_sender818>, string)
assocTy: (<enforce-guard819>, <enforce-guard819>) <=> <DEBIT838_e>
assocTy: (<enforce-guard819>, <enforce-guard819>) <= <DEBIT838_e>
assocTy: tracking/updating type variable <enforce-guard819> <= <DEBIT838_e>
trackAST: (inlinedCallArgs1043, <inlinedCallArgs1043>)
assocTy: (<inlinedCallArgs1043>, <inlinedCallArgs1043>) <=> <DEBIT838_e>
assocTy: (<inlinedCallArgs1043>, <inlinedCallArgs1043>) <= <DEBIT838_e>
assocTy: tracking/updating type variable <inlinedCallArgs1043> <= <DEBIT838_e>
trackAST: (inlinedCallArgs1043_id1044, string)
assocAST: (BURN_id809, <BURN_id809>, string) => (inlinedCallArgs1043_id1044, <inlinedCallArgs1043_id1044>, string)
trackAST: (inlinedCallArgs1043_sender1045, string)
assocAST: (BURN_account810, <BURN_account810>, string) => (inlinedCallArgs1043_sender1045, <inlinedCallArgs1043_sender1045>, string)
assocAST: (inlinedCallArgs1043_id1044, <BURN_id809>, string) => (DEBIT_id817, <DEBIT_id817>, string)
assocAST: (inlinedCallArgs1043_id1044, <BURN_id809>, string) => (DEBIT_id817, <BURN_id809>, string)
assocAST: (inlinedCallArgs1043_sender1045, <BURN_account810>, string) => (DEBIT_sender818, <DEBIT_sender818>, string)
assocAST: (inlinedCallArgs1043_sender1045, <BURN_account810>, string) => (DEBIT_sender818, <BURN_account810>, string)
assocTy: (<bool840>, bool) <=> <UPDATE_SUPPLY842_h>
assocTy: bool => <UPDATE_SUPPLY842_h>
trackAST: (inlinedCallArgs1046, <inlinedCallArgs1046>)
assocTy: (<inlinedCallArgs1046>, <inlinedCallArgs1046>) <=> <UPDATE_SUPPLY842_h>
assocTy: (<inlinedCallArgs1046>, <inlinedCallArgs1046>) <= <UPDATE_SUPPLY842_h>
assocTy: tracking/updating type variable <inlinedCallArgs1046> <= <UPDATE_SUPPLY842_h>
assocTy: (<compose-capability839>, <compose-capability839>) <=> <BURN844_j>
assocTy: (<compose-capability839>, <compose-capability839>) <= <BURN844_j>
assocTy: tracking/updating type variable <compose-capability839> <= <BURN844_j>
trackAST: (inlinedCallArgs1047, <inlinedCallArgs1047>)
assocTy: (<inlinedCallArgs1047>, <inlinedCallArgs1047>) <=> <BURN844_j>
assocTy: (<inlinedCallArgs1047>, <inlinedCallArgs1047>) <= <BURN844_j>
assocTy: tracking/updating type variable <inlinedCallArgs1047> <= <BURN844_j>
trackAST: (inlinedCallArgs1047_id1048, string)
assocAST: (burn_id805, <burn_id805>, string) => (inlinedCallArgs1047_id1048, <inlinedCallArgs1047_id1048>, string)
trackAST: (inlinedCallArgs1047_account1049, string)
assocAST: (burn_account806, <burn_account806>, string) => (inlinedCallArgs1047_account1049, <inlinedCallArgs1047_account1049>, string)
trackAST: (inlinedCallArgs1047_amount1050, decimal)
assocAST: (burn_amount807, <burn_amount807>, decimal) => (inlinedCallArgs1047_amount1050, <inlinedCallArgs1047_amount1050>, decimal)
assocAST: (inlinedCallArgs1047_amount1050, <burn_amount807>, decimal) => (BURN_amount811, <BURN_amount811>, decimal)
assocAST: (inlinedCallArgs1047_id1048, <burn_id805>, string) => (BURN_id809, <BURN_id809>, string)
assocAST: (inlinedCallArgs1047_id1048, <burn_id805>, string) => (BURN_id809, <burn_id805>, string)
assocAST: (inlinedCallArgs1047_account1049, <burn_account806>, string) => (BURN_account810, <BURN_account810>, string)
assocAST: (inlinedCallArgs1047_account1049, <burn_account806>, string) => (BURN_account810, <burn_account806>, string)
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability808_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<compose-capability839>, <BURN844_j>) <=> bool
assocTy: (<compose-capability839>, <BURN844_j>) <= bool
assocTy: tracking/updating type variable <BURN844_j> <= bool
associating partial AST args with lambda arg types
assocTy: (<burn994>, bool) <=> <with-capability808_a>
assocTy: bool => <with-capability808_a>
assocTy: (<update-supply991>, bool) <=> <with-capability808_a>
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind846_row}> binding:binding:<{bind846_row}> -> <bind846_a>
assocTy: (<get-policy-info862>, object:{marmalade.ledger.policy-info}) <=> object:<{bind846_row}>
assocTy: (<{bind846_row}>, <{bind846_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind846_row}>, <{bind846_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind846_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind846_row}>)
assocTy: (<bind846>, <bind846>) <=> <bind846_a>
assocTy: (<bind846>, <bind846>) <= <bind846_a>
assocTy: tracking/updating type variable <bind846> <= <bind846_a>
assocTy: (<enforce-burn872>, bool) <=> <bind846_a>
assocTy: bool => <bind846_a>
assocTy: (<BindSchema864schema874>, *) <=> binding:<{bind846_row}>
assocTy: (<BindSchema864schema874>, *) <= binding:<{bind846_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read848_row}> key:string bindings:binding:<{with-read848_row}> -> <with-read848_a>
assocTy: (<marmalade.ledger.tokens849>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read848_row}>
assocTy: (<{with-read848_row}>, <{with-read848_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read848_row}>, <{with-read848_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read848_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read848_row}>)
assocTy: (<burn_id805>, string) <=> string
assocTy: (<burn_id805>, string) <= string
assocTy: (<get-policy-info862>, object:{marmalade.ledger.policy-info}) <=> <with-read848_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read848_a>
assocTy: (<object859>, object:*) <=> <with-read848_a>
assocTy: (<BindSchema850schema861>, *) <=> binding:<{with-read848_row}>
assocTy: (<BindSchema850schema861>, *) <= binding:<{with-read848_row}>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard883>, <DEBIT902_e>) <=> bool
assocTy: (<enforce-guard883>, <DEBIT902_e>) <= bool
assocTy: tracking/updating type variable <DEBIT902_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability880>, <require-capability880>) <=> bool
assocTy: (<require-capability880>, <require-capability880>) <= bool
assocTy: tracking/updating type variable <require-capability880> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read886_row}> key:string bindings:binding:<{with-read886_row}> -> <with-read886_a>
assocTy: (<marmalade.ledger.ledger887>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read886_row}>
assocTy: (<{with-read886_row}>, <{with-read886_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read886_row}>, <{with-read886_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read886_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read886_row}>)
assocTy: (<key893>, string) <=> string
assocTy: (<key893>, string) <= string
assocTy: (<account-guard899>, guard) <=> <with-read886_a>
assocTy: guard => <with-read886_a>
assocTy: (<BindSchema895_guard896_f>, <BindSchema895_guard896_f>) <=> <with-read886_a>
assocTy: (<BindSchema895_guard896_f>, <BindSchema895_guard896_f>) <= <with-read886_a>
assocTy: tracking/updating type variable <BindSchema895_guard896_f> <= <with-read886_a>
assocTy: (<BindSchema895schema898>, *) <=> binding:<{with-read886_row}>
assocTy: (<BindSchema895schema898>, *) <= binding:<{with-read886_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string891>, string) <=> string
assocTy: (<string891>, string) <= string
assocTy: (<list892>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key893>, string) <=> string
assocTy: (<key893>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=915>, <=915>) <=> bool
assocTy: (<=915>, <=915>) <= bool
assocTy: tracking/updating type variable <=915> <= bool
assocTy: (<string917>, string) <=> string
assocTy: (<string917>, string) <= string
assocTy: (<enforce-unit918>, bool) <=> bool
assocTy: (<enforce-unit918>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor916>, <floor916>) <=> <=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor916>, <floor916>) <= <=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor916> <= <=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<burn_amount807>, decimal) <=> <=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=915_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=915>, bool) <=> bool
assocTy: (<=915>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read920_row}> key:string bindings:binding:<{with-read920_row}> -> <with-read920_a>
assocTy: (<marmalade.ledger.ledger921>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read920_row}>
assocTy: (<{with-read920_row}>, <{with-read920_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read920_row}>, <{with-read920_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read920_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read920_row}>)
assocTy: (<key927>, string) <=> string
assocTy: (<key927>, string) <= string
assocTy: (<debit950>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read920_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read920_a>
assocTy: (<object948>, object:*) <=> <with-read920_a>
assocTy: (<BindSchema929schema949>, *) <=> binding:<{with-read920_row}>
assocTy: (<BindSchema929schema949>, *) <= binding:<{with-read920_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=933>, <<=933>) <=> bool
assocTy: (<<=933>, <<=933>) <= bool
assocTy: tracking/updating type variable <<=933> <= bool
assocTy: (<string934>, string) <=> string
assocTy: (<string934>, string) <= string
assocTy: (<enforce932>, <enforce932>) <=> bool
assocTy: (<enforce932>, <enforce932>) <= bool
assocTy: tracking/updating type variable <enforce932> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=933_a[integer,decimal,string,time]> y:<<=933_a[integer,decimal,string,time]> -> bool
assocTy: (<burn_amount807>, decimal) <=> <<=933_a[integer,decimal,string,time]>
assocTy: decimal => <<=933_a[integer,decimal,string,time]>
assocTy: (<BindSchema929_old-bal930_aa>, <BindSchema929_old-bal930_aa>) <=> <<=933_a[integer,decimal,string,time]>
assocTy: (<BindSchema929_old-bal930_aa>, <BindSchema929_old-bal930_aa>) <= <<=933_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema929_old-bal930_aa> <= <<=933_a[integer,decimal,string,time]>
assocTy: (<<=933>, bool) <=> bool
assocTy: (<<=933>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update938_row}> key:string object:object:~<{update938_row}> -> string
assocTy: (<marmalade.ledger.ledger939>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update938_row}>
assocTy: (<{update938_row}>, <{update938_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update938_row}>, <{update938_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update938_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update938_row}>)
assocTy: (<key945>, string) <=> string
assocTy: (<key945>, string) <= string
assocTy: (<object947>, object:*) <=> object:~<{update938_row}>
assocTy: (<object947>, object:*) <= object:~<{update938_row}>
assocTy: (<update938>, <update938>) <=> string
assocTy: (<update938>, <update938>) <= string
assocTy: tracking/updating type variable <update938> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string943>, string) <=> string
assocTy: (<string943>, string) <= string
assocTy: (<list944>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key945>, string) <=> string
assocTy: (<key945>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string925>, string) <=> string
assocTy: (<string925>, string) <= string
assocTy: (<list926>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key927>, string) <=> string
assocTy: (<key927>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool962>, bool) <=> bool
assocTy: (<bool962>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event957>, <emit-event957>) <=> bool
assocTy: (<emit-event957>, <emit-event957>) <= bool
assocTy: tracking/updating type variable <emit-event957> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool968>, bool) <=> bool
assocTy: (<bool968>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability967>, <require-capability967>) <=> bool
assocTy: (<require-capability967>, <require-capability967>) <= bool
assocTy: tracking/updating type variable <require-capability967> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read971_row}> key:string defaults:object:~<{with-default-read971_row}> bindings:binding:~<{with-default-read971_row}> -> <with-default-read971_a>
assocTy: (<marmalade.ledger.tokens972>, table:{marmalade.ledger.token-schema}) <=> table:<{with-default-read971_row}>
assocTy: (<{with-default-read971_row}>, <{with-default-read971_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-default-read971_row}>, <{with-default-read971_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-default-read971_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-default-read971_row}>)
assocTy: (<burn_id805>, string) <=> string
assocTy: (<burn_id805>, string) <= string
assocTy: (<object973>, object:*) <=> object:~<{with-default-read971_row}>
assocTy: (<object973>, object:*) <= object:~<{with-default-read971_row}>
assocTy: (<update-supply991>, bool) <=> <with-default-read971_a>
assocTy: bool => <with-default-read971_a>
assocTy: (<emit-event984>, <emit-event984>) <=> <with-default-read971_a>
assocTy: (<emit-event984>, <emit-event984>) <= <with-default-read971_a>
assocTy: tracking/updating type variable <emit-event984> <= <with-default-read971_a>
assocTy: (<BindSchema975schema990>, *) <=> binding:~<{with-default-read971_row}>
assocTy: (<BindSchema975schema990>, *) <= binding:~<{with-default-read971_row}>
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update981_row}> key:string object:object:~<{update981_row}> -> string
assocTy: (<marmalade.ledger.tokens982>, table:{marmalade.ledger.token-schema}) <=> table:<{update981_row}>
assocTy: (<{update981_row}>, <{update981_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{update981_row}>, <{update981_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{update981_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{update981_row}>)
assocTy: (<burn_id805>, string) <=> string
assocTy: (<burn_id805>, string) <= string
assocTy: (<object983>, object:*) <=> object:~<{update981_row}>
assocTy: (<object983>, object:*) <= object:~<{update981_row}>
assocTy: (<update981>, <update981>) <=> string
assocTy: (<update981>, <update981>) <= string
assocTy: tracking/updating type variable <update981> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool987>, bool) <=> bool
assocTy: (<bool987>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event984>, bool) <=> bool
assocTy: (<emit-event984>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<813>, <<813>) <=> bool
assocTy: (<<813>, <<813>) <= bool
assocTy: tracking/updating type variable <<813> <= bool
assocTy: (<string815>, string) <=> string
assocTy: (<string815>, string) <= string
assocTy: (<enforce812>, <enforce812>) <=> bool
assocTy: (<enforce812>, <enforce812>) <= bool
assocTy: tracking/updating type variable <enforce812> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<813_a[integer,decimal,string,time]> y:<<813_a[integer,decimal,string,time]> -> bool
assocTy: (<decimal814>, decimal) <=> <<813_a[integer,decimal,string,time]>
assocTy: decimal => <<813_a[integer,decimal,string,time]>
assocTy: (<burn_amount807>, decimal) <=> <<813_a[integer,decimal,string,time]>
assocTy: (<<813>, bool) <=> bool
assocTy: (<<813>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard819>, <DEBIT838_e>) <=> bool
assocTy: (<enforce-guard819>, <DEBIT838_e>) <= bool
assocTy: tracking/updating type variable <DEBIT838_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability816>, <compose-capability816>) <=> bool
assocTy: (<compose-capability816>, <compose-capability816>) <= bool
assocTy: tracking/updating type variable <compose-capability816> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read822_row}> key:string bindings:binding:<{with-read822_row}> -> <with-read822_a>
assocTy: (<marmalade.ledger.ledger823>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read822_row}>
assocTy: (<{with-read822_row}>, <{with-read822_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read822_row}>, <{with-read822_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read822_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read822_row}>)
assocTy: (<key829>, string) <=> string
assocTy: (<key829>, string) <= string
assocTy: (<account-guard835>, guard) <=> <with-read822_a>
assocTy: guard => <with-read822_a>
assocTy: (<BindSchema831_guard832_f>, <BindSchema831_guard832_f>) <=> <with-read822_a>
assocTy: (<BindSchema831_guard832_f>, <BindSchema831_guard832_f>) <= <with-read822_a>
assocTy: tracking/updating type variable <BindSchema831_guard832_f> <= <with-read822_a>
assocTy: (<BindSchema831schema834>, *) <=> binding:<{with-read822_row}>
assocTy: (<BindSchema831schema834>, *) <= binding:<{with-read822_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string827>, string) <=> string
assocTy: (<string827>, string) <= string
assocTy: (<list828>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key829>, string) <=> string
assocTy: (<key829>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool840>, bool) <=> bool
assocTy: (<bool840>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability839>, bool) <=> bool
assocTy: (<compose-capability839>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list845::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema864schema874::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema864_policy865>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema864_policy865>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs995_token996>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs995_token996>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema850schema861::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema850_manifest857_m>, <BindSchema850_manifest857_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema850_manifest857_m>, <BindSchema850_manifest857_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema850_manifest857_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema850_policy851>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema850_policy851>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema850_precision855_l>, <BindSchema850_precision855_l>) <=> integer
assocTy: (<BindSchema850_precision855_l>, <BindSchema850_precision855_l>) <= integer
assocTy: tracking/updating type variable <BindSchema850_precision855_l> <= integer
assocTy: (<BindSchema850_supply853_k>, <BindSchema850_supply853_k>) <=> decimal
assocTy: (<BindSchema850_supply853_k>, <BindSchema850_supply853_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema850_supply853_k> <= decimal
applySchemas [binding]: (BindSchema895schema898::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema895_guard896_f>, guard) <=> guard
assocTy: (<BindSchema895_guard896_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list892::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema929schema949::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema929_old-bal930_aa>, decimal) <=> decimal
assocTy: (<BindSchema929_old-bal930_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list944::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object947::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-937>, <-937>) <=> decimal
assocTy: (<-937>, <-937>) <= decimal
assocTy: tracking/updating type variable <-937> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object947>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object947>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list926::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object953::object:*, {kip.poly-fungible-v3.receiver-balance-change}, FullSchema)
assocTy: (<string954>, string) <=> string
assocTy: (<string954>, string) <= string
assocTy: (<decimal955>, decimal) <=> decimal
assocTy: (<decimal955>, decimal) <= decimal
assocTy: (<decimal956>, decimal) <=> decimal
assocTy: (<decimal956>, decimal) <= decimal
applySchemas [binding]: (BindSchema975schema990::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema975_s976_ag>, <BindSchema975_s976_ag>) <=> decimal
assocTy: (<BindSchema975_s976_ag>, <BindSchema975_s976_ag>) <= decimal
assocTy: tracking/updating type variable <BindSchema975_s976_ag> <= decimal
applySchemas [object]: (object983::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<inlinedCallArgs1031_supply1033>, decimal) <=> decimal
assocTy: (<inlinedCallArgs1031_supply1033>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object983>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object983>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
applySchemas [object]: (object973::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<decimal974>, decimal) <=> decimal
assocTy: (<decimal974>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object973>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object973>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
applySchemas [binding]: (BindSchema831schema834::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema831_guard832_f>, guard) <=> guard
assocTy: (<BindSchema831_guard832_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list828::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard819::<enforce-guard819>, tyVar=<enforce-guard819>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard836::<account-guard836>, tyVar=<account-guard835>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard819, <enforce-guard819>, bool)]), (guard, [(account-guard836, <account-guard835>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard819, <enforce-guard819>)])), (guard, (guard, [(account-guard836, <account-guard835>)]))]
Adjusting type for solution: ((enforce-guard819, <enforce-guard819>), bool, bool)
assocTy: (<enforce-guard819>, bool) <=> bool
assocTy: (<enforce-guard819>, bool) <= bool
assocTy: (<enforce-guard819>, bool) <=> bool
assocTy: (<enforce-guard819>, bool) <= bool
Adjusting type for solution: ((account-guard836, <account-guard835>), guard, guard)
assocTy: (<account-guard835>, guard) <=> guard
assocTy: (<account-guard835>, guard) <= guard
assocTy: (<account-guard835>, guard) <=> guard
assocTy: (<account-guard835>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: failed: x:<-993_a[integer,decimal]> y:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]>: roles=[(RetVar, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=-993::<-993>, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=burn_amount807::decimal, tyVar=<burn_amount807>, resolvedTy=decimal}), ]
tryFunType: unify role: role=ArgVar 0, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: failed: x:<-993_a[integer,decimal]> y:<-993_b[integer,decimal]> -> decimal: roles=[(RetVar, RoleTys { candArgTy=decimal, AST=-993::<-993>, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=burn_amount807::decimal, tyVar=<burn_amount807>, resolvedTy=decimal}), ]
tryFunType: unify role: role=ArgVar 0, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=-993::<-993>, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=burn_amount807::decimal, tyVar=<burn_amount807>, resolvedTy=decimal})]
tryFunType: trying x:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]> with [(<-993_a[integer,decimal]>, [(-993, <inlinedCallArgs1034_amount1036>, decimal), (burn_amount807, <burn_amount807>, decimal)])]
Solved overload with x:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]>: [(<-993_a[integer,decimal]>, (decimal, [(-993, <inlinedCallArgs1034_amount1036>), (burn_amount807, <burn_amount807>)]))]
Adjusting type for solution: ((-993, <inlinedCallArgs1034_amount1036>), <-993_a[integer,decimal]>, decimal)
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <=> <-993_a[integer,decimal]>
assocTy: decimal => <-993_a[integer,decimal]>
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <=> decimal
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <= decimal
Adjusting type for solution: ((burn_amount807, <burn_amount807>), <-993_a[integer,decimal]>, decimal)
assocTy: (<burn_amount807>, decimal) <=> <-993_a[integer,decimal]>
assocTy: (<burn_amount807>, decimal) <=> decimal
assocTy: (<burn_amount807>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=<+980_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+980_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+980_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+980_a[integer,decimal]> y:<+980_a[integer,decimal]> -> <+980_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+980_a[integer,decimal]>, AST=+980::<+980>, tyVar=<inlinedCallArgs1031_supply1033>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+980_a[integer,decimal]>, AST=BindSchema975_s976::<BindSchema975_s976_ag>, tyVar=<BindSchema975_s976_ag>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+980_a[integer,decimal]>, AST=inlinedCallArgs1034_amount1036::decimal, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal})]
tryFunType: trying x:<+980_a[integer,decimal]> y:<+980_a[integer,decimal]> -> <+980_a[integer,decimal]> with [(<+980_a[integer,decimal]>, [(+980, <inlinedCallArgs1031_supply1033>, decimal), (inlinedCallArgs1034_amount1036, <inlinedCallArgs1034_amount1036>, decimal), (BindSchema975_s976, <BindSchema975_s976_ag>, decimal)])]
Solved overload with x:<+980_a[integer,decimal]> y:<+980_a[integer,decimal]> -> <+980_a[integer,decimal]>: [(<+980_a[integer,decimal]>, (decimal, [(+980, <inlinedCallArgs1031_supply1033>), (inlinedCallArgs1034_amount1036, <inlinedCallArgs1034_amount1036>), (BindSchema975_s976, <BindSchema975_s976_ag>)]))]
Adjusting type for solution: ((+980, <inlinedCallArgs1031_supply1033>), <+980_a[integer,decimal]>, decimal)
assocTy: (<inlinedCallArgs1031_supply1033>, decimal) <=> <+980_a[integer,decimal]>
assocTy: decimal => <+980_a[integer,decimal]>
assocTy: (<inlinedCallArgs1031_supply1033>, decimal) <=> decimal
assocTy: (<inlinedCallArgs1031_supply1033>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1034_amount1036, <inlinedCallArgs1034_amount1036>), <+980_a[integer,decimal]>, decimal)
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <=> <+980_a[integer,decimal]>
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <=> decimal
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <= decimal
Adjusting type for solution: ((BindSchema975_s976, <BindSchema975_s976_ag>), <+980_a[integer,decimal]>, decimal)
assocTy: (<BindSchema975_s976_ag>, decimal) <=> <+980_a[integer,decimal]>
assocTy: (<BindSchema975_s976_ag>, decimal) <=> decimal
assocTy: (<BindSchema975_s976_ag>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: failed: x:<-993_a[integer,decimal]> y:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]>: roles=[(RetVar, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=-993::<-993>, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=burn_amount807::decimal, tyVar=<burn_amount807>, resolvedTy=decimal}), ]
tryFunType: unify role: role=ArgVar 0, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: failed: x:<-993_a[integer,decimal]> y:<-993_b[integer,decimal]> -> decimal: roles=[(RetVar, RoleTys { candArgTy=decimal, AST=-993::<-993>, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=burn_amount807::decimal, tyVar=<burn_amount807>, resolvedTy=decimal}), ]
tryFunType: unify role: role=ArgVar 0, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-993_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=-993::<-993>, tyVar=<inlinedCallArgs1034_amount1036>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-993_a[integer,decimal]>, AST=burn_amount807::decimal, tyVar=<burn_amount807>, resolvedTy=decimal})]
tryFunType: trying x:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]> with [(<-993_a[integer,decimal]>, [(-993, <inlinedCallArgs1034_amount1036>, decimal), (burn_amount807, <burn_amount807>, decimal)])]
Solved overload with x:<-993_a[integer,decimal]> -> <-993_a[integer,decimal]>: [(<-993_a[integer,decimal]>, (decimal, [(-993, <inlinedCallArgs1034_amount1036>), (burn_amount807, <burn_amount807>)]))]
Adjusting type for solution: ((-993, <inlinedCallArgs1034_amount1036>), <-993_a[integer,decimal]>, decimal)
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <=> <-993_a[integer,decimal]>
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <=> decimal
assocTy: (<inlinedCallArgs1034_amount1036>, decimal) <= decimal
Adjusting type for solution: ((burn_amount807, <burn_amount807>), <-993_a[integer,decimal]>, decimal)
assocTy: (<burn_amount807>, decimal) <=> <-993_a[integer,decimal]>
assocTy: (<burn_amount807>, decimal) <=> decimal
assocTy: (<burn_amount807>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=<-937_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-937_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-937_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-937_a[integer,decimal]> y:<-937_a[integer,decimal]> -> <-937_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-937_a[integer,decimal]>, AST=-937::<-937>, tyVar=<-937>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-937_a[integer,decimal]>, AST=BindSchema929_old-bal930::<BindSchema929_old-bal930_aa>, tyVar=<BindSchema929_old-bal930_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-937_a[integer,decimal]>, AST=inlinedCallArgs1021_amount1024::decimal, tyVar=<burn_amount807>, resolvedTy=decimal})]
tryFunType: trying x:<-937_a[integer,decimal]> y:<-937_a[integer,decimal]> -> <-937_a[integer,decimal]> with [(<-937_a[integer,decimal]>, [(-937, <-937>, decimal), (inlinedCallArgs1021_amount1024, <burn_amount807>, decimal), (BindSchema929_old-bal930, <BindSchema929_old-bal930_aa>, decimal)])]
Solved overload with x:<-937_a[integer,decimal]> y:<-937_a[integer,decimal]> -> <-937_a[integer,decimal]>: [(<-937_a[integer,decimal]>, (decimal, [(-937, <-937>), (inlinedCallArgs1021_amount1024, <burn_amount807>), (BindSchema929_old-bal930, <BindSchema929_old-bal930_aa>)]))]
Adjusting type for solution: ((-937, <-937>), <-937_a[integer,decimal]>, decimal)
assocTy: (<-937>, decimal) <=> <-937_a[integer,decimal]>
assocTy: decimal => <-937_a[integer,decimal]>
assocTy: (<-937>, decimal) <=> decimal
assocTy: (<-937>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1021_amount1024, <burn_amount807>), <-937_a[integer,decimal]>, decimal)
assocTy: (<burn_amount807>, decimal) <=> <-937_a[integer,decimal]>
assocTy: (<burn_amount807>, decimal) <=> decimal
assocTy: (<burn_amount807>, decimal) <= decimal
Adjusting type for solution: ((BindSchema929_old-bal930, <BindSchema929_old-bal930_aa>), <-937_a[integer,decimal]>, decimal)
assocTy: (<BindSchema929_old-bal930_aa>, decimal) <=> <-937_a[integer,decimal]>
assocTy: (<BindSchema929_old-bal930_aa>, decimal) <=> decimal
assocTy: (<BindSchema929_old-bal930_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor916::<floor916>, tyVar=<floor916>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1012_amount1014::decimal, tyVar=<burn_amount807>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet905_p906::<BindLet905_p906_ai>, tyVar=<precision912>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet905_p906, <precision912>, integer)]), (decimal, [(floor916, <floor916>, decimal), (inlinedCallArgs1012_amount1014, <burn_amount807>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet905_p906, <precision912>)])), (decimal, (decimal, [(floor916, <floor916>), (inlinedCallArgs1012_amount1014, <burn_amount807>)]))]
Adjusting type for solution: ((BindLet905_p906, <precision912>), integer, integer)
assocTy: (<precision912>, integer) <=> integer
assocTy: (<precision912>, integer) <= integer
assocTy: (<precision912>, integer) <=> integer
assocTy: (<precision912>, integer) <= integer
Adjusting type for solution: ((floor916, <floor916>), decimal, decimal)
assocTy: (<floor916>, decimal) <=> decimal
assocTy: (<floor916>, decimal) <= decimal
assocTy: (<floor916>, decimal) <=> decimal
assocTy: (<floor916>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1012_amount1014, <burn_amount807>), decimal, decimal)
assocTy: (<burn_amount807>, decimal) <=> decimal
assocTy: (<burn_amount807>, decimal) <= decimal
assocTy: (<burn_amount807>, decimal) <=> decimal
assocTy: (<burn_amount807>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read910_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read910_row}>, roleTy=<read910>
tryFunType: cand: table:table:<{read910_row}> key:string -> object:<{read910_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read910_row}>, AST=read910::<read910>, tyVar=<read910>, resolvedTy=<read910>}), (ArgVar 0, RoleTys { candArgTy=table:<{read910_row}>, AST=marmalade.ledger.tokens911::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens911>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1010_id1011::string, tyVar=<burn_id805>, resolvedTy=string})]
tryFunType: trying table:table:<{read910_row}> key:string -> object:<{read910_row}> with [(string, [(inlinedCallArgs1010_id1011, <burn_id805>, string)]), (table:<{read910_row}>, [(marmalade.ledger.tokens911, <marmalade.ledger.tokens911>, table:{marmalade.ledger.token-schema})]), (object:<{read910_row}>, [(read910, <read910>, <read910>)])]
Solved overload with table:table:<{read910_row}> key:string -> object:<{read910_row}>: [(string, (string, [(inlinedCallArgs1010_id1011, <burn_id805>)])), (table:<{read910_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens911, <marmalade.ledger.tokens911>)])), (object:<{read910_row}>, (object:<{read910_row}>, [(read910, <read910>)]))]
Adjusting type for solution: ((inlinedCallArgs1010_id1011, <burn_id805>), string, string)
assocTy: (<burn_id805>, string) <=> string
assocTy: (<burn_id805>, string) <= string
assocTy: (<burn_id805>, string) <=> string
assocTy: (<burn_id805>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens911, <marmalade.ledger.tokens911>), table:<{read910_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens911>, table:{marmalade.ledger.token-schema}) <=> table:<{read910_row}>
assocTy: (<{read910_row}>, <{read910_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read910_row}>, <{read910_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read910_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read910_row}>)
assocTy: (<marmalade.ledger.tokens911>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens911>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read910, <read910>), object:<{read910_row}>, object:<{read910_row}>)
assocTy: (<read910>, <read910>) <=> object:<{read910_row}>
assocTy: (<read910>, <read910>) <= object:<{read910_row}>
assocTy: tracking/updating type variable <read910> <= object:<{read910_row}>
assocTy: (<read910>, object:{marmalade.ledger.token-schema}) <=> object:<{read910_row}>
assocTy: (<{read910_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read910_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read910_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at908_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at908_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at908_l>] -> <at908_a>: roles=[(RetVar, RoleTys { candArgTy=<at908_a>, AST=at908::<at908>, tyVar=<precision912>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at908_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at908_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at908_o}> -> <at908_a>, roles=[(RetVar, RoleTys { candArgTy=<at908_a>, AST=at908::<at908>, tyVar=<precision912>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string909::string, tyVar=<string909>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at908_o}>, AST=read910::<read910>, tyVar=<read910>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at908_o}> -> <at908_a> with [(<at908_a>, [(at908, <precision912>, integer)]), (string, [(string909, <string909>, string)]), (object:<{at908_o}>, [(read910, <read910>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at908_o}> -> <at908_a>: [(<at908_a>, (integer, [(at908, <precision912>)])), (string, (string, [(string909, <string909>)])), (object:<{at908_o}>, (object:{marmalade.ledger.token-schema}, [(read910, <read910>)]))]
Adjusting type for solution: ((at908, <precision912>), <at908_a>, integer)
assocTy: (<precision912>, integer) <=> <at908_a>
assocTy: integer => <at908_a>
assocTy: (<precision912>, integer) <=> integer
assocTy: (<precision912>, integer) <= integer
Adjusting type for solution: ((string909, <string909>), string, string)
assocTy: (<string909>, string) <=> string
assocTy: (<string909>, string) <= string
assocTy: (<string909>, string) <=> string
assocTy: (<string909>, string) <= string
Adjusting type for solution: ((read910, <read910>), object:<{at908_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read910>, object:{marmalade.ledger.token-schema}) <=> object:<{at908_o}>
assocTy: (<{at908_o}>, <{at908_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at908_o}>, <{at908_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at908_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at908_o}>)
assocTy: (<read910>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read910>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard883::<enforce-guard883>, tyVar=<enforce-guard883>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard900::<account-guard900>, tyVar=<account-guard899>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard883, <enforce-guard883>, bool)]), (guard, [(account-guard900, <account-guard899>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard883, <enforce-guard883>)])), (guard, (guard, [(account-guard900, <account-guard899>)]))]
Adjusting type for solution: ((enforce-guard883, <enforce-guard883>), bool, bool)
assocTy: (<enforce-guard883>, bool) <=> bool
assocTy: (<enforce-guard883>, bool) <= bool
assocTy: (<enforce-guard883>, bool) <=> bool
assocTy: (<enforce-guard883>, bool) <= bool
Adjusting type for solution: ((account-guard900, <account-guard899>), guard, guard)
assocTy: (<account-guard899>, guard) <=> guard
assocTy: (<account-guard899>, guard) <= guard
assocTy: (<account-guard899>, guard) <=> guard
assocTy: (<account-guard899>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.burn:bool (id:string accou...
===== Fun: (defcap marmalade.ledger.BURN:<j> (id:string accou...
trackAST: (BURN_id1052, string)
trackAST: (BURN_account1053, string)
trackAST: (BURN_amount1054, decimal)
trackAST: (enforce1055, <enforce1055>)
trackAST: (<1056, <<1056>)
trackAST: (decimal1057, decimal)
trackAST: (string1058, string)
trackAST: (compose-capability1059, <compose-capability1059>)
trackAST: (DEBIT_id1060, string)
trackAST: (DEBIT_sender1061, string)
trackAST: (enforce-guard1062, <enforce-guard1062>)
trackAST: (account-guard_id1063, string)
trackAST: (account-guard_account1064, string)
trackAST: (with-read1065, <with-read1065>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1066, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1067, string)
trackAST: (key_account1068, string)
trackAST: (format1069, <format1069>)
trackAST: (string1070, string)
trackAST: (list1071, [<ak>])
trackAST: (key1072, string)
assocAST: (key1072, <key1072>, string) => (format1069, <format1069>, <format1069>)
trackAST: (key1073, <key1073>)
assocAST: (format1069, <key1072>, string) => (key1073, <key1073>, <key1073>)
trackAST: (BindSchema1074, <BindSchema1074>)
trackAST: (BindSchema1074_guard1075, <BindSchema1074_guard1075_f>)
trackAST: (string1076, string)
assocAST: (BindSchema1074_guard1075, <BindSchema1074_guard1075_f>, <BindSchema1074_guard1075_f>) => (BindSchema1074, <BindSchema1074>, <BindSchema1074>)
trackAST: (BindSchema1074schema1077, *)
trackAST: (account-guard1078, guard)
assocAST: (account-guard1078, <account-guard1078>, guard) => (with-read1065, <with-read1065>, <with-read1065>)
trackAST: (account-guard1079, <account-guard1079>)
assocAST: (with-read1065, <account-guard1078>, guard) => (account-guard1079, <account-guard1079>, <account-guard1079>)
trackAST: (DEBIT1080, <e>)
assocAST: (enforce-guard1062, <enforce-guard1062>, <enforce-guard1062>) => (DEBIT1080, <e>, <e>)
trackAST: (DEBIT1081, <DEBIT1081>)
assocAST: (enforce-guard1062, <enforce-guard1062>, <enforce-guard1062>) => (DEBIT1081, <DEBIT1081>, <DEBIT1081>)
trackAST: (compose-capability1082, <compose-capability1082>)
trackAST: (bool1083, bool)
trackAST: (UPDATE_SUPPLY1084, <h>)
assocAST: (bool1083, <bool1083>, bool) => (UPDATE_SUPPLY1084, <h>, <h>)
trackAST: (UPDATE_SUPPLY1085, <UPDATE_SUPPLY1085>)
assocAST: (bool1083, <bool1083>, bool) => (UPDATE_SUPPLY1085, <UPDATE_SUPPLY1085>, <UPDATE_SUPPLY1085>)
trackAST: (BURN1086, <j>)
assocAST: (compose-capability1082, <compose-capability1082>, <compose-capability1082>) => (BURN1086, <j>, <j>)
--------------------------------
 Substitute defuns:

assocTy: (<key1072>, string) <=> string
assocTy: (<key1072>, string) <= string
trackAST: (inlinedCallArgs1087, <inlinedCallArgs1087>)
assocTy: (<inlinedCallArgs1087>, <inlinedCallArgs1087>) <=> string
assocTy: (<inlinedCallArgs1087>, <inlinedCallArgs1087>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1087> <= string
trackAST: (inlinedCallArgs1087_id1088, string)
assocAST: (account-guard_id1063, <account-guard_id1063>, string) => (inlinedCallArgs1087_id1088, <inlinedCallArgs1087_id1088>, string)
trackAST: (inlinedCallArgs1087_account1089, string)
assocAST: (account-guard_account1064, <account-guard_account1064>, string) => (inlinedCallArgs1087_account1089, <inlinedCallArgs1087_account1089>, string)
assocAST: (inlinedCallArgs1087_id1088, <account-guard_id1063>, string) => (key_id1067, <key_id1067>, string)
assocAST: (inlinedCallArgs1087_account1089, <account-guard_account1064>, string) => (key_account1068, <key_account1068>, string)
assocTy: (<account-guard1078>, guard) <=> guard
assocTy: (<account-guard1078>, guard) <= guard
trackAST: (inlinedCallArgs1090, <inlinedCallArgs1090>)
assocTy: (<inlinedCallArgs1090>, <inlinedCallArgs1090>) <=> guard
assocTy: (<inlinedCallArgs1090>, <inlinedCallArgs1090>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1090> <= guard
trackAST: (inlinedCallArgs1090_id1091, string)
assocAST: (DEBIT_id1060, <DEBIT_id1060>, string) => (inlinedCallArgs1090_id1091, <inlinedCallArgs1090_id1091>, string)
trackAST: (inlinedCallArgs1090_account1092, string)
assocAST: (DEBIT_sender1061, <DEBIT_sender1061>, string) => (inlinedCallArgs1090_account1092, <inlinedCallArgs1090_account1092>, string)
assocAST: (inlinedCallArgs1090_id1091, <DEBIT_id1060>, string) => (account-guard_id1063, <account-guard_id1063>, string)
assocAST: (inlinedCallArgs1090_id1091, <DEBIT_id1060>, string) => (account-guard_id1063, <DEBIT_id1060>, string)
assocAST: (inlinedCallArgs1090_account1092, <DEBIT_sender1061>, string) => (account-guard_account1064, <account-guard_account1064>, string)
assocAST: (inlinedCallArgs1090_account1092, <DEBIT_sender1061>, string) => (account-guard_account1064, <DEBIT_sender1061>, string)
assocTy: (<enforce-guard1062>, <enforce-guard1062>) <=> <DEBIT1081_e>
assocTy: (<enforce-guard1062>, <enforce-guard1062>) <= <DEBIT1081_e>
assocTy: tracking/updating type variable <enforce-guard1062> <= <DEBIT1081_e>
trackAST: (inlinedCallArgs1093, <inlinedCallArgs1093>)
assocTy: (<inlinedCallArgs1093>, <inlinedCallArgs1093>) <=> <DEBIT1081_e>
assocTy: (<inlinedCallArgs1093>, <inlinedCallArgs1093>) <= <DEBIT1081_e>
assocTy: tracking/updating type variable <inlinedCallArgs1093> <= <DEBIT1081_e>
trackAST: (inlinedCallArgs1093_id1094, string)
assocAST: (BURN_id1052, <BURN_id1052>, string) => (inlinedCallArgs1093_id1094, <inlinedCallArgs1093_id1094>, string)
trackAST: (inlinedCallArgs1093_sender1095, string)
assocAST: (BURN_account1053, <BURN_account1053>, string) => (inlinedCallArgs1093_sender1095, <inlinedCallArgs1093_sender1095>, string)
assocAST: (inlinedCallArgs1093_id1094, <BURN_id1052>, string) => (DEBIT_id1060, <DEBIT_id1060>, string)
assocAST: (inlinedCallArgs1093_id1094, <BURN_id1052>, string) => (DEBIT_id1060, <BURN_id1052>, string)
assocAST: (inlinedCallArgs1093_sender1095, <BURN_account1053>, string) => (DEBIT_sender1061, <DEBIT_sender1061>, string)
assocAST: (inlinedCallArgs1093_sender1095, <BURN_account1053>, string) => (DEBIT_sender1061, <BURN_account1053>, string)
assocTy: (<bool1083>, bool) <=> <UPDATE_SUPPLY1085_h>
assocTy: bool => <UPDATE_SUPPLY1085_h>
trackAST: (inlinedCallArgs1096, <inlinedCallArgs1096>)
assocTy: (<inlinedCallArgs1096>, <inlinedCallArgs1096>) <=> <UPDATE_SUPPLY1085_h>
assocTy: (<inlinedCallArgs1096>, <inlinedCallArgs1096>) <= <UPDATE_SUPPLY1085_h>
assocTy: tracking/updating type variable <inlinedCallArgs1096> <= <UPDATE_SUPPLY1085_h>
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<1056>, <<1056>) <=> bool
assocTy: (<<1056>, <<1056>) <= bool
assocTy: tracking/updating type variable <<1056> <= bool
assocTy: (<string1058>, string) <=> string
assocTy: (<string1058>, string) <= string
assocTy: (<enforce1055>, <enforce1055>) <=> bool
assocTy: (<enforce1055>, <enforce1055>) <= bool
assocTy: tracking/updating type variable <enforce1055> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<1056_a[integer,decimal,string,time]> y:<<1056_a[integer,decimal,string,time]> -> bool
assocTy: (<decimal1057>, decimal) <=> <<1056_a[integer,decimal,string,time]>
assocTy: decimal => <<1056_a[integer,decimal,string,time]>
assocTy: (<BURN_amount1054>, decimal) <=> <<1056_a[integer,decimal,string,time]>
assocTy: (<<1056>, bool) <=> bool
assocTy: (<<1056>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard1062>, <DEBIT1081_e>) <=> bool
assocTy: (<enforce-guard1062>, <DEBIT1081_e>) <= bool
assocTy: tracking/updating type variable <DEBIT1081_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability1059>, <compose-capability1059>) <=> bool
assocTy: (<compose-capability1059>, <compose-capability1059>) <= bool
assocTy: tracking/updating type variable <compose-capability1059> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1065_row}> key:string bindings:binding:<{with-read1065_row}> -> <with-read1065_a>
assocTy: (<marmalade.ledger.ledger1066>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1065_row}>
assocTy: (<{with-read1065_row}>, <{with-read1065_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1065_row}>, <{with-read1065_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1065_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1065_row}>)
assocTy: (<key1072>, string) <=> string
assocTy: (<key1072>, string) <= string
assocTy: (<account-guard1078>, guard) <=> <with-read1065_a>
assocTy: guard => <with-read1065_a>
assocTy: (<BindSchema1074_guard1075_f>, <BindSchema1074_guard1075_f>) <=> <with-read1065_a>
assocTy: (<BindSchema1074_guard1075_f>, <BindSchema1074_guard1075_f>) <= <with-read1065_a>
assocTy: tracking/updating type variable <BindSchema1074_guard1075_f> <= <with-read1065_a>
assocTy: (<BindSchema1074schema1077>, *) <=> binding:<{with-read1065_row}>
assocTy: (<BindSchema1074schema1077>, *) <= binding:<{with-read1065_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1070>, string) <=> string
assocTy: (<string1070>, string) <= string
assocTy: (<list1071>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1072>, string) <=> string
assocTy: (<key1072>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1083>, bool) <=> bool
assocTy: (<bool1083>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability1082>, <compose-capability1082>) <=> bool
assocTy: (<compose-capability1082>, <compose-capability1082>) <= bool
assocTy: tracking/updating type variable <compose-capability1082> <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema1074schema1077::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1074_guard1075_f>, guard) <=> guard
assocTy: (<BindSchema1074_guard1075_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1071::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard1062::<enforce-guard1062>, tyVar=<enforce-guard1062>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard1079::<account-guard1079>, tyVar=<account-guard1078>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard1062, <enforce-guard1062>, bool)]), (guard, [(account-guard1079, <account-guard1078>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard1062, <enforce-guard1062>)])), (guard, (guard, [(account-guard1079, <account-guard1078>)]))]
Adjusting type for solution: ((enforce-guard1062, <enforce-guard1062>), bool, bool)
assocTy: (<enforce-guard1062>, bool) <=> bool
assocTy: (<enforce-guard1062>, bool) <= bool
assocTy: (<enforce-guard1062>, bool) <=> bool
assocTy: (<enforce-guard1062>, bool) <= bool
Adjusting type for solution: ((account-guard1079, <account-guard1078>), guard, guard)
assocTy: (<account-guard1078>, guard) <=> guard
assocTy: (<account-guard1078>, guard) <= guard
assocTy: (<account-guard1078>, guard) <=> guard
assocTy: (<account-guard1078>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.BURN:<j> (id:string accou...
===== Fun: (defcap marmalade.ledger.DEBIT:<e> (id:string send...
trackAST: (DEBIT_id1098, string)
trackAST: (DEBIT_sender1099, string)
trackAST: (enforce-guard1100, <enforce-guard1100>)
trackAST: (account-guard_id1101, string)
trackAST: (account-guard_account1102, string)
trackAST: (with-read1103, <with-read1103>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1104, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1105, string)
trackAST: (key_account1106, string)
trackAST: (format1107, <format1107>)
trackAST: (string1108, string)
trackAST: (list1109, [<ak>])
trackAST: (key1110, string)
assocAST: (key1110, <key1110>, string) => (format1107, <format1107>, <format1107>)
trackAST: (key1111, <key1111>)
assocAST: (format1107, <key1110>, string) => (key1111, <key1111>, <key1111>)
trackAST: (BindSchema1112, <BindSchema1112>)
trackAST: (BindSchema1112_guard1113, <BindSchema1112_guard1113_f>)
trackAST: (string1114, string)
assocAST: (BindSchema1112_guard1113, <BindSchema1112_guard1113_f>, <BindSchema1112_guard1113_f>) => (BindSchema1112, <BindSchema1112>, <BindSchema1112>)
trackAST: (BindSchema1112schema1115, *)
trackAST: (account-guard1116, guard)
assocAST: (account-guard1116, <account-guard1116>, guard) => (with-read1103, <with-read1103>, <with-read1103>)
trackAST: (account-guard1117, <account-guard1117>)
assocAST: (with-read1103, <account-guard1116>, guard) => (account-guard1117, <account-guard1117>, <account-guard1117>)
trackAST: (DEBIT1118, <e>)
assocAST: (enforce-guard1100, <enforce-guard1100>, <enforce-guard1100>) => (DEBIT1118, <e>, <e>)
--------------------------------
 Substitute defuns:

assocTy: (<key1110>, string) <=> string
assocTy: (<key1110>, string) <= string
trackAST: (inlinedCallArgs1119, <inlinedCallArgs1119>)
assocTy: (<inlinedCallArgs1119>, <inlinedCallArgs1119>) <=> string
assocTy: (<inlinedCallArgs1119>, <inlinedCallArgs1119>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1119> <= string
trackAST: (inlinedCallArgs1119_id1120, string)
assocAST: (account-guard_id1101, <account-guard_id1101>, string) => (inlinedCallArgs1119_id1120, <inlinedCallArgs1119_id1120>, string)
trackAST: (inlinedCallArgs1119_account1121, string)
assocAST: (account-guard_account1102, <account-guard_account1102>, string) => (inlinedCallArgs1119_account1121, <inlinedCallArgs1119_account1121>, string)
assocAST: (inlinedCallArgs1119_id1120, <account-guard_id1101>, string) => (key_id1105, <key_id1105>, string)
assocAST: (inlinedCallArgs1119_account1121, <account-guard_account1102>, string) => (key_account1106, <key_account1106>, string)
assocTy: (<account-guard1116>, guard) <=> guard
assocTy: (<account-guard1116>, guard) <= guard
trackAST: (inlinedCallArgs1122, <inlinedCallArgs1122>)
assocTy: (<inlinedCallArgs1122>, <inlinedCallArgs1122>) <=> guard
assocTy: (<inlinedCallArgs1122>, <inlinedCallArgs1122>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1122> <= guard
trackAST: (inlinedCallArgs1122_id1123, string)
assocAST: (DEBIT_id1098, <DEBIT_id1098>, string) => (inlinedCallArgs1122_id1123, <inlinedCallArgs1122_id1123>, string)
trackAST: (inlinedCallArgs1122_account1124, string)
assocAST: (DEBIT_sender1099, <DEBIT_sender1099>, string) => (inlinedCallArgs1122_account1124, <inlinedCallArgs1122_account1124>, string)
assocAST: (inlinedCallArgs1122_id1123, <DEBIT_id1098>, string) => (account-guard_id1101, <account-guard_id1101>, string)
assocAST: (inlinedCallArgs1122_id1123, <DEBIT_id1098>, string) => (account-guard_id1101, <DEBIT_id1098>, string)
assocAST: (inlinedCallArgs1122_account1124, <DEBIT_sender1099>, string) => (account-guard_account1102, <account-guard_account1102>, string)
assocAST: (inlinedCallArgs1122_account1124, <DEBIT_sender1099>, string) => (account-guard_account1102, <DEBIT_sender1099>, string)
--------------------------------
Substitute natives:

Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1103_row}> key:string bindings:binding:<{with-read1103_row}> -> <with-read1103_a>
assocTy: (<marmalade.ledger.ledger1104>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1103_row}>
assocTy: (<{with-read1103_row}>, <{with-read1103_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1103_row}>, <{with-read1103_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1103_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1103_row}>)
assocTy: (<key1110>, string) <=> string
assocTy: (<key1110>, string) <= string
assocTy: (<account-guard1116>, guard) <=> <with-read1103_a>
assocTy: guard => <with-read1103_a>
assocTy: (<BindSchema1112_guard1113_f>, <BindSchema1112_guard1113_f>) <=> <with-read1103_a>
assocTy: (<BindSchema1112_guard1113_f>, <BindSchema1112_guard1113_f>) <= <with-read1103_a>
assocTy: tracking/updating type variable <BindSchema1112_guard1113_f> <= <with-read1103_a>
assocTy: (<BindSchema1112schema1115>, *) <=> binding:<{with-read1103_row}>
assocTy: (<BindSchema1112schema1115>, *) <= binding:<{with-read1103_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1108>, string) <=> string
assocTy: (<string1108>, string) <= string
assocTy: (<list1109>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1110>, string) <=> string
assocTy: (<key1110>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema1112schema1115::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1112_guard1113_f>, guard) <=> guard
assocTy: (<BindSchema1112_guard1113_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1109::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=<enforce-guard1100>
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard1100::<enforce-guard1100>, tyVar=<enforce-guard1100>, resolvedTy=<enforce-guard1100>}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard1117::<account-guard1117>, tyVar=<account-guard1116>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard1100, <enforce-guard1100>, <enforce-guard1100>)]), (guard, [(account-guard1117, <account-guard1116>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard1100, <enforce-guard1100>)])), (guard, (guard, [(account-guard1117, <account-guard1116>)]))]
Adjusting type for solution: ((enforce-guard1100, <enforce-guard1100>), bool, bool)
assocTy: (<enforce-guard1100>, <enforce-guard1100>) <=> bool
assocTy: (<enforce-guard1100>, <enforce-guard1100>) <= bool
assocTy: tracking/updating type variable <enforce-guard1100> <= bool
assocTy: (<enforce-guard1100>, bool) <=> bool
assocTy: (<enforce-guard1100>, bool) <= bool
Adjusting type for solution: ((account-guard1117, <account-guard1116>), guard, guard)
assocTy: (<account-guard1116>, guard) <=> guard
assocTy: (<account-guard1116>, guard) <= guard
assocTy: (<account-guard1116>, guard) <=> guard
assocTy: (<account-guard1116>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.DEBIT:<e> (id:string send...
===== Fun: (defun marmalade.ledger.precision:integer (id:stri...
trackAST: (precision_id1126, string)
trackAST: (at1127, <at1127>)
trackAST: (string1128, string)
trackAST: (read1129, <read1129>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1130, table:{marmalade.ledger.token-schema})
trackAST: (precision1131, integer)
assocAST: (precision1131, <precision1131>, integer) => (at1127, <at1127>, <at1127>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1129_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1129_row}>, roleTy=<read1129>
tryFunType: cand: table:table:<{read1129_row}> key:string -> object:<{read1129_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1129_row}>, AST=read1129::<read1129>, tyVar=<read1129>, resolvedTy=<read1129>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1129_row}>, AST=marmalade.ledger.tokens1130::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1130>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=precision_id1126::string, tyVar=<precision_id1126>, resolvedTy=string})]
tryFunType: trying table:table:<{read1129_row}> key:string -> object:<{read1129_row}> with [(string, [(precision_id1126, <precision_id1126>, string)]), (table:<{read1129_row}>, [(marmalade.ledger.tokens1130, <marmalade.ledger.tokens1130>, table:{marmalade.ledger.token-schema})]), (object:<{read1129_row}>, [(read1129, <read1129>, <read1129>)])]
Solved overload with table:table:<{read1129_row}> key:string -> object:<{read1129_row}>: [(string, (string, [(precision_id1126, <precision_id1126>)])), (table:<{read1129_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1130, <marmalade.ledger.tokens1130>)])), (object:<{read1129_row}>, (object:<{read1129_row}>, [(read1129, <read1129>)]))]
Adjusting type for solution: ((precision_id1126, <precision_id1126>), string, string)
assocTy: (<precision_id1126>, string) <=> string
assocTy: (<precision_id1126>, string) <= string
assocTy: (<precision_id1126>, string) <=> string
assocTy: (<precision_id1126>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1130, <marmalade.ledger.tokens1130>), table:<{read1129_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1130>, table:{marmalade.ledger.token-schema}) <=> table:<{read1129_row}>
assocTy: (<{read1129_row}>, <{read1129_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1129_row}>, <{read1129_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1129_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1129_row}>)
assocTy: (<marmalade.ledger.tokens1130>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1130>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1129, <read1129>), object:<{read1129_row}>, object:<{read1129_row}>)
assocTy: (<read1129>, <read1129>) <=> object:<{read1129_row}>
assocTy: (<read1129>, <read1129>) <= object:<{read1129_row}>
assocTy: tracking/updating type variable <read1129> <= object:<{read1129_row}>
assocTy: (<read1129>, object:{marmalade.ledger.token-schema}) <=> object:<{read1129_row}>
assocTy: (<{read1129_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1129_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1129_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1127_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1127_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1127_l>] -> <at1127_a>: roles=[(RetVar, RoleTys { candArgTy=<at1127_a>, AST=at1127::<at1127>, tyVar=<precision1131>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1127_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1127_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1127_o}> -> <at1127_a>, roles=[(RetVar, RoleTys { candArgTy=<at1127_a>, AST=at1127::<at1127>, tyVar=<precision1131>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1128::string, tyVar=<string1128>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1127_o}>, AST=read1129::<read1129>, tyVar=<read1129>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1127_o}> -> <at1127_a> with [(<at1127_a>, [(at1127, <precision1131>, integer)]), (string, [(string1128, <string1128>, string)]), (object:<{at1127_o}>, [(read1129, <read1129>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1127_o}> -> <at1127_a>: [(<at1127_a>, (integer, [(at1127, <precision1131>)])), (string, (string, [(string1128, <string1128>)])), (object:<{at1127_o}>, (object:{marmalade.ledger.token-schema}, [(read1129, <read1129>)]))]
Adjusting type for solution: ((at1127, <precision1131>), <at1127_a>, integer)
assocTy: (<precision1131>, integer) <=> <at1127_a>
assocTy: integer => <at1127_a>
assocTy: (<precision1131>, integer) <=> integer
assocTy: (<precision1131>, integer) <= integer
Adjusting type for solution: ((string1128, <string1128>), string, string)
assocTy: (<string1128>, string) <=> string
assocTy: (<string1128>, string) <= string
assocTy: (<string1128>, string) <=> string
assocTy: (<string1128>, string) <= string
Adjusting type for solution: ((read1129, <read1129>), object:<{at1127_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1129>, object:{marmalade.ledger.token-schema}) <=> object:<{at1127_o}>
assocTy: (<{at1127_o}>, <{at1127_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1127_o}>, <{at1127_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1127_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1127_o}>)
assocTy: (<read1129>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1129>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.precision:integer (id:stri...
===== Fun: (defcap marmalade.ledger.RECONCILE:bool (token-id:...
trackAST: (RECONCILE_token-id1133, string)
trackAST: (RECONCILE_amount1134, decimal)
trackAST: (RECONCILE_sender1135, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver1136, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool1137, bool)
trackAST: (RECONCILE1138, bool)
assocAST: (bool1137, <bool1137>, bool) => (RECONCILE1138, <RECONCILE1138>, bool)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.RECONCILE:bool (token-id:...
===== Fun: (defun marmalade.ledger.truncate:decimal (id:strin...
trackAST: (truncate_id1140, string)
trackAST: (truncate_amount1141, decimal)
trackAST: (floor1142, <floor1142>)
trackAST: (precision_id1143, string)
trackAST: (at1144, <at1144>)
trackAST: (string1145, string)
trackAST: (read1146, <read1146>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1147, table:{marmalade.ledger.token-schema})
trackAST: (precision1148, integer)
assocAST: (precision1148, <precision1148>, integer) => (at1144, <at1144>, <at1144>)
trackAST: (precision1149, <precision1149>)
assocAST: (at1144, <precision1148>, integer) => (precision1149, <precision1149>, <precision1149>)
trackAST: (truncate1150, decimal)
assocAST: (truncate1150, <truncate1150>, decimal) => (floor1142, <floor1142>, <floor1142>)
--------------------------------
 Substitute defuns:

assocTy: (<precision1148>, integer) <=> integer
assocTy: (<precision1148>, integer) <= integer
trackAST: (inlinedCallArgs1151, <inlinedCallArgs1151>)
assocTy: (<inlinedCallArgs1151>, <inlinedCallArgs1151>) <=> integer
assocTy: (<inlinedCallArgs1151>, <inlinedCallArgs1151>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1151> <= integer
trackAST: (inlinedCallArgs1151_id1152, string)
assocAST: (truncate_id1140, <truncate_id1140>, string) => (inlinedCallArgs1151_id1152, <inlinedCallArgs1151_id1152>, string)
assocAST: (inlinedCallArgs1151_id1152, <truncate_id1140>, string) => (precision_id1143, <precision_id1143>, string)
--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1146_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1146_row}>, roleTy=<read1146>
tryFunType: cand: table:table:<{read1146_row}> key:string -> object:<{read1146_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1146_row}>, AST=read1146::<read1146>, tyVar=<read1146>, resolvedTy=<read1146>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1146_row}>, AST=marmalade.ledger.tokens1147::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1147>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1151_id1152::string, tyVar=<truncate_id1140>, resolvedTy=string})]
tryFunType: trying table:table:<{read1146_row}> key:string -> object:<{read1146_row}> with [(string, [(inlinedCallArgs1151_id1152, <truncate_id1140>, string)]), (table:<{read1146_row}>, [(marmalade.ledger.tokens1147, <marmalade.ledger.tokens1147>, table:{marmalade.ledger.token-schema})]), (object:<{read1146_row}>, [(read1146, <read1146>, <read1146>)])]
Solved overload with table:table:<{read1146_row}> key:string -> object:<{read1146_row}>: [(string, (string, [(inlinedCallArgs1151_id1152, <truncate_id1140>)])), (table:<{read1146_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1147, <marmalade.ledger.tokens1147>)])), (object:<{read1146_row}>, (object:<{read1146_row}>, [(read1146, <read1146>)]))]
Adjusting type for solution: ((inlinedCallArgs1151_id1152, <truncate_id1140>), string, string)
assocTy: (<truncate_id1140>, string) <=> string
assocTy: (<truncate_id1140>, string) <= string
assocTy: (<truncate_id1140>, string) <=> string
assocTy: (<truncate_id1140>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1147, <marmalade.ledger.tokens1147>), table:<{read1146_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1147>, table:{marmalade.ledger.token-schema}) <=> table:<{read1146_row}>
assocTy: (<{read1146_row}>, <{read1146_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1146_row}>, <{read1146_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1146_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1146_row}>)
assocTy: (<marmalade.ledger.tokens1147>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1147>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1146, <read1146>), object:<{read1146_row}>, object:<{read1146_row}>)
assocTy: (<read1146>, <read1146>) <=> object:<{read1146_row}>
assocTy: (<read1146>, <read1146>) <= object:<{read1146_row}>
assocTy: tracking/updating type variable <read1146> <= object:<{read1146_row}>
assocTy: (<read1146>, object:{marmalade.ledger.token-schema}) <=> object:<{read1146_row}>
assocTy: (<{read1146_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1146_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1146_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1144_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1144_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1144_l>] -> <at1144_a>: roles=[(RetVar, RoleTys { candArgTy=<at1144_a>, AST=at1144::<at1144>, tyVar=<precision1148>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1144_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1144_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1144_o}> -> <at1144_a>, roles=[(RetVar, RoleTys { candArgTy=<at1144_a>, AST=at1144::<at1144>, tyVar=<precision1148>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1145::string, tyVar=<string1145>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1144_o}>, AST=read1146::<read1146>, tyVar=<read1146>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1144_o}> -> <at1144_a> with [(<at1144_a>, [(at1144, <precision1148>, integer)]), (string, [(string1145, <string1145>, string)]), (object:<{at1144_o}>, [(read1146, <read1146>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1144_o}> -> <at1144_a>: [(<at1144_a>, (integer, [(at1144, <precision1148>)])), (string, (string, [(string1145, <string1145>)])), (object:<{at1144_o}>, (object:{marmalade.ledger.token-schema}, [(read1146, <read1146>)]))]
Adjusting type for solution: ((at1144, <precision1148>), <at1144_a>, integer)
assocTy: (<precision1148>, integer) <=> <at1144_a>
assocTy: integer => <at1144_a>
assocTy: (<precision1148>, integer) <=> integer
assocTy: (<precision1148>, integer) <= integer
Adjusting type for solution: ((string1145, <string1145>), string, string)
assocTy: (<string1145>, string) <=> string
assocTy: (<string1145>, string) <= string
assocTy: (<string1145>, string) <=> string
assocTy: (<string1145>, string) <= string
Adjusting type for solution: ((read1146, <read1146>), object:<{at1144_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1146>, object:{marmalade.ledger.token-schema}) <=> object:<{at1144_o}>
assocTy: (<{at1144_o}>, <{at1144_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1144_o}>, <{at1144_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1144_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1144_o}>)
assocTy: (<read1146>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1146>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1142::<floor1142>, tyVar=<truncate1150>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=truncate_amount1141::decimal, tyVar=<truncate_amount1141>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=precision1149::<precision1149>, tyVar=<precision1148>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(precision1149, <precision1148>, integer)]), (decimal, [(floor1142, <truncate1150>, decimal), (truncate_amount1141, <truncate_amount1141>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(precision1149, <precision1148>)])), (decimal, (decimal, [(floor1142, <truncate1150>), (truncate_amount1141, <truncate_amount1141>)]))]
Adjusting type for solution: ((precision1149, <precision1148>), integer, integer)
assocTy: (<precision1148>, integer) <=> integer
assocTy: (<precision1148>, integer) <= integer
assocTy: (<precision1148>, integer) <=> integer
assocTy: (<precision1148>, integer) <= integer
Adjusting type for solution: ((floor1142, <truncate1150>), decimal, decimal)
assocTy: (<truncate1150>, decimal) <=> decimal
assocTy: (<truncate1150>, decimal) <= decimal
assocTy: (<truncate1150>, decimal) <=> decimal
assocTy: (<truncate1150>, decimal) <= decimal
Adjusting type for solution: ((truncate_amount1141, <truncate_amount1141>), decimal, decimal)
assocTy: (<truncate_amount1141>, decimal) <=> decimal
assocTy: (<truncate_amount1141>, decimal) <= decimal
assocTy: (<truncate_amount1141>, decimal) <=> decimal
assocTy: (<truncate_amount1141>, decimal) <= decimal
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.truncate:decimal (id:strin...
===== Fun: (defun marmalade.ledger.debit:object:(defschema se...
trackAST: (debit_id1154, string)
trackAST: (debit_account1155, string)
trackAST: (debit_amount1156, decimal)
trackAST: (require-capability1157, <require-capability1157>)
trackAST: (DEBIT_id1158, string)
trackAST: (DEBIT_sender1159, string)
trackAST: (enforce-guard1160, <enforce-guard1160>)
trackAST: (account-guard_id1161, string)
trackAST: (account-guard_account1162, string)
trackAST: (with-read1163, <with-read1163>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1164, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1165, string)
trackAST: (key_account1166, string)
trackAST: (format1167, <format1167>)
trackAST: (string1168, string)
trackAST: (list1169, [<ak>])
trackAST: (key1170, string)
assocAST: (key1170, <key1170>, string) => (format1167, <format1167>, <format1167>)
trackAST: (key1171, <key1171>)
assocAST: (format1167, <key1170>, string) => (key1171, <key1171>, <key1171>)
trackAST: (BindSchema1172, <BindSchema1172>)
trackAST: (BindSchema1172_guard1173, <BindSchema1172_guard1173_f>)
trackAST: (string1174, string)
assocAST: (BindSchema1172_guard1173, <BindSchema1172_guard1173_f>, <BindSchema1172_guard1173_f>) => (BindSchema1172, <BindSchema1172>, <BindSchema1172>)
trackAST: (BindSchema1172schema1175, *)
trackAST: (account-guard1176, guard)
assocAST: (account-guard1176, <account-guard1176>, guard) => (with-read1163, <with-read1163>, <with-read1163>)
trackAST: (account-guard1177, <account-guard1177>)
assocAST: (with-read1163, <account-guard1176>, guard) => (account-guard1177, <account-guard1177>, <account-guard1177>)
trackAST: (DEBIT1178, <e>)
assocAST: (enforce-guard1160, <enforce-guard1160>, <enforce-guard1160>) => (DEBIT1178, <e>, <e>)
trackAST: (DEBIT1179, <DEBIT1179>)
assocAST: (enforce-guard1160, <enforce-guard1160>, <enforce-guard1160>) => (DEBIT1179, <DEBIT1179>, <DEBIT1179>)
trackAST: (enforce-unit_id1180, string)
trackAST: (enforce-unit_amount1181, decimal)
trackAST: (BindLet1182, <BindLet1182>)
trackAST: (BindLet1182_p1183, <BindLet1182_p1183_ai>)
trackAST: (precision_id1184, string)
trackAST: (at1185, <at1185>)
trackAST: (string1186, string)
trackAST: (read1187, <read1187>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1188, table:{marmalade.ledger.token-schema})
trackAST: (precision1189, integer)
assocAST: (precision1189, <precision1189>, integer) => (at1185, <at1185>, <at1185>)
trackAST: (precision1190, <precision1190>)
assocAST: (at1185, <precision1189>, integer) => (precision1190, <precision1190>, <precision1190>)
assocAST: (precision1190, <precision1189>, integer) => (BindLet1182_p1183, <BindLet1182_p1183_ai>, <BindLet1182_p1183_ai>)
trackAST: (enforce1191, <enforce1191>)
trackAST: (=1192, <=1192>)
trackAST: (floor1193, <floor1193>)
trackAST: (string1194, string)
assocAST: (enforce1191, <enforce1191>, <enforce1191>) => (BindLet1182, <BindLet1182>, <BindLet1182>)
trackAST: (enforce-unit1195, bool)
assocAST: (enforce-unit1195, <enforce-unit1195>, bool) => (BindLet1182, <enforce1191>, <enforce1191>)
trackAST: (enforce-unit1196, <enforce-unit1196>)
assocAST: (BindLet1182, <enforce-unit1195>, bool) => (enforce-unit1196, <enforce-unit1196>, <enforce-unit1196>)
trackAST: (with-read1197, <with-read1197>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1198, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1199, string)
trackAST: (key_account1200, string)
trackAST: (format1201, <format1201>)
trackAST: (string1202, string)
trackAST: (list1203, [<ak>])
trackAST: (key1204, string)
assocAST: (key1204, <key1204>, string) => (format1201, <format1201>, <format1201>)
trackAST: (key1205, <key1205>)
assocAST: (format1201, <key1204>, string) => (key1205, <key1205>, <key1205>)
trackAST: (BindSchema1206, <BindSchema1206>)
trackAST: (BindSchema1206_old-bal1207, <BindSchema1206_old-bal1207_aa>)
trackAST: (string1208, string)
trackAST: (enforce1209, <enforce1209>)
trackAST: (<=1210, <<=1210>)
trackAST: (string1211, string)
trackAST: (BindLet1212, <BindLet1212>)
trackAST: (BindLet1212_new-bal1213, <BindLet1212_new-bal1213_ab>)
trackAST: (-1214, <-1214>)
assocAST: (-1214, <-1214>, <-1214>) => (BindLet1212_new-bal1213, <BindLet1212_new-bal1213_ab>, <BindLet1212_new-bal1213_ab>)
trackAST: (update1215, <update1215>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1216, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1217, string)
trackAST: (key_account1218, string)
trackAST: (format1219, <format1219>)
trackAST: (string1220, string)
trackAST: (list1221, [<ak>])
trackAST: (key1222, string)
assocAST: (key1222, <key1222>, string) => (format1219, <format1219>, <format1219>)
trackAST: (key1223, <key1223>)
assocAST: (format1219, <key1222>, string) => (key1223, <key1223>, <key1223>)
TObject: TyAny
trackAST: (object1224, object:*)
TObject: TyAny
trackAST: (object1225, object:*)
assocAST: (object1225, <object1225>, object:*) => (BindLet1212, <BindLet1212>, <BindLet1212>)
assocAST: (BindLet1212, <object1225>, object:*) => (BindSchema1206, <BindSchema1206>, <BindSchema1206>)
trackAST: (BindSchema1206schema1226, *)
trackAST: (debit1227, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit1227, <debit1227>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read1197, <with-read1197>, <with-read1197>)
--------------------------------
 Substitute defuns:

assocTy: (<key1170>, string) <=> string
assocTy: (<key1170>, string) <= string
trackAST: (inlinedCallArgs1228, <inlinedCallArgs1228>)
assocTy: (<inlinedCallArgs1228>, <inlinedCallArgs1228>) <=> string
assocTy: (<inlinedCallArgs1228>, <inlinedCallArgs1228>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1228> <= string
trackAST: (inlinedCallArgs1228_id1229, string)
assocAST: (account-guard_id1161, <account-guard_id1161>, string) => (inlinedCallArgs1228_id1229, <inlinedCallArgs1228_id1229>, string)
trackAST: (inlinedCallArgs1228_account1230, string)
assocAST: (account-guard_account1162, <account-guard_account1162>, string) => (inlinedCallArgs1228_account1230, <inlinedCallArgs1228_account1230>, string)
assocAST: (inlinedCallArgs1228_id1229, <account-guard_id1161>, string) => (key_id1165, <key_id1165>, string)
assocAST: (inlinedCallArgs1228_account1230, <account-guard_account1162>, string) => (key_account1166, <key_account1166>, string)
assocTy: (<account-guard1176>, guard) <=> guard
assocTy: (<account-guard1176>, guard) <= guard
trackAST: (inlinedCallArgs1231, <inlinedCallArgs1231>)
assocTy: (<inlinedCallArgs1231>, <inlinedCallArgs1231>) <=> guard
assocTy: (<inlinedCallArgs1231>, <inlinedCallArgs1231>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1231> <= guard
trackAST: (inlinedCallArgs1231_id1232, string)
assocAST: (DEBIT_id1158, <DEBIT_id1158>, string) => (inlinedCallArgs1231_id1232, <inlinedCallArgs1231_id1232>, string)
trackAST: (inlinedCallArgs1231_account1233, string)
assocAST: (DEBIT_sender1159, <DEBIT_sender1159>, string) => (inlinedCallArgs1231_account1233, <inlinedCallArgs1231_account1233>, string)
assocAST: (inlinedCallArgs1231_id1232, <DEBIT_id1158>, string) => (account-guard_id1161, <account-guard_id1161>, string)
assocAST: (inlinedCallArgs1231_id1232, <DEBIT_id1158>, string) => (account-guard_id1161, <DEBIT_id1158>, string)
assocAST: (inlinedCallArgs1231_account1233, <DEBIT_sender1159>, string) => (account-guard_account1162, <account-guard_account1162>, string)
assocAST: (inlinedCallArgs1231_account1233, <DEBIT_sender1159>, string) => (account-guard_account1162, <DEBIT_sender1159>, string)
assocTy: (<enforce-guard1160>, <enforce-guard1160>) <=> <DEBIT1179_e>
assocTy: (<enforce-guard1160>, <enforce-guard1160>) <= <DEBIT1179_e>
assocTy: tracking/updating type variable <enforce-guard1160> <= <DEBIT1179_e>
trackAST: (inlinedCallArgs1234, <inlinedCallArgs1234>)
assocTy: (<inlinedCallArgs1234>, <inlinedCallArgs1234>) <=> <DEBIT1179_e>
assocTy: (<inlinedCallArgs1234>, <inlinedCallArgs1234>) <= <DEBIT1179_e>
assocTy: tracking/updating type variable <inlinedCallArgs1234> <= <DEBIT1179_e>
trackAST: (inlinedCallArgs1234_id1235, string)
assocAST: (debit_id1154, <debit_id1154>, string) => (inlinedCallArgs1234_id1235, <inlinedCallArgs1234_id1235>, string)
trackAST: (inlinedCallArgs1234_sender1236, string)
assocAST: (debit_account1155, <debit_account1155>, string) => (inlinedCallArgs1234_sender1236, <inlinedCallArgs1234_sender1236>, string)
assocAST: (inlinedCallArgs1234_id1235, <debit_id1154>, string) => (DEBIT_id1158, <DEBIT_id1158>, string)
assocAST: (inlinedCallArgs1234_id1235, <debit_id1154>, string) => (DEBIT_id1158, <debit_id1154>, string)
assocAST: (inlinedCallArgs1234_sender1236, <debit_account1155>, string) => (DEBIT_sender1159, <DEBIT_sender1159>, string)
assocAST: (inlinedCallArgs1234_sender1236, <debit_account1155>, string) => (DEBIT_sender1159, <debit_account1155>, string)
assocTy: (<precision1189>, integer) <=> integer
assocTy: (<precision1189>, integer) <= integer
trackAST: (inlinedCallArgs1237, <inlinedCallArgs1237>)
assocTy: (<inlinedCallArgs1237>, <inlinedCallArgs1237>) <=> integer
assocTy: (<inlinedCallArgs1237>, <inlinedCallArgs1237>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1237> <= integer
trackAST: (inlinedCallArgs1237_id1238, string)
assocAST: (enforce-unit_id1180, <enforce-unit_id1180>, string) => (inlinedCallArgs1237_id1238, <inlinedCallArgs1237_id1238>, string)
assocAST: (inlinedCallArgs1237_id1238, <enforce-unit_id1180>, string) => (precision_id1184, <precision_id1184>, string)
assocTy: (<enforce-unit1195>, bool) <=> bool
assocTy: (<enforce-unit1195>, bool) <= bool
trackAST: (inlinedCallArgs1239, <inlinedCallArgs1239>)
assocTy: (<inlinedCallArgs1239>, <inlinedCallArgs1239>) <=> bool
assocTy: (<inlinedCallArgs1239>, <inlinedCallArgs1239>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1239> <= bool
trackAST: (inlinedCallArgs1239_id1240, string)
assocAST: (debit_id1154, <debit_id1154>, string) => (inlinedCallArgs1239_id1240, <inlinedCallArgs1239_id1240>, string)
trackAST: (inlinedCallArgs1239_amount1241, decimal)
assocAST: (debit_amount1156, <debit_amount1156>, decimal) => (inlinedCallArgs1239_amount1241, <inlinedCallArgs1239_amount1241>, decimal)
assocAST: (inlinedCallArgs1239_id1240, <debit_id1154>, string) => (enforce-unit_id1180, <enforce-unit_id1180>, string)
assocAST: (inlinedCallArgs1239_id1240, <debit_id1154>, string) => (enforce-unit_id1180, <debit_id1154>, string)
assocAST: (inlinedCallArgs1239_amount1241, <debit_amount1156>, decimal) => (enforce-unit_amount1181, <enforce-unit_amount1181>, decimal)
assocAST: (inlinedCallArgs1239_amount1241, <debit_amount1156>, decimal) => (enforce-unit_amount1181, <debit_amount1156>, decimal)
assocTy: (<key1222>, string) <=> string
assocTy: (<key1222>, string) <= string
trackAST: (inlinedCallArgs1242, <inlinedCallArgs1242>)
assocTy: (<inlinedCallArgs1242>, <inlinedCallArgs1242>) <=> string
assocTy: (<inlinedCallArgs1242>, <inlinedCallArgs1242>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1242> <= string
trackAST: (inlinedCallArgs1242_id1243, string)
assocAST: (debit_id1154, <debit_id1154>, string) => (inlinedCallArgs1242_id1243, <inlinedCallArgs1242_id1243>, string)
trackAST: (inlinedCallArgs1242_account1244, string)
assocAST: (debit_account1155, <debit_account1155>, string) => (inlinedCallArgs1242_account1244, <inlinedCallArgs1242_account1244>, string)
assocAST: (inlinedCallArgs1242_id1243, <debit_id1154>, string) => (key_id1217, <key_id1217>, string)
assocAST: (inlinedCallArgs1242_account1244, <debit_account1155>, string) => (key_account1218, <key_account1218>, string)
assocTy: (<key1204>, string) <=> string
assocTy: (<key1204>, string) <= string
trackAST: (inlinedCallArgs1245, <inlinedCallArgs1245>)
assocTy: (<inlinedCallArgs1245>, <inlinedCallArgs1245>) <=> string
assocTy: (<inlinedCallArgs1245>, <inlinedCallArgs1245>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1245> <= string
trackAST: (inlinedCallArgs1245_id1246, string)
assocAST: (debit_id1154, <debit_id1154>, string) => (inlinedCallArgs1245_id1246, <inlinedCallArgs1245_id1246>, string)
trackAST: (inlinedCallArgs1245_account1247, string)
assocAST: (debit_account1155, <debit_account1155>, string) => (inlinedCallArgs1245_account1247, <inlinedCallArgs1245_account1247>, string)
assocAST: (inlinedCallArgs1245_id1246, <debit_id1154>, string) => (key_id1199, <key_id1199>, string)
assocAST: (inlinedCallArgs1245_account1247, <debit_account1155>, string) => (key_account1200, <key_account1200>, string)
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard1160>, <DEBIT1179_e>) <=> bool
assocTy: (<enforce-guard1160>, <DEBIT1179_e>) <= bool
assocTy: tracking/updating type variable <DEBIT1179_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability1157>, <require-capability1157>) <=> bool
assocTy: (<require-capability1157>, <require-capability1157>) <= bool
assocTy: tracking/updating type variable <require-capability1157> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1163_row}> key:string bindings:binding:<{with-read1163_row}> -> <with-read1163_a>
assocTy: (<marmalade.ledger.ledger1164>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1163_row}>
assocTy: (<{with-read1163_row}>, <{with-read1163_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1163_row}>, <{with-read1163_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1163_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1163_row}>)
assocTy: (<key1170>, string) <=> string
assocTy: (<key1170>, string) <= string
assocTy: (<account-guard1176>, guard) <=> <with-read1163_a>
assocTy: guard => <with-read1163_a>
assocTy: (<BindSchema1172_guard1173_f>, <BindSchema1172_guard1173_f>) <=> <with-read1163_a>
assocTy: (<BindSchema1172_guard1173_f>, <BindSchema1172_guard1173_f>) <= <with-read1163_a>
assocTy: tracking/updating type variable <BindSchema1172_guard1173_f> <= <with-read1163_a>
assocTy: (<BindSchema1172schema1175>, *) <=> binding:<{with-read1163_row}>
assocTy: (<BindSchema1172schema1175>, *) <= binding:<{with-read1163_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1168>, string) <=> string
assocTy: (<string1168>, string) <= string
assocTy: (<list1169>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1170>, string) <=> string
assocTy: (<key1170>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1192>, <=1192>) <=> bool
assocTy: (<=1192>, <=1192>) <= bool
assocTy: tracking/updating type variable <=1192> <= bool
assocTy: (<string1194>, string) <=> string
assocTy: (<string1194>, string) <= string
assocTy: (<enforce-unit1195>, bool) <=> bool
assocTy: (<enforce-unit1195>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor1193>, <floor1193>) <=> <=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor1193>, <floor1193>) <= <=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor1193> <= <=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<debit_amount1156>, decimal) <=> <=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1192_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1192>, bool) <=> bool
assocTy: (<=1192>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1197_row}> key:string bindings:binding:<{with-read1197_row}> -> <with-read1197_a>
assocTy: (<marmalade.ledger.ledger1198>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1197_row}>
assocTy: (<{with-read1197_row}>, <{with-read1197_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1197_row}>, <{with-read1197_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1197_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1197_row}>)
assocTy: (<key1204>, string) <=> string
assocTy: (<key1204>, string) <= string
assocTy: (<debit1227>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read1197_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read1197_a>
assocTy: (<object1225>, object:*) <=> <with-read1197_a>
assocTy: (<BindSchema1206schema1226>, *) <=> binding:<{with-read1197_row}>
assocTy: (<BindSchema1206schema1226>, *) <= binding:<{with-read1197_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=1210>, <<=1210>) <=> bool
assocTy: (<<=1210>, <<=1210>) <= bool
assocTy: tracking/updating type variable <<=1210> <= bool
assocTy: (<string1211>, string) <=> string
assocTy: (<string1211>, string) <= string
assocTy: (<enforce1209>, <enforce1209>) <=> bool
assocTy: (<enforce1209>, <enforce1209>) <= bool
assocTy: tracking/updating type variable <enforce1209> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=1210_a[integer,decimal,string,time]> y:<<=1210_a[integer,decimal,string,time]> -> bool
assocTy: (<debit_amount1156>, decimal) <=> <<=1210_a[integer,decimal,string,time]>
assocTy: decimal => <<=1210_a[integer,decimal,string,time]>
assocTy: (<BindSchema1206_old-bal1207_aa>, <BindSchema1206_old-bal1207_aa>) <=> <<=1210_a[integer,decimal,string,time]>
assocTy: (<BindSchema1206_old-bal1207_aa>, <BindSchema1206_old-bal1207_aa>) <= <<=1210_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema1206_old-bal1207_aa> <= <<=1210_a[integer,decimal,string,time]>
assocTy: (<<=1210>, bool) <=> bool
assocTy: (<<=1210>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update1215_row}> key:string object:object:~<{update1215_row}> -> string
assocTy: (<marmalade.ledger.ledger1216>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update1215_row}>
assocTy: (<{update1215_row}>, <{update1215_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update1215_row}>, <{update1215_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update1215_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update1215_row}>)
assocTy: (<key1222>, string) <=> string
assocTy: (<key1222>, string) <= string
assocTy: (<object1224>, object:*) <=> object:~<{update1215_row}>
assocTy: (<object1224>, object:*) <= object:~<{update1215_row}>
assocTy: (<update1215>, <update1215>) <=> string
assocTy: (<update1215>, <update1215>) <= string
assocTy: tracking/updating type variable <update1215> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1220>, string) <=> string
assocTy: (<string1220>, string) <= string
assocTy: (<list1221>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1222>, string) <=> string
assocTy: (<key1222>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1202>, string) <=> string
assocTy: (<string1202>, string) <= string
assocTy: (<list1203>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1204>, string) <=> string
assocTy: (<key1204>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema1172schema1175::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1172_guard1173_f>, guard) <=> guard
assocTy: (<BindSchema1172_guard1173_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1169::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1206schema1226::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1206_old-bal1207_aa>, decimal) <=> decimal
assocTy: (<BindSchema1206_old-bal1207_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list1221::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object1224::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-1214>, <-1214>) <=> decimal
assocTy: (<-1214>, <-1214>) <= decimal
assocTy: tracking/updating type variable <-1214> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object1224>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object1224>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list1203::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=<-1214_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-1214_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-1214_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-1214_a[integer,decimal]> y:<-1214_a[integer,decimal]> -> <-1214_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-1214_a[integer,decimal]>, AST=-1214::<-1214>, tyVar=<-1214>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-1214_a[integer,decimal]>, AST=BindSchema1206_old-bal1207::<BindSchema1206_old-bal1207_aa>, tyVar=<BindSchema1206_old-bal1207_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-1214_a[integer,decimal]>, AST=debit_amount1156::decimal, tyVar=<debit_amount1156>, resolvedTy=decimal})]
tryFunType: trying x:<-1214_a[integer,decimal]> y:<-1214_a[integer,decimal]> -> <-1214_a[integer,decimal]> with [(<-1214_a[integer,decimal]>, [(-1214, <-1214>, decimal), (debit_amount1156, <debit_amount1156>, decimal), (BindSchema1206_old-bal1207, <BindSchema1206_old-bal1207_aa>, decimal)])]
Solved overload with x:<-1214_a[integer,decimal]> y:<-1214_a[integer,decimal]> -> <-1214_a[integer,decimal]>: [(<-1214_a[integer,decimal]>, (decimal, [(-1214, <-1214>), (debit_amount1156, <debit_amount1156>), (BindSchema1206_old-bal1207, <BindSchema1206_old-bal1207_aa>)]))]
Adjusting type for solution: ((-1214, <-1214>), <-1214_a[integer,decimal]>, decimal)
assocTy: (<-1214>, decimal) <=> <-1214_a[integer,decimal]>
assocTy: decimal => <-1214_a[integer,decimal]>
assocTy: (<-1214>, decimal) <=> decimal
assocTy: (<-1214>, decimal) <= decimal
Adjusting type for solution: ((debit_amount1156, <debit_amount1156>), <-1214_a[integer,decimal]>, decimal)
assocTy: (<debit_amount1156>, decimal) <=> <-1214_a[integer,decimal]>
assocTy: (<debit_amount1156>, decimal) <=> decimal
assocTy: (<debit_amount1156>, decimal) <= decimal
Adjusting type for solution: ((BindSchema1206_old-bal1207, <BindSchema1206_old-bal1207_aa>), <-1214_a[integer,decimal]>, decimal)
assocTy: (<BindSchema1206_old-bal1207_aa>, decimal) <=> <-1214_a[integer,decimal]>
assocTy: (<BindSchema1206_old-bal1207_aa>, decimal) <=> decimal
assocTy: (<BindSchema1206_old-bal1207_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1193::<floor1193>, tyVar=<floor1193>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1239_amount1241::decimal, tyVar=<debit_amount1156>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet1182_p1183::<BindLet1182_p1183_ai>, tyVar=<precision1189>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet1182_p1183, <precision1189>, integer)]), (decimal, [(floor1193, <floor1193>, decimal), (inlinedCallArgs1239_amount1241, <debit_amount1156>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet1182_p1183, <precision1189>)])), (decimal, (decimal, [(floor1193, <floor1193>), (inlinedCallArgs1239_amount1241, <debit_amount1156>)]))]
Adjusting type for solution: ((BindLet1182_p1183, <precision1189>), integer, integer)
assocTy: (<precision1189>, integer) <=> integer
assocTy: (<precision1189>, integer) <= integer
assocTy: (<precision1189>, integer) <=> integer
assocTy: (<precision1189>, integer) <= integer
Adjusting type for solution: ((floor1193, <floor1193>), decimal, decimal)
assocTy: (<floor1193>, decimal) <=> decimal
assocTy: (<floor1193>, decimal) <= decimal
assocTy: (<floor1193>, decimal) <=> decimal
assocTy: (<floor1193>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1239_amount1241, <debit_amount1156>), decimal, decimal)
assocTy: (<debit_amount1156>, decimal) <=> decimal
assocTy: (<debit_amount1156>, decimal) <= decimal
assocTy: (<debit_amount1156>, decimal) <=> decimal
assocTy: (<debit_amount1156>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1187_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1187_row}>, roleTy=<read1187>
tryFunType: cand: table:table:<{read1187_row}> key:string -> object:<{read1187_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1187_row}>, AST=read1187::<read1187>, tyVar=<read1187>, resolvedTy=<read1187>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1187_row}>, AST=marmalade.ledger.tokens1188::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1188>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1237_id1238::string, tyVar=<debit_id1154>, resolvedTy=string})]
tryFunType: trying table:table:<{read1187_row}> key:string -> object:<{read1187_row}> with [(string, [(inlinedCallArgs1237_id1238, <debit_id1154>, string)]), (table:<{read1187_row}>, [(marmalade.ledger.tokens1188, <marmalade.ledger.tokens1188>, table:{marmalade.ledger.token-schema})]), (object:<{read1187_row}>, [(read1187, <read1187>, <read1187>)])]
Solved overload with table:table:<{read1187_row}> key:string -> object:<{read1187_row}>: [(string, (string, [(inlinedCallArgs1237_id1238, <debit_id1154>)])), (table:<{read1187_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1188, <marmalade.ledger.tokens1188>)])), (object:<{read1187_row}>, (object:<{read1187_row}>, [(read1187, <read1187>)]))]
Adjusting type for solution: ((inlinedCallArgs1237_id1238, <debit_id1154>), string, string)
assocTy: (<debit_id1154>, string) <=> string
assocTy: (<debit_id1154>, string) <= string
assocTy: (<debit_id1154>, string) <=> string
assocTy: (<debit_id1154>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1188, <marmalade.ledger.tokens1188>), table:<{read1187_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1188>, table:{marmalade.ledger.token-schema}) <=> table:<{read1187_row}>
assocTy: (<{read1187_row}>, <{read1187_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1187_row}>, <{read1187_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1187_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1187_row}>)
assocTy: (<marmalade.ledger.tokens1188>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1188>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1187, <read1187>), object:<{read1187_row}>, object:<{read1187_row}>)
assocTy: (<read1187>, <read1187>) <=> object:<{read1187_row}>
assocTy: (<read1187>, <read1187>) <= object:<{read1187_row}>
assocTy: tracking/updating type variable <read1187> <= object:<{read1187_row}>
assocTy: (<read1187>, object:{marmalade.ledger.token-schema}) <=> object:<{read1187_row}>
assocTy: (<{read1187_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1187_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1187_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1185_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1185_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1185_l>] -> <at1185_a>: roles=[(RetVar, RoleTys { candArgTy=<at1185_a>, AST=at1185::<at1185>, tyVar=<precision1189>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1185_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1185_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1185_o}> -> <at1185_a>, roles=[(RetVar, RoleTys { candArgTy=<at1185_a>, AST=at1185::<at1185>, tyVar=<precision1189>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1186::string, tyVar=<string1186>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1185_o}>, AST=read1187::<read1187>, tyVar=<read1187>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1185_o}> -> <at1185_a> with [(<at1185_a>, [(at1185, <precision1189>, integer)]), (string, [(string1186, <string1186>, string)]), (object:<{at1185_o}>, [(read1187, <read1187>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1185_o}> -> <at1185_a>: [(<at1185_a>, (integer, [(at1185, <precision1189>)])), (string, (string, [(string1186, <string1186>)])), (object:<{at1185_o}>, (object:{marmalade.ledger.token-schema}, [(read1187, <read1187>)]))]
Adjusting type for solution: ((at1185, <precision1189>), <at1185_a>, integer)
assocTy: (<precision1189>, integer) <=> <at1185_a>
assocTy: integer => <at1185_a>
assocTy: (<precision1189>, integer) <=> integer
assocTy: (<precision1189>, integer) <= integer
Adjusting type for solution: ((string1186, <string1186>), string, string)
assocTy: (<string1186>, string) <=> string
assocTy: (<string1186>, string) <= string
assocTy: (<string1186>, string) <=> string
assocTy: (<string1186>, string) <= string
Adjusting type for solution: ((read1187, <read1187>), object:<{at1185_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1187>, object:{marmalade.ledger.token-schema}) <=> object:<{at1185_o}>
assocTy: (<{at1185_o}>, <{at1185_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1185_o}>, <{at1185_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1185_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1185_o}>)
assocTy: (<read1187>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1187>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard1160::<enforce-guard1160>, tyVar=<enforce-guard1160>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard1177::<account-guard1177>, tyVar=<account-guard1176>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard1160, <enforce-guard1160>, bool)]), (guard, [(account-guard1177, <account-guard1176>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard1160, <enforce-guard1160>)])), (guard, (guard, [(account-guard1177, <account-guard1176>)]))]
Adjusting type for solution: ((enforce-guard1160, <enforce-guard1160>), bool, bool)
assocTy: (<enforce-guard1160>, bool) <=> bool
assocTy: (<enforce-guard1160>, bool) <= bool
assocTy: (<enforce-guard1160>, bool) <=> bool
assocTy: (<enforce-guard1160>, bool) <= bool
Adjusting type for solution: ((account-guard1177, <account-guard1176>), guard, guard)
assocTy: (<account-guard1176>, guard) <=> guard
assocTy: (<account-guard1176>, guard) <= guard
assocTy: (<account-guard1176>, guard) <=> guard
assocTy: (<account-guard1176>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.debit:object:(defschema se...
===== Fun: (defun marmalade.ledger.credit-account:object:(def...
trackAST: (credit-account_id1249, string)
trackAST: (credit-account_account1250, string)
trackAST: (credit-account_amount1251, decimal)
trackAST: (credit_id1252, string)
trackAST: (credit_account1253, string)
trackAST: (credit_guard1254, guard)
trackAST: (credit_amount1255, decimal)
trackAST: (enforce-valid-account_account1256, string)
trackAST: (enforce1257, <enforce1257>)
trackAST: (>1258, <>1258>)
trackAST: (length1259, <length1259>)
trackAST: (integer1260, integer)
trackAST: (string1261, string)
trackAST: (enforce-valid-account1262, <c>)
assocAST: (enforce1257, <enforce1257>, <enforce1257>) => (enforce-valid-account1262, <c>, <c>)
trackAST: (enforce-valid-account1263, <enforce-valid-account1263>)
assocAST: (enforce1257, <enforce1257>, <enforce1257>) => (enforce-valid-account1263, <enforce-valid-account1263>, <enforce-valid-account1263>)
trackAST: (enforce-unit_id1264, string)
trackAST: (enforce-unit_amount1265, decimal)
trackAST: (BindLet1266, <BindLet1266>)
trackAST: (BindLet1266_p1267, <BindLet1266_p1267_ai>)
trackAST: (precision_id1268, string)
trackAST: (at1269, <at1269>)
trackAST: (string1270, string)
trackAST: (read1271, <read1271>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1272, table:{marmalade.ledger.token-schema})
trackAST: (precision1273, integer)
assocAST: (precision1273, <precision1273>, integer) => (at1269, <at1269>, <at1269>)
trackAST: (precision1274, <precision1274>)
assocAST: (at1269, <precision1273>, integer) => (precision1274, <precision1274>, <precision1274>)
assocAST: (precision1274, <precision1273>, integer) => (BindLet1266_p1267, <BindLet1266_p1267_ai>, <BindLet1266_p1267_ai>)
trackAST: (enforce1275, <enforce1275>)
trackAST: (=1276, <=1276>)
trackAST: (floor1277, <floor1277>)
trackAST: (string1278, string)
assocAST: (enforce1275, <enforce1275>, <enforce1275>) => (BindLet1266, <BindLet1266>, <BindLet1266>)
trackAST: (enforce-unit1279, bool)
assocAST: (enforce-unit1279, <enforce-unit1279>, bool) => (BindLet1266, <enforce1275>, <enforce1275>)
trackAST: (enforce-unit1280, <enforce-unit1280>)
assocAST: (BindLet1266, <enforce-unit1279>, bool) => (enforce-unit1280, <enforce-unit1280>, <enforce-unit1280>)
trackAST: (require-capability1281, <require-capability1281>)
trackAST: (CREDIT_id1282, string)
trackAST: (CREDIT_receiver1283, string)
trackAST: (bool1284, bool)
trackAST: (CREDIT1285, <g>)
assocAST: (bool1284, <bool1284>, bool) => (CREDIT1285, <g>, <g>)
trackAST: (CREDIT1286, <CREDIT1286>)
assocAST: (bool1284, <bool1284>, bool) => (CREDIT1286, <CREDIT1286>, <CREDIT1286>)
trackAST: (with-default-read1287, <with-default-read1287>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1288, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1289, string)
trackAST: (key_account1290, string)
trackAST: (format1291, <format1291>)
trackAST: (string1292, string)
trackAST: (list1293, [<ak>])
trackAST: (key1294, string)
assocAST: (key1294, <key1294>, string) => (format1291, <format1291>, <format1291>)
trackAST: (key1295, <key1295>)
assocAST: (format1291, <key1294>, string) => (key1295, <key1295>, <key1295>)
TObject: TyAny
trackAST: (object1296, object:*)
trackAST: (decimal1297, decimal)
trackAST: (BindSchema1298, <BindSchema1298>)
trackAST: (BindSchema1298_old-bal1299, <BindSchema1298_old-bal1299_ac>)
trackAST: (string1300, string)
trackAST: (BindSchema1298_retg1301, <BindSchema1298_retg1301_ad>)
trackAST: (string1302, string)
trackAST: (enforce1303, <enforce1303>)
trackAST: (=1304, <=1304>)
trackAST: (string1305, string)
trackAST: (BindLet1306, <BindLet1306>)
trackAST: (BindLet1306_is-new1307, <BindLet1306_is-new1307_ae>)
trackAST: (if1308, <if1308>)
trackAST: (=1309, <=1309>)
trackAST: (decimal1310, decimal)
trackAST: (enforce-reserved_account1311, string)
trackAST: (enforce-reserved_guard1312, guard)
trackAST: (BindLet1313, <BindLet1313>)
trackAST: (BindLet1313_r1314, <BindLet1313_r1314_g>)
trackAST: (check-reserved_account1315, string)
trackAST: (BindLet1316, <BindLet1316>)
trackAST: (BindLet1316_pfx1317, <BindLet1316_pfx1317_f>)
trackAST: (take1318, <take1318>)
trackAST: (integer1319, integer)
assocAST: (take1318, <take1318>, <take1318>) => (BindLet1316_pfx1317, <BindLet1316_pfx1317_f>, <BindLet1316_pfx1317_f>)
trackAST: (if1320, <if1320>)
trackAST: (=1321, <=1321>)
trackAST: (string1322, string)
trackAST: (take1323, <take1323>)
trackAST: (integer1324, integer)
trackAST: (take1325, <take1325>)
trackAST: (integer1326, integer)
trackAST: (string1327, string)
assocAST: (if1320, <if1320>, <if1320>) => (BindLet1316, <BindLet1316>, <BindLet1316>)
trackAST: (check-reserved1328, string)
assocAST: (check-reserved1328, <check-reserved1328>, string) => (BindLet1316, <if1320>, <if1320>)
trackAST: (check-reserved1329, <check-reserved1329>)
assocAST: (BindLet1316, <check-reserved1328>, string) => (check-reserved1329, <check-reserved1329>, <check-reserved1329>)
assocAST: (check-reserved1329, <check-reserved1328>, string) => (BindLet1313_r1314, <BindLet1313_r1314_g>, <BindLet1313_r1314_g>)
trackAST: (if1330, <if1330>)
trackAST: (=1331, <=1331>)
trackAST: (string1332, string)
trackAST: (bool1333, bool)
trackAST: (if1334, <if1334>)
trackAST: (=1335, <=1335>)
trackAST: (string1336, string)
trackAST: (enforce1337, <enforce1337>)
trackAST: (=1338, <=1338>)
trackAST: (format1339, <format1339>)
trackAST: (string1340, string)
trackAST: (list1341, [<h>])
trackAST: (format1342, <format1342>)
trackAST: (string1343, string)
trackAST: (list1344, [<i>])
trackAST: (drop1345, <drop1345>)
trackAST: (integer1346, integer)
trackAST: (string1347, string)
trackAST: (enforce1348, <enforce1348>)
trackAST: (bool1349, bool)
trackAST: (format1350, <format1350>)
trackAST: (string1351, string)
trackAST: (list1352, [<j>])
assocAST: (if1330, <if1330>, <if1330>) => (BindLet1313, <BindLet1313>, <BindLet1313>)
trackAST: (enforce-reserved1353, bool)
assocAST: (enforce-reserved1353, <enforce-reserved1353>, bool) => (BindLet1313, <if1330>, <if1330>)
trackAST: (enforce-reserved1354, <enforce-reserved1354>)
assocAST: (BindLet1313, <enforce-reserved1353>, bool) => (enforce-reserved1354, <enforce-reserved1354>, <enforce-reserved1354>)
trackAST: (bool1355, bool)
assocAST: (if1308, <if1308>, <if1308>) => (BindLet1306_is-new1307, <BindLet1306_is-new1307_ae>, <BindLet1306_is-new1307_ae>)
trackAST: (BindLet1356, <BindLet1356>)
trackAST: (BindLet1356_new-bal1357, <BindLet1356_new-bal1357_af>)
trackAST: (if1358, <if1358>)
trackAST: (+1359, <+1359>)
assocAST: (if1358, <if1358>, <if1358>) => (BindLet1356_new-bal1357, <BindLet1356_new-bal1357_af>, <BindLet1356_new-bal1357_af>)
trackAST: (write1360, <write1360>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1361, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1362, string)
trackAST: (key_account1363, string)
trackAST: (format1364, <format1364>)
trackAST: (string1365, string)
trackAST: (list1366, [<ak>])
trackAST: (key1367, string)
assocAST: (key1367, <key1367>, string) => (format1364, <format1364>, <format1364>)
trackAST: (key1368, <key1368>)
assocAST: (format1364, <key1367>, string) => (key1368, <key1368>, <key1368>)
TObject: TyAny
trackAST: (object1369, object:*)
trackAST: (if1370, <if1370>)
trackAST: (emit-event1371, <emit-event1371>)
trackAST: (ACCOUNT_GUARD_id1372, string)
trackAST: (ACCOUNT_GUARD_account1373, string)
trackAST: (ACCOUNT_GUARD_guard1374, guard)
trackAST: (bool1375, bool)
trackAST: (ACCOUNT_GUARD1376, bool)
assocAST: (bool1375, <bool1375>, bool) => (ACCOUNT_GUARD1376, <ACCOUNT_GUARD1376>, bool)
trackAST: (ACCOUNT_GUARD1377, <ACCOUNT_GUARD1377>)
assocAST: (bool1375, <bool1375>, bool) => (ACCOUNT_GUARD1377, <ACCOUNT_GUARD1377>, <ACCOUNT_GUARD1377>)
trackAST: (bool1378, bool)
TObject: TyAny
trackAST: (object1379, object:*)
trackAST: (if1380, <if1380>)
trackAST: (decimal1381, decimal)
assocAST: (object1379, <object1379>, object:*) => (BindLet1356, <BindLet1356>, <BindLet1356>)
assocAST: (BindLet1356, <object1379>, object:*) => (BindLet1306, <BindLet1306>, <BindLet1306>)
assocAST: (BindLet1306, <object1379>, object:*) => (BindSchema1298, <BindSchema1298>, <BindSchema1298>)
trackAST: (BindSchema1298schema1382, *)
trackAST: (credit1383, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit1383, <credit1383>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read1287, <with-default-read1287>, <with-default-read1287>)
trackAST: (credit1384, <credit1384>)
trackAST: (account-guard_id1385, string)
trackAST: (account-guard_account1386, string)
trackAST: (with-read1387, <with-read1387>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1388, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1389, string)
trackAST: (key_account1390, string)
trackAST: (format1391, <format1391>)
trackAST: (string1392, string)
trackAST: (list1393, [<ak>])
trackAST: (key1394, string)
assocAST: (key1394, <key1394>, string) => (format1391, <format1391>, <format1391>)
trackAST: (key1395, <key1395>)
assocAST: (format1391, <key1394>, string) => (key1395, <key1395>, <key1395>)
trackAST: (BindSchema1396, <BindSchema1396>)
trackAST: (BindSchema1396_guard1397, <BindSchema1396_guard1397_f>)
trackAST: (string1398, string)
assocAST: (BindSchema1396_guard1397, <BindSchema1396_guard1397_f>, <BindSchema1396_guard1397_f>) => (BindSchema1396, <BindSchema1396>, <BindSchema1396>)
trackAST: (BindSchema1396schema1399, *)
trackAST: (account-guard1400, guard)
assocAST: (account-guard1400, <account-guard1400>, guard) => (with-read1387, <with-read1387>, <with-read1387>)
trackAST: (account-guard1401, <account-guard1401>)
assocAST: (with-read1387, <account-guard1400>, guard) => (account-guard1401, <account-guard1401>, <account-guard1401>)
assocAST: (with-default-read1287, <credit1383>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit1384, <credit1384>, <credit1384>)
trackAST: (credit-account1402, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit1384, <credit1383>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit-account1402, <credit-account1402>, object:{kip.poly-fungible-v3.receiver-balance-change})
--------------------------------
 Substitute defuns:

assocTy: (<enforce1257>, <enforce1257>) <=> <enforce-valid-account1263_c>
assocTy: (<enforce1257>, <enforce1257>) <= <enforce-valid-account1263_c>
assocTy: tracking/updating type variable <enforce1257> <= <enforce-valid-account1263_c>
trackAST: (inlinedCallArgs1403, <inlinedCallArgs1403>)
assocTy: (<inlinedCallArgs1403>, <inlinedCallArgs1403>) <=> <enforce-valid-account1263_c>
assocTy: (<inlinedCallArgs1403>, <inlinedCallArgs1403>) <= <enforce-valid-account1263_c>
assocTy: tracking/updating type variable <inlinedCallArgs1403> <= <enforce-valid-account1263_c>
trackAST: (inlinedCallArgs1403_account1404, string)
assocAST: (credit_account1253, <credit_account1253>, string) => (inlinedCallArgs1403_account1404, <inlinedCallArgs1403_account1404>, string)
assocAST: (inlinedCallArgs1403_account1404, <credit_account1253>, string) => (enforce-valid-account_account1256, <enforce-valid-account_account1256>, string)
assocTy: (<precision1273>, integer) <=> integer
assocTy: (<precision1273>, integer) <= integer
trackAST: (inlinedCallArgs1405, <inlinedCallArgs1405>)
assocTy: (<inlinedCallArgs1405>, <inlinedCallArgs1405>) <=> integer
assocTy: (<inlinedCallArgs1405>, <inlinedCallArgs1405>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1405> <= integer
trackAST: (inlinedCallArgs1405_id1406, string)
assocAST: (enforce-unit_id1264, <enforce-unit_id1264>, string) => (inlinedCallArgs1405_id1406, <inlinedCallArgs1405_id1406>, string)
assocAST: (inlinedCallArgs1405_id1406, <enforce-unit_id1264>, string) => (precision_id1268, <precision_id1268>, string)
assocTy: (<enforce-unit1279>, bool) <=> bool
assocTy: (<enforce-unit1279>, bool) <= bool
trackAST: (inlinedCallArgs1407, <inlinedCallArgs1407>)
assocTy: (<inlinedCallArgs1407>, <inlinedCallArgs1407>) <=> bool
assocTy: (<inlinedCallArgs1407>, <inlinedCallArgs1407>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1407> <= bool
trackAST: (inlinedCallArgs1407_id1408, string)
assocAST: (credit_id1252, <credit_id1252>, string) => (inlinedCallArgs1407_id1408, <inlinedCallArgs1407_id1408>, string)
trackAST: (inlinedCallArgs1407_amount1409, decimal)
assocAST: (credit_amount1255, <credit_amount1255>, decimal) => (inlinedCallArgs1407_amount1409, <inlinedCallArgs1407_amount1409>, decimal)
assocAST: (inlinedCallArgs1407_id1408, <credit_id1252>, string) => (enforce-unit_id1264, <enforce-unit_id1264>, string)
assocAST: (inlinedCallArgs1407_id1408, <credit_id1252>, string) => (enforce-unit_id1264, <credit_id1252>, string)
assocAST: (inlinedCallArgs1407_amount1409, <credit_amount1255>, decimal) => (enforce-unit_amount1265, <enforce-unit_amount1265>, decimal)
assocAST: (inlinedCallArgs1407_amount1409, <credit_amount1255>, decimal) => (enforce-unit_amount1265, <credit_amount1255>, decimal)
assocTy: (<bool1284>, bool) <=> <CREDIT1286_g>
assocTy: bool => <CREDIT1286_g>
trackAST: (inlinedCallArgs1410, <inlinedCallArgs1410>)
assocTy: (<inlinedCallArgs1410>, <inlinedCallArgs1410>) <=> <CREDIT1286_g>
assocTy: (<inlinedCallArgs1410>, <inlinedCallArgs1410>) <= <CREDIT1286_g>
assocTy: tracking/updating type variable <inlinedCallArgs1410> <= <CREDIT1286_g>
trackAST: (inlinedCallArgs1410_id1411, string)
assocAST: (credit_id1252, <credit_id1252>, string) => (inlinedCallArgs1410_id1411, <inlinedCallArgs1410_id1411>, string)
trackAST: (inlinedCallArgs1410_receiver1412, string)
assocAST: (credit_account1253, <credit_account1253>, string) => (inlinedCallArgs1410_receiver1412, <inlinedCallArgs1410_receiver1412>, string)
assocTy: (<check-reserved1328>, string) <=> string
assocTy: (<check-reserved1328>, string) <= string
trackAST: (inlinedCallArgs1413, <inlinedCallArgs1413>)
assocTy: (<inlinedCallArgs1413>, <inlinedCallArgs1413>) <=> string
assocTy: (<inlinedCallArgs1413>, <inlinedCallArgs1413>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1413> <= string
trackAST: (inlinedCallArgs1413_account1414, string)
assocAST: (enforce-reserved_account1311, <enforce-reserved_account1311>, string) => (inlinedCallArgs1413_account1414, <inlinedCallArgs1413_account1414>, string)
assocAST: (inlinedCallArgs1413_account1414, <enforce-reserved_account1311>, string) => (check-reserved_account1315, <check-reserved_account1315>, string)
assocTy: (<enforce-reserved1353>, bool) <=> bool
assocTy: (<enforce-reserved1353>, bool) <= bool
trackAST: (inlinedCallArgs1415, <inlinedCallArgs1415>)
assocTy: (<inlinedCallArgs1415>, <inlinedCallArgs1415>) <=> bool
assocTy: (<inlinedCallArgs1415>, <inlinedCallArgs1415>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1415> <= bool
trackAST: (inlinedCallArgs1415_account1416, string)
assocAST: (credit_account1253, <credit_account1253>, string) => (inlinedCallArgs1415_account1416, <inlinedCallArgs1415_account1416>, string)
trackAST: (inlinedCallArgs1415_guard1417, guard)
assocAST: (credit_guard1254, <credit_guard1254>, guard) => (inlinedCallArgs1415_guard1417, <inlinedCallArgs1415_guard1417>, guard)
assocAST: (inlinedCallArgs1415_account1416, <credit_account1253>, string) => (enforce-reserved_account1311, <enforce-reserved_account1311>, string)
assocAST: (inlinedCallArgs1415_account1416, <credit_account1253>, string) => (enforce-reserved_account1311, <credit_account1253>, string)
assocAST: (inlinedCallArgs1415_account1416, <credit_account1253>, string) => (enforce-reserved_account1311, <credit_account1253>, string)
assocAST: (inlinedCallArgs1415_guard1417, <credit_guard1254>, guard) => (enforce-reserved_guard1312, <enforce-reserved_guard1312>, guard)
assocTy: (<key1367>, string) <=> string
assocTy: (<key1367>, string) <= string
trackAST: (inlinedCallArgs1418, <inlinedCallArgs1418>)
assocTy: (<inlinedCallArgs1418>, <inlinedCallArgs1418>) <=> string
assocTy: (<inlinedCallArgs1418>, <inlinedCallArgs1418>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1418> <= string
trackAST: (inlinedCallArgs1418_id1419, string)
assocAST: (credit_id1252, <credit_id1252>, string) => (inlinedCallArgs1418_id1419, <inlinedCallArgs1418_id1419>, string)
trackAST: (inlinedCallArgs1418_account1420, string)
assocAST: (credit_account1253, <credit_account1253>, string) => (inlinedCallArgs1418_account1420, <inlinedCallArgs1418_account1420>, string)
assocAST: (inlinedCallArgs1418_id1419, <credit_id1252>, string) => (key_id1362, <key_id1362>, string)
assocAST: (inlinedCallArgs1418_account1420, <credit_account1253>, string) => (key_account1363, <key_account1363>, string)
assocTy: (<bool1375>, bool) <=> bool
assocTy: (<bool1375>, bool) <= bool
trackAST: (inlinedCallArgs1421, <inlinedCallArgs1421>)
assocTy: (<inlinedCallArgs1421>, <inlinedCallArgs1421>) <=> bool
assocTy: (<inlinedCallArgs1421>, <inlinedCallArgs1421>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1421> <= bool
trackAST: (inlinedCallArgs1421_id1422, string)
assocAST: (credit_id1252, <credit_id1252>, string) => (inlinedCallArgs1421_id1422, <inlinedCallArgs1421_id1422>, string)
trackAST: (inlinedCallArgs1421_account1423, string)
assocAST: (credit_account1253, <credit_account1253>, string) => (inlinedCallArgs1421_account1423, <inlinedCallArgs1421_account1423>, string)
trackAST: (inlinedCallArgs1421_guard1424, guard)
assocAST: (inlinedCallArgs1421_guard1424, <inlinedCallArgs1421_guard1424>, guard) => (BindSchema1298_retg1301, <BindSchema1298_retg1301_ad>, <BindSchema1298_retg1301_ad>)
assocTy: (<key1294>, string) <=> string
assocTy: (<key1294>, string) <= string
trackAST: (inlinedCallArgs1425, <inlinedCallArgs1425>)
assocTy: (<inlinedCallArgs1425>, <inlinedCallArgs1425>) <=> string
assocTy: (<inlinedCallArgs1425>, <inlinedCallArgs1425>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1425> <= string
trackAST: (inlinedCallArgs1425_id1426, string)
assocAST: (credit_id1252, <credit_id1252>, string) => (inlinedCallArgs1425_id1426, <inlinedCallArgs1425_id1426>, string)
trackAST: (inlinedCallArgs1425_account1427, string)
assocAST: (credit_account1253, <credit_account1253>, string) => (inlinedCallArgs1425_account1427, <inlinedCallArgs1425_account1427>, string)
assocAST: (inlinedCallArgs1425_id1426, <credit_id1252>, string) => (key_id1289, <key_id1289>, string)
assocAST: (inlinedCallArgs1425_account1427, <credit_account1253>, string) => (key_account1290, <key_account1290>, string)
assocTy: (<key1394>, string) <=> string
assocTy: (<key1394>, string) <= string
trackAST: (inlinedCallArgs1428, <inlinedCallArgs1428>)
assocTy: (<inlinedCallArgs1428>, <inlinedCallArgs1428>) <=> string
assocTy: (<inlinedCallArgs1428>, <inlinedCallArgs1428>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1428> <= string
trackAST: (inlinedCallArgs1428_id1429, string)
assocAST: (account-guard_id1385, <account-guard_id1385>, string) => (inlinedCallArgs1428_id1429, <inlinedCallArgs1428_id1429>, string)
trackAST: (inlinedCallArgs1428_account1430, string)
assocAST: (account-guard_account1386, <account-guard_account1386>, string) => (inlinedCallArgs1428_account1430, <inlinedCallArgs1428_account1430>, string)
assocAST: (inlinedCallArgs1428_id1429, <account-guard_id1385>, string) => (key_id1389, <key_id1389>, string)
assocAST: (inlinedCallArgs1428_account1430, <account-guard_account1386>, string) => (key_account1390, <key_account1390>, string)
assocTy: (<account-guard1400>, guard) <=> guard
assocTy: (<account-guard1400>, guard) <= guard
trackAST: (inlinedCallArgs1431, <inlinedCallArgs1431>)
assocTy: (<inlinedCallArgs1431>, <inlinedCallArgs1431>) <=> guard
assocTy: (<inlinedCallArgs1431>, <inlinedCallArgs1431>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1431> <= guard
trackAST: (inlinedCallArgs1431_id1432, string)
assocAST: (credit-account_id1249, <credit-account_id1249>, string) => (inlinedCallArgs1431_id1432, <inlinedCallArgs1431_id1432>, string)
trackAST: (inlinedCallArgs1431_account1433, string)
assocAST: (credit-account_account1250, <credit-account_account1250>, string) => (inlinedCallArgs1431_account1433, <inlinedCallArgs1431_account1433>, string)
assocAST: (inlinedCallArgs1431_id1432, <credit-account_id1249>, string) => (account-guard_id1385, <account-guard_id1385>, string)
assocAST: (inlinedCallArgs1431_id1432, <credit-account_id1249>, string) => (account-guard_id1385, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1431_account1433, <credit-account_account1250>, string) => (account-guard_account1386, <account-guard_account1386>, string)
assocAST: (inlinedCallArgs1431_account1433, <credit-account_account1250>, string) => (account-guard_account1386, <credit-account_account1250>, string)
assocTy: (<credit1383>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit1383>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs1434, <inlinedCallArgs1434>)
assocTy: (<inlinedCallArgs1434>, <inlinedCallArgs1434>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs1434>, <inlinedCallArgs1434>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs1434> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs1434_id1435, string)
assocAST: (credit-account_id1249, <credit-account_id1249>, string) => (inlinedCallArgs1434_id1435, <inlinedCallArgs1434_id1435>, string)
trackAST: (inlinedCallArgs1434_account1436, string)
assocAST: (credit-account_account1250, <credit-account_account1250>, string) => (inlinedCallArgs1434_account1436, <inlinedCallArgs1434_account1436>, string)
trackAST: (inlinedCallArgs1434_guard1437, guard)
assocAST: (account-guard1401, <account-guard1400>, guard) => (inlinedCallArgs1434_guard1437, <inlinedCallArgs1434_guard1437>, guard)
trackAST: (inlinedCallArgs1434_amount1438, decimal)
assocAST: (credit-account_amount1251, <credit-account_amount1251>, decimal) => (inlinedCallArgs1434_amount1438, <inlinedCallArgs1434_amount1438>, decimal)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit_account1253>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit_id1252>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_amount1438, <credit-account_amount1251>, decimal) => (credit_amount1255, <credit_amount1255>, decimal)
assocAST: (inlinedCallArgs1434_amount1438, <credit-account_amount1251>, decimal) => (credit_amount1255, <credit-account_amount1251>, decimal)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_id1435, <credit-account_id1249>, string) => (credit_id1252, <credit-account_id1249>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_account1436, <credit-account_account1250>, string) => (credit_account1253, <credit-account_account1250>, string)
assocAST: (inlinedCallArgs1434_guard1437, <account-guard1400>, guard) => (credit_guard1254, <credit_guard1254>, guard)
assocAST: (inlinedCallArgs1434_guard1437, <account-guard1400>, guard) => (credit_guard1254, <account-guard1400>, guard)
assocAST: (inlinedCallArgs1434_guard1437, <account-guard1400>, guard) => (credit_guard1254, <account-guard1400>, guard)
assocAST: (inlinedCallArgs1434_guard1437, <account-guard1400>, guard) => (credit_guard1254, <account-guard1400>, guard)
assocAST: (inlinedCallArgs1434_amount1438, <credit-account_amount1251>, decimal) => (credit_amount1255, <credit-account_amount1251>, decimal)
assocAST: (inlinedCallArgs1434_amount1438, <credit-account_amount1251>, decimal) => (credit_amount1255, <credit-account_amount1251>, decimal)
--------------------------------
Substitute natives:

Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1387_row}> key:string bindings:binding:<{with-read1387_row}> -> <with-read1387_a>
assocTy: (<marmalade.ledger.ledger1388>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1387_row}>
assocTy: (<{with-read1387_row}>, <{with-read1387_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1387_row}>, <{with-read1387_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1387_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1387_row}>)
assocTy: (<key1394>, string) <=> string
assocTy: (<key1394>, string) <= string
assocTy: (<account-guard1400>, guard) <=> <with-read1387_a>
assocTy: guard => <with-read1387_a>
assocTy: (<BindSchema1396_guard1397_f>, <BindSchema1396_guard1397_f>) <=> <with-read1387_a>
assocTy: (<BindSchema1396_guard1397_f>, <BindSchema1396_guard1397_f>) <= <with-read1387_a>
assocTy: tracking/updating type variable <BindSchema1396_guard1397_f> <= <with-read1387_a>
assocTy: (<BindSchema1396schema1399>, *) <=> binding:<{with-read1387_row}>
assocTy: (<BindSchema1396schema1399>, *) <= binding:<{with-read1387_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1392>, string) <=> string
assocTy: (<string1392>, string) <= string
assocTy: (<list1393>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1394>, string) <=> string
assocTy: (<key1394>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>1258>, <>1258>) <=> bool
assocTy: (<>1258>, <>1258>) <= bool
assocTy: tracking/updating type variable <>1258> <= bool
assocTy: (<string1261>, string) <=> string
assocTy: (<string1261>, string) <= string
assocTy: (<enforce1257>, <enforce-valid-account1263_c>) <=> bool
assocTy: (<enforce1257>, <enforce-valid-account1263_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account1263_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>1258_a[integer,decimal,string,time]> y:<>1258_a[integer,decimal,string,time]> -> bool
assocTy: (<length1259>, <length1259>) <=> <>1258_a[integer,decimal,string,time]>
assocTy: (<length1259>, <length1259>) <= <>1258_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length1259> <= <>1258_a[integer,decimal,string,time]>
assocTy: (<integer1260>, integer) <=> <>1258_a[integer,decimal,string,time]>
assocTy: integer => <>1258_a[integer,decimal,string,time]>
assocTy: (<>1258>, bool) <=> bool
assocTy: (<>1258>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length1259_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<credit-account_account1250>, string) <=> <length1259_a[[<l>],string,object:<{o}>]>
assocTy: string => <length1259_a[[<l>],string,object:<{o}>]>
assocTy: (<length1259>, integer) <=> integer
assocTy: (<length1259>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1276>, <=1276>) <=> bool
assocTy: (<=1276>, <=1276>) <= bool
assocTy: tracking/updating type variable <=1276> <= bool
assocTy: (<string1278>, string) <=> string
assocTy: (<string1278>, string) <= string
assocTy: (<enforce-unit1279>, bool) <=> bool
assocTy: (<enforce-unit1279>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor1277>, <floor1277>) <=> <=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor1277>, <floor1277>) <= <=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor1277> <= <=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<credit-account_amount1251>, decimal) <=> <=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1276_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1276>, bool) <=> bool
assocTy: (<=1276>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1284>, bool) <=> bool
assocTy: (<bool1284>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability1281>, <require-capability1281>) <=> bool
assocTy: (<require-capability1281>, <require-capability1281>) <= bool
assocTy: tracking/updating type variable <require-capability1281> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read1287_row}> key:string defaults:object:~<{with-default-read1287_row}> bindings:binding:~<{with-default-read1287_row}> -> <with-default-read1287_a>
assocTy: (<marmalade.ledger.ledger1288>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read1287_row}>
assocTy: (<{with-default-read1287_row}>, <{with-default-read1287_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read1287_row}>, <{with-default-read1287_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read1287_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read1287_row}>)
assocTy: (<key1294>, string) <=> string
assocTy: (<key1294>, string) <= string
assocTy: (<object1296>, object:*) <=> object:~<{with-default-read1287_row}>
assocTy: (<object1296>, object:*) <= object:~<{with-default-read1287_row}>
assocTy: (<credit1383>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read1287_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read1287_a>
assocTy: (<object1379>, object:*) <=> <with-default-read1287_a>
assocTy: (<BindSchema1298schema1382>, *) <=> binding:~<{with-default-read1287_row}>
assocTy: (<BindSchema1298schema1382>, *) <= binding:~<{with-default-read1287_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1304>, <=1304>) <=> bool
assocTy: (<=1304>, <=1304>) <= bool
assocTy: tracking/updating type variable <=1304> <= bool
assocTy: (<string1305>, string) <=> string
assocTy: (<string1305>, string) <= string
assocTy: (<enforce1303>, <enforce1303>) <=> bool
assocTy: (<enforce1303>, <enforce1303>) <= bool
assocTy: tracking/updating type variable <enforce1303> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1304_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1304_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs1421_guard1424>, guard) <=> <=1304_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=1304_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<account-guard1400>, guard) <=> <=1304_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1304>, bool) <=> bool
assocTy: (<=1304>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1308_a> else:<if1308_a> -> <if1308_a>
assocTy: (<=1309>, <=1309>) <=> bool
assocTy: (<=1309>, <=1309>) <= bool
assocTy: tracking/updating type variable <=1309> <= bool
assocTy: (<enforce-reserved1353>, bool) <=> <if1308_a>
assocTy: bool => <if1308_a>
assocTy: (<bool1355>, bool) <=> <if1308_a>
assocTy: (<if1308>, <if1308>) <=> <if1308_a>
assocTy: (<if1308>, <if1308>) <= <if1308_a>
assocTy: tracking/updating type variable <if1308> <= <if1308_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema1298_old-bal1299_ac>, <BindSchema1298_old-bal1299_ac>) <=> <=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema1298_old-bal1299_ac>, <BindSchema1298_old-bal1299_ac>) <= <=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema1298_old-bal1299_ac> <= <=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal1310>, decimal) <=> <=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1309_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1309>, bool) <=> bool
assocTy: (<=1309>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1320_a> else:<if1320_a> -> <if1320_a>
assocTy: (<=1321>, <=1321>) <=> bool
assocTy: (<=1321>, <=1321>) <= bool
assocTy: tracking/updating type variable <=1321> <= bool
assocTy: (<take1325>, <take1325>) <=> <if1320_a>
assocTy: (<take1325>, <take1325>) <= <if1320_a>
assocTy: tracking/updating type variable <take1325> <= <if1320_a>
assocTy: (<string1327>, string) <=> <if1320_a>
assocTy: string => <if1320_a>
assocTy: (<check-reserved1328>, string) <=> <if1320_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string1322>, string) <=> <=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take1323>, <take1323>) <=> <=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take1323>, <take1323>) <= <=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take1323> <= <=1321_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1321>, bool) <=> bool
assocTy: (<=1321>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1330_a> else:<if1330_a> -> <if1330_a>
assocTy: (<=1331>, <=1331>) <=> bool
assocTy: (<=1331>, <=1331>) <= bool
assocTy: tracking/updating type variable <=1331> <= bool
assocTy: (<bool1333>, bool) <=> <if1330_a>
assocTy: bool => <if1330_a>
assocTy: (<if1334>, <if1334>) <=> <if1330_a>
assocTy: (<if1334>, <if1334>) <= <if1330_a>
assocTy: tracking/updating type variable <if1334> <= <if1330_a>
assocTy: (<enforce-reserved1353>, bool) <=> <if1330_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1331_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1331_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string1332>, string) <=> <=1331_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=1331_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved1328>, string) <=> <=1331_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1331>, bool) <=> bool
assocTy: (<=1331>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1334_a> else:<if1334_a> -> <if1334_a>
assocTy: (<=1335>, <=1335>) <=> bool
assocTy: (<=1335>, <=1335>) <= bool
assocTy: tracking/updating type variable <=1335> <= bool
assocTy: (<enforce1337>, <enforce1337>) <=> <if1334_a>
assocTy: (<enforce1337>, <enforce1337>) <= <if1334_a>
assocTy: tracking/updating type variable <enforce1337> <= <if1334_a>
assocTy: (<enforce1348>, <enforce1348>) <=> <if1334_a>
assocTy: (<enforce1348>, <enforce1348>) <= <if1334_a>
assocTy: tracking/updating type variable <enforce1348> <= <if1334_a>
assocTy: (<if1334>, bool) <=> <if1334_a>
assocTy: bool => <if1334_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1335_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1335_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string1336>, string) <=> <=1335_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=1335_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved1328>, string) <=> <=1335_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1335>, bool) <=> bool
assocTy: (<=1335>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1338>, <=1338>) <=> bool
assocTy: (<=1338>, <=1338>) <= bool
assocTy: tracking/updating type variable <=1338> <= bool
assocTy: (<string1347>, string) <=> string
assocTy: (<string1347>, string) <= string
assocTy: (<enforce1337>, bool) <=> bool
assocTy: (<enforce1337>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format1339>, <format1339>) <=> <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format1339>, <format1339>) <= <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format1339> <= <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format1342>, <format1342>) <=> <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format1342>, <format1342>) <= <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format1342> <= <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1338>, bool) <=> bool
assocTy: (<=1338>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1340>, string) <=> string
assocTy: (<string1340>, string) <= string
assocTy: (<list1341>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format1339>, <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format1339>, <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=1338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1343>, string) <=> string
assocTy: (<string1343>, string) <= string
assocTy: (<list1344>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format1342>, string) <=> string
assocTy: (<format1342>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool1349>, bool) <=> bool
assocTy: (<bool1349>, bool) <= bool
assocTy: (<format1350>, <format1350>) <=> string
assocTy: (<format1350>, <format1350>) <= string
assocTy: tracking/updating type variable <format1350> <= string
assocTy: (<enforce1348>, bool) <=> bool
assocTy: (<enforce1348>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1351>, string) <=> string
assocTy: (<string1351>, string) <= string
assocTy: (<list1352>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format1350>, string) <=> string
assocTy: (<format1350>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1358_a> else:<if1358_a> -> <if1358_a>
assocTy: (<if1308>, bool) <=> bool
assocTy: (<if1308>, bool) <= bool
assocTy: (<credit-account_amount1251>, decimal) <=> <if1358_a>
assocTy: decimal => <if1358_a>
assocTy: (<+1359>, <+1359>) <=> <if1358_a>
assocTy: (<+1359>, <+1359>) <= <if1358_a>
assocTy: tracking/updating type variable <+1359> <= <if1358_a>
assocTy: (<if1358>, <if1358>) <=> <if1358_a>
assocTy: (<if1358>, <if1358>) <= <if1358_a>
assocTy: tracking/updating type variable <if1358> <= <if1358_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write1360_row}> key:string object:object:<{write1360_row}> -> string
assocTy: (<marmalade.ledger.ledger1361>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write1360_row}>
assocTy: (<{write1360_row}>, <{write1360_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write1360_row}>, <{write1360_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write1360_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write1360_row}>)
assocTy: (<key1367>, string) <=> string
assocTy: (<key1367>, string) <= string
assocTy: (<object1369>, object:*) <=> object:<{write1360_row}>
assocTy: (<object1369>, object:*) <= object:<{write1360_row}>
assocTy: (<write1360>, <write1360>) <=> string
assocTy: (<write1360>, <write1360>) <= string
assocTy: tracking/updating type variable <write1360> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1365>, string) <=> string
assocTy: (<string1365>, string) <= string
assocTy: (<list1366>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1367>, string) <=> string
assocTy: (<key1367>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1370_a> else:<if1370_a> -> <if1370_a>
assocTy: (<if1308>, bool) <=> bool
assocTy: (<if1308>, bool) <= bool
assocTy: (<emit-event1371>, <emit-event1371>) <=> <if1370_a>
assocTy: (<emit-event1371>, <emit-event1371>) <= <if1370_a>
assocTy: tracking/updating type variable <emit-event1371> <= <if1370_a>
assocTy: (<bool1378>, bool) <=> <if1370_a>
assocTy: bool => <if1370_a>
assocTy: (<if1370>, <if1370>) <=> <if1370_a>
assocTy: (<if1370>, <if1370>) <= <if1370_a>
assocTy: tracking/updating type variable <if1370> <= <if1370_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1375>, bool) <=> bool
assocTy: (<bool1375>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event1371>, bool) <=> bool
assocTy: (<emit-event1371>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1380_a> else:<if1380_a> -> <if1380_a>
assocTy: (<if1308>, bool) <=> bool
assocTy: (<if1308>, bool) <= bool
assocTy: (<decimal1381>, decimal) <=> <if1380_a>
assocTy: decimal => <if1380_a>
assocTy: (<BindSchema1298_old-bal1299_ac>, decimal) <=> <if1380_a>
assocTy: (<if1380>, <if1380>) <=> <if1380_a>
assocTy: (<if1380>, <if1380>) <= <if1380_a>
assocTy: tracking/updating type variable <if1380> <= <if1380_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1292>, string) <=> string
assocTy: (<string1292>, string) <= string
assocTy: (<list1293>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1294>, string) <=> string
assocTy: (<key1294>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1387_row}> key:string bindings:binding:<{with-read1387_row}> -> <with-read1387_a>
assocTy: (<marmalade.ledger.ledger1388>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1387_row}>
assocTy: (<{with-read1387_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1387_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1387_row}>)
assocTy: (<key1394>, string) <=> string
assocTy: (<key1394>, string) <= string
assocTy: (<account-guard1400>, guard) <=> <with-read1387_a>
assocTy: (<BindSchema1396_guard1397_f>, guard) <=> <with-read1387_a>
assocTy: (<BindSchema1396schema1399>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read1387_row}>
assocTy: (<{with-read1387_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1387_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read1387_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1392>, string) <=> string
assocTy: (<string1392>, string) <= string
assocTy: (<list1393>, [*]) <=> [*]
assocTy: (<list1393>, [*]) <= [*]
assocTy: (<key1394>, string) <=> string
assocTy: (<key1394>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema1396schema1399::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1396_guard1397_f>, guard) <=> guard
assocTy: (<BindSchema1396_guard1397_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1393::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1298schema1382::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1298_old-bal1299_ac>, decimal) <=> decimal
assocTy: (<BindSchema1298_old-bal1299_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs1421_guard1424>, guard) <=> guard
assocTy: (<inlinedCallArgs1421_guard1424>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1341::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list1344::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list1352::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list1366::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object1369::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<credit-account_account1250>, string) <=> string
assocTy: (<credit-account_account1250>, string) <= string
assocTy: (<if1358>, decimal) <=> decimal
assocTy: (<if1358>, decimal) <= decimal
assocTy: (<inlinedCallArgs1421_guard1424>, guard) <=> guard
assocTy: (<inlinedCallArgs1421_guard1424>, guard) <= guard
assocTy: (<credit-account_id1249>, string) <=> string
assocTy: (<credit-account_id1249>, string) <= string
Skipping TC on specified heterogenous list for node: list1293::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object1296::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal1297>, decimal) <=> decimal
assocTy: (<decimal1297>, decimal) <= decimal
assocTy: (<account-guard1400>, guard) <=> guard
assocTy: (<account-guard1400>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object1296>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object1296>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
applySchemas [binding]: (BindSchema1396schema1399::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1396_guard1397_f>, guard) <=> guard
assocTy: (<BindSchema1396_guard1397_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1393::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=<+1359_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+1359_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+1359_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+1359_a[integer,decimal]> y:<+1359_a[integer,decimal]> -> <+1359_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+1359_a[integer,decimal]>, AST=+1359::<+1359>, tyVar=<+1359>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+1359_a[integer,decimal]>, AST=BindSchema1298_old-bal1299::<BindSchema1298_old-bal1299_ac>, tyVar=<BindSchema1298_old-bal1299_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+1359_a[integer,decimal]>, AST=inlinedCallArgs1434_amount1438::decimal, tyVar=<credit-account_amount1251>, resolvedTy=decimal})]
tryFunType: trying x:<+1359_a[integer,decimal]> y:<+1359_a[integer,decimal]> -> <+1359_a[integer,decimal]> with [(<+1359_a[integer,decimal]>, [(+1359, <+1359>, decimal), (inlinedCallArgs1434_amount1438, <credit-account_amount1251>, decimal), (BindSchema1298_old-bal1299, <BindSchema1298_old-bal1299_ac>, decimal)])]
Solved overload with x:<+1359_a[integer,decimal]> y:<+1359_a[integer,decimal]> -> <+1359_a[integer,decimal]>: [(<+1359_a[integer,decimal]>, (decimal, [(+1359, <+1359>), (inlinedCallArgs1434_amount1438, <credit-account_amount1251>), (BindSchema1298_old-bal1299, <BindSchema1298_old-bal1299_ac>)]))]
Adjusting type for solution: ((+1359, <+1359>), <+1359_a[integer,decimal]>, decimal)
assocTy: (<+1359>, decimal) <=> <+1359_a[integer,decimal]>
assocTy: decimal => <+1359_a[integer,decimal]>
assocTy: (<+1359>, decimal) <=> decimal
assocTy: (<+1359>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1434_amount1438, <credit-account_amount1251>), <+1359_a[integer,decimal]>, decimal)
assocTy: (<credit-account_amount1251>, decimal) <=> <+1359_a[integer,decimal]>
assocTy: (<credit-account_amount1251>, decimal) <=> decimal
assocTy: (<credit-account_amount1251>, decimal) <= decimal
Adjusting type for solution: ((BindSchema1298_old-bal1299, <BindSchema1298_old-bal1299_ac>), <+1359_a[integer,decimal]>, decimal)
assocTy: (<BindSchema1298_old-bal1299_ac>, decimal) <=> <+1359_a[integer,decimal]>
assocTy: (<BindSchema1298_old-bal1299_ac>, decimal) <=> decimal
assocTy: (<BindSchema1298_old-bal1299_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop1345_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop1345_a[[<l>],string]>, roleTy=<drop1345>
tryFunType: cand: count:integer list:<drop1345_a[[<l>],string]> -> <drop1345_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop1345_a[[<l>],string]>, AST=drop1345::<drop1345>, tyVar=<drop1345>, resolvedTy=<drop1345>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1346::integer, tyVar=<integer1346>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop1345_a[[<l>],string]>, AST=inlinedCallArgs1415_account1416::string, tyVar=<credit-account_account1250>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop1345_a[[<l>],string]> -> <drop1345_a[[<l>],string]> with [(<drop1345_a[[<l>],string]>, [(drop1345, <drop1345>, <drop1345>), (inlinedCallArgs1415_account1416, <credit-account_account1250>, string)]), (integer, [(integer1346, <integer1346>, integer)])]
Solved overload with count:integer list:<drop1345_a[[<l>],string]> -> <drop1345_a[[<l>],string]>: [(<drop1345_a[[<l>],string]>, (string, [(drop1345, <drop1345>), (inlinedCallArgs1415_account1416, <credit-account_account1250>)])), (integer, (integer, [(integer1346, <integer1346>)]))]
Adjusting type for solution: ((drop1345, <drop1345>), <drop1345_a[[<l>],string]>, string)
assocTy: (<drop1345>, <drop1345>) <=> <drop1345_a[[<l>],string]>
assocTy: (<drop1345>, <drop1345>) <= <drop1345_a[[<l>],string]>
assocTy: tracking/updating type variable <drop1345> <= <drop1345_a[[<l>],string]>
assocTy: (<drop1345>, <drop1345_a[[<l>],string]>) <=> string
assocTy: (<drop1345>, <drop1345_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop1345_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs1415_account1416, <credit-account_account1250>), <drop1345_a[[<l>],string]>, string)
assocTy: (<credit-account_account1250>, string) <=> <drop1345_a[[<l>],string]>
assocTy: (<credit-account_account1250>, string) <=> string
assocTy: (<credit-account_account1250>, string) <= string
Adjusting type for solution: ((integer1346, <integer1346>), integer, integer)
assocTy: (<integer1346>, integer) <=> integer
assocTy: (<integer1346>, integer) <= integer
assocTy: (<integer1346>, integer) <=> integer
assocTy: (<integer1346>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take1325_a[[<l>],string]>, roleTy=<take1318>
tryFunType: unify role: role=RetVar, candTy=<take1325_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take1325_a[[<l>],string]> -> <take1325_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take1325_a[[<l>],string]>, AST=take1325::<take1325>, tyVar=<take1325>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1326::integer, tyVar=<integer1326>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take1325_a[[<l>],string]>, AST=BindLet1316_pfx1317::<BindLet1316_pfx1317_f>, tyVar=<take1318>, resolvedTy=<take1318>})]
tryFunType: trying count:integer list:<take1325_a[[<l>],string]> -> <take1325_a[[<l>],string]> with [(<take1325_a[[<l>],string]>, [(take1325, <take1325>, string), (BindLet1316_pfx1317, <take1318>, <take1318>)]), (integer, [(integer1326, <integer1326>, integer)])]
Solved overload with count:integer list:<take1325_a[[<l>],string]> -> <take1325_a[[<l>],string]>: [(<take1325_a[[<l>],string]>, (string, [(take1325, <take1325>), (BindLet1316_pfx1317, <take1318>)])), (integer, (integer, [(integer1326, <integer1326>)]))]
Adjusting type for solution: ((take1325, <take1325>), <take1325_a[[<l>],string]>, string)
assocTy: (<take1325>, string) <=> <take1325_a[[<l>],string]>
assocTy: string => <take1325_a[[<l>],string]>
assocTy: (<take1325>, string) <=> string
assocTy: (<take1325>, string) <= string
Adjusting type for solution: ((BindLet1316_pfx1317, <take1318>), <take1325_a[[<l>],string]>, string)
assocTy: (<take1318>, <take1318>) <=> <take1325_a[[<l>],string]>
assocTy: (<take1318>, <take1318>) <= <take1325_a[[<l>],string]>
assocTy: tracking/updating type variable <take1318> <= <take1325_a[[<l>],string]>
assocTy: (<take1318>, string) <=> string
assocTy: (<take1318>, string) <= string
Adjusting type for solution: ((integer1326, <integer1326>), integer, integer)
assocTy: (<integer1326>, integer) <=> integer
assocTy: (<integer1326>, integer) <= integer
assocTy: (<integer1326>, integer) <=> integer
assocTy: (<integer1326>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take1323_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take1323_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take1323_a[[<l>],string]> -> <take1323_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take1323_a[[<l>],string]>, AST=take1323::<take1323>, tyVar=<take1323>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1324::integer, tyVar=<integer1324>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take1323_a[[<l>],string]>, AST=BindLet1316_pfx1317::<BindLet1316_pfx1317_f>, tyVar=<take1318>, resolvedTy=string})]
tryFunType: trying count:integer list:<take1323_a[[<l>],string]> -> <take1323_a[[<l>],string]> with [(<take1323_a[[<l>],string]>, [(take1323, <take1323>, string), (BindLet1316_pfx1317, <take1318>, string)]), (integer, [(integer1324, <integer1324>, integer)])]
Solved overload with count:integer list:<take1323_a[[<l>],string]> -> <take1323_a[[<l>],string]>: [(<take1323_a[[<l>],string]>, (string, [(take1323, <take1323>), (BindLet1316_pfx1317, <take1318>)])), (integer, (integer, [(integer1324, <integer1324>)]))]
Adjusting type for solution: ((take1323, <take1323>), <take1323_a[[<l>],string]>, string)
assocTy: (<take1323>, string) <=> <take1323_a[[<l>],string]>
assocTy: string => <take1323_a[[<l>],string]>
assocTy: (<take1323>, string) <=> string
assocTy: (<take1323>, string) <= string
Adjusting type for solution: ((BindLet1316_pfx1317, <take1318>), <take1323_a[[<l>],string]>, string)
assocTy: (<take1318>, string) <=> <take1323_a[[<l>],string]>
assocTy: (<take1318>, string) <=> string
assocTy: (<take1318>, string) <= string
Adjusting type for solution: ((integer1324, <integer1324>), integer, integer)
assocTy: (<integer1324>, integer) <=> integer
assocTy: (<integer1324>, integer) <= integer
assocTy: (<integer1324>, integer) <=> integer
assocTy: (<integer1324>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take1318_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take1318_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take1318_a[[<l>],string]> -> <take1318_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take1318_a[[<l>],string]>, AST=take1318::<take1318>, tyVar=<take1318>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1319::integer, tyVar=<integer1319>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take1318_a[[<l>],string]>, AST=inlinedCallArgs1413_account1414::string, tyVar=<credit-account_account1250>, resolvedTy=string})]
tryFunType: trying count:integer list:<take1318_a[[<l>],string]> -> <take1318_a[[<l>],string]> with [(<take1318_a[[<l>],string]>, [(take1318, <take1318>, string), (inlinedCallArgs1413_account1414, <credit-account_account1250>, string)]), (integer, [(integer1319, <integer1319>, integer)])]
Solved overload with count:integer list:<take1318_a[[<l>],string]> -> <take1318_a[[<l>],string]>: [(<take1318_a[[<l>],string]>, (string, [(take1318, <take1318>), (inlinedCallArgs1413_account1414, <credit-account_account1250>)])), (integer, (integer, [(integer1319, <integer1319>)]))]
Adjusting type for solution: ((take1318, <take1318>), <take1318_a[[<l>],string]>, string)
assocTy: (<take1318>, string) <=> <take1318_a[[<l>],string]>
assocTy: string => <take1318_a[[<l>],string]>
assocTy: (<take1318>, string) <=> string
assocTy: (<take1318>, string) <= string
Adjusting type for solution: ((inlinedCallArgs1413_account1414, <credit-account_account1250>), <take1318_a[[<l>],string]>, string)
assocTy: (<credit-account_account1250>, string) <=> <take1318_a[[<l>],string]>
assocTy: (<credit-account_account1250>, string) <=> string
assocTy: (<credit-account_account1250>, string) <= string
Adjusting type for solution: ((integer1319, <integer1319>), integer, integer)
assocTy: (<integer1319>, integer) <=> integer
assocTy: (<integer1319>, integer) <= integer
assocTy: (<integer1319>, integer) <=> integer
assocTy: (<integer1319>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1277::<floor1277>, tyVar=<floor1277>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1407_amount1409::decimal, tyVar=<credit-account_amount1251>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet1266_p1267::<BindLet1266_p1267_ai>, tyVar=<precision1273>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet1266_p1267, <precision1273>, integer)]), (decimal, [(floor1277, <floor1277>, decimal), (inlinedCallArgs1407_amount1409, <credit-account_amount1251>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet1266_p1267, <precision1273>)])), (decimal, (decimal, [(floor1277, <floor1277>), (inlinedCallArgs1407_amount1409, <credit-account_amount1251>)]))]
Adjusting type for solution: ((BindLet1266_p1267, <precision1273>), integer, integer)
assocTy: (<precision1273>, integer) <=> integer
assocTy: (<precision1273>, integer) <= integer
assocTy: (<precision1273>, integer) <=> integer
assocTy: (<precision1273>, integer) <= integer
Adjusting type for solution: ((floor1277, <floor1277>), decimal, decimal)
assocTy: (<floor1277>, decimal) <=> decimal
assocTy: (<floor1277>, decimal) <= decimal
assocTy: (<floor1277>, decimal) <=> decimal
assocTy: (<floor1277>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1407_amount1409, <credit-account_amount1251>), decimal, decimal)
assocTy: (<credit-account_amount1251>, decimal) <=> decimal
assocTy: (<credit-account_amount1251>, decimal) <= decimal
assocTy: (<credit-account_amount1251>, decimal) <=> decimal
assocTy: (<credit-account_amount1251>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1271_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1271_row}>, roleTy=<read1271>
tryFunType: cand: table:table:<{read1271_row}> key:string -> object:<{read1271_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1271_row}>, AST=read1271::<read1271>, tyVar=<read1271>, resolvedTy=<read1271>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1271_row}>, AST=marmalade.ledger.tokens1272::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1272>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1405_id1406::string, tyVar=<credit-account_id1249>, resolvedTy=string})]
tryFunType: trying table:table:<{read1271_row}> key:string -> object:<{read1271_row}> with [(string, [(inlinedCallArgs1405_id1406, <credit-account_id1249>, string)]), (table:<{read1271_row}>, [(marmalade.ledger.tokens1272, <marmalade.ledger.tokens1272>, table:{marmalade.ledger.token-schema})]), (object:<{read1271_row}>, [(read1271, <read1271>, <read1271>)])]
Solved overload with table:table:<{read1271_row}> key:string -> object:<{read1271_row}>: [(string, (string, [(inlinedCallArgs1405_id1406, <credit-account_id1249>)])), (table:<{read1271_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1272, <marmalade.ledger.tokens1272>)])), (object:<{read1271_row}>, (object:<{read1271_row}>, [(read1271, <read1271>)]))]
Adjusting type for solution: ((inlinedCallArgs1405_id1406, <credit-account_id1249>), string, string)
assocTy: (<credit-account_id1249>, string) <=> string
assocTy: (<credit-account_id1249>, string) <= string
assocTy: (<credit-account_id1249>, string) <=> string
assocTy: (<credit-account_id1249>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1272, <marmalade.ledger.tokens1272>), table:<{read1271_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1272>, table:{marmalade.ledger.token-schema}) <=> table:<{read1271_row}>
assocTy: (<{read1271_row}>, <{read1271_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1271_row}>, <{read1271_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1271_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1271_row}>)
assocTy: (<marmalade.ledger.tokens1272>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1272>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1271, <read1271>), object:<{read1271_row}>, object:<{read1271_row}>)
assocTy: (<read1271>, <read1271>) <=> object:<{read1271_row}>
assocTy: (<read1271>, <read1271>) <= object:<{read1271_row}>
assocTy: tracking/updating type variable <read1271> <= object:<{read1271_row}>
assocTy: (<read1271>, object:{marmalade.ledger.token-schema}) <=> object:<{read1271_row}>
assocTy: (<{read1271_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1271_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1271_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1269_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1269_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1269_l>] -> <at1269_a>: roles=[(RetVar, RoleTys { candArgTy=<at1269_a>, AST=at1269::<at1269>, tyVar=<precision1273>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1269_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1269_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1269_o}> -> <at1269_a>, roles=[(RetVar, RoleTys { candArgTy=<at1269_a>, AST=at1269::<at1269>, tyVar=<precision1273>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1270::string, tyVar=<string1270>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1269_o}>, AST=read1271::<read1271>, tyVar=<read1271>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1269_o}> -> <at1269_a> with [(<at1269_a>, [(at1269, <precision1273>, integer)]), (string, [(string1270, <string1270>, string)]), (object:<{at1269_o}>, [(read1271, <read1271>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1269_o}> -> <at1269_a>: [(<at1269_a>, (integer, [(at1269, <precision1273>)])), (string, (string, [(string1270, <string1270>)])), (object:<{at1269_o}>, (object:{marmalade.ledger.token-schema}, [(read1271, <read1271>)]))]
Adjusting type for solution: ((at1269, <precision1273>), <at1269_a>, integer)
assocTy: (<precision1273>, integer) <=> <at1269_a>
assocTy: integer => <at1269_a>
assocTy: (<precision1273>, integer) <=> integer
assocTy: (<precision1273>, integer) <= integer
Adjusting type for solution: ((string1270, <string1270>), string, string)
assocTy: (<string1270>, string) <=> string
assocTy: (<string1270>, string) <= string
assocTy: (<string1270>, string) <=> string
assocTy: (<string1270>, string) <= string
Adjusting type for solution: ((read1271, <read1271>), object:<{at1269_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1271>, object:{marmalade.ledger.token-schema}) <=> object:<{at1269_o}>
assocTy: (<{at1269_o}>, <{at1269_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1269_o}>, <{at1269_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1269_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1269_o}>)
assocTy: (<read1271>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1271>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.credit-account:object:(def...
===== Fun: (defun marmalade.ledger.total-supply:decimal (id:s...
trackAST: (total-supply_id1440, string)
trackAST: (with-default-read1441, <with-default-read1441>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1442, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object1443, object:*)
trackAST: (decimal1444, decimal)
trackAST: (BindSchema1445, <BindSchema1445>)
trackAST: (BindSchema1445_s1446, <BindSchema1445_s1446_n>)
trackAST: (string1447, string)
assocAST: (BindSchema1445_s1446, <BindSchema1445_s1446_n>, <BindSchema1445_s1446_n>) => (BindSchema1445, <BindSchema1445>, <BindSchema1445>)
trackAST: (BindSchema1445schema1448, *)
trackAST: (total-supply1449, decimal)
assocAST: (total-supply1449, <total-supply1449>, decimal) => (with-default-read1441, <with-default-read1441>, <with-default-read1441>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read1441_row}> key:string defaults:object:~<{with-default-read1441_row}> bindings:binding:~<{with-default-read1441_row}> -> <with-default-read1441_a>
assocTy: (<marmalade.ledger.tokens1442>, table:{marmalade.ledger.token-schema}) <=> table:<{with-default-read1441_row}>
assocTy: (<{with-default-read1441_row}>, <{with-default-read1441_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-default-read1441_row}>, <{with-default-read1441_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-default-read1441_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-default-read1441_row}>)
assocTy: (<total-supply_id1440>, string) <=> string
assocTy: (<total-supply_id1440>, string) <= string
assocTy: (<object1443>, object:*) <=> object:~<{with-default-read1441_row}>
assocTy: (<object1443>, object:*) <= object:~<{with-default-read1441_row}>
assocTy: (<total-supply1449>, decimal) <=> <with-default-read1441_a>
assocTy: decimal => <with-default-read1441_a>
assocTy: (<BindSchema1445_s1446_n>, <BindSchema1445_s1446_n>) <=> <with-default-read1441_a>
assocTy: (<BindSchema1445_s1446_n>, <BindSchema1445_s1446_n>) <= <with-default-read1441_a>
assocTy: tracking/updating type variable <BindSchema1445_s1446_n> <= <with-default-read1441_a>
assocTy: (<BindSchema1445schema1448>, *) <=> binding:~<{with-default-read1441_row}>
assocTy: (<BindSchema1445schema1448>, *) <= binding:~<{with-default-read1441_row}>
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema1445schema1448::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema1445_s1446_n>, decimal) <=> decimal
assocTy: (<BindSchema1445_s1446_n>, decimal) <= decimal
applySchemas [object]: (object1443::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<decimal1444>, decimal) <=> decimal
assocTy: (<decimal1444>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object1443>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object1443>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.total-supply:decimal (id:s...
===== Fun: (defun marmalade.ledger.key:string (id:string acco...
trackAST: (key_id1451, string)
trackAST: (key_account1452, string)
trackAST: (format1453, <format1453>)
trackAST: (string1454, string)
trackAST: (list1455, [<ak>])
trackAST: (key1456, string)
assocAST: (key1456, <key1456>, string) => (format1453, <format1453>, <format1453>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1454>, string) <=> string
assocTy: (<string1454>, string) <= string
assocTy: (<list1455>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1456>, string) <=> string
assocTy: (<key1456>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list1455::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.key:string (id:string acco...
===== Schema: (defschema token-schema  [id:string, manifest:obje...

===== Done: (defschema token-schema  [id:string, manifest:obje...
===== Fun: (defun marmalade.ledger.transfer-create:bool (id:s...
trackAST: (transfer-create_id1459, string)
trackAST: (transfer-create_sender1460, string)
trackAST: (transfer-create_receiver1461, string)
trackAST: (transfer-create_receiver-guard1462, guard)
trackAST: (transfer-create_amount1463, decimal)
trackAST: (enforce1464, <enforce1464>)
trackAST: (!=1465, <!=1465>)
trackAST: (string1466, string)
trackAST: (enforce-valid-transfer_sender1467, string)
trackAST: (enforce-valid-transfer_receiver1468, string)
trackAST: (enforce-valid-transfer_precision1469, integer)
trackAST: (enforce-valid-transfer_amount1470, decimal)
trackAST: (enforce1471, <enforce1471>)
trackAST: (!=1472, <!=1472>)
trackAST: (string1473, string)
trackAST: (enforce-valid-amount_precision1474, integer)
trackAST: (enforce-valid-amount_amount1475, decimal)
trackAST: (enforce1476, <enforce1476>)
trackAST: (>1477, <>1477>)
trackAST: (decimal1478, decimal)
trackAST: (string1479, string)
trackAST: (enforce-precision_precision1480, integer)
trackAST: (enforce-precision_amount1481, decimal)
trackAST: (enforce1482, <enforce1482>)
trackAST: (=1483, <=1483>)
trackAST: (floor1484, <floor1484>)
trackAST: (string1485, string)
trackAST: (enforce-precision1486, <d>)
assocAST: (enforce1482, <enforce1482>, <enforce1482>) => (enforce-precision1486, <d>, <d>)
trackAST: (enforce-precision1487, <enforce-precision1487>)
assocAST: (enforce1482, <enforce1482>, <enforce1482>) => (enforce-precision1487, <enforce-precision1487>, <enforce-precision1487>)
trackAST: (enforce-valid-amount1488, <b>)
assocAST: (enforce-precision1487, <enforce1482>, <enforce1482>) => (enforce-valid-amount1488, <b>, <b>)
trackAST: (enforce-valid-amount1489, <enforce-valid-amount1489>)
assocAST: (enforce-precision1487, <enforce1482>, <enforce1482>) => (enforce-valid-amount1489, <enforce-valid-amount1489>, <enforce-valid-amount1489>)
trackAST: (enforce-valid-account_account1490, string)
trackAST: (enforce1491, <enforce1491>)
trackAST: (>1492, <>1492>)
trackAST: (length1493, <length1493>)
trackAST: (integer1494, integer)
trackAST: (string1495, string)
trackAST: (enforce-valid-account1496, <c>)
assocAST: (enforce1491, <enforce1491>, <enforce1491>) => (enforce-valid-account1496, <c>, <c>)
trackAST: (enforce-valid-account1497, <enforce-valid-account1497>)
assocAST: (enforce1491, <enforce1491>, <enforce1491>) => (enforce-valid-account1497, <enforce-valid-account1497>, <enforce-valid-account1497>)
trackAST: (enforce-valid-account_account1498, string)
trackAST: (enforce1499, <enforce1499>)
trackAST: (>1500, <>1500>)
trackAST: (length1501, <length1501>)
trackAST: (integer1502, integer)
trackAST: (string1503, string)
trackAST: (enforce-valid-account1504, <c>)
assocAST: (enforce1499, <enforce1499>, <enforce1499>) => (enforce-valid-account1504, <c>, <c>)
trackAST: (enforce-valid-account1505, <enforce-valid-account1505>)
assocAST: (enforce1499, <enforce1499>, <enforce1499>) => (enforce-valid-account1505, <enforce-valid-account1505>, <enforce-valid-account1505>)
trackAST: (enforce-valid-transfer1506, <e>)
assocAST: (enforce-valid-account1505, <enforce1499>, <enforce1499>) => (enforce-valid-transfer1506, <e>, <e>)
trackAST: (enforce-valid-transfer1507, <enforce-valid-transfer1507>)
trackAST: (precision_id1508, string)
trackAST: (at1509, <at1509>)
trackAST: (string1510, string)
trackAST: (read1511, <read1511>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1512, table:{marmalade.ledger.token-schema})
trackAST: (precision1513, integer)
assocAST: (precision1513, <precision1513>, integer) => (at1509, <at1509>, <at1509>)
trackAST: (precision1514, <precision1514>)
assocAST: (at1509, <precision1513>, integer) => (precision1514, <precision1514>, <precision1514>)
assocAST: (enforce-valid-account1505, <enforce1499>, <enforce1499>) => (enforce-valid-transfer1507, <enforce-valid-transfer1507>, <enforce-valid-transfer1507>)
trackAST: (with-capability1515, <with-capability1515>)
trackAST: (TRANSFER_id1516, string)
trackAST: (TRANSFER_sender1517, string)
trackAST: (TRANSFER_receiver1518, string)
trackAST: (TRANSFER_amount1519, decimal)
trackAST: (enforce-unit_id1520, string)
trackAST: (enforce-unit_amount1521, decimal)
trackAST: (BindLet1522, <BindLet1522>)
trackAST: (BindLet1522_p1523, <BindLet1522_p1523_ai>)
trackAST: (precision_id1524, string)
trackAST: (at1525, <at1525>)
trackAST: (string1526, string)
trackAST: (read1527, <read1527>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1528, table:{marmalade.ledger.token-schema})
trackAST: (precision1529, integer)
assocAST: (precision1529, <precision1529>, integer) => (at1525, <at1525>, <at1525>)
trackAST: (precision1530, <precision1530>)
assocAST: (at1525, <precision1529>, integer) => (precision1530, <precision1530>, <precision1530>)
assocAST: (precision1530, <precision1529>, integer) => (BindLet1522_p1523, <BindLet1522_p1523_ai>, <BindLet1522_p1523_ai>)
trackAST: (enforce1531, <enforce1531>)
trackAST: (=1532, <=1532>)
trackAST: (floor1533, <floor1533>)
trackAST: (string1534, string)
assocAST: (enforce1531, <enforce1531>, <enforce1531>) => (BindLet1522, <BindLet1522>, <BindLet1522>)
trackAST: (enforce-unit1535, bool)
assocAST: (enforce-unit1535, <enforce-unit1535>, bool) => (BindLet1522, <enforce1531>, <enforce1531>)
trackAST: (enforce-unit1536, <enforce-unit1536>)
assocAST: (BindLet1522, <enforce-unit1535>, bool) => (enforce-unit1536, <enforce-unit1536>, <enforce-unit1536>)
trackAST: (enforce1537, <enforce1537>)
trackAST: (>1538, <>1538>)
trackAST: (decimal1539, decimal)
trackAST: (string1540, string)
trackAST: (compose-capability1541, <compose-capability1541>)
trackAST: (DEBIT_id1542, string)
trackAST: (DEBIT_sender1543, string)
trackAST: (enforce-guard1544, <enforce-guard1544>)
trackAST: (account-guard_id1545, string)
trackAST: (account-guard_account1546, string)
trackAST: (with-read1547, <with-read1547>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1548, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1549, string)
trackAST: (key_account1550, string)
trackAST: (format1551, <format1551>)
trackAST: (string1552, string)
trackAST: (list1553, [<ak>])
trackAST: (key1554, string)
assocAST: (key1554, <key1554>, string) => (format1551, <format1551>, <format1551>)
trackAST: (key1555, <key1555>)
assocAST: (format1551, <key1554>, string) => (key1555, <key1555>, <key1555>)
trackAST: (BindSchema1556, <BindSchema1556>)
trackAST: (BindSchema1556_guard1557, <BindSchema1556_guard1557_f>)
trackAST: (string1558, string)
assocAST: (BindSchema1556_guard1557, <BindSchema1556_guard1557_f>, <BindSchema1556_guard1557_f>) => (BindSchema1556, <BindSchema1556>, <BindSchema1556>)
trackAST: (BindSchema1556schema1559, *)
trackAST: (account-guard1560, guard)
assocAST: (account-guard1560, <account-guard1560>, guard) => (with-read1547, <with-read1547>, <with-read1547>)
trackAST: (account-guard1561, <account-guard1561>)
assocAST: (with-read1547, <account-guard1560>, guard) => (account-guard1561, <account-guard1561>, <account-guard1561>)
trackAST: (DEBIT1562, <e>)
assocAST: (enforce-guard1544, <enforce-guard1544>, <enforce-guard1544>) => (DEBIT1562, <e>, <e>)
trackAST: (DEBIT1563, <DEBIT1563>)
assocAST: (enforce-guard1544, <enforce-guard1544>, <enforce-guard1544>) => (DEBIT1563, <DEBIT1563>, <DEBIT1563>)
trackAST: (compose-capability1564, <compose-capability1564>)
trackAST: (CREDIT_id1565, string)
trackAST: (CREDIT_receiver1566, string)
trackAST: (bool1567, bool)
trackAST: (CREDIT1568, <g>)
assocAST: (bool1567, <bool1567>, bool) => (CREDIT1568, <g>, <g>)
trackAST: (CREDIT1569, <CREDIT1569>)
assocAST: (bool1567, <bool1567>, bool) => (CREDIT1569, <CREDIT1569>, <CREDIT1569>)
trackAST: (TRANSFER1570, bool)
assocAST: (TRANSFER1570, <TRANSFER1570>, bool) => (compose-capability1564, <compose-capability1564>, <compose-capability1564>)
trackAST: (TRANSFER1571, <TRANSFER1571>)
assocAST: (compose-capability1564, <TRANSFER1570>, bool) => (TRANSFER1571, <TRANSFER1571>, <TRANSFER1571>)
trackAST: (list1572, [*])
trackAST: (enforce-transfer-policy_id1573, string)
trackAST: (enforce-transfer-policy_sender1574, string)
trackAST: (enforce-transfer-policy_receiver1575, string)
trackAST: (enforce-transfer-policy_amount1576, decimal)
trackAST: (bind1577, <bind1577>)
trackAST: (get-policy-info_id1578, string)
trackAST: (with-read1579, <with-read1579>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1580, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema1581, <BindSchema1581>)
trackAST: (BindSchema1581_policy1582, module{kip.token-policy-v1})
trackAST: (string1583, string)
trackAST: (BindSchema1581_supply1584, <BindSchema1581_supply1584_k>)
trackAST: (string1585, string)
trackAST: (BindSchema1581_precision1586, <BindSchema1581_precision1586_l>)
trackAST: (string1587, string)
trackAST: (BindSchema1581_manifest1588, <BindSchema1581_manifest1588_m>)
trackAST: (string1589, string)
TObject: TyAny
trackAST: (object1590, object:*)
TObject: TyAny
trackAST: (object1591, object:*)
assocAST: (object1590, <object1590>, object:*) => (BindSchema1581, <BindSchema1581>, <BindSchema1581>)
trackAST: (BindSchema1581schema1592, *)
trackAST: (get-policy-info1593, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info1593, <get-policy-info1593>, object:{marmalade.ledger.policy-info}) => (with-read1579, <with-read1579>, <with-read1579>)
trackAST: (get-policy-info1594, <get-policy-info1594>)
assocAST: (with-read1579, <get-policy-info1593>, object:{marmalade.ledger.policy-info}) => (get-policy-info1594, <get-policy-info1594>, <get-policy-info1594>)
trackAST: (BindSchema1595, <BindSchema1595>)
trackAST: (BindSchema1595_policy1596, module{kip.token-policy-v1})
trackAST: (string1597, string)
trackAST: (BindSchema1595_token1598, <BindSchema1595_token1598_t>)
trackAST: (string1599, string)
trackAST: (enforce-transfer_token1600, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-transfer_sender1601, string)
trackAST: (enforce-transfer_guard1602, guard)
trackAST: (enforce-transfer_receiver1603, string)
trackAST: (enforce-transfer_amount1604, decimal)
trackAST: (enforce-transfer1605, bool)
trackAST: (enforce-transfer1606, <enforce-transfer1606>)
trackAST: (account-guard_id1607, string)
trackAST: (account-guard_account1608, string)
trackAST: (with-read1609, <with-read1609>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1610, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1611, string)
trackAST: (key_account1612, string)
trackAST: (format1613, <format1613>)
trackAST: (string1614, string)
trackAST: (list1615, [<ak>])
trackAST: (key1616, string)
assocAST: (key1616, <key1616>, string) => (format1613, <format1613>, <format1613>)
trackAST: (key1617, <key1617>)
assocAST: (format1613, <key1616>, string) => (key1617, <key1617>, <key1617>)
trackAST: (BindSchema1618, <BindSchema1618>)
trackAST: (BindSchema1618_guard1619, <BindSchema1618_guard1619_f>)
trackAST: (string1620, string)
assocAST: (BindSchema1618_guard1619, <BindSchema1618_guard1619_f>, <BindSchema1618_guard1619_f>) => (BindSchema1618, <BindSchema1618>, <BindSchema1618>)
trackAST: (BindSchema1618schema1621, *)
trackAST: (account-guard1622, guard)
assocAST: (account-guard1622, <account-guard1622>, guard) => (with-read1609, <with-read1609>, <with-read1609>)
trackAST: (account-guard1623, <account-guard1623>)
assocAST: (with-read1609, <account-guard1622>, guard) => (account-guard1623, <account-guard1623>, <account-guard1623>)
assocAST: (enforce-transfer1605, <enforce-transfer1605>, bool) => (enforce-transfer1606, <enforce-transfer1606>, <enforce-transfer1606>)
assocAST: (enforce-transfer1606, <enforce-transfer1605>, bool) => (BindSchema1595, <BindSchema1595>, <BindSchema1595>)
trackAST: (BindSchema1595schema1624, *)
trackAST: (enforce-transfer-policy1625, <s>)
assocAST: (bind1577, <bind1577>, <bind1577>) => (enforce-transfer-policy1625, <s>, <s>)
trackAST: (enforce-transfer-policy1626, <enforce-transfer-policy1626>)
assocAST: (bind1577, <bind1577>, <bind1577>) => (enforce-transfer-policy1626, <enforce-transfer-policy1626>, <enforce-transfer-policy1626>)
trackAST: (BindLet1627, <BindLet1627>)
trackAST: (BindLet1627_sender1628, <BindLet1627_sender1628_u>)
trackAST: (debit_id1629, string)
trackAST: (debit_account1630, string)
trackAST: (debit_amount1631, decimal)
trackAST: (require-capability1632, <require-capability1632>)
trackAST: (DEBIT_id1633, string)
trackAST: (DEBIT_sender1634, string)
trackAST: (enforce-guard1635, <enforce-guard1635>)
trackAST: (account-guard_id1636, string)
trackAST: (account-guard_account1637, string)
trackAST: (with-read1638, <with-read1638>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1639, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1640, string)
trackAST: (key_account1641, string)
trackAST: (format1642, <format1642>)
trackAST: (string1643, string)
trackAST: (list1644, [<ak>])
trackAST: (key1645, string)
assocAST: (key1645, <key1645>, string) => (format1642, <format1642>, <format1642>)
trackAST: (key1646, <key1646>)
assocAST: (format1642, <key1645>, string) => (key1646, <key1646>, <key1646>)
trackAST: (BindSchema1647, <BindSchema1647>)
trackAST: (BindSchema1647_guard1648, <BindSchema1647_guard1648_f>)
trackAST: (string1649, string)
assocAST: (BindSchema1647_guard1648, <BindSchema1647_guard1648_f>, <BindSchema1647_guard1648_f>) => (BindSchema1647, <BindSchema1647>, <BindSchema1647>)
trackAST: (BindSchema1647schema1650, *)
trackAST: (account-guard1651, guard)
assocAST: (account-guard1651, <account-guard1651>, guard) => (with-read1638, <with-read1638>, <with-read1638>)
trackAST: (account-guard1652, <account-guard1652>)
assocAST: (with-read1638, <account-guard1651>, guard) => (account-guard1652, <account-guard1652>, <account-guard1652>)
trackAST: (DEBIT1653, <e>)
assocAST: (enforce-guard1635, <enforce-guard1635>, <enforce-guard1635>) => (DEBIT1653, <e>, <e>)
trackAST: (DEBIT1654, <DEBIT1654>)
assocAST: (enforce-guard1635, <enforce-guard1635>, <enforce-guard1635>) => (DEBIT1654, <DEBIT1654>, <DEBIT1654>)
trackAST: (enforce-unit_id1655, string)
trackAST: (enforce-unit_amount1656, decimal)
trackAST: (BindLet1657, <BindLet1657>)
trackAST: (BindLet1657_p1658, <BindLet1657_p1658_ai>)
trackAST: (precision_id1659, string)
trackAST: (at1660, <at1660>)
trackAST: (string1661, string)
trackAST: (read1662, <read1662>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1663, table:{marmalade.ledger.token-schema})
trackAST: (precision1664, integer)
assocAST: (precision1664, <precision1664>, integer) => (at1660, <at1660>, <at1660>)
trackAST: (precision1665, <precision1665>)
assocAST: (at1660, <precision1664>, integer) => (precision1665, <precision1665>, <precision1665>)
assocAST: (precision1665, <precision1664>, integer) => (BindLet1657_p1658, <BindLet1657_p1658_ai>, <BindLet1657_p1658_ai>)
trackAST: (enforce1666, <enforce1666>)
trackAST: (=1667, <=1667>)
trackAST: (floor1668, <floor1668>)
trackAST: (string1669, string)
assocAST: (enforce1666, <enforce1666>, <enforce1666>) => (BindLet1657, <BindLet1657>, <BindLet1657>)
trackAST: (enforce-unit1670, bool)
assocAST: (enforce-unit1670, <enforce-unit1670>, bool) => (BindLet1657, <enforce1666>, <enforce1666>)
trackAST: (enforce-unit1671, <enforce-unit1671>)
assocAST: (BindLet1657, <enforce-unit1670>, bool) => (enforce-unit1671, <enforce-unit1671>, <enforce-unit1671>)
trackAST: (with-read1672, <with-read1672>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1673, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1674, string)
trackAST: (key_account1675, string)
trackAST: (format1676, <format1676>)
trackAST: (string1677, string)
trackAST: (list1678, [<ak>])
trackAST: (key1679, string)
assocAST: (key1679, <key1679>, string) => (format1676, <format1676>, <format1676>)
trackAST: (key1680, <key1680>)
assocAST: (format1676, <key1679>, string) => (key1680, <key1680>, <key1680>)
trackAST: (BindSchema1681, <BindSchema1681>)
trackAST: (BindSchema1681_old-bal1682, <BindSchema1681_old-bal1682_aa>)
trackAST: (string1683, string)
trackAST: (enforce1684, <enforce1684>)
trackAST: (<=1685, <<=1685>)
trackAST: (string1686, string)
trackAST: (BindLet1687, <BindLet1687>)
trackAST: (BindLet1687_new-bal1688, <BindLet1687_new-bal1688_ab>)
trackAST: (-1689, <-1689>)
assocAST: (-1689, <-1689>, <-1689>) => (BindLet1687_new-bal1688, <BindLet1687_new-bal1688_ab>, <BindLet1687_new-bal1688_ab>)
trackAST: (update1690, <update1690>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1691, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1692, string)
trackAST: (key_account1693, string)
trackAST: (format1694, <format1694>)
trackAST: (string1695, string)
trackAST: (list1696, [<ak>])
trackAST: (key1697, string)
assocAST: (key1697, <key1697>, string) => (format1694, <format1694>, <format1694>)
trackAST: (key1698, <key1698>)
assocAST: (format1694, <key1697>, string) => (key1698, <key1698>, <key1698>)
TObject: TyAny
trackAST: (object1699, object:*)
TObject: TyAny
trackAST: (object1700, object:*)
assocAST: (object1700, <object1700>, object:*) => (BindLet1687, <BindLet1687>, <BindLet1687>)
assocAST: (BindLet1687, <object1700>, object:*) => (BindSchema1681, <BindSchema1681>, <BindSchema1681>)
trackAST: (BindSchema1681schema1701, *)
trackAST: (debit1702, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit1702, <debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read1672, <with-read1672>, <with-read1672>)
trackAST: (debit1703, <debit1703>)
assocAST: (with-read1672, <debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit1703, <debit1703>, <debit1703>)
assocAST: (debit1703, <debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet1627_sender1628, <BindLet1627_sender1628_u>, <BindLet1627_sender1628_u>)
trackAST: (BindLet1627_receiver1704, <BindLet1627_receiver1704_v>)
trackAST: (credit_id1705, string)
trackAST: (credit_account1706, string)
trackAST: (credit_guard1707, guard)
trackAST: (credit_amount1708, decimal)
trackAST: (enforce-valid-account_account1709, string)
trackAST: (enforce1710, <enforce1710>)
trackAST: (>1711, <>1711>)
trackAST: (length1712, <length1712>)
trackAST: (integer1713, integer)
trackAST: (string1714, string)
trackAST: (enforce-valid-account1715, <c>)
assocAST: (enforce1710, <enforce1710>, <enforce1710>) => (enforce-valid-account1715, <c>, <c>)
trackAST: (enforce-valid-account1716, <enforce-valid-account1716>)
assocAST: (enforce1710, <enforce1710>, <enforce1710>) => (enforce-valid-account1716, <enforce-valid-account1716>, <enforce-valid-account1716>)
trackAST: (enforce-unit_id1717, string)
trackAST: (enforce-unit_amount1718, decimal)
trackAST: (BindLet1719, <BindLet1719>)
trackAST: (BindLet1719_p1720, <BindLet1719_p1720_ai>)
trackAST: (precision_id1721, string)
trackAST: (at1722, <at1722>)
trackAST: (string1723, string)
trackAST: (read1724, <read1724>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens1725, table:{marmalade.ledger.token-schema})
trackAST: (precision1726, integer)
assocAST: (precision1726, <precision1726>, integer) => (at1722, <at1722>, <at1722>)
trackAST: (precision1727, <precision1727>)
assocAST: (at1722, <precision1726>, integer) => (precision1727, <precision1727>, <precision1727>)
assocAST: (precision1727, <precision1726>, integer) => (BindLet1719_p1720, <BindLet1719_p1720_ai>, <BindLet1719_p1720_ai>)
trackAST: (enforce1728, <enforce1728>)
trackAST: (=1729, <=1729>)
trackAST: (floor1730, <floor1730>)
trackAST: (string1731, string)
assocAST: (enforce1728, <enforce1728>, <enforce1728>) => (BindLet1719, <BindLet1719>, <BindLet1719>)
trackAST: (enforce-unit1732, bool)
assocAST: (enforce-unit1732, <enforce-unit1732>, bool) => (BindLet1719, <enforce1728>, <enforce1728>)
trackAST: (enforce-unit1733, <enforce-unit1733>)
assocAST: (BindLet1719, <enforce-unit1732>, bool) => (enforce-unit1733, <enforce-unit1733>, <enforce-unit1733>)
trackAST: (require-capability1734, <require-capability1734>)
trackAST: (CREDIT_id1735, string)
trackAST: (CREDIT_receiver1736, string)
trackAST: (bool1737, bool)
trackAST: (CREDIT1738, <g>)
assocAST: (bool1737, <bool1737>, bool) => (CREDIT1738, <g>, <g>)
trackAST: (CREDIT1739, <CREDIT1739>)
assocAST: (bool1737, <bool1737>, bool) => (CREDIT1739, <CREDIT1739>, <CREDIT1739>)
trackAST: (with-default-read1740, <with-default-read1740>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1741, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1742, string)
trackAST: (key_account1743, string)
trackAST: (format1744, <format1744>)
trackAST: (string1745, string)
trackAST: (list1746, [<ak>])
trackAST: (key1747, string)
assocAST: (key1747, <key1747>, string) => (format1744, <format1744>, <format1744>)
trackAST: (key1748, <key1748>)
assocAST: (format1744, <key1747>, string) => (key1748, <key1748>, <key1748>)
TObject: TyAny
trackAST: (object1749, object:*)
trackAST: (decimal1750, decimal)
trackAST: (BindSchema1751, <BindSchema1751>)
trackAST: (BindSchema1751_old-bal1752, <BindSchema1751_old-bal1752_ac>)
trackAST: (string1753, string)
trackAST: (BindSchema1751_retg1754, <BindSchema1751_retg1754_ad>)
trackAST: (string1755, string)
trackAST: (enforce1756, <enforce1756>)
trackAST: (=1757, <=1757>)
trackAST: (string1758, string)
trackAST: (BindLet1759, <BindLet1759>)
trackAST: (BindLet1759_is-new1760, <BindLet1759_is-new1760_ae>)
trackAST: (if1761, <if1761>)
trackAST: (=1762, <=1762>)
trackAST: (decimal1763, decimal)
trackAST: (enforce-reserved_account1764, string)
trackAST: (enforce-reserved_guard1765, guard)
trackAST: (BindLet1766, <BindLet1766>)
trackAST: (BindLet1766_r1767, <BindLet1766_r1767_g>)
trackAST: (check-reserved_account1768, string)
trackAST: (BindLet1769, <BindLet1769>)
trackAST: (BindLet1769_pfx1770, <BindLet1769_pfx1770_f>)
trackAST: (take1771, <take1771>)
trackAST: (integer1772, integer)
assocAST: (take1771, <take1771>, <take1771>) => (BindLet1769_pfx1770, <BindLet1769_pfx1770_f>, <BindLet1769_pfx1770_f>)
trackAST: (if1773, <if1773>)
trackAST: (=1774, <=1774>)
trackAST: (string1775, string)
trackAST: (take1776, <take1776>)
trackAST: (integer1777, integer)
trackAST: (take1778, <take1778>)
trackAST: (integer1779, integer)
trackAST: (string1780, string)
assocAST: (if1773, <if1773>, <if1773>) => (BindLet1769, <BindLet1769>, <BindLet1769>)
trackAST: (check-reserved1781, string)
assocAST: (check-reserved1781, <check-reserved1781>, string) => (BindLet1769, <if1773>, <if1773>)
trackAST: (check-reserved1782, <check-reserved1782>)
assocAST: (BindLet1769, <check-reserved1781>, string) => (check-reserved1782, <check-reserved1782>, <check-reserved1782>)
assocAST: (check-reserved1782, <check-reserved1781>, string) => (BindLet1766_r1767, <BindLet1766_r1767_g>, <BindLet1766_r1767_g>)
trackAST: (if1783, <if1783>)
trackAST: (=1784, <=1784>)
trackAST: (string1785, string)
trackAST: (bool1786, bool)
trackAST: (if1787, <if1787>)
trackAST: (=1788, <=1788>)
trackAST: (string1789, string)
trackAST: (enforce1790, <enforce1790>)
trackAST: (=1791, <=1791>)
trackAST: (format1792, <format1792>)
trackAST: (string1793, string)
trackAST: (list1794, [<h>])
trackAST: (format1795, <format1795>)
trackAST: (string1796, string)
trackAST: (list1797, [<i>])
trackAST: (drop1798, <drop1798>)
trackAST: (integer1799, integer)
trackAST: (string1800, string)
trackAST: (enforce1801, <enforce1801>)
trackAST: (bool1802, bool)
trackAST: (format1803, <format1803>)
trackAST: (string1804, string)
trackAST: (list1805, [<j>])
assocAST: (if1783, <if1783>, <if1783>) => (BindLet1766, <BindLet1766>, <BindLet1766>)
trackAST: (enforce-reserved1806, bool)
assocAST: (enforce-reserved1806, <enforce-reserved1806>, bool) => (BindLet1766, <if1783>, <if1783>)
trackAST: (enforce-reserved1807, <enforce-reserved1807>)
assocAST: (BindLet1766, <enforce-reserved1806>, bool) => (enforce-reserved1807, <enforce-reserved1807>, <enforce-reserved1807>)
trackAST: (bool1808, bool)
assocAST: (if1761, <if1761>, <if1761>) => (BindLet1759_is-new1760, <BindLet1759_is-new1760_ae>, <BindLet1759_is-new1760_ae>)
trackAST: (BindLet1809, <BindLet1809>)
trackAST: (BindLet1809_new-bal1810, <BindLet1809_new-bal1810_af>)
trackAST: (if1811, <if1811>)
trackAST: (+1812, <+1812>)
assocAST: (if1811, <if1811>, <if1811>) => (BindLet1809_new-bal1810, <BindLet1809_new-bal1810_af>, <BindLet1809_new-bal1810_af>)
trackAST: (write1813, <write1813>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1814, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1815, string)
trackAST: (key_account1816, string)
trackAST: (format1817, <format1817>)
trackAST: (string1818, string)
trackAST: (list1819, [<ak>])
trackAST: (key1820, string)
assocAST: (key1820, <key1820>, string) => (format1817, <format1817>, <format1817>)
trackAST: (key1821, <key1821>)
assocAST: (format1817, <key1820>, string) => (key1821, <key1821>, <key1821>)
TObject: TyAny
trackAST: (object1822, object:*)
trackAST: (if1823, <if1823>)
trackAST: (emit-event1824, <emit-event1824>)
trackAST: (ACCOUNT_GUARD_id1825, string)
trackAST: (ACCOUNT_GUARD_account1826, string)
trackAST: (ACCOUNT_GUARD_guard1827, guard)
trackAST: (bool1828, bool)
trackAST: (ACCOUNT_GUARD1829, bool)
assocAST: (bool1828, <bool1828>, bool) => (ACCOUNT_GUARD1829, <ACCOUNT_GUARD1829>, bool)
trackAST: (ACCOUNT_GUARD1830, <ACCOUNT_GUARD1830>)
assocAST: (bool1828, <bool1828>, bool) => (ACCOUNT_GUARD1830, <ACCOUNT_GUARD1830>, <ACCOUNT_GUARD1830>)
trackAST: (bool1831, bool)
TObject: TyAny
trackAST: (object1832, object:*)
trackAST: (if1833, <if1833>)
trackAST: (decimal1834, decimal)
assocAST: (object1832, <object1832>, object:*) => (BindLet1809, <BindLet1809>, <BindLet1809>)
assocAST: (BindLet1809, <object1832>, object:*) => (BindLet1759, <BindLet1759>, <BindLet1759>)
assocAST: (BindLet1759, <object1832>, object:*) => (BindSchema1751, <BindSchema1751>, <BindSchema1751>)
trackAST: (BindSchema1751schema1835, *)
trackAST: (credit1836, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit1836, <credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read1740, <with-default-read1740>, <with-default-read1740>)
trackAST: (credit1837, <credit1837>)
assocAST: (with-default-read1740, <credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit1837, <credit1837>, <credit1837>)
assocAST: (credit1837, <credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet1627_receiver1704, <BindLet1627_receiver1704_v>, <BindLet1627_receiver1704_v>)
trackAST: (emit-event1838, <emit-event1838>)
trackAST: (RECONCILE_token-id1839, string)
trackAST: (RECONCILE_amount1840, decimal)
trackAST: (RECONCILE_sender1841, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver1842, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool1843, bool)
trackAST: (RECONCILE1844, bool)
assocAST: (bool1843, <bool1843>, bool) => (RECONCILE1844, <RECONCILE1844>, bool)
trackAST: (RECONCILE1845, <RECONCILE1845>)
assocAST: (bool1843, <bool1843>, bool) => (RECONCILE1845, <RECONCILE1845>, <RECONCILE1845>)
assocAST: (emit-event1838, <emit-event1838>, <emit-event1838>) => (BindLet1627, <BindLet1627>, <BindLet1627>)
trackAST: (transfer-create1846, bool)
assocAST: (transfer-create1846, <transfer-create1846>, bool) => (with-capability1515, <with-capability1515>, <with-capability1515>)
--------------------------------
 Substitute defuns:

assocTy: (<enforce1482>, <enforce1482>) <=> <enforce-precision1487_d>
assocTy: (<enforce1482>, <enforce1482>) <= <enforce-precision1487_d>
assocTy: tracking/updating type variable <enforce1482> <= <enforce-precision1487_d>
trackAST: (inlinedCallArgs1847, <inlinedCallArgs1847>)
assocTy: (<inlinedCallArgs1847>, <inlinedCallArgs1847>) <=> <enforce-precision1487_d>
assocTy: (<inlinedCallArgs1847>, <inlinedCallArgs1847>) <= <enforce-precision1487_d>
assocTy: tracking/updating type variable <inlinedCallArgs1847> <= <enforce-precision1487_d>
trackAST: (inlinedCallArgs1847_precision1848, integer)
assocAST: (enforce-valid-amount_precision1474, <enforce-valid-amount_precision1474>, integer) => (inlinedCallArgs1847_precision1848, <inlinedCallArgs1847_precision1848>, integer)
trackAST: (inlinedCallArgs1847_amount1849, decimal)
assocAST: (enforce-valid-amount_amount1475, <enforce-valid-amount_amount1475>, decimal) => (inlinedCallArgs1847_amount1849, <inlinedCallArgs1847_amount1849>, decimal)
assocAST: (inlinedCallArgs1847_precision1848, <enforce-valid-amount_precision1474>, integer) => (enforce-precision_precision1480, <enforce-precision_precision1480>, integer)
assocAST: (inlinedCallArgs1847_amount1849, <enforce-valid-amount_amount1475>, decimal) => (enforce-precision_amount1481, <enforce-precision_amount1481>, decimal)
assocAST: (inlinedCallArgs1847_amount1849, <enforce-valid-amount_amount1475>, decimal) => (enforce-precision_amount1481, <enforce-valid-amount_amount1475>, decimal)
assocTy: (<enforce1482>, <enforce-precision1487_d>) <=> <enforce-valid-amount1489_b>
assocTy: (<enforce1482>, <enforce-precision1487_d>) <= <enforce-valid-amount1489_b>
assocTy: tracking/updating type variable <enforce-precision1487_d> <= <enforce-valid-amount1489_b>
trackAST: (inlinedCallArgs1850, <inlinedCallArgs1850>)
assocTy: (<inlinedCallArgs1850>, <inlinedCallArgs1850>) <=> <enforce-valid-amount1489_b>
assocTy: (<inlinedCallArgs1850>, <inlinedCallArgs1850>) <= <enforce-valid-amount1489_b>
assocTy: tracking/updating type variable <inlinedCallArgs1850> <= <enforce-valid-amount1489_b>
trackAST: (inlinedCallArgs1850_precision1851, integer)
assocAST: (enforce-valid-transfer_precision1469, <enforce-valid-transfer_precision1469>, integer) => (inlinedCallArgs1850_precision1851, <inlinedCallArgs1850_precision1851>, integer)
trackAST: (inlinedCallArgs1850_amount1852, decimal)
assocAST: (enforce-valid-transfer_amount1470, <enforce-valid-transfer_amount1470>, decimal) => (inlinedCallArgs1850_amount1852, <inlinedCallArgs1850_amount1852>, decimal)
assocAST: (inlinedCallArgs1850_amount1852, <enforce-valid-transfer_amount1470>, decimal) => (enforce-valid-amount_amount1475, <enforce-valid-amount_amount1475>, decimal)
assocAST: (inlinedCallArgs1850_precision1851, <enforce-valid-transfer_precision1469>, integer) => (enforce-valid-amount_precision1474, <enforce-valid-amount_precision1474>, integer)
assocAST: (inlinedCallArgs1850_precision1851, <enforce-valid-transfer_precision1469>, integer) => (enforce-valid-amount_precision1474, <enforce-valid-transfer_precision1469>, integer)
assocAST: (inlinedCallArgs1850_amount1852, <enforce-valid-transfer_amount1470>, decimal) => (enforce-valid-amount_amount1475, <enforce-valid-transfer_amount1470>, decimal)
assocAST: (inlinedCallArgs1850_amount1852, <enforce-valid-transfer_amount1470>, decimal) => (enforce-valid-amount_amount1475, <enforce-valid-transfer_amount1470>, decimal)
assocTy: (<enforce1491>, <enforce1491>) <=> <enforce-valid-account1497_c>
assocTy: (<enforce1491>, <enforce1491>) <= <enforce-valid-account1497_c>
assocTy: tracking/updating type variable <enforce1491> <= <enforce-valid-account1497_c>
trackAST: (inlinedCallArgs1853, <inlinedCallArgs1853>)
assocTy: (<inlinedCallArgs1853>, <inlinedCallArgs1853>) <=> <enforce-valid-account1497_c>
assocTy: (<inlinedCallArgs1853>, <inlinedCallArgs1853>) <= <enforce-valid-account1497_c>
assocTy: tracking/updating type variable <inlinedCallArgs1853> <= <enforce-valid-account1497_c>
trackAST: (inlinedCallArgs1853_account1854, string)
assocAST: (enforce-valid-transfer_sender1467, <enforce-valid-transfer_sender1467>, string) => (inlinedCallArgs1853_account1854, <inlinedCallArgs1853_account1854>, string)
assocAST: (inlinedCallArgs1853_account1854, <enforce-valid-transfer_sender1467>, string) => (enforce-valid-account_account1490, <enforce-valid-account_account1490>, string)
assocTy: (<enforce1499>, <enforce1499>) <=> <enforce-valid-account1505_c>
assocTy: (<enforce1499>, <enforce1499>) <= <enforce-valid-account1505_c>
assocTy: tracking/updating type variable <enforce1499> <= <enforce-valid-account1505_c>
trackAST: (inlinedCallArgs1855, <inlinedCallArgs1855>)
assocTy: (<inlinedCallArgs1855>, <inlinedCallArgs1855>) <=> <enforce-valid-account1505_c>
assocTy: (<inlinedCallArgs1855>, <inlinedCallArgs1855>) <= <enforce-valid-account1505_c>
assocTy: tracking/updating type variable <inlinedCallArgs1855> <= <enforce-valid-account1505_c>
trackAST: (inlinedCallArgs1855_account1856, string)
assocAST: (enforce-valid-transfer_receiver1468, <enforce-valid-transfer_receiver1468>, string) => (inlinedCallArgs1855_account1856, <inlinedCallArgs1855_account1856>, string)
assocAST: (inlinedCallArgs1855_account1856, <enforce-valid-transfer_receiver1468>, string) => (enforce-valid-account_account1498, <enforce-valid-account_account1498>, string)
assocTy: (<precision1513>, integer) <=> integer
assocTy: (<precision1513>, integer) <= integer
trackAST: (inlinedCallArgs1857, <inlinedCallArgs1857>)
assocTy: (<inlinedCallArgs1857>, <inlinedCallArgs1857>) <=> integer
assocTy: (<inlinedCallArgs1857>, <inlinedCallArgs1857>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1857> <= integer
trackAST: (inlinedCallArgs1857_id1858, string)
assocAST: (transfer-create_id1459, <transfer-create_id1459>, string) => (inlinedCallArgs1857_id1858, <inlinedCallArgs1857_id1858>, string)
assocAST: (inlinedCallArgs1857_id1858, <transfer-create_id1459>, string) => (precision_id1508, <precision_id1508>, string)
assocTy: (<enforce1499>, <enforce-valid-account1505_c>) <=> <enforce-valid-transfer1507_e>
assocTy: (<enforce1499>, <enforce-valid-account1505_c>) <= <enforce-valid-transfer1507_e>
assocTy: tracking/updating type variable <enforce-valid-account1505_c> <= <enforce-valid-transfer1507_e>
trackAST: (inlinedCallArgs1859, <inlinedCallArgs1859>)
assocTy: (<inlinedCallArgs1859>, <inlinedCallArgs1859>) <=> <enforce-valid-transfer1507_e>
assocTy: (<inlinedCallArgs1859>, <inlinedCallArgs1859>) <= <enforce-valid-transfer1507_e>
assocTy: tracking/updating type variable <inlinedCallArgs1859> <= <enforce-valid-transfer1507_e>
trackAST: (inlinedCallArgs1859_sender1860, string)
assocAST: (transfer-create_sender1460, <transfer-create_sender1460>, string) => (inlinedCallArgs1859_sender1860, <inlinedCallArgs1859_sender1860>, string)
trackAST: (inlinedCallArgs1859_receiver1861, string)
assocAST: (transfer-create_receiver1461, <transfer-create_receiver1461>, string) => (inlinedCallArgs1859_receiver1861, <inlinedCallArgs1859_receiver1861>, string)
trackAST: (inlinedCallArgs1859_precision1862, integer)
assocAST: (precision1514, <precision1513>, integer) => (inlinedCallArgs1859_precision1862, <inlinedCallArgs1859_precision1862>, integer)
trackAST: (inlinedCallArgs1859_amount1863, decimal)
assocAST: (transfer-create_amount1463, <transfer-create_amount1463>, decimal) => (inlinedCallArgs1859_amount1863, <inlinedCallArgs1859_amount1863>, decimal)
assocAST: (inlinedCallArgs1859_sender1860, <transfer-create_sender1460>, string) => (enforce-valid-transfer_sender1467, <enforce-valid-transfer_sender1467>, string)
assocAST: (inlinedCallArgs1859_receiver1861, <transfer-create_receiver1461>, string) => (enforce-valid-transfer_receiver1468, <enforce-valid-transfer_receiver1468>, string)
assocAST: (inlinedCallArgs1859_precision1862, <precision1513>, integer) => (enforce-valid-transfer_precision1469, <enforce-valid-transfer_precision1469>, integer)
assocAST: (inlinedCallArgs1859_precision1862, <precision1513>, integer) => (enforce-valid-transfer_precision1469, <precision1513>, integer)
assocAST: (inlinedCallArgs1859_amount1863, <transfer-create_amount1463>, decimal) => (enforce-valid-transfer_amount1470, <enforce-valid-transfer_amount1470>, decimal)
assocAST: (inlinedCallArgs1859_amount1863, <transfer-create_amount1463>, decimal) => (enforce-valid-transfer_amount1470, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1859_sender1860, <transfer-create_sender1460>, string) => (enforce-valid-transfer_sender1467, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1859_sender1860, <transfer-create_sender1460>, string) => (enforce-valid-transfer_sender1467, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1859_receiver1861, <transfer-create_receiver1461>, string) => (enforce-valid-transfer_receiver1468, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1859_receiver1861, <transfer-create_receiver1461>, string) => (enforce-valid-transfer_receiver1468, <transfer-create_receiver1461>, string)
assocTy: (<key1616>, string) <=> string
assocTy: (<key1616>, string) <= string
trackAST: (inlinedCallArgs1864, <inlinedCallArgs1864>)
assocTy: (<inlinedCallArgs1864>, <inlinedCallArgs1864>) <=> string
assocTy: (<inlinedCallArgs1864>, <inlinedCallArgs1864>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1864> <= string
trackAST: (inlinedCallArgs1864_id1865, string)
assocAST: (account-guard_id1607, <account-guard_id1607>, string) => (inlinedCallArgs1864_id1865, <inlinedCallArgs1864_id1865>, string)
trackAST: (inlinedCallArgs1864_account1866, string)
assocAST: (account-guard_account1608, <account-guard_account1608>, string) => (inlinedCallArgs1864_account1866, <inlinedCallArgs1864_account1866>, string)
assocAST: (inlinedCallArgs1864_id1865, <account-guard_id1607>, string) => (key_id1611, <key_id1611>, string)
assocAST: (inlinedCallArgs1864_account1866, <account-guard_account1608>, string) => (key_account1612, <key_account1612>, string)
assocTy: (<account-guard1622>, guard) <=> guard
assocTy: (<account-guard1622>, guard) <= guard
trackAST: (inlinedCallArgs1867, <inlinedCallArgs1867>)
assocTy: (<inlinedCallArgs1867>, <inlinedCallArgs1867>) <=> guard
assocTy: (<inlinedCallArgs1867>, <inlinedCallArgs1867>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1867> <= guard
trackAST: (inlinedCallArgs1867_id1868, string)
assocAST: (enforce-transfer-policy_id1573, <enforce-transfer-policy_id1573>, string) => (inlinedCallArgs1867_id1868, <inlinedCallArgs1867_id1868>, string)
trackAST: (inlinedCallArgs1867_account1869, string)
assocAST: (enforce-transfer-policy_sender1574, <enforce-transfer-policy_sender1574>, string) => (inlinedCallArgs1867_account1869, <inlinedCallArgs1867_account1869>, string)
assocAST: (inlinedCallArgs1867_id1868, <enforce-transfer-policy_id1573>, string) => (account-guard_id1607, <account-guard_id1607>, string)
assocAST: (inlinedCallArgs1867_id1868, <enforce-transfer-policy_id1573>, string) => (account-guard_id1607, <enforce-transfer-policy_id1573>, string)
assocAST: (inlinedCallArgs1867_account1869, <enforce-transfer-policy_sender1574>, string) => (account-guard_account1608, <account-guard_account1608>, string)
assocAST: (inlinedCallArgs1867_account1869, <enforce-transfer-policy_sender1574>, string) => (account-guard_account1608, <enforce-transfer-policy_sender1574>, string)
assocTy: (<enforce-transfer1605>, bool) <=> bool
assocTy: (<enforce-transfer1605>, bool) <= bool
trackAST: (inlinedCallArgs1870, <inlinedCallArgs1870>)
assocTy: (<inlinedCallArgs1870>, <inlinedCallArgs1870>) <=> bool
assocTy: (<inlinedCallArgs1870>, <inlinedCallArgs1870>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1870> <= bool
trackAST: (inlinedCallArgs1870_token1871, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs1870_token1871, <inlinedCallArgs1870_token1871>, object:{kip.token-policy-v1.token-info}) => (BindSchema1595_token1598, <BindSchema1595_token1598_t>, <BindSchema1595_token1598_t>)
trackAST: (inlinedCallArgs1870_sender1872, string)
assocAST: (enforce-transfer-policy_sender1574, <enforce-transfer-policy_sender1574>, string) => (inlinedCallArgs1870_sender1872, <inlinedCallArgs1870_sender1872>, string)
trackAST: (inlinedCallArgs1870_guard1873, guard)
assocAST: (account-guard1623, <account-guard1622>, guard) => (inlinedCallArgs1870_guard1873, <inlinedCallArgs1870_guard1873>, guard)
trackAST: (inlinedCallArgs1870_receiver1874, string)
assocAST: (enforce-transfer-policy_receiver1575, <enforce-transfer-policy_receiver1575>, string) => (inlinedCallArgs1870_receiver1874, <inlinedCallArgs1870_receiver1874>, string)
trackAST: (inlinedCallArgs1870_amount1875, decimal)
assocAST: (enforce-transfer-policy_amount1576, <enforce-transfer-policy_amount1576>, decimal) => (inlinedCallArgs1870_amount1875, <inlinedCallArgs1870_amount1875>, decimal)
assocTy: (<get-policy-info1593>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info1593>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs1876, <inlinedCallArgs1876>)
assocTy: (<inlinedCallArgs1876>, <inlinedCallArgs1876>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs1876>, <inlinedCallArgs1876>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs1876> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs1876_id1877, string)
assocAST: (enforce-transfer-policy_id1573, <enforce-transfer-policy_id1573>, string) => (inlinedCallArgs1876_id1877, <inlinedCallArgs1876_id1877>, string)
assocAST: (inlinedCallArgs1876_id1877, <enforce-transfer-policy_id1573>, string) => (get-policy-info_id1578, <get-policy-info_id1578>, string)
assocAST: (inlinedCallArgs1876_id1877, <enforce-transfer-policy_id1573>, string) => (get-policy-info_id1578, <enforce-transfer-policy_id1573>, string)
assocTy: (<bind1577>, <bind1577>) <=> <enforce-transfer-policy1626_s>
assocTy: (<bind1577>, <bind1577>) <= <enforce-transfer-policy1626_s>
assocTy: tracking/updating type variable <bind1577> <= <enforce-transfer-policy1626_s>
trackAST: (inlinedCallArgs1878, <inlinedCallArgs1878>)
assocTy: (<inlinedCallArgs1878>, <inlinedCallArgs1878>) <=> <enforce-transfer-policy1626_s>
assocTy: (<inlinedCallArgs1878>, <inlinedCallArgs1878>) <= <enforce-transfer-policy1626_s>
assocTy: tracking/updating type variable <inlinedCallArgs1878> <= <enforce-transfer-policy1626_s>
trackAST: (inlinedCallArgs1878_id1879, string)
assocAST: (transfer-create_id1459, <transfer-create_id1459>, string) => (inlinedCallArgs1878_id1879, <inlinedCallArgs1878_id1879>, string)
trackAST: (inlinedCallArgs1878_sender1880, string)
assocAST: (transfer-create_sender1460, <transfer-create_sender1460>, string) => (inlinedCallArgs1878_sender1880, <inlinedCallArgs1878_sender1880>, string)
trackAST: (inlinedCallArgs1878_receiver1881, string)
assocAST: (transfer-create_receiver1461, <transfer-create_receiver1461>, string) => (inlinedCallArgs1878_receiver1881, <inlinedCallArgs1878_receiver1881>, string)
trackAST: (inlinedCallArgs1878_amount1882, decimal)
assocAST: (transfer-create_amount1463, <transfer-create_amount1463>, decimal) => (inlinedCallArgs1878_amount1882, <inlinedCallArgs1878_amount1882>, decimal)
assocAST: (inlinedCallArgs1878_id1879, <transfer-create_id1459>, string) => (enforce-transfer-policy_id1573, <enforce-transfer-policy_id1573>, string)
assocAST: (inlinedCallArgs1878_id1879, <transfer-create_id1459>, string) => (enforce-transfer-policy_id1573, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1878_id1879, <transfer-create_id1459>, string) => (enforce-transfer-policy_id1573, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1878_id1879, <transfer-create_id1459>, string) => (enforce-transfer-policy_id1573, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1878_id1879, <transfer-create_id1459>, string) => (enforce-transfer-policy_id1573, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1878_id1879, <transfer-create_id1459>, string) => (enforce-transfer-policy_id1573, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1878_sender1880, <transfer-create_sender1460>, string) => (enforce-transfer-policy_sender1574, <enforce-transfer-policy_sender1574>, string)
assocAST: (inlinedCallArgs1878_sender1880, <transfer-create_sender1460>, string) => (enforce-transfer-policy_sender1574, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1878_sender1880, <transfer-create_sender1460>, string) => (enforce-transfer-policy_sender1574, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1878_sender1880, <transfer-create_sender1460>, string) => (enforce-transfer-policy_sender1574, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1878_sender1880, <transfer-create_sender1460>, string) => (enforce-transfer-policy_sender1574, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1878_sender1880, <transfer-create_sender1460>, string) => (enforce-transfer-policy_sender1574, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1878_receiver1881, <transfer-create_receiver1461>, string) => (enforce-transfer-policy_receiver1575, <enforce-transfer-policy_receiver1575>, string)
assocAST: (inlinedCallArgs1878_receiver1881, <transfer-create_receiver1461>, string) => (enforce-transfer-policy_receiver1575, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1878_amount1882, <transfer-create_amount1463>, decimal) => (enforce-transfer-policy_amount1576, <enforce-transfer-policy_amount1576>, decimal)
assocAST: (inlinedCallArgs1878_amount1882, <transfer-create_amount1463>, decimal) => (enforce-transfer-policy_amount1576, <transfer-create_amount1463>, decimal)
assocTy: (<key1645>, string) <=> string
assocTy: (<key1645>, string) <= string
trackAST: (inlinedCallArgs1883, <inlinedCallArgs1883>)
assocTy: (<inlinedCallArgs1883>, <inlinedCallArgs1883>) <=> string
assocTy: (<inlinedCallArgs1883>, <inlinedCallArgs1883>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1883> <= string
trackAST: (inlinedCallArgs1883_id1884, string)
assocAST: (account-guard_id1636, <account-guard_id1636>, string) => (inlinedCallArgs1883_id1884, <inlinedCallArgs1883_id1884>, string)
trackAST: (inlinedCallArgs1883_account1885, string)
assocAST: (account-guard_account1637, <account-guard_account1637>, string) => (inlinedCallArgs1883_account1885, <inlinedCallArgs1883_account1885>, string)
assocAST: (inlinedCallArgs1883_id1884, <account-guard_id1636>, string) => (key_id1640, <key_id1640>, string)
assocAST: (inlinedCallArgs1883_account1885, <account-guard_account1637>, string) => (key_account1641, <key_account1641>, string)
assocTy: (<account-guard1651>, guard) <=> guard
assocTy: (<account-guard1651>, guard) <= guard
trackAST: (inlinedCallArgs1886, <inlinedCallArgs1886>)
assocTy: (<inlinedCallArgs1886>, <inlinedCallArgs1886>) <=> guard
assocTy: (<inlinedCallArgs1886>, <inlinedCallArgs1886>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1886> <= guard
trackAST: (inlinedCallArgs1886_id1887, string)
assocAST: (DEBIT_id1633, <DEBIT_id1633>, string) => (inlinedCallArgs1886_id1887, <inlinedCallArgs1886_id1887>, string)
trackAST: (inlinedCallArgs1886_account1888, string)
assocAST: (DEBIT_sender1634, <DEBIT_sender1634>, string) => (inlinedCallArgs1886_account1888, <inlinedCallArgs1886_account1888>, string)
assocAST: (inlinedCallArgs1886_id1887, <DEBIT_id1633>, string) => (account-guard_id1636, <account-guard_id1636>, string)
assocAST: (inlinedCallArgs1886_id1887, <DEBIT_id1633>, string) => (account-guard_id1636, <DEBIT_id1633>, string)
assocAST: (inlinedCallArgs1886_account1888, <DEBIT_sender1634>, string) => (account-guard_account1637, <account-guard_account1637>, string)
assocAST: (inlinedCallArgs1886_account1888, <DEBIT_sender1634>, string) => (account-guard_account1637, <DEBIT_sender1634>, string)
assocTy: (<enforce-guard1635>, <enforce-guard1635>) <=> <DEBIT1654_e>
assocTy: (<enforce-guard1635>, <enforce-guard1635>) <= <DEBIT1654_e>
assocTy: tracking/updating type variable <enforce-guard1635> <= <DEBIT1654_e>
trackAST: (inlinedCallArgs1889, <inlinedCallArgs1889>)
assocTy: (<inlinedCallArgs1889>, <inlinedCallArgs1889>) <=> <DEBIT1654_e>
assocTy: (<inlinedCallArgs1889>, <inlinedCallArgs1889>) <= <DEBIT1654_e>
assocTy: tracking/updating type variable <inlinedCallArgs1889> <= <DEBIT1654_e>
trackAST: (inlinedCallArgs1889_id1890, string)
assocAST: (debit_id1629, <debit_id1629>, string) => (inlinedCallArgs1889_id1890, <inlinedCallArgs1889_id1890>, string)
trackAST: (inlinedCallArgs1889_sender1891, string)
assocAST: (debit_account1630, <debit_account1630>, string) => (inlinedCallArgs1889_sender1891, <inlinedCallArgs1889_sender1891>, string)
assocAST: (inlinedCallArgs1889_id1890, <debit_id1629>, string) => (DEBIT_id1633, <DEBIT_id1633>, string)
assocAST: (inlinedCallArgs1889_id1890, <debit_id1629>, string) => (DEBIT_id1633, <debit_id1629>, string)
assocAST: (inlinedCallArgs1889_sender1891, <debit_account1630>, string) => (DEBIT_sender1634, <DEBIT_sender1634>, string)
assocAST: (inlinedCallArgs1889_sender1891, <debit_account1630>, string) => (DEBIT_sender1634, <debit_account1630>, string)
assocTy: (<precision1664>, integer) <=> integer
assocTy: (<precision1664>, integer) <= integer
trackAST: (inlinedCallArgs1892, <inlinedCallArgs1892>)
assocTy: (<inlinedCallArgs1892>, <inlinedCallArgs1892>) <=> integer
assocTy: (<inlinedCallArgs1892>, <inlinedCallArgs1892>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1892> <= integer
trackAST: (inlinedCallArgs1892_id1893, string)
assocAST: (enforce-unit_id1655, <enforce-unit_id1655>, string) => (inlinedCallArgs1892_id1893, <inlinedCallArgs1892_id1893>, string)
assocAST: (inlinedCallArgs1892_id1893, <enforce-unit_id1655>, string) => (precision_id1659, <precision_id1659>, string)
assocTy: (<enforce-unit1670>, bool) <=> bool
assocTy: (<enforce-unit1670>, bool) <= bool
trackAST: (inlinedCallArgs1894, <inlinedCallArgs1894>)
assocTy: (<inlinedCallArgs1894>, <inlinedCallArgs1894>) <=> bool
assocTy: (<inlinedCallArgs1894>, <inlinedCallArgs1894>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1894> <= bool
trackAST: (inlinedCallArgs1894_id1895, string)
assocAST: (debit_id1629, <debit_id1629>, string) => (inlinedCallArgs1894_id1895, <inlinedCallArgs1894_id1895>, string)
trackAST: (inlinedCallArgs1894_amount1896, decimal)
assocAST: (debit_amount1631, <debit_amount1631>, decimal) => (inlinedCallArgs1894_amount1896, <inlinedCallArgs1894_amount1896>, decimal)
assocAST: (inlinedCallArgs1894_id1895, <debit_id1629>, string) => (enforce-unit_id1655, <enforce-unit_id1655>, string)
assocAST: (inlinedCallArgs1894_id1895, <debit_id1629>, string) => (enforce-unit_id1655, <debit_id1629>, string)
assocAST: (inlinedCallArgs1894_amount1896, <debit_amount1631>, decimal) => (enforce-unit_amount1656, <enforce-unit_amount1656>, decimal)
assocAST: (inlinedCallArgs1894_amount1896, <debit_amount1631>, decimal) => (enforce-unit_amount1656, <debit_amount1631>, decimal)
assocTy: (<key1697>, string) <=> string
assocTy: (<key1697>, string) <= string
trackAST: (inlinedCallArgs1897, <inlinedCallArgs1897>)
assocTy: (<inlinedCallArgs1897>, <inlinedCallArgs1897>) <=> string
assocTy: (<inlinedCallArgs1897>, <inlinedCallArgs1897>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1897> <= string
trackAST: (inlinedCallArgs1897_id1898, string)
assocAST: (debit_id1629, <debit_id1629>, string) => (inlinedCallArgs1897_id1898, <inlinedCallArgs1897_id1898>, string)
trackAST: (inlinedCallArgs1897_account1899, string)
assocAST: (debit_account1630, <debit_account1630>, string) => (inlinedCallArgs1897_account1899, <inlinedCallArgs1897_account1899>, string)
assocAST: (inlinedCallArgs1897_id1898, <debit_id1629>, string) => (key_id1692, <key_id1692>, string)
assocAST: (inlinedCallArgs1897_account1899, <debit_account1630>, string) => (key_account1693, <key_account1693>, string)
assocTy: (<key1679>, string) <=> string
assocTy: (<key1679>, string) <= string
trackAST: (inlinedCallArgs1900, <inlinedCallArgs1900>)
assocTy: (<inlinedCallArgs1900>, <inlinedCallArgs1900>) <=> string
assocTy: (<inlinedCallArgs1900>, <inlinedCallArgs1900>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1900> <= string
trackAST: (inlinedCallArgs1900_id1901, string)
assocAST: (debit_id1629, <debit_id1629>, string) => (inlinedCallArgs1900_id1901, <inlinedCallArgs1900_id1901>, string)
trackAST: (inlinedCallArgs1900_account1902, string)
assocAST: (debit_account1630, <debit_account1630>, string) => (inlinedCallArgs1900_account1902, <inlinedCallArgs1900_account1902>, string)
assocAST: (inlinedCallArgs1900_id1901, <debit_id1629>, string) => (key_id1674, <key_id1674>, string)
assocAST: (inlinedCallArgs1900_account1902, <debit_account1630>, string) => (key_account1675, <key_account1675>, string)
assocTy: (<debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs1903, <inlinedCallArgs1903>)
assocTy: (<inlinedCallArgs1903>, <inlinedCallArgs1903>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs1903>, <inlinedCallArgs1903>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs1903> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs1903_id1904, string)
assocAST: (transfer-create_id1459, <transfer-create_id1459>, string) => (inlinedCallArgs1903_id1904, <inlinedCallArgs1903_id1904>, string)
trackAST: (inlinedCallArgs1903_account1905, string)
assocAST: (transfer-create_sender1460, <transfer-create_sender1460>, string) => (inlinedCallArgs1903_account1905, <inlinedCallArgs1903_account1905>, string)
trackAST: (inlinedCallArgs1903_amount1906, decimal)
assocAST: (transfer-create_amount1463, <transfer-create_amount1463>, decimal) => (inlinedCallArgs1903_amount1906, <inlinedCallArgs1903_amount1906>, decimal)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <debit_id1629>, string)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <debit_account1630>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_amount1906, <transfer-create_amount1463>, decimal) => (debit_amount1631, <debit_amount1631>, decimal)
assocAST: (inlinedCallArgs1903_amount1906, <transfer-create_amount1463>, decimal) => (debit_amount1631, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_id1904, <transfer-create_id1459>, string) => (debit_id1629, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1903_account1905, <transfer-create_sender1460>, string) => (debit_account1630, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1903_amount1906, <transfer-create_amount1463>, decimal) => (debit_amount1631, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1903_amount1906, <transfer-create_amount1463>, decimal) => (debit_amount1631, <transfer-create_amount1463>, decimal)
assocTy: (<enforce1710>, <enforce1710>) <=> <enforce-valid-account1716_c>
assocTy: (<enforce1710>, <enforce1710>) <= <enforce-valid-account1716_c>
assocTy: tracking/updating type variable <enforce1710> <= <enforce-valid-account1716_c>
trackAST: (inlinedCallArgs1907, <inlinedCallArgs1907>)
assocTy: (<inlinedCallArgs1907>, <inlinedCallArgs1907>) <=> <enforce-valid-account1716_c>
assocTy: (<inlinedCallArgs1907>, <inlinedCallArgs1907>) <= <enforce-valid-account1716_c>
assocTy: tracking/updating type variable <inlinedCallArgs1907> <= <enforce-valid-account1716_c>
trackAST: (inlinedCallArgs1907_account1908, string)
assocAST: (credit_account1706, <credit_account1706>, string) => (inlinedCallArgs1907_account1908, <inlinedCallArgs1907_account1908>, string)
assocAST: (inlinedCallArgs1907_account1908, <credit_account1706>, string) => (enforce-valid-account_account1709, <enforce-valid-account_account1709>, string)
assocTy: (<precision1726>, integer) <=> integer
assocTy: (<precision1726>, integer) <= integer
trackAST: (inlinedCallArgs1909, <inlinedCallArgs1909>)
assocTy: (<inlinedCallArgs1909>, <inlinedCallArgs1909>) <=> integer
assocTy: (<inlinedCallArgs1909>, <inlinedCallArgs1909>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1909> <= integer
trackAST: (inlinedCallArgs1909_id1910, string)
assocAST: (enforce-unit_id1717, <enforce-unit_id1717>, string) => (inlinedCallArgs1909_id1910, <inlinedCallArgs1909_id1910>, string)
assocAST: (inlinedCallArgs1909_id1910, <enforce-unit_id1717>, string) => (precision_id1721, <precision_id1721>, string)
assocTy: (<enforce-unit1732>, bool) <=> bool
assocTy: (<enforce-unit1732>, bool) <= bool
trackAST: (inlinedCallArgs1911, <inlinedCallArgs1911>)
assocTy: (<inlinedCallArgs1911>, <inlinedCallArgs1911>) <=> bool
assocTy: (<inlinedCallArgs1911>, <inlinedCallArgs1911>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1911> <= bool
trackAST: (inlinedCallArgs1911_id1912, string)
assocAST: (credit_id1705, <credit_id1705>, string) => (inlinedCallArgs1911_id1912, <inlinedCallArgs1911_id1912>, string)
trackAST: (inlinedCallArgs1911_amount1913, decimal)
assocAST: (credit_amount1708, <credit_amount1708>, decimal) => (inlinedCallArgs1911_amount1913, <inlinedCallArgs1911_amount1913>, decimal)
assocAST: (inlinedCallArgs1911_id1912, <credit_id1705>, string) => (enforce-unit_id1717, <enforce-unit_id1717>, string)
assocAST: (inlinedCallArgs1911_id1912, <credit_id1705>, string) => (enforce-unit_id1717, <credit_id1705>, string)
assocAST: (inlinedCallArgs1911_amount1913, <credit_amount1708>, decimal) => (enforce-unit_amount1718, <enforce-unit_amount1718>, decimal)
assocAST: (inlinedCallArgs1911_amount1913, <credit_amount1708>, decimal) => (enforce-unit_amount1718, <credit_amount1708>, decimal)
assocTy: (<bool1737>, bool) <=> <CREDIT1739_g>
assocTy: bool => <CREDIT1739_g>
trackAST: (inlinedCallArgs1914, <inlinedCallArgs1914>)
assocTy: (<inlinedCallArgs1914>, <inlinedCallArgs1914>) <=> <CREDIT1739_g>
assocTy: (<inlinedCallArgs1914>, <inlinedCallArgs1914>) <= <CREDIT1739_g>
assocTy: tracking/updating type variable <inlinedCallArgs1914> <= <CREDIT1739_g>
trackAST: (inlinedCallArgs1914_id1915, string)
assocAST: (credit_id1705, <credit_id1705>, string) => (inlinedCallArgs1914_id1915, <inlinedCallArgs1914_id1915>, string)
trackAST: (inlinedCallArgs1914_receiver1916, string)
assocAST: (credit_account1706, <credit_account1706>, string) => (inlinedCallArgs1914_receiver1916, <inlinedCallArgs1914_receiver1916>, string)
assocTy: (<check-reserved1781>, string) <=> string
assocTy: (<check-reserved1781>, string) <= string
trackAST: (inlinedCallArgs1917, <inlinedCallArgs1917>)
assocTy: (<inlinedCallArgs1917>, <inlinedCallArgs1917>) <=> string
assocTy: (<inlinedCallArgs1917>, <inlinedCallArgs1917>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1917> <= string
trackAST: (inlinedCallArgs1917_account1918, string)
assocAST: (enforce-reserved_account1764, <enforce-reserved_account1764>, string) => (inlinedCallArgs1917_account1918, <inlinedCallArgs1917_account1918>, string)
assocAST: (inlinedCallArgs1917_account1918, <enforce-reserved_account1764>, string) => (check-reserved_account1768, <check-reserved_account1768>, string)
assocTy: (<enforce-reserved1806>, bool) <=> bool
assocTy: (<enforce-reserved1806>, bool) <= bool
trackAST: (inlinedCallArgs1919, <inlinedCallArgs1919>)
assocTy: (<inlinedCallArgs1919>, <inlinedCallArgs1919>) <=> bool
assocTy: (<inlinedCallArgs1919>, <inlinedCallArgs1919>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1919> <= bool
trackAST: (inlinedCallArgs1919_account1920, string)
assocAST: (credit_account1706, <credit_account1706>, string) => (inlinedCallArgs1919_account1920, <inlinedCallArgs1919_account1920>, string)
trackAST: (inlinedCallArgs1919_guard1921, guard)
assocAST: (credit_guard1707, <credit_guard1707>, guard) => (inlinedCallArgs1919_guard1921, <inlinedCallArgs1919_guard1921>, guard)
assocAST: (inlinedCallArgs1919_account1920, <credit_account1706>, string) => (enforce-reserved_account1764, <enforce-reserved_account1764>, string)
assocAST: (inlinedCallArgs1919_account1920, <credit_account1706>, string) => (enforce-reserved_account1764, <credit_account1706>, string)
assocAST: (inlinedCallArgs1919_account1920, <credit_account1706>, string) => (enforce-reserved_account1764, <credit_account1706>, string)
assocAST: (inlinedCallArgs1919_guard1921, <credit_guard1707>, guard) => (enforce-reserved_guard1765, <enforce-reserved_guard1765>, guard)
assocTy: (<key1820>, string) <=> string
assocTy: (<key1820>, string) <= string
trackAST: (inlinedCallArgs1922, <inlinedCallArgs1922>)
assocTy: (<inlinedCallArgs1922>, <inlinedCallArgs1922>) <=> string
assocTy: (<inlinedCallArgs1922>, <inlinedCallArgs1922>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1922> <= string
trackAST: (inlinedCallArgs1922_id1923, string)
assocAST: (credit_id1705, <credit_id1705>, string) => (inlinedCallArgs1922_id1923, <inlinedCallArgs1922_id1923>, string)
trackAST: (inlinedCallArgs1922_account1924, string)
assocAST: (credit_account1706, <credit_account1706>, string) => (inlinedCallArgs1922_account1924, <inlinedCallArgs1922_account1924>, string)
assocAST: (inlinedCallArgs1922_id1923, <credit_id1705>, string) => (key_id1815, <key_id1815>, string)
assocAST: (inlinedCallArgs1922_account1924, <credit_account1706>, string) => (key_account1816, <key_account1816>, string)
assocTy: (<bool1828>, bool) <=> bool
assocTy: (<bool1828>, bool) <= bool
trackAST: (inlinedCallArgs1925, <inlinedCallArgs1925>)
assocTy: (<inlinedCallArgs1925>, <inlinedCallArgs1925>) <=> bool
assocTy: (<inlinedCallArgs1925>, <inlinedCallArgs1925>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1925> <= bool
trackAST: (inlinedCallArgs1925_id1926, string)
assocAST: (credit_id1705, <credit_id1705>, string) => (inlinedCallArgs1925_id1926, <inlinedCallArgs1925_id1926>, string)
trackAST: (inlinedCallArgs1925_account1927, string)
assocAST: (credit_account1706, <credit_account1706>, string) => (inlinedCallArgs1925_account1927, <inlinedCallArgs1925_account1927>, string)
trackAST: (inlinedCallArgs1925_guard1928, guard)
assocAST: (inlinedCallArgs1925_guard1928, <inlinedCallArgs1925_guard1928>, guard) => (BindSchema1751_retg1754, <BindSchema1751_retg1754_ad>, <BindSchema1751_retg1754_ad>)
assocTy: (<key1747>, string) <=> string
assocTy: (<key1747>, string) <= string
trackAST: (inlinedCallArgs1929, <inlinedCallArgs1929>)
assocTy: (<inlinedCallArgs1929>, <inlinedCallArgs1929>) <=> string
assocTy: (<inlinedCallArgs1929>, <inlinedCallArgs1929>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1929> <= string
trackAST: (inlinedCallArgs1929_id1930, string)
assocAST: (credit_id1705, <credit_id1705>, string) => (inlinedCallArgs1929_id1930, <inlinedCallArgs1929_id1930>, string)
trackAST: (inlinedCallArgs1929_account1931, string)
assocAST: (credit_account1706, <credit_account1706>, string) => (inlinedCallArgs1929_account1931, <inlinedCallArgs1929_account1931>, string)
assocAST: (inlinedCallArgs1929_id1930, <credit_id1705>, string) => (key_id1742, <key_id1742>, string)
assocAST: (inlinedCallArgs1929_account1931, <credit_account1706>, string) => (key_account1743, <key_account1743>, string)
assocTy: (<credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs1932, <inlinedCallArgs1932>)
assocTy: (<inlinedCallArgs1932>, <inlinedCallArgs1932>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs1932>, <inlinedCallArgs1932>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs1932> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs1932_id1933, string)
assocAST: (transfer-create_id1459, <transfer-create_id1459>, string) => (inlinedCallArgs1932_id1933, <inlinedCallArgs1932_id1933>, string)
trackAST: (inlinedCallArgs1932_account1934, string)
assocAST: (transfer-create_receiver1461, <transfer-create_receiver1461>, string) => (inlinedCallArgs1932_account1934, <inlinedCallArgs1932_account1934>, string)
trackAST: (inlinedCallArgs1932_guard1935, guard)
assocAST: (transfer-create_receiver-guard1462, <transfer-create_receiver-guard1462>, guard) => (inlinedCallArgs1932_guard1935, <inlinedCallArgs1932_guard1935>, guard)
trackAST: (inlinedCallArgs1932_amount1936, decimal)
assocAST: (transfer-create_amount1463, <transfer-create_amount1463>, decimal) => (inlinedCallArgs1932_amount1936, <inlinedCallArgs1932_amount1936>, decimal)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <credit_account1706>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <credit_id1705>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_amount1936, <transfer-create_amount1463>, decimal) => (credit_amount1708, <credit_amount1708>, decimal)
assocAST: (inlinedCallArgs1932_amount1936, <transfer-create_amount1463>, decimal) => (credit_amount1708, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_id1933, <transfer-create_id1459>, string) => (credit_id1705, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_account1934, <transfer-create_receiver1461>, string) => (credit_account1706, <transfer-create_receiver1461>, string)
assocAST: (inlinedCallArgs1932_guard1935, <transfer-create_receiver-guard1462>, guard) => (credit_guard1707, <credit_guard1707>, guard)
assocAST: (inlinedCallArgs1932_guard1935, <transfer-create_receiver-guard1462>, guard) => (credit_guard1707, <transfer-create_receiver-guard1462>, guard)
assocAST: (inlinedCallArgs1932_guard1935, <transfer-create_receiver-guard1462>, guard) => (credit_guard1707, <transfer-create_receiver-guard1462>, guard)
assocAST: (inlinedCallArgs1932_guard1935, <transfer-create_receiver-guard1462>, guard) => (credit_guard1707, <transfer-create_receiver-guard1462>, guard)
assocAST: (inlinedCallArgs1932_amount1936, <transfer-create_amount1463>, decimal) => (credit_amount1708, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1932_amount1936, <transfer-create_amount1463>, decimal) => (credit_amount1708, <transfer-create_amount1463>, decimal)
assocTy: (<bool1843>, bool) <=> bool
assocTy: (<bool1843>, bool) <= bool
trackAST: (inlinedCallArgs1937, <inlinedCallArgs1937>)
assocTy: (<inlinedCallArgs1937>, <inlinedCallArgs1937>) <=> bool
assocTy: (<inlinedCallArgs1937>, <inlinedCallArgs1937>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1937> <= bool
trackAST: (inlinedCallArgs1937_token-id1938, string)
assocAST: (transfer-create_id1459, <transfer-create_id1459>, string) => (inlinedCallArgs1937_token-id1938, <inlinedCallArgs1937_token-id1938>, string)
trackAST: (inlinedCallArgs1937_amount1939, decimal)
assocAST: (transfer-create_amount1463, <transfer-create_amount1463>, decimal) => (inlinedCallArgs1937_amount1939, <inlinedCallArgs1937_amount1939>, decimal)
trackAST: (inlinedCallArgs1937_sender1940, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet1627_sender1628, <debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs1937_sender1940, <inlinedCallArgs1937_sender1940>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs1937_receiver1941, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet1627_receiver1704, <credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs1937_receiver1941, <inlinedCallArgs1937_receiver1941>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<precision1529>, integer) <=> integer
assocTy: (<precision1529>, integer) <= integer
trackAST: (inlinedCallArgs1942, <inlinedCallArgs1942>)
assocTy: (<inlinedCallArgs1942>, <inlinedCallArgs1942>) <=> integer
assocTy: (<inlinedCallArgs1942>, <inlinedCallArgs1942>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs1942> <= integer
trackAST: (inlinedCallArgs1942_id1943, string)
assocAST: (enforce-unit_id1520, <enforce-unit_id1520>, string) => (inlinedCallArgs1942_id1943, <inlinedCallArgs1942_id1943>, string)
assocAST: (inlinedCallArgs1942_id1943, <enforce-unit_id1520>, string) => (precision_id1524, <precision_id1524>, string)
assocTy: (<enforce-unit1535>, bool) <=> bool
assocTy: (<enforce-unit1535>, bool) <= bool
trackAST: (inlinedCallArgs1944, <inlinedCallArgs1944>)
assocTy: (<inlinedCallArgs1944>, <inlinedCallArgs1944>) <=> bool
assocTy: (<inlinedCallArgs1944>, <inlinedCallArgs1944>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1944> <= bool
trackAST: (inlinedCallArgs1944_id1945, string)
assocAST: (TRANSFER_id1516, <TRANSFER_id1516>, string) => (inlinedCallArgs1944_id1945, <inlinedCallArgs1944_id1945>, string)
trackAST: (inlinedCallArgs1944_amount1946, decimal)
assocAST: (TRANSFER_amount1519, <TRANSFER_amount1519>, decimal) => (inlinedCallArgs1944_amount1946, <inlinedCallArgs1944_amount1946>, decimal)
assocAST: (inlinedCallArgs1944_id1945, <TRANSFER_id1516>, string) => (enforce-unit_id1520, <enforce-unit_id1520>, string)
assocAST: (inlinedCallArgs1944_id1945, <TRANSFER_id1516>, string) => (enforce-unit_id1520, <TRANSFER_id1516>, string)
assocAST: (inlinedCallArgs1944_amount1946, <TRANSFER_amount1519>, decimal) => (enforce-unit_amount1521, <enforce-unit_amount1521>, decimal)
assocAST: (inlinedCallArgs1944_amount1946, <TRANSFER_amount1519>, decimal) => (enforce-unit_amount1521, <TRANSFER_amount1519>, decimal)
assocTy: (<key1554>, string) <=> string
assocTy: (<key1554>, string) <= string
trackAST: (inlinedCallArgs1947, <inlinedCallArgs1947>)
assocTy: (<inlinedCallArgs1947>, <inlinedCallArgs1947>) <=> string
assocTy: (<inlinedCallArgs1947>, <inlinedCallArgs1947>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs1947> <= string
trackAST: (inlinedCallArgs1947_id1948, string)
assocAST: (account-guard_id1545, <account-guard_id1545>, string) => (inlinedCallArgs1947_id1948, <inlinedCallArgs1947_id1948>, string)
trackAST: (inlinedCallArgs1947_account1949, string)
assocAST: (account-guard_account1546, <account-guard_account1546>, string) => (inlinedCallArgs1947_account1949, <inlinedCallArgs1947_account1949>, string)
assocAST: (inlinedCallArgs1947_id1948, <account-guard_id1545>, string) => (key_id1549, <key_id1549>, string)
assocAST: (inlinedCallArgs1947_account1949, <account-guard_account1546>, string) => (key_account1550, <key_account1550>, string)
assocTy: (<account-guard1560>, guard) <=> guard
assocTy: (<account-guard1560>, guard) <= guard
trackAST: (inlinedCallArgs1950, <inlinedCallArgs1950>)
assocTy: (<inlinedCallArgs1950>, <inlinedCallArgs1950>) <=> guard
assocTy: (<inlinedCallArgs1950>, <inlinedCallArgs1950>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs1950> <= guard
trackAST: (inlinedCallArgs1950_id1951, string)
assocAST: (DEBIT_id1542, <DEBIT_id1542>, string) => (inlinedCallArgs1950_id1951, <inlinedCallArgs1950_id1951>, string)
trackAST: (inlinedCallArgs1950_account1952, string)
assocAST: (DEBIT_sender1543, <DEBIT_sender1543>, string) => (inlinedCallArgs1950_account1952, <inlinedCallArgs1950_account1952>, string)
assocAST: (inlinedCallArgs1950_id1951, <DEBIT_id1542>, string) => (account-guard_id1545, <account-guard_id1545>, string)
assocAST: (inlinedCallArgs1950_id1951, <DEBIT_id1542>, string) => (account-guard_id1545, <DEBIT_id1542>, string)
assocAST: (inlinedCallArgs1950_account1952, <DEBIT_sender1543>, string) => (account-guard_account1546, <account-guard_account1546>, string)
assocAST: (inlinedCallArgs1950_account1952, <DEBIT_sender1543>, string) => (account-guard_account1546, <DEBIT_sender1543>, string)
assocTy: (<enforce-guard1544>, <enforce-guard1544>) <=> <DEBIT1563_e>
assocTy: (<enforce-guard1544>, <enforce-guard1544>) <= <DEBIT1563_e>
assocTy: tracking/updating type variable <enforce-guard1544> <= <DEBIT1563_e>
trackAST: (inlinedCallArgs1953, <inlinedCallArgs1953>)
assocTy: (<inlinedCallArgs1953>, <inlinedCallArgs1953>) <=> <DEBIT1563_e>
assocTy: (<inlinedCallArgs1953>, <inlinedCallArgs1953>) <= <DEBIT1563_e>
assocTy: tracking/updating type variable <inlinedCallArgs1953> <= <DEBIT1563_e>
trackAST: (inlinedCallArgs1953_id1954, string)
assocAST: (TRANSFER_id1516, <TRANSFER_id1516>, string) => (inlinedCallArgs1953_id1954, <inlinedCallArgs1953_id1954>, string)
trackAST: (inlinedCallArgs1953_sender1955, string)
assocAST: (TRANSFER_sender1517, <TRANSFER_sender1517>, string) => (inlinedCallArgs1953_sender1955, <inlinedCallArgs1953_sender1955>, string)
assocAST: (inlinedCallArgs1953_id1954, <TRANSFER_id1516>, string) => (DEBIT_id1542, <DEBIT_id1542>, string)
assocAST: (inlinedCallArgs1953_id1954, <TRANSFER_id1516>, string) => (DEBIT_id1542, <TRANSFER_id1516>, string)
assocAST: (inlinedCallArgs1953_sender1955, <TRANSFER_sender1517>, string) => (DEBIT_sender1543, <DEBIT_sender1543>, string)
assocAST: (inlinedCallArgs1953_sender1955, <TRANSFER_sender1517>, string) => (DEBIT_sender1543, <TRANSFER_sender1517>, string)
assocTy: (<bool1567>, bool) <=> <CREDIT1569_g>
assocTy: bool => <CREDIT1569_g>
trackAST: (inlinedCallArgs1956, <inlinedCallArgs1956>)
assocTy: (<inlinedCallArgs1956>, <inlinedCallArgs1956>) <=> <CREDIT1569_g>
assocTy: (<inlinedCallArgs1956>, <inlinedCallArgs1956>) <= <CREDIT1569_g>
assocTy: tracking/updating type variable <inlinedCallArgs1956> <= <CREDIT1569_g>
trackAST: (inlinedCallArgs1956_id1957, string)
assocAST: (TRANSFER_id1516, <TRANSFER_id1516>, string) => (inlinedCallArgs1956_id1957, <inlinedCallArgs1956_id1957>, string)
trackAST: (inlinedCallArgs1956_receiver1958, string)
assocAST: (TRANSFER_receiver1518, <TRANSFER_receiver1518>, string) => (inlinedCallArgs1956_receiver1958, <inlinedCallArgs1956_receiver1958>, string)
assocTy: (<TRANSFER1570>, bool) <=> bool
assocTy: (<TRANSFER1570>, bool) <= bool
trackAST: (inlinedCallArgs1959, <inlinedCallArgs1959>)
assocTy: (<inlinedCallArgs1959>, <inlinedCallArgs1959>) <=> bool
assocTy: (<inlinedCallArgs1959>, <inlinedCallArgs1959>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs1959> <= bool
trackAST: (inlinedCallArgs1959_id1960, string)
assocAST: (transfer-create_id1459, <transfer-create_id1459>, string) => (inlinedCallArgs1959_id1960, <inlinedCallArgs1959_id1960>, string)
trackAST: (inlinedCallArgs1959_sender1961, string)
assocAST: (transfer-create_sender1460, <transfer-create_sender1460>, string) => (inlinedCallArgs1959_sender1961, <inlinedCallArgs1959_sender1961>, string)
trackAST: (inlinedCallArgs1959_receiver1962, string)
assocAST: (transfer-create_receiver1461, <transfer-create_receiver1461>, string) => (inlinedCallArgs1959_receiver1962, <inlinedCallArgs1959_receiver1962>, string)
trackAST: (inlinedCallArgs1959_amount1963, decimal)
assocAST: (transfer-create_amount1463, <transfer-create_amount1463>, decimal) => (inlinedCallArgs1959_amount1963, <inlinedCallArgs1959_amount1963>, decimal)
assocAST: (inlinedCallArgs1959_id1960, <transfer-create_id1459>, string) => (TRANSFER_id1516, <TRANSFER_id1516>, string)
assocAST: (inlinedCallArgs1959_id1960, <transfer-create_id1459>, string) => (TRANSFER_id1516, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1959_amount1963, <transfer-create_amount1463>, decimal) => (TRANSFER_amount1519, <TRANSFER_amount1519>, decimal)
assocAST: (inlinedCallArgs1959_amount1963, <transfer-create_amount1463>, decimal) => (TRANSFER_amount1519, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1959_amount1963, <transfer-create_amount1463>, decimal) => (TRANSFER_amount1519, <transfer-create_amount1463>, decimal)
assocAST: (inlinedCallArgs1959_id1960, <transfer-create_id1459>, string) => (TRANSFER_id1516, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1959_id1960, <transfer-create_id1459>, string) => (TRANSFER_id1516, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1959_sender1961, <transfer-create_sender1460>, string) => (TRANSFER_sender1517, <TRANSFER_sender1517>, string)
assocAST: (inlinedCallArgs1959_sender1961, <transfer-create_sender1460>, string) => (TRANSFER_sender1517, <transfer-create_sender1460>, string)
assocAST: (inlinedCallArgs1959_id1960, <transfer-create_id1459>, string) => (TRANSFER_id1516, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1959_id1960, <transfer-create_id1459>, string) => (TRANSFER_id1516, <transfer-create_id1459>, string)
assocAST: (inlinedCallArgs1959_receiver1962, <transfer-create_receiver1461>, string) => (TRANSFER_receiver1518, <TRANSFER_receiver1518>, string)
assocAST: (inlinedCallArgs1959_receiver1962, <transfer-create_receiver1461>, string) => (TRANSFER_receiver1518, <transfer-create_receiver1461>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<!=1465>, <!=1465>) <=> bool
assocTy: (<!=1465>, <!=1465>) <= bool
assocTy: tracking/updating type variable <!=1465> <= bool
assocTy: (<string1466>, string) <=> string
assocTy: (<string1466>, string) <= string
assocTy: (<enforce1464>, <enforce1464>) <=> bool
assocTy: (<enforce1464>, <enforce1464>) <= bool
assocTy: tracking/updating type variable <enforce1464> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<!=1465_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<!=1465_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<transfer-create_sender1460>, string) <=> <!=1465_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <!=1465_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_receiver1461>, string) <=> <!=1465_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<!=1465>, bool) <=> bool
assocTy: (<!=1465>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<!=1472>, <!=1472>) <=> bool
assocTy: (<!=1472>, <!=1472>) <= bool
assocTy: tracking/updating type variable <!=1472> <= bool
assocTy: (<string1473>, string) <=> string
assocTy: (<string1473>, string) <= string
assocTy: (<enforce1471>, <enforce1471>) <=> bool
assocTy: (<enforce1471>, <enforce1471>) <= bool
assocTy: tracking/updating type variable <enforce1471> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<!=1472_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<!=1472_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<transfer-create_sender1460>, string) <=> <!=1472_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <!=1472_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_receiver1461>, string) <=> <!=1472_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<!=1472>, bool) <=> bool
assocTy: (<!=1472>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>1477>, <>1477>) <=> bool
assocTy: (<>1477>, <>1477>) <= bool
assocTy: tracking/updating type variable <>1477> <= bool
assocTy: (<string1479>, string) <=> string
assocTy: (<string1479>, string) <= string
assocTy: (<enforce1476>, <enforce1476>) <=> bool
assocTy: (<enforce1476>, <enforce1476>) <= bool
assocTy: tracking/updating type variable <enforce1476> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>1477_a[integer,decimal,string,time]> y:<>1477_a[integer,decimal,string,time]> -> bool
assocTy: (<transfer-create_amount1463>, decimal) <=> <>1477_a[integer,decimal,string,time]>
assocTy: decimal => <>1477_a[integer,decimal,string,time]>
assocTy: (<decimal1478>, decimal) <=> <>1477_a[integer,decimal,string,time]>
assocTy: (<>1477>, bool) <=> bool
assocTy: (<>1477>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1483>, <=1483>) <=> bool
assocTy: (<=1483>, <=1483>) <= bool
assocTy: tracking/updating type variable <=1483> <= bool
assocTy: (<string1485>, string) <=> string
assocTy: (<string1485>, string) <= string
assocTy: (<enforce1482>, <enforce-valid-amount1489_b>) <=> bool
assocTy: (<enforce1482>, <enforce-valid-amount1489_b>) <= bool
assocTy: tracking/updating type variable <enforce-valid-amount1489_b> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor1484>, <floor1484>) <=> <=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor1484>, <floor1484>) <= <=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor1484> <= <=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_amount1463>, decimal) <=> <=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1483_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1483>, bool) <=> bool
assocTy: (<=1483>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>1492>, <>1492>) <=> bool
assocTy: (<>1492>, <>1492>) <= bool
assocTy: tracking/updating type variable <>1492> <= bool
assocTy: (<string1495>, string) <=> string
assocTy: (<string1495>, string) <= string
assocTy: (<enforce1491>, <enforce-valid-account1497_c>) <=> bool
assocTy: (<enforce1491>, <enforce-valid-account1497_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account1497_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>1492_a[integer,decimal,string,time]> y:<>1492_a[integer,decimal,string,time]> -> bool
assocTy: (<length1493>, <length1493>) <=> <>1492_a[integer,decimal,string,time]>
assocTy: (<length1493>, <length1493>) <= <>1492_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length1493> <= <>1492_a[integer,decimal,string,time]>
assocTy: (<integer1494>, integer) <=> <>1492_a[integer,decimal,string,time]>
assocTy: integer => <>1492_a[integer,decimal,string,time]>
assocTy: (<>1492>, bool) <=> bool
assocTy: (<>1492>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length1493_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<transfer-create_sender1460>, string) <=> <length1493_a[[<l>],string,object:<{o}>]>
assocTy: string => <length1493_a[[<l>],string,object:<{o}>]>
assocTy: (<length1493>, integer) <=> integer
assocTy: (<length1493>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>1500>, <>1500>) <=> bool
assocTy: (<>1500>, <>1500>) <= bool
assocTy: tracking/updating type variable <>1500> <= bool
assocTy: (<string1503>, string) <=> string
assocTy: (<string1503>, string) <= string
assocTy: (<enforce1499>, <enforce-valid-transfer1507_e>) <=> bool
assocTy: (<enforce1499>, <enforce-valid-transfer1507_e>) <= bool
assocTy: tracking/updating type variable <enforce-valid-transfer1507_e> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>1500_a[integer,decimal,string,time]> y:<>1500_a[integer,decimal,string,time]> -> bool
assocTy: (<length1501>, <length1501>) <=> <>1500_a[integer,decimal,string,time]>
assocTy: (<length1501>, <length1501>) <= <>1500_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length1501> <= <>1500_a[integer,decimal,string,time]>
assocTy: (<integer1502>, integer) <=> <>1500_a[integer,decimal,string,time]>
assocTy: integer => <>1500_a[integer,decimal,string,time]>
assocTy: (<>1500>, bool) <=> bool
assocTy: (<>1500>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length1501_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<transfer-create_receiver1461>, string) <=> <length1501_a[[<l>],string,object:<{o}>]>
assocTy: string => <length1501_a[[<l>],string,object:<{o}>]>
assocTy: (<length1501>, integer) <=> integer
assocTy: (<length1501>, integer) <= integer
Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability1515_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER1570>, bool) <=> bool
assocTy: (<TRANSFER1570>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<transfer-create1846>, bool) <=> <with-capability1515_a>
assocTy: bool => <with-capability1515_a>
assocTy: (<emit-event1838>, <emit-event1838>) <=> <with-capability1515_a>
assocTy: (<emit-event1838>, <emit-event1838>) <= <with-capability1515_a>
assocTy: tracking/updating type variable <emit-event1838> <= <with-capability1515_a>
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind1577_row}> binding:binding:<{bind1577_row}> -> <bind1577_a>
assocTy: (<get-policy-info1593>, object:{marmalade.ledger.policy-info}) <=> object:<{bind1577_row}>
assocTy: (<{bind1577_row}>, <{bind1577_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind1577_row}>, <{bind1577_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind1577_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind1577_row}>)
assocTy: (<bind1577>, <enforce-transfer-policy1626_s>) <=> <bind1577_a>
assocTy: (<bind1577>, <enforce-transfer-policy1626_s>) <= <bind1577_a>
assocTy: tracking/updating type variable <enforce-transfer-policy1626_s> <= <bind1577_a>
assocTy: (<enforce-transfer1605>, bool) <=> <bind1577_a>
assocTy: bool => <bind1577_a>
assocTy: (<BindSchema1595schema1624>, *) <=> binding:<{bind1577_row}>
assocTy: (<BindSchema1595schema1624>, *) <= binding:<{bind1577_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1609_row}> key:string bindings:binding:<{with-read1609_row}> -> <with-read1609_a>
assocTy: (<marmalade.ledger.ledger1610>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1609_row}>
assocTy: (<{with-read1609_row}>, <{with-read1609_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1609_row}>, <{with-read1609_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1609_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1609_row}>)
assocTy: (<key1616>, string) <=> string
assocTy: (<key1616>, string) <= string
assocTy: (<account-guard1622>, guard) <=> <with-read1609_a>
assocTy: guard => <with-read1609_a>
assocTy: (<BindSchema1618_guard1619_f>, <BindSchema1618_guard1619_f>) <=> <with-read1609_a>
assocTy: (<BindSchema1618_guard1619_f>, <BindSchema1618_guard1619_f>) <= <with-read1609_a>
assocTy: tracking/updating type variable <BindSchema1618_guard1619_f> <= <with-read1609_a>
assocTy: (<BindSchema1618schema1621>, *) <=> binding:<{with-read1609_row}>
assocTy: (<BindSchema1618schema1621>, *) <= binding:<{with-read1609_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1614>, string) <=> string
assocTy: (<string1614>, string) <= string
assocTy: (<list1615>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1616>, string) <=> string
assocTy: (<key1616>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1609_row}> key:string bindings:binding:<{with-read1609_row}> -> <with-read1609_a>
assocTy: (<marmalade.ledger.ledger1610>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1609_row}>
assocTy: (<{with-read1609_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1609_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1609_row}>)
assocTy: (<key1616>, string) <=> string
assocTy: (<key1616>, string) <= string
assocTy: (<account-guard1622>, guard) <=> <with-read1609_a>
assocTy: (<BindSchema1618_guard1619_f>, guard) <=> <with-read1609_a>
assocTy: (<BindSchema1618schema1621>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read1609_row}>
assocTy: (<{with-read1609_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1609_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read1609_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1614>, string) <=> string
assocTy: (<string1614>, string) <= string
assocTy: (<list1615>, [*]) <=> [*]
assocTy: (<list1615>, [*]) <= [*]
assocTy: (<key1616>, string) <=> string
assocTy: (<key1616>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1579_row}> key:string bindings:binding:<{with-read1579_row}> -> <with-read1579_a>
assocTy: (<marmalade.ledger.tokens1580>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read1579_row}>
assocTy: (<{with-read1579_row}>, <{with-read1579_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read1579_row}>, <{with-read1579_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read1579_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read1579_row}>)
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
assocTy: (<get-policy-info1593>, object:{marmalade.ledger.policy-info}) <=> <with-read1579_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read1579_a>
assocTy: (<object1590>, object:*) <=> <with-read1579_a>
assocTy: (<BindSchema1581schema1592>, *) <=> binding:<{with-read1579_row}>
assocTy: (<BindSchema1581schema1592>, *) <= binding:<{with-read1579_row}>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard1635>, <DEBIT1654_e>) <=> bool
assocTy: (<enforce-guard1635>, <DEBIT1654_e>) <= bool
assocTy: tracking/updating type variable <DEBIT1654_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability1632>, <require-capability1632>) <=> bool
assocTy: (<require-capability1632>, <require-capability1632>) <= bool
assocTy: tracking/updating type variable <require-capability1632> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1638_row}> key:string bindings:binding:<{with-read1638_row}> -> <with-read1638_a>
assocTy: (<marmalade.ledger.ledger1639>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1638_row}>
assocTy: (<{with-read1638_row}>, <{with-read1638_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1638_row}>, <{with-read1638_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1638_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1638_row}>)
assocTy: (<key1645>, string) <=> string
assocTy: (<key1645>, string) <= string
assocTy: (<account-guard1651>, guard) <=> <with-read1638_a>
assocTy: guard => <with-read1638_a>
assocTy: (<BindSchema1647_guard1648_f>, <BindSchema1647_guard1648_f>) <=> <with-read1638_a>
assocTy: (<BindSchema1647_guard1648_f>, <BindSchema1647_guard1648_f>) <= <with-read1638_a>
assocTy: tracking/updating type variable <BindSchema1647_guard1648_f> <= <with-read1638_a>
assocTy: (<BindSchema1647schema1650>, *) <=> binding:<{with-read1638_row}>
assocTy: (<BindSchema1647schema1650>, *) <= binding:<{with-read1638_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1643>, string) <=> string
assocTy: (<string1643>, string) <= string
assocTy: (<list1644>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1645>, string) <=> string
assocTy: (<key1645>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1667>, <=1667>) <=> bool
assocTy: (<=1667>, <=1667>) <= bool
assocTy: tracking/updating type variable <=1667> <= bool
assocTy: (<string1669>, string) <=> string
assocTy: (<string1669>, string) <= string
assocTy: (<enforce-unit1670>, bool) <=> bool
assocTy: (<enforce-unit1670>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor1668>, <floor1668>) <=> <=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor1668>, <floor1668>) <= <=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor1668> <= <=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_amount1463>, decimal) <=> <=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1667>, bool) <=> bool
assocTy: (<=1667>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1672_row}> key:string bindings:binding:<{with-read1672_row}> -> <with-read1672_a>
assocTy: (<marmalade.ledger.ledger1673>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1672_row}>
assocTy: (<{with-read1672_row}>, <{with-read1672_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1672_row}>, <{with-read1672_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1672_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1672_row}>)
assocTy: (<key1679>, string) <=> string
assocTy: (<key1679>, string) <= string
assocTy: (<debit1702>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read1672_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read1672_a>
assocTy: (<object1700>, object:*) <=> <with-read1672_a>
assocTy: (<BindSchema1681schema1701>, *) <=> binding:<{with-read1672_row}>
assocTy: (<BindSchema1681schema1701>, *) <= binding:<{with-read1672_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=1685>, <<=1685>) <=> bool
assocTy: (<<=1685>, <<=1685>) <= bool
assocTy: tracking/updating type variable <<=1685> <= bool
assocTy: (<string1686>, string) <=> string
assocTy: (<string1686>, string) <= string
assocTy: (<enforce1684>, <enforce1684>) <=> bool
assocTy: (<enforce1684>, <enforce1684>) <= bool
assocTy: tracking/updating type variable <enforce1684> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=1685_a[integer,decimal,string,time]> y:<<=1685_a[integer,decimal,string,time]> -> bool
assocTy: (<transfer-create_amount1463>, decimal) <=> <<=1685_a[integer,decimal,string,time]>
assocTy: decimal => <<=1685_a[integer,decimal,string,time]>
assocTy: (<BindSchema1681_old-bal1682_aa>, <BindSchema1681_old-bal1682_aa>) <=> <<=1685_a[integer,decimal,string,time]>
assocTy: (<BindSchema1681_old-bal1682_aa>, <BindSchema1681_old-bal1682_aa>) <= <<=1685_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema1681_old-bal1682_aa> <= <<=1685_a[integer,decimal,string,time]>
assocTy: (<<=1685>, bool) <=> bool
assocTy: (<<=1685>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update1690_row}> key:string object:object:~<{update1690_row}> -> string
assocTy: (<marmalade.ledger.ledger1691>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update1690_row}>
assocTy: (<{update1690_row}>, <{update1690_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update1690_row}>, <{update1690_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update1690_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update1690_row}>)
assocTy: (<key1697>, string) <=> string
assocTy: (<key1697>, string) <= string
assocTy: (<object1699>, object:*) <=> object:~<{update1690_row}>
assocTy: (<object1699>, object:*) <= object:~<{update1690_row}>
assocTy: (<update1690>, <update1690>) <=> string
assocTy: (<update1690>, <update1690>) <= string
assocTy: tracking/updating type variable <update1690> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1695>, string) <=> string
assocTy: (<string1695>, string) <= string
assocTy: (<list1696>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1697>, string) <=> string
assocTy: (<key1697>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1677>, string) <=> string
assocTy: (<string1677>, string) <= string
assocTy: (<list1678>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1679>, string) <=> string
assocTy: (<key1679>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>1711>, <>1711>) <=> bool
assocTy: (<>1711>, <>1711>) <= bool
assocTy: tracking/updating type variable <>1711> <= bool
assocTy: (<string1714>, string) <=> string
assocTy: (<string1714>, string) <= string
assocTy: (<enforce1710>, <enforce-valid-account1716_c>) <=> bool
assocTy: (<enforce1710>, <enforce-valid-account1716_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account1716_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>1711_a[integer,decimal,string,time]> y:<>1711_a[integer,decimal,string,time]> -> bool
assocTy: (<length1712>, <length1712>) <=> <>1711_a[integer,decimal,string,time]>
assocTy: (<length1712>, <length1712>) <= <>1711_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length1712> <= <>1711_a[integer,decimal,string,time]>
assocTy: (<integer1713>, integer) <=> <>1711_a[integer,decimal,string,time]>
assocTy: integer => <>1711_a[integer,decimal,string,time]>
assocTy: (<>1711>, bool) <=> bool
assocTy: (<>1711>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length1712_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<transfer-create_receiver1461>, string) <=> <length1712_a[[<l>],string,object:<{o}>]>
assocTy: string => <length1712_a[[<l>],string,object:<{o}>]>
assocTy: (<length1712>, integer) <=> integer
assocTy: (<length1712>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1729>, <=1729>) <=> bool
assocTy: (<=1729>, <=1729>) <= bool
assocTy: tracking/updating type variable <=1729> <= bool
assocTy: (<string1731>, string) <=> string
assocTy: (<string1731>, string) <= string
assocTy: (<enforce-unit1732>, bool) <=> bool
assocTy: (<enforce-unit1732>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor1730>, <floor1730>) <=> <=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor1730>, <floor1730>) <= <=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor1730> <= <=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_amount1463>, decimal) <=> <=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1729_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1729>, bool) <=> bool
assocTy: (<=1729>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1737>, bool) <=> bool
assocTy: (<bool1737>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability1734>, <require-capability1734>) <=> bool
assocTy: (<require-capability1734>, <require-capability1734>) <= bool
assocTy: tracking/updating type variable <require-capability1734> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read1740_row}> key:string defaults:object:~<{with-default-read1740_row}> bindings:binding:~<{with-default-read1740_row}> -> <with-default-read1740_a>
assocTy: (<marmalade.ledger.ledger1741>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read1740_row}>
assocTy: (<{with-default-read1740_row}>, <{with-default-read1740_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read1740_row}>, <{with-default-read1740_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read1740_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read1740_row}>)
assocTy: (<key1747>, string) <=> string
assocTy: (<key1747>, string) <= string
assocTy: (<object1749>, object:*) <=> object:~<{with-default-read1740_row}>
assocTy: (<object1749>, object:*) <= object:~<{with-default-read1740_row}>
assocTy: (<credit1836>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read1740_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read1740_a>
assocTy: (<object1832>, object:*) <=> <with-default-read1740_a>
assocTy: (<BindSchema1751schema1835>, *) <=> binding:~<{with-default-read1740_row}>
assocTy: (<BindSchema1751schema1835>, *) <= binding:~<{with-default-read1740_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1757>, <=1757>) <=> bool
assocTy: (<=1757>, <=1757>) <= bool
assocTy: tracking/updating type variable <=1757> <= bool
assocTy: (<string1758>, string) <=> string
assocTy: (<string1758>, string) <= string
assocTy: (<enforce1756>, <enforce1756>) <=> bool
assocTy: (<enforce1756>, <enforce1756>) <= bool
assocTy: tracking/updating type variable <enforce1756> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1757_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1757_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs1925_guard1928>, guard) <=> <=1757_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=1757_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_receiver-guard1462>, guard) <=> <=1757_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1757>, bool) <=> bool
assocTy: (<=1757>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1761_a> else:<if1761_a> -> <if1761_a>
assocTy: (<=1762>, <=1762>) <=> bool
assocTy: (<=1762>, <=1762>) <= bool
assocTy: tracking/updating type variable <=1762> <= bool
assocTy: (<enforce-reserved1806>, bool) <=> <if1761_a>
assocTy: bool => <if1761_a>
assocTy: (<bool1808>, bool) <=> <if1761_a>
assocTy: (<if1761>, <if1761>) <=> <if1761_a>
assocTy: (<if1761>, <if1761>) <= <if1761_a>
assocTy: tracking/updating type variable <if1761> <= <if1761_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema1751_old-bal1752_ac>, <BindSchema1751_old-bal1752_ac>) <=> <=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema1751_old-bal1752_ac>, <BindSchema1751_old-bal1752_ac>) <= <=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema1751_old-bal1752_ac> <= <=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal1763>, decimal) <=> <=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1762>, bool) <=> bool
assocTy: (<=1762>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1773_a> else:<if1773_a> -> <if1773_a>
assocTy: (<=1774>, <=1774>) <=> bool
assocTy: (<=1774>, <=1774>) <= bool
assocTy: tracking/updating type variable <=1774> <= bool
assocTy: (<take1778>, <take1778>) <=> <if1773_a>
assocTy: (<take1778>, <take1778>) <= <if1773_a>
assocTy: tracking/updating type variable <take1778> <= <if1773_a>
assocTy: (<string1780>, string) <=> <if1773_a>
assocTy: string => <if1773_a>
assocTy: (<check-reserved1781>, string) <=> <if1773_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string1775>, string) <=> <=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take1776>, <take1776>) <=> <=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take1776>, <take1776>) <= <=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take1776> <= <=1774_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1774>, bool) <=> bool
assocTy: (<=1774>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1783_a> else:<if1783_a> -> <if1783_a>
assocTy: (<=1784>, <=1784>) <=> bool
assocTy: (<=1784>, <=1784>) <= bool
assocTy: tracking/updating type variable <=1784> <= bool
assocTy: (<bool1786>, bool) <=> <if1783_a>
assocTy: bool => <if1783_a>
assocTy: (<if1787>, <if1787>) <=> <if1783_a>
assocTy: (<if1787>, <if1787>) <= <if1783_a>
assocTy: tracking/updating type variable <if1787> <= <if1783_a>
assocTy: (<enforce-reserved1806>, bool) <=> <if1783_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1784_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1784_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string1785>, string) <=> <=1784_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=1784_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved1781>, string) <=> <=1784_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1784>, bool) <=> bool
assocTy: (<=1784>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1787_a> else:<if1787_a> -> <if1787_a>
assocTy: (<=1788>, <=1788>) <=> bool
assocTy: (<=1788>, <=1788>) <= bool
assocTy: tracking/updating type variable <=1788> <= bool
assocTy: (<enforce1790>, <enforce1790>) <=> <if1787_a>
assocTy: (<enforce1790>, <enforce1790>) <= <if1787_a>
assocTy: tracking/updating type variable <enforce1790> <= <if1787_a>
assocTy: (<enforce1801>, <enforce1801>) <=> <if1787_a>
assocTy: (<enforce1801>, <enforce1801>) <= <if1787_a>
assocTy: tracking/updating type variable <enforce1801> <= <if1787_a>
assocTy: (<if1787>, bool) <=> <if1787_a>
assocTy: bool => <if1787_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1788_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1788_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string1789>, string) <=> <=1788_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=1788_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved1781>, string) <=> <=1788_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1788>, bool) <=> bool
assocTy: (<=1788>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1791>, <=1791>) <=> bool
assocTy: (<=1791>, <=1791>) <= bool
assocTy: tracking/updating type variable <=1791> <= bool
assocTy: (<string1800>, string) <=> string
assocTy: (<string1800>, string) <= string
assocTy: (<enforce1790>, bool) <=> bool
assocTy: (<enforce1790>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format1792>, <format1792>) <=> <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format1792>, <format1792>) <= <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format1792> <= <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format1795>, <format1795>) <=> <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format1795>, <format1795>) <= <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format1795> <= <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1791>, bool) <=> bool
assocTy: (<=1791>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1793>, string) <=> string
assocTy: (<string1793>, string) <= string
assocTy: (<list1794>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format1792>, <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format1792>, <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=1791_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1796>, string) <=> string
assocTy: (<string1796>, string) <= string
assocTy: (<list1797>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format1795>, string) <=> string
assocTy: (<format1795>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool1802>, bool) <=> bool
assocTy: (<bool1802>, bool) <= bool
assocTy: (<format1803>, <format1803>) <=> string
assocTy: (<format1803>, <format1803>) <= string
assocTy: tracking/updating type variable <format1803> <= string
assocTy: (<enforce1801>, bool) <=> bool
assocTy: (<enforce1801>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1804>, string) <=> string
assocTy: (<string1804>, string) <= string
assocTy: (<list1805>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format1803>, string) <=> string
assocTy: (<format1803>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1811_a> else:<if1811_a> -> <if1811_a>
assocTy: (<if1761>, bool) <=> bool
assocTy: (<if1761>, bool) <= bool
assocTy: (<transfer-create_amount1463>, decimal) <=> <if1811_a>
assocTy: decimal => <if1811_a>
assocTy: (<+1812>, <+1812>) <=> <if1811_a>
assocTy: (<+1812>, <+1812>) <= <if1811_a>
assocTy: tracking/updating type variable <+1812> <= <if1811_a>
assocTy: (<if1811>, <if1811>) <=> <if1811_a>
assocTy: (<if1811>, <if1811>) <= <if1811_a>
assocTy: tracking/updating type variable <if1811> <= <if1811_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write1813_row}> key:string object:object:<{write1813_row}> -> string
assocTy: (<marmalade.ledger.ledger1814>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write1813_row}>
assocTy: (<{write1813_row}>, <{write1813_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write1813_row}>, <{write1813_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write1813_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write1813_row}>)
assocTy: (<key1820>, string) <=> string
assocTy: (<key1820>, string) <= string
assocTy: (<object1822>, object:*) <=> object:<{write1813_row}>
assocTy: (<object1822>, object:*) <= object:<{write1813_row}>
assocTy: (<write1813>, <write1813>) <=> string
assocTy: (<write1813>, <write1813>) <= string
assocTy: tracking/updating type variable <write1813> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1818>, string) <=> string
assocTy: (<string1818>, string) <= string
assocTy: (<list1819>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1820>, string) <=> string
assocTy: (<key1820>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1823_a> else:<if1823_a> -> <if1823_a>
assocTy: (<if1761>, bool) <=> bool
assocTy: (<if1761>, bool) <= bool
assocTy: (<emit-event1824>, <emit-event1824>) <=> <if1823_a>
assocTy: (<emit-event1824>, <emit-event1824>) <= <if1823_a>
assocTy: tracking/updating type variable <emit-event1824> <= <if1823_a>
assocTy: (<bool1831>, bool) <=> <if1823_a>
assocTy: bool => <if1823_a>
assocTy: (<if1823>, <if1823>) <=> <if1823_a>
assocTy: (<if1823>, <if1823>) <= <if1823_a>
assocTy: tracking/updating type variable <if1823> <= <if1823_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1828>, bool) <=> bool
assocTy: (<bool1828>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event1824>, bool) <=> bool
assocTy: (<emit-event1824>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if1833_a> else:<if1833_a> -> <if1833_a>
assocTy: (<if1761>, bool) <=> bool
assocTy: (<if1761>, bool) <= bool
assocTy: (<decimal1834>, decimal) <=> <if1833_a>
assocTy: decimal => <if1833_a>
assocTy: (<BindSchema1751_old-bal1752_ac>, decimal) <=> <if1833_a>
assocTy: (<if1833>, <if1833>) <=> <if1833_a>
assocTy: (<if1833>, <if1833>) <= <if1833_a>
assocTy: tracking/updating type variable <if1833> <= <if1833_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1745>, string) <=> string
assocTy: (<string1745>, string) <= string
assocTy: (<list1746>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1747>, string) <=> string
assocTy: (<key1747>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1843>, bool) <=> bool
assocTy: (<bool1843>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event1838>, bool) <=> bool
assocTy: (<emit-event1838>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=1532>, <=1532>) <=> bool
assocTy: (<=1532>, <=1532>) <= bool
assocTy: tracking/updating type variable <=1532> <= bool
assocTy: (<string1534>, string) <=> string
assocTy: (<string1534>, string) <= string
assocTy: (<enforce-unit1535>, bool) <=> bool
assocTy: (<enforce-unit1535>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor1533>, <floor1533>) <=> <=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor1533>, <floor1533>) <= <=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor1533> <= <=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer-create_amount1463>, decimal) <=> <=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=1532_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=1532>, bool) <=> bool
assocTy: (<=1532>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>1538>, <>1538>) <=> bool
assocTy: (<>1538>, <>1538>) <= bool
assocTy: tracking/updating type variable <>1538> <= bool
assocTy: (<string1540>, string) <=> string
assocTy: (<string1540>, string) <= string
assocTy: (<enforce1537>, <enforce1537>) <=> bool
assocTy: (<enforce1537>, <enforce1537>) <= bool
assocTy: tracking/updating type variable <enforce1537> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>1538_a[integer,decimal,string,time]> y:<>1538_a[integer,decimal,string,time]> -> bool
assocTy: (<transfer-create_amount1463>, decimal) <=> <>1538_a[integer,decimal,string,time]>
assocTy: decimal => <>1538_a[integer,decimal,string,time]>
assocTy: (<decimal1539>, decimal) <=> <>1538_a[integer,decimal,string,time]>
assocTy: (<>1538>, bool) <=> bool
assocTy: (<>1538>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard1544>, <DEBIT1563_e>) <=> bool
assocTy: (<enforce-guard1544>, <DEBIT1563_e>) <= bool
assocTy: tracking/updating type variable <DEBIT1563_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability1541>, <compose-capability1541>) <=> bool
assocTy: (<compose-capability1541>, <compose-capability1541>) <= bool
assocTy: tracking/updating type variable <compose-capability1541> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1547_row}> key:string bindings:binding:<{with-read1547_row}> -> <with-read1547_a>
assocTy: (<marmalade.ledger.ledger1548>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1547_row}>
assocTy: (<{with-read1547_row}>, <{with-read1547_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1547_row}>, <{with-read1547_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1547_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1547_row}>)
assocTy: (<key1554>, string) <=> string
assocTy: (<key1554>, string) <= string
assocTy: (<account-guard1560>, guard) <=> <with-read1547_a>
assocTy: guard => <with-read1547_a>
assocTy: (<BindSchema1556_guard1557_f>, <BindSchema1556_guard1557_f>) <=> <with-read1547_a>
assocTy: (<BindSchema1556_guard1557_f>, <BindSchema1556_guard1557_f>) <= <with-read1547_a>
assocTy: tracking/updating type variable <BindSchema1556_guard1557_f> <= <with-read1547_a>
assocTy: (<BindSchema1556schema1559>, *) <=> binding:<{with-read1547_row}>
assocTy: (<BindSchema1556schema1559>, *) <= binding:<{with-read1547_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1552>, string) <=> string
assocTy: (<string1552>, string) <= string
assocTy: (<list1553>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1554>, string) <=> string
assocTy: (<key1554>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool1567>, bool) <=> bool
assocTy: (<bool1567>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER1570>, bool) <=> bool
assocTy: (<TRANSFER1570>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list1572::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema1595schema1624::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema1595_policy1596>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema1595_policy1596>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs1870_token1871>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs1870_token1871>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema1618schema1621::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1618_guard1619_f>, guard) <=> guard
assocTy: (<BindSchema1618_guard1619_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1615::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1618schema1621::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1618_guard1619_f>, guard) <=> guard
assocTy: (<BindSchema1618_guard1619_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1615::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1581schema1592::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema1581_manifest1588_m>, <BindSchema1581_manifest1588_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema1581_manifest1588_m>, <BindSchema1581_manifest1588_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema1581_manifest1588_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema1581_policy1582>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema1581_policy1582>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema1581_precision1586_l>, <BindSchema1581_precision1586_l>) <=> integer
assocTy: (<BindSchema1581_precision1586_l>, <BindSchema1581_precision1586_l>) <= integer
assocTy: tracking/updating type variable <BindSchema1581_precision1586_l> <= integer
assocTy: (<BindSchema1581_supply1584_k>, <BindSchema1581_supply1584_k>) <=> decimal
assocTy: (<BindSchema1581_supply1584_k>, <BindSchema1581_supply1584_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema1581_supply1584_k> <= decimal
applySchemas [binding]: (BindSchema1647schema1650::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1647_guard1648_f>, guard) <=> guard
assocTy: (<BindSchema1647_guard1648_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1644::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1681schema1701::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1681_old-bal1682_aa>, decimal) <=> decimal
assocTy: (<BindSchema1681_old-bal1682_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list1696::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object1699::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-1689>, <-1689>) <=> decimal
assocTy: (<-1689>, <-1689>) <= decimal
assocTy: tracking/updating type variable <-1689> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object1699>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object1699>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list1678::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1751schema1835::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1751_old-bal1752_ac>, decimal) <=> decimal
assocTy: (<BindSchema1751_old-bal1752_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs1925_guard1928>, guard) <=> guard
assocTy: (<inlinedCallArgs1925_guard1928>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1794::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list1797::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list1805::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list1819::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object1822::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<transfer-create_receiver1461>, string) <=> string
assocTy: (<transfer-create_receiver1461>, string) <= string
assocTy: (<if1811>, decimal) <=> decimal
assocTy: (<if1811>, decimal) <= decimal
assocTy: (<inlinedCallArgs1925_guard1928>, guard) <=> guard
assocTy: (<inlinedCallArgs1925_guard1928>, guard) <= guard
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
Skipping TC on specified heterogenous list for node: list1746::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object1749::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal1750>, decimal) <=> decimal
assocTy: (<decimal1750>, decimal) <= decimal
assocTy: (<transfer-create_receiver-guard1462>, guard) <=> guard
assocTy: (<transfer-create_receiver-guard1462>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object1749>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object1749>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
applySchemas [binding]: (BindSchema1556schema1559::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1556_guard1557_f>, guard) <=> guard
assocTy: (<BindSchema1556_guard1557_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1553::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard1544::<enforce-guard1544>, tyVar=<enforce-guard1544>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard1561::<account-guard1561>, tyVar=<account-guard1560>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard1544, <enforce-guard1544>, bool)]), (guard, [(account-guard1561, <account-guard1560>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard1544, <enforce-guard1544>)])), (guard, (guard, [(account-guard1561, <account-guard1560>)]))]
Adjusting type for solution: ((enforce-guard1544, <enforce-guard1544>), bool, bool)
assocTy: (<enforce-guard1544>, bool) <=> bool
assocTy: (<enforce-guard1544>, bool) <= bool
assocTy: (<enforce-guard1544>, bool) <=> bool
assocTy: (<enforce-guard1544>, bool) <= bool
Adjusting type for solution: ((account-guard1561, <account-guard1560>), guard, guard)
assocTy: (<account-guard1560>, guard) <=> guard
assocTy: (<account-guard1560>, guard) <= guard
assocTy: (<account-guard1560>, guard) <=> guard
assocTy: (<account-guard1560>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1533::<floor1533>, tyVar=<floor1533>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1944_amount1946::decimal, tyVar=<transfer-create_amount1463>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet1522_p1523::<BindLet1522_p1523_ai>, tyVar=<precision1529>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet1522_p1523, <precision1529>, integer)]), (decimal, [(floor1533, <floor1533>, decimal), (inlinedCallArgs1944_amount1946, <transfer-create_amount1463>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet1522_p1523, <precision1529>)])), (decimal, (decimal, [(floor1533, <floor1533>), (inlinedCallArgs1944_amount1946, <transfer-create_amount1463>)]))]
Adjusting type for solution: ((BindLet1522_p1523, <precision1529>), integer, integer)
assocTy: (<precision1529>, integer) <=> integer
assocTy: (<precision1529>, integer) <= integer
assocTy: (<precision1529>, integer) <=> integer
assocTy: (<precision1529>, integer) <= integer
Adjusting type for solution: ((floor1533, <floor1533>), decimal, decimal)
assocTy: (<floor1533>, decimal) <=> decimal
assocTy: (<floor1533>, decimal) <= decimal
assocTy: (<floor1533>, decimal) <=> decimal
assocTy: (<floor1533>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1944_amount1946, <transfer-create_amount1463>), decimal, decimal)
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1527_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1527_row}>, roleTy=<read1527>
tryFunType: cand: table:table:<{read1527_row}> key:string -> object:<{read1527_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1527_row}>, AST=read1527::<read1527>, tyVar=<read1527>, resolvedTy=<read1527>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1527_row}>, AST=marmalade.ledger.tokens1528::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1528>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1942_id1943::string, tyVar=<transfer-create_id1459>, resolvedTy=string})]
tryFunType: trying table:table:<{read1527_row}> key:string -> object:<{read1527_row}> with [(string, [(inlinedCallArgs1942_id1943, <transfer-create_id1459>, string)]), (table:<{read1527_row}>, [(marmalade.ledger.tokens1528, <marmalade.ledger.tokens1528>, table:{marmalade.ledger.token-schema})]), (object:<{read1527_row}>, [(read1527, <read1527>, <read1527>)])]
Solved overload with table:table:<{read1527_row}> key:string -> object:<{read1527_row}>: [(string, (string, [(inlinedCallArgs1942_id1943, <transfer-create_id1459>)])), (table:<{read1527_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1528, <marmalade.ledger.tokens1528>)])), (object:<{read1527_row}>, (object:<{read1527_row}>, [(read1527, <read1527>)]))]
Adjusting type for solution: ((inlinedCallArgs1942_id1943, <transfer-create_id1459>), string, string)
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1528, <marmalade.ledger.tokens1528>), table:<{read1527_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1528>, table:{marmalade.ledger.token-schema}) <=> table:<{read1527_row}>
assocTy: (<{read1527_row}>, <{read1527_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1527_row}>, <{read1527_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1527_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1527_row}>)
assocTy: (<marmalade.ledger.tokens1528>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1528>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1527, <read1527>), object:<{read1527_row}>, object:<{read1527_row}>)
assocTy: (<read1527>, <read1527>) <=> object:<{read1527_row}>
assocTy: (<read1527>, <read1527>) <= object:<{read1527_row}>
assocTy: tracking/updating type variable <read1527> <= object:<{read1527_row}>
assocTy: (<read1527>, object:{marmalade.ledger.token-schema}) <=> object:<{read1527_row}>
assocTy: (<{read1527_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1527_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1527_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1525_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1525_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1525_l>] -> <at1525_a>: roles=[(RetVar, RoleTys { candArgTy=<at1525_a>, AST=at1525::<at1525>, tyVar=<precision1529>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1525_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1525_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1525_o}> -> <at1525_a>, roles=[(RetVar, RoleTys { candArgTy=<at1525_a>, AST=at1525::<at1525>, tyVar=<precision1529>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1526::string, tyVar=<string1526>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1525_o}>, AST=read1527::<read1527>, tyVar=<read1527>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1525_o}> -> <at1525_a> with [(<at1525_a>, [(at1525, <precision1529>, integer)]), (string, [(string1526, <string1526>, string)]), (object:<{at1525_o}>, [(read1527, <read1527>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1525_o}> -> <at1525_a>: [(<at1525_a>, (integer, [(at1525, <precision1529>)])), (string, (string, [(string1526, <string1526>)])), (object:<{at1525_o}>, (object:{marmalade.ledger.token-schema}, [(read1527, <read1527>)]))]
Adjusting type for solution: ((at1525, <precision1529>), <at1525_a>, integer)
assocTy: (<precision1529>, integer) <=> <at1525_a>
assocTy: integer => <at1525_a>
assocTy: (<precision1529>, integer) <=> integer
assocTy: (<precision1529>, integer) <= integer
Adjusting type for solution: ((string1526, <string1526>), string, string)
assocTy: (<string1526>, string) <=> string
assocTy: (<string1526>, string) <= string
assocTy: (<string1526>, string) <=> string
assocTy: (<string1526>, string) <= string
Adjusting type for solution: ((read1527, <read1527>), object:<{at1525_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1527>, object:{marmalade.ledger.token-schema}) <=> object:<{at1525_o}>
assocTy: (<{at1525_o}>, <{at1525_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1525_o}>, <{at1525_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1525_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1525_o}>)
assocTy: (<read1527>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1527>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+1812_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+1812_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+1812_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+1812_a[integer,decimal]> y:<+1812_a[integer,decimal]> -> <+1812_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+1812_a[integer,decimal]>, AST=+1812::<+1812>, tyVar=<+1812>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+1812_a[integer,decimal]>, AST=BindSchema1751_old-bal1752::<BindSchema1751_old-bal1752_ac>, tyVar=<BindSchema1751_old-bal1752_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+1812_a[integer,decimal]>, AST=inlinedCallArgs1932_amount1936::decimal, tyVar=<transfer-create_amount1463>, resolvedTy=decimal})]
tryFunType: trying x:<+1812_a[integer,decimal]> y:<+1812_a[integer,decimal]> -> <+1812_a[integer,decimal]> with [(<+1812_a[integer,decimal]>, [(+1812, <+1812>, decimal), (inlinedCallArgs1932_amount1936, <transfer-create_amount1463>, decimal), (BindSchema1751_old-bal1752, <BindSchema1751_old-bal1752_ac>, decimal)])]
Solved overload with x:<+1812_a[integer,decimal]> y:<+1812_a[integer,decimal]> -> <+1812_a[integer,decimal]>: [(<+1812_a[integer,decimal]>, (decimal, [(+1812, <+1812>), (inlinedCallArgs1932_amount1936, <transfer-create_amount1463>), (BindSchema1751_old-bal1752, <BindSchema1751_old-bal1752_ac>)]))]
Adjusting type for solution: ((+1812, <+1812>), <+1812_a[integer,decimal]>, decimal)
assocTy: (<+1812>, decimal) <=> <+1812_a[integer,decimal]>
assocTy: decimal => <+1812_a[integer,decimal]>
assocTy: (<+1812>, decimal) <=> decimal
assocTy: (<+1812>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1932_amount1936, <transfer-create_amount1463>), <+1812_a[integer,decimal]>, decimal)
assocTy: (<transfer-create_amount1463>, decimal) <=> <+1812_a[integer,decimal]>
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
Adjusting type for solution: ((BindSchema1751_old-bal1752, <BindSchema1751_old-bal1752_ac>), <+1812_a[integer,decimal]>, decimal)
assocTy: (<BindSchema1751_old-bal1752_ac>, decimal) <=> <+1812_a[integer,decimal]>
assocTy: (<BindSchema1751_old-bal1752_ac>, decimal) <=> decimal
assocTy: (<BindSchema1751_old-bal1752_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop1798_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop1798_a[[<l>],string]>, roleTy=<drop1798>
tryFunType: cand: count:integer list:<drop1798_a[[<l>],string]> -> <drop1798_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop1798_a[[<l>],string]>, AST=drop1798::<drop1798>, tyVar=<drop1798>, resolvedTy=<drop1798>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1799::integer, tyVar=<integer1799>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop1798_a[[<l>],string]>, AST=inlinedCallArgs1919_account1920::string, tyVar=<transfer-create_receiver1461>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop1798_a[[<l>],string]> -> <drop1798_a[[<l>],string]> with [(<drop1798_a[[<l>],string]>, [(drop1798, <drop1798>, <drop1798>), (inlinedCallArgs1919_account1920, <transfer-create_receiver1461>, string)]), (integer, [(integer1799, <integer1799>, integer)])]
Solved overload with count:integer list:<drop1798_a[[<l>],string]> -> <drop1798_a[[<l>],string]>: [(<drop1798_a[[<l>],string]>, (string, [(drop1798, <drop1798>), (inlinedCallArgs1919_account1920, <transfer-create_receiver1461>)])), (integer, (integer, [(integer1799, <integer1799>)]))]
Adjusting type for solution: ((drop1798, <drop1798>), <drop1798_a[[<l>],string]>, string)
assocTy: (<drop1798>, <drop1798>) <=> <drop1798_a[[<l>],string]>
assocTy: (<drop1798>, <drop1798>) <= <drop1798_a[[<l>],string]>
assocTy: tracking/updating type variable <drop1798> <= <drop1798_a[[<l>],string]>
assocTy: (<drop1798>, <drop1798_a[[<l>],string]>) <=> string
assocTy: (<drop1798>, <drop1798_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop1798_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs1919_account1920, <transfer-create_receiver1461>), <drop1798_a[[<l>],string]>, string)
assocTy: (<transfer-create_receiver1461>, string) <=> <drop1798_a[[<l>],string]>
assocTy: (<transfer-create_receiver1461>, string) <=> string
assocTy: (<transfer-create_receiver1461>, string) <= string
Adjusting type for solution: ((integer1799, <integer1799>), integer, integer)
assocTy: (<integer1799>, integer) <=> integer
assocTy: (<integer1799>, integer) <= integer
assocTy: (<integer1799>, integer) <=> integer
assocTy: (<integer1799>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take1778_a[[<l>],string]>, roleTy=<take1771>
tryFunType: unify role: role=RetVar, candTy=<take1778_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take1778_a[[<l>],string]> -> <take1778_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take1778_a[[<l>],string]>, AST=take1778::<take1778>, tyVar=<take1778>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1779::integer, tyVar=<integer1779>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take1778_a[[<l>],string]>, AST=BindLet1769_pfx1770::<BindLet1769_pfx1770_f>, tyVar=<take1771>, resolvedTy=<take1771>})]
tryFunType: trying count:integer list:<take1778_a[[<l>],string]> -> <take1778_a[[<l>],string]> with [(<take1778_a[[<l>],string]>, [(take1778, <take1778>, string), (BindLet1769_pfx1770, <take1771>, <take1771>)]), (integer, [(integer1779, <integer1779>, integer)])]
Solved overload with count:integer list:<take1778_a[[<l>],string]> -> <take1778_a[[<l>],string]>: [(<take1778_a[[<l>],string]>, (string, [(take1778, <take1778>), (BindLet1769_pfx1770, <take1771>)])), (integer, (integer, [(integer1779, <integer1779>)]))]
Adjusting type for solution: ((take1778, <take1778>), <take1778_a[[<l>],string]>, string)
assocTy: (<take1778>, string) <=> <take1778_a[[<l>],string]>
assocTy: string => <take1778_a[[<l>],string]>
assocTy: (<take1778>, string) <=> string
assocTy: (<take1778>, string) <= string
Adjusting type for solution: ((BindLet1769_pfx1770, <take1771>), <take1778_a[[<l>],string]>, string)
assocTy: (<take1771>, <take1771>) <=> <take1778_a[[<l>],string]>
assocTy: (<take1771>, <take1771>) <= <take1778_a[[<l>],string]>
assocTy: tracking/updating type variable <take1771> <= <take1778_a[[<l>],string]>
assocTy: (<take1771>, string) <=> string
assocTy: (<take1771>, string) <= string
Adjusting type for solution: ((integer1779, <integer1779>), integer, integer)
assocTy: (<integer1779>, integer) <=> integer
assocTy: (<integer1779>, integer) <= integer
assocTy: (<integer1779>, integer) <=> integer
assocTy: (<integer1779>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take1776_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take1776_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take1776_a[[<l>],string]> -> <take1776_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take1776_a[[<l>],string]>, AST=take1776::<take1776>, tyVar=<take1776>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1777::integer, tyVar=<integer1777>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take1776_a[[<l>],string]>, AST=BindLet1769_pfx1770::<BindLet1769_pfx1770_f>, tyVar=<take1771>, resolvedTy=string})]
tryFunType: trying count:integer list:<take1776_a[[<l>],string]> -> <take1776_a[[<l>],string]> with [(<take1776_a[[<l>],string]>, [(take1776, <take1776>, string), (BindLet1769_pfx1770, <take1771>, string)]), (integer, [(integer1777, <integer1777>, integer)])]
Solved overload with count:integer list:<take1776_a[[<l>],string]> -> <take1776_a[[<l>],string]>: [(<take1776_a[[<l>],string]>, (string, [(take1776, <take1776>), (BindLet1769_pfx1770, <take1771>)])), (integer, (integer, [(integer1777, <integer1777>)]))]
Adjusting type for solution: ((take1776, <take1776>), <take1776_a[[<l>],string]>, string)
assocTy: (<take1776>, string) <=> <take1776_a[[<l>],string]>
assocTy: string => <take1776_a[[<l>],string]>
assocTy: (<take1776>, string) <=> string
assocTy: (<take1776>, string) <= string
Adjusting type for solution: ((BindLet1769_pfx1770, <take1771>), <take1776_a[[<l>],string]>, string)
assocTy: (<take1771>, string) <=> <take1776_a[[<l>],string]>
assocTy: (<take1771>, string) <=> string
assocTy: (<take1771>, string) <= string
Adjusting type for solution: ((integer1777, <integer1777>), integer, integer)
assocTy: (<integer1777>, integer) <=> integer
assocTy: (<integer1777>, integer) <= integer
assocTy: (<integer1777>, integer) <=> integer
assocTy: (<integer1777>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take1771_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take1771_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take1771_a[[<l>],string]> -> <take1771_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take1771_a[[<l>],string]>, AST=take1771::<take1771>, tyVar=<take1771>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer1772::integer, tyVar=<integer1772>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take1771_a[[<l>],string]>, AST=inlinedCallArgs1917_account1918::string, tyVar=<transfer-create_receiver1461>, resolvedTy=string})]
tryFunType: trying count:integer list:<take1771_a[[<l>],string]> -> <take1771_a[[<l>],string]> with [(<take1771_a[[<l>],string]>, [(take1771, <take1771>, string), (inlinedCallArgs1917_account1918, <transfer-create_receiver1461>, string)]), (integer, [(integer1772, <integer1772>, integer)])]
Solved overload with count:integer list:<take1771_a[[<l>],string]> -> <take1771_a[[<l>],string]>: [(<take1771_a[[<l>],string]>, (string, [(take1771, <take1771>), (inlinedCallArgs1917_account1918, <transfer-create_receiver1461>)])), (integer, (integer, [(integer1772, <integer1772>)]))]
Adjusting type for solution: ((take1771, <take1771>), <take1771_a[[<l>],string]>, string)
assocTy: (<take1771>, string) <=> <take1771_a[[<l>],string]>
assocTy: string => <take1771_a[[<l>],string]>
assocTy: (<take1771>, string) <=> string
assocTy: (<take1771>, string) <= string
Adjusting type for solution: ((inlinedCallArgs1917_account1918, <transfer-create_receiver1461>), <take1771_a[[<l>],string]>, string)
assocTy: (<transfer-create_receiver1461>, string) <=> <take1771_a[[<l>],string]>
assocTy: (<transfer-create_receiver1461>, string) <=> string
assocTy: (<transfer-create_receiver1461>, string) <= string
Adjusting type for solution: ((integer1772, <integer1772>), integer, integer)
assocTy: (<integer1772>, integer) <=> integer
assocTy: (<integer1772>, integer) <= integer
assocTy: (<integer1772>, integer) <=> integer
assocTy: (<integer1772>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1730::<floor1730>, tyVar=<floor1730>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1911_amount1913::decimal, tyVar=<transfer-create_amount1463>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet1719_p1720::<BindLet1719_p1720_ai>, tyVar=<precision1726>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet1719_p1720, <precision1726>, integer)]), (decimal, [(floor1730, <floor1730>, decimal), (inlinedCallArgs1911_amount1913, <transfer-create_amount1463>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet1719_p1720, <precision1726>)])), (decimal, (decimal, [(floor1730, <floor1730>), (inlinedCallArgs1911_amount1913, <transfer-create_amount1463>)]))]
Adjusting type for solution: ((BindLet1719_p1720, <precision1726>), integer, integer)
assocTy: (<precision1726>, integer) <=> integer
assocTy: (<precision1726>, integer) <= integer
assocTy: (<precision1726>, integer) <=> integer
assocTy: (<precision1726>, integer) <= integer
Adjusting type for solution: ((floor1730, <floor1730>), decimal, decimal)
assocTy: (<floor1730>, decimal) <=> decimal
assocTy: (<floor1730>, decimal) <= decimal
assocTy: (<floor1730>, decimal) <=> decimal
assocTy: (<floor1730>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1911_amount1913, <transfer-create_amount1463>), decimal, decimal)
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1724_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1724_row}>, roleTy=<read1724>
tryFunType: cand: table:table:<{read1724_row}> key:string -> object:<{read1724_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1724_row}>, AST=read1724::<read1724>, tyVar=<read1724>, resolvedTy=<read1724>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1724_row}>, AST=marmalade.ledger.tokens1725::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1725>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1909_id1910::string, tyVar=<transfer-create_id1459>, resolvedTy=string})]
tryFunType: trying table:table:<{read1724_row}> key:string -> object:<{read1724_row}> with [(string, [(inlinedCallArgs1909_id1910, <transfer-create_id1459>, string)]), (table:<{read1724_row}>, [(marmalade.ledger.tokens1725, <marmalade.ledger.tokens1725>, table:{marmalade.ledger.token-schema})]), (object:<{read1724_row}>, [(read1724, <read1724>, <read1724>)])]
Solved overload with table:table:<{read1724_row}> key:string -> object:<{read1724_row}>: [(string, (string, [(inlinedCallArgs1909_id1910, <transfer-create_id1459>)])), (table:<{read1724_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1725, <marmalade.ledger.tokens1725>)])), (object:<{read1724_row}>, (object:<{read1724_row}>, [(read1724, <read1724>)]))]
Adjusting type for solution: ((inlinedCallArgs1909_id1910, <transfer-create_id1459>), string, string)
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1725, <marmalade.ledger.tokens1725>), table:<{read1724_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1725>, table:{marmalade.ledger.token-schema}) <=> table:<{read1724_row}>
assocTy: (<{read1724_row}>, <{read1724_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1724_row}>, <{read1724_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1724_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1724_row}>)
assocTy: (<marmalade.ledger.tokens1725>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1725>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1724, <read1724>), object:<{read1724_row}>, object:<{read1724_row}>)
assocTy: (<read1724>, <read1724>) <=> object:<{read1724_row}>
assocTy: (<read1724>, <read1724>) <= object:<{read1724_row}>
assocTy: tracking/updating type variable <read1724> <= object:<{read1724_row}>
assocTy: (<read1724>, object:{marmalade.ledger.token-schema}) <=> object:<{read1724_row}>
assocTy: (<{read1724_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1724_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1724_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1722_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1722_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1722_l>] -> <at1722_a>: roles=[(RetVar, RoleTys { candArgTy=<at1722_a>, AST=at1722::<at1722>, tyVar=<precision1726>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1722_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1722_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1722_o}> -> <at1722_a>, roles=[(RetVar, RoleTys { candArgTy=<at1722_a>, AST=at1722::<at1722>, tyVar=<precision1726>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1723::string, tyVar=<string1723>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1722_o}>, AST=read1724::<read1724>, tyVar=<read1724>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1722_o}> -> <at1722_a> with [(<at1722_a>, [(at1722, <precision1726>, integer)]), (string, [(string1723, <string1723>, string)]), (object:<{at1722_o}>, [(read1724, <read1724>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1722_o}> -> <at1722_a>: [(<at1722_a>, (integer, [(at1722, <precision1726>)])), (string, (string, [(string1723, <string1723>)])), (object:<{at1722_o}>, (object:{marmalade.ledger.token-schema}, [(read1724, <read1724>)]))]
Adjusting type for solution: ((at1722, <precision1726>), <at1722_a>, integer)
assocTy: (<precision1726>, integer) <=> <at1722_a>
assocTy: integer => <at1722_a>
assocTy: (<precision1726>, integer) <=> integer
assocTy: (<precision1726>, integer) <= integer
Adjusting type for solution: ((string1723, <string1723>), string, string)
assocTy: (<string1723>, string) <=> string
assocTy: (<string1723>, string) <= string
assocTy: (<string1723>, string) <=> string
assocTy: (<string1723>, string) <= string
Adjusting type for solution: ((read1724, <read1724>), object:<{at1722_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1724>, object:{marmalade.ledger.token-schema}) <=> object:<{at1722_o}>
assocTy: (<{at1722_o}>, <{at1722_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1722_o}>, <{at1722_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1722_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1722_o}>)
assocTy: (<read1724>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1724>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-1689_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-1689_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-1689_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-1689_a[integer,decimal]> y:<-1689_a[integer,decimal]> -> <-1689_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-1689_a[integer,decimal]>, AST=-1689::<-1689>, tyVar=<-1689>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-1689_a[integer,decimal]>, AST=BindSchema1681_old-bal1682::<BindSchema1681_old-bal1682_aa>, tyVar=<BindSchema1681_old-bal1682_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-1689_a[integer,decimal]>, AST=inlinedCallArgs1903_amount1906::decimal, tyVar=<transfer-create_amount1463>, resolvedTy=decimal})]
tryFunType: trying x:<-1689_a[integer,decimal]> y:<-1689_a[integer,decimal]> -> <-1689_a[integer,decimal]> with [(<-1689_a[integer,decimal]>, [(-1689, <-1689>, decimal), (inlinedCallArgs1903_amount1906, <transfer-create_amount1463>, decimal), (BindSchema1681_old-bal1682, <BindSchema1681_old-bal1682_aa>, decimal)])]
Solved overload with x:<-1689_a[integer,decimal]> y:<-1689_a[integer,decimal]> -> <-1689_a[integer,decimal]>: [(<-1689_a[integer,decimal]>, (decimal, [(-1689, <-1689>), (inlinedCallArgs1903_amount1906, <transfer-create_amount1463>), (BindSchema1681_old-bal1682, <BindSchema1681_old-bal1682_aa>)]))]
Adjusting type for solution: ((-1689, <-1689>), <-1689_a[integer,decimal]>, decimal)
assocTy: (<-1689>, decimal) <=> <-1689_a[integer,decimal]>
assocTy: decimal => <-1689_a[integer,decimal]>
assocTy: (<-1689>, decimal) <=> decimal
assocTy: (<-1689>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1903_amount1906, <transfer-create_amount1463>), <-1689_a[integer,decimal]>, decimal)
assocTy: (<transfer-create_amount1463>, decimal) <=> <-1689_a[integer,decimal]>
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
Adjusting type for solution: ((BindSchema1681_old-bal1682, <BindSchema1681_old-bal1682_aa>), <-1689_a[integer,decimal]>, decimal)
assocTy: (<BindSchema1681_old-bal1682_aa>, decimal) <=> <-1689_a[integer,decimal]>
assocTy: (<BindSchema1681_old-bal1682_aa>, decimal) <=> decimal
assocTy: (<BindSchema1681_old-bal1682_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1668::<floor1668>, tyVar=<floor1668>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1894_amount1896::decimal, tyVar=<transfer-create_amount1463>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet1657_p1658::<BindLet1657_p1658_ai>, tyVar=<precision1664>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet1657_p1658, <precision1664>, integer)]), (decimal, [(floor1668, <floor1668>, decimal), (inlinedCallArgs1894_amount1896, <transfer-create_amount1463>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet1657_p1658, <precision1664>)])), (decimal, (decimal, [(floor1668, <floor1668>), (inlinedCallArgs1894_amount1896, <transfer-create_amount1463>)]))]
Adjusting type for solution: ((BindLet1657_p1658, <precision1664>), integer, integer)
assocTy: (<precision1664>, integer) <=> integer
assocTy: (<precision1664>, integer) <= integer
assocTy: (<precision1664>, integer) <=> integer
assocTy: (<precision1664>, integer) <= integer
Adjusting type for solution: ((floor1668, <floor1668>), decimal, decimal)
assocTy: (<floor1668>, decimal) <=> decimal
assocTy: (<floor1668>, decimal) <= decimal
assocTy: (<floor1668>, decimal) <=> decimal
assocTy: (<floor1668>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1894_amount1896, <transfer-create_amount1463>), decimal, decimal)
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1662_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1662_row}>, roleTy=<read1662>
tryFunType: cand: table:table:<{read1662_row}> key:string -> object:<{read1662_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1662_row}>, AST=read1662::<read1662>, tyVar=<read1662>, resolvedTy=<read1662>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1662_row}>, AST=marmalade.ledger.tokens1663::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1663>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1892_id1893::string, tyVar=<transfer-create_id1459>, resolvedTy=string})]
tryFunType: trying table:table:<{read1662_row}> key:string -> object:<{read1662_row}> with [(string, [(inlinedCallArgs1892_id1893, <transfer-create_id1459>, string)]), (table:<{read1662_row}>, [(marmalade.ledger.tokens1663, <marmalade.ledger.tokens1663>, table:{marmalade.ledger.token-schema})]), (object:<{read1662_row}>, [(read1662, <read1662>, <read1662>)])]
Solved overload with table:table:<{read1662_row}> key:string -> object:<{read1662_row}>: [(string, (string, [(inlinedCallArgs1892_id1893, <transfer-create_id1459>)])), (table:<{read1662_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1663, <marmalade.ledger.tokens1663>)])), (object:<{read1662_row}>, (object:<{read1662_row}>, [(read1662, <read1662>)]))]
Adjusting type for solution: ((inlinedCallArgs1892_id1893, <transfer-create_id1459>), string, string)
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1663, <marmalade.ledger.tokens1663>), table:<{read1662_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1663>, table:{marmalade.ledger.token-schema}) <=> table:<{read1662_row}>
assocTy: (<{read1662_row}>, <{read1662_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1662_row}>, <{read1662_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1662_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1662_row}>)
assocTy: (<marmalade.ledger.tokens1663>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1663>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1662, <read1662>), object:<{read1662_row}>, object:<{read1662_row}>)
assocTy: (<read1662>, <read1662>) <=> object:<{read1662_row}>
assocTy: (<read1662>, <read1662>) <= object:<{read1662_row}>
assocTy: tracking/updating type variable <read1662> <= object:<{read1662_row}>
assocTy: (<read1662>, object:{marmalade.ledger.token-schema}) <=> object:<{read1662_row}>
assocTy: (<{read1662_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1662_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1662_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1660_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1660_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1660_l>] -> <at1660_a>: roles=[(RetVar, RoleTys { candArgTy=<at1660_a>, AST=at1660::<at1660>, tyVar=<precision1664>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1660_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1660_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1660_o}> -> <at1660_a>, roles=[(RetVar, RoleTys { candArgTy=<at1660_a>, AST=at1660::<at1660>, tyVar=<precision1664>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1661::string, tyVar=<string1661>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1660_o}>, AST=read1662::<read1662>, tyVar=<read1662>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1660_o}> -> <at1660_a> with [(<at1660_a>, [(at1660, <precision1664>, integer)]), (string, [(string1661, <string1661>, string)]), (object:<{at1660_o}>, [(read1662, <read1662>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1660_o}> -> <at1660_a>: [(<at1660_a>, (integer, [(at1660, <precision1664>)])), (string, (string, [(string1661, <string1661>)])), (object:<{at1660_o}>, (object:{marmalade.ledger.token-schema}, [(read1662, <read1662>)]))]
Adjusting type for solution: ((at1660, <precision1664>), <at1660_a>, integer)
assocTy: (<precision1664>, integer) <=> <at1660_a>
assocTy: integer => <at1660_a>
assocTy: (<precision1664>, integer) <=> integer
assocTy: (<precision1664>, integer) <= integer
Adjusting type for solution: ((string1661, <string1661>), string, string)
assocTy: (<string1661>, string) <=> string
assocTy: (<string1661>, string) <= string
assocTy: (<string1661>, string) <=> string
assocTy: (<string1661>, string) <= string
Adjusting type for solution: ((read1662, <read1662>), object:<{at1660_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1662>, object:{marmalade.ledger.token-schema}) <=> object:<{at1660_o}>
assocTy: (<{at1660_o}>, <{at1660_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1660_o}>, <{at1660_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1660_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1660_o}>)
assocTy: (<read1662>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1662>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard1635::<enforce-guard1635>, tyVar=<enforce-guard1635>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard1652::<account-guard1652>, tyVar=<account-guard1651>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard1635, <enforce-guard1635>, bool)]), (guard, [(account-guard1652, <account-guard1651>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard1635, <enforce-guard1635>)])), (guard, (guard, [(account-guard1652, <account-guard1651>)]))]
Adjusting type for solution: ((enforce-guard1635, <enforce-guard1635>), bool, bool)
assocTy: (<enforce-guard1635>, bool) <=> bool
assocTy: (<enforce-guard1635>, bool) <= bool
assocTy: (<enforce-guard1635>, bool) <=> bool
assocTy: (<enforce-guard1635>, bool) <= bool
Adjusting type for solution: ((account-guard1652, <account-guard1651>), guard, guard)
assocTy: (<account-guard1651>, guard) <=> guard
assocTy: (<account-guard1651>, guard) <= guard
assocTy: (<account-guard1651>, guard) <=> guard
assocTy: (<account-guard1651>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1511_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1511_row}>, roleTy=<read1511>
tryFunType: cand: table:table:<{read1511_row}> key:string -> object:<{read1511_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1511_row}>, AST=read1511::<read1511>, tyVar=<read1511>, resolvedTy=<read1511>}), (ArgVar 0, RoleTys { candArgTy=table:<{read1511_row}>, AST=marmalade.ledger.tokens1512::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1512>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1857_id1858::string, tyVar=<transfer-create_id1459>, resolvedTy=string})]
tryFunType: trying table:table:<{read1511_row}> key:string -> object:<{read1511_row}> with [(string, [(inlinedCallArgs1857_id1858, <transfer-create_id1459>, string)]), (table:<{read1511_row}>, [(marmalade.ledger.tokens1512, <marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema})]), (object:<{read1511_row}>, [(read1511, <read1511>, <read1511>)])]
Solved overload with table:table:<{read1511_row}> key:string -> object:<{read1511_row}>: [(string, (string, [(inlinedCallArgs1857_id1858, <transfer-create_id1459>)])), (table:<{read1511_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1512, <marmalade.ledger.tokens1512>)])), (object:<{read1511_row}>, (object:<{read1511_row}>, [(read1511, <read1511>)]))]
Adjusting type for solution: ((inlinedCallArgs1857_id1858, <transfer-create_id1459>), string, string)
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1512, <marmalade.ledger.tokens1512>), table:<{read1511_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema}) <=> table:<{read1511_row}>
assocTy: (<{read1511_row}>, <{read1511_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1511_row}>, <{read1511_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read1511_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1511_row}>)
assocTy: (<marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1511, <read1511>), object:<{read1511_row}>, object:<{read1511_row}>)
assocTy: (<read1511>, <read1511>) <=> object:<{read1511_row}>
assocTy: (<read1511>, <read1511>) <= object:<{read1511_row}>
assocTy: tracking/updating type variable <read1511> <= object:<{read1511_row}>
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:<{read1511_row}>
assocTy: (<{read1511_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1511_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1511_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1509_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1509_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1509_l>] -> <at1509_a>: roles=[(RetVar, RoleTys { candArgTy=<at1509_a>, AST=at1509::<at1509>, tyVar=<precision1513>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1509_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1509_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1509_o}> -> <at1509_a>, roles=[(RetVar, RoleTys { candArgTy=<at1509_a>, AST=at1509::<at1509>, tyVar=<precision1513>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1510::string, tyVar=<string1510>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1509_o}>, AST=read1511::<read1511>, tyVar=<read1511>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1509_o}> -> <at1509_a> with [(<at1509_a>, [(at1509, <precision1513>, integer)]), (string, [(string1510, <string1510>, string)]), (object:<{at1509_o}>, [(read1511, <read1511>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1509_o}> -> <at1509_a>: [(<at1509_a>, (integer, [(at1509, <precision1513>)])), (string, (string, [(string1510, <string1510>)])), (object:<{at1509_o}>, (object:{marmalade.ledger.token-schema}, [(read1511, <read1511>)]))]
Adjusting type for solution: ((at1509, <precision1513>), <at1509_a>, integer)
assocTy: (<precision1513>, integer) <=> <at1509_a>
assocTy: integer => <at1509_a>
assocTy: (<precision1513>, integer) <=> integer
assocTy: (<precision1513>, integer) <= integer
Adjusting type for solution: ((string1510, <string1510>), string, string)
assocTy: (<string1510>, string) <=> string
assocTy: (<string1510>, string) <= string
assocTy: (<string1510>, string) <=> string
assocTy: (<string1510>, string) <= string
Adjusting type for solution: ((read1511, <read1511>), object:<{at1509_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:<{at1509_o}>
assocTy: (<{at1509_o}>, <{at1509_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1509_o}>, <{at1509_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at1509_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1509_o}>)
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor1484::<floor1484>, tyVar=<floor1484>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs1847_amount1849::decimal, tyVar=<transfer-create_amount1463>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=inlinedCallArgs1847_precision1848::integer, tyVar=<precision1513>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(inlinedCallArgs1847_precision1848, <precision1513>, integer)]), (decimal, [(floor1484, <floor1484>, decimal), (inlinedCallArgs1847_amount1849, <transfer-create_amount1463>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(inlinedCallArgs1847_precision1848, <precision1513>)])), (decimal, (decimal, [(floor1484, <floor1484>), (inlinedCallArgs1847_amount1849, <transfer-create_amount1463>)]))]
Adjusting type for solution: ((inlinedCallArgs1847_precision1848, <precision1513>), integer, integer)
assocTy: (<precision1513>, integer) <=> integer
assocTy: (<precision1513>, integer) <= integer
assocTy: (<precision1513>, integer) <=> integer
assocTy: (<precision1513>, integer) <= integer
Adjusting type for solution: ((floor1484, <floor1484>), decimal, decimal)
assocTy: (<floor1484>, decimal) <=> decimal
assocTy: (<floor1484>, decimal) <= decimal
assocTy: (<floor1484>, decimal) <=> decimal
assocTy: (<floor1484>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs1847_amount1849, <transfer-create_amount1463>), decimal, decimal)
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
assocTy: (<transfer-create_amount1463>, decimal) <=> decimal
assocTy: (<transfer-create_amount1463>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read1511_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read1511_row}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: cand: table:table:<{read1511_row}> key:string -> object:<{read1511_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read1511_row}>, AST=read1511::<read1511>, tyVar=<read1511>, resolvedTy=object:{marmalade.ledger.token-schema}}), (ArgVar 0, RoleTys { candArgTy=table:<{read1511_row}>, AST=marmalade.ledger.tokens1512::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens1512>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs1857_id1858::string, tyVar=<transfer-create_id1459>, resolvedTy=string})]
tryFunType: trying table:table:<{read1511_row}> key:string -> object:<{read1511_row}> with [(string, [(inlinedCallArgs1857_id1858, <transfer-create_id1459>, string)]), (table:<{read1511_row}>, [(marmalade.ledger.tokens1512, <marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema})]), (object:<{read1511_row}>, [(read1511, <read1511>, object:{marmalade.ledger.token-schema})])]
Solved overload with table:table:<{read1511_row}> key:string -> object:<{read1511_row}>: [(string, (string, [(inlinedCallArgs1857_id1858, <transfer-create_id1459>)])), (table:<{read1511_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens1512, <marmalade.ledger.tokens1512>)])), (object:<{read1511_row}>, (object:{marmalade.ledger.token-schema}, [(read1511, <read1511>)]))]
Adjusting type for solution: ((inlinedCallArgs1857_id1858, <transfer-create_id1459>), string, string)
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
assocTy: (<transfer-create_id1459>, string) <=> string
assocTy: (<transfer-create_id1459>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens1512, <marmalade.ledger.tokens1512>), table:<{read1511_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema}) <=> table:<{read1511_row}>
assocTy: (<{read1511_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1511_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read1511_row}>)
assocTy: (<marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens1512>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read1511, <read1511>), object:<{read1511_row}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:<{read1511_row}>
assocTy: (<{read1511_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read1511_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read1511_row}>)
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1509_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1509_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1509_l>] -> <at1509_a>: roles=[(RetVar, RoleTys { candArgTy=<at1509_a>, AST=at1509::<at1509>, tyVar=<precision1513>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1509_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at1509_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1509_o}> -> <at1509_a>, roles=[(RetVar, RoleTys { candArgTy=<at1509_a>, AST=at1509::<at1509>, tyVar=<precision1513>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1510::string, tyVar=<string1510>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1509_o}>, AST=read1511::<read1511>, tyVar=<read1511>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at1509_o}> -> <at1509_a> with [(<at1509_a>, [(at1509, <precision1513>, integer)]), (string, [(string1510, <string1510>, string)]), (object:<{at1509_o}>, [(read1511, <read1511>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at1509_o}> -> <at1509_a>: [(<at1509_a>, (integer, [(at1509, <precision1513>)])), (string, (string, [(string1510, <string1510>)])), (object:<{at1509_o}>, (object:{marmalade.ledger.token-schema}, [(read1511, <read1511>)]))]
Adjusting type for solution: ((at1509, <precision1513>), <at1509_a>, integer)
assocTy: (<precision1513>, integer) <=> <at1509_a>
assocTy: (<precision1513>, integer) <=> integer
assocTy: (<precision1513>, integer) <= integer
Adjusting type for solution: ((string1510, <string1510>), string, string)
assocTy: (<string1510>, string) <=> string
assocTy: (<string1510>, string) <= string
assocTy: (<string1510>, string) <=> string
assocTy: (<string1510>, string) <= string
Adjusting type for solution: ((read1511, <read1511>), object:<{at1509_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:<{at1509_o}>
assocTy: (<{at1509_o}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{at1509_o}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at1509_o}>)
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read1511>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.transfer-create:bool (id:s...
===== Fun: (defcap marmalade.ledger.WITHDRAW:bool (id:string ...
trackAST: (WITHDRAW_id1965, string)
trackAST: (WITHDRAW_seller1966, string)
trackAST: (WITHDRAW_amount1967, decimal)
trackAST: (WITHDRAW_timeout1968, integer)
trackAST: (WITHDRAW_sale-id1969, string)
trackAST: (enforce1970, <enforce1970>)
trackAST: (not1971, <not1971>)
trackAST: (sale-active_timeout1972, integer)
trackAST: (<1973, <<1973>)
trackAST: (at1974, <at1974>)
trackAST: (string1975, string)
trackAST: (chain-data1976, <chain-data1976>)
trackAST: (sale-active1977, bool)
assocAST: (sale-active1977, <sale-active1977>, bool) => (<1973, <<1973>, <<1973>)
trackAST: (sale-active1978, <sale-active1978>)
assocAST: (<1973, <sale-active1977>, bool) => (sale-active1978, <sale-active1978>, <sale-active1978>)
trackAST: (string1979, string)
trackAST: (compose-capability1980, <compose-capability1980>)
trackAST: (DEBIT_id1981, string)
trackAST: (DEBIT_sender1982, string)
trackAST: (enforce-guard1983, <enforce-guard1983>)
trackAST: (account-guard_id1984, string)
trackAST: (account-guard_account1985, string)
trackAST: (with-read1986, <with-read1986>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger1987, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id1988, string)
trackAST: (key_account1989, string)
trackAST: (format1990, <format1990>)
trackAST: (string1991, string)
trackAST: (list1992, [<ak>])
trackAST: (key1993, string)
assocAST: (key1993, <key1993>, string) => (format1990, <format1990>, <format1990>)
trackAST: (key1994, <key1994>)
assocAST: (format1990, <key1993>, string) => (key1994, <key1994>, <key1994>)
trackAST: (BindSchema1995, <BindSchema1995>)
trackAST: (BindSchema1995_guard1996, <BindSchema1995_guard1996_f>)
trackAST: (string1997, string)
assocAST: (BindSchema1995_guard1996, <BindSchema1995_guard1996_f>, <BindSchema1995_guard1996_f>) => (BindSchema1995, <BindSchema1995>, <BindSchema1995>)
trackAST: (BindSchema1995schema1998, *)
trackAST: (account-guard1999, guard)
assocAST: (account-guard1999, <account-guard1999>, guard) => (with-read1986, <with-read1986>, <with-read1986>)
trackAST: (account-guard2000, <account-guard2000>)
assocAST: (with-read1986, <account-guard1999>, guard) => (account-guard2000, <account-guard2000>, <account-guard2000>)
trackAST: (DEBIT2001, <e>)
assocAST: (enforce-guard1983, <enforce-guard1983>, <enforce-guard1983>) => (DEBIT2001, <e>, <e>)
trackAST: (DEBIT2002, <DEBIT2002>)
trackAST: (format2003, <format2003>)
trackAST: (string2004, string)
trackAST: (list2005, [<at>])
trackAST: (pact-id2006, <pact-id2006>)
trackAST: (sale-account2007, string)
assocAST: (sale-account2007, <sale-account2007>, string) => (format2003, <format2003>, <format2003>)
trackAST: (sale-account2008, <sale-account2008>)
assocAST: (format2003, <sale-account2007>, string) => (sale-account2008, <sale-account2008>, <sale-account2008>)
assocAST: (enforce-guard1983, <enforce-guard1983>, <enforce-guard1983>) => (DEBIT2002, <DEBIT2002>, <DEBIT2002>)
trackAST: (compose-capability2009, <compose-capability2009>)
trackAST: (CREDIT_id2010, string)
trackAST: (CREDIT_receiver2011, string)
trackAST: (bool2012, bool)
trackAST: (CREDIT2013, <g>)
assocAST: (bool2012, <bool2012>, bool) => (CREDIT2013, <g>, <g>)
trackAST: (CREDIT2014, <CREDIT2014>)
assocAST: (bool2012, <bool2012>, bool) => (CREDIT2014, <CREDIT2014>, <CREDIT2014>)
trackAST: (compose-capability2015, <compose-capability2015>)
trackAST: (SALE_PRIVATE_sale-id2016, string)
trackAST: (bool2017, bool)
trackAST: (SALE_PRIVATE2018, bool)
assocAST: (bool2017, <bool2017>, bool) => (SALE_PRIVATE2018, <SALE_PRIVATE2018>, bool)
trackAST: (SALE_PRIVATE2019, <SALE_PRIVATE2019>)
assocAST: (bool2017, <bool2017>, bool) => (SALE_PRIVATE2019, <SALE_PRIVATE2019>, <SALE_PRIVATE2019>)
trackAST: (WITHDRAW2020, bool)
assocAST: (WITHDRAW2020, <WITHDRAW2020>, bool) => (compose-capability2015, <compose-capability2015>, <compose-capability2015>)
--------------------------------
 Substitute defuns:

assocTy: (<sale-active1977>, bool) <=> bool
assocTy: (<sale-active1977>, bool) <= bool
trackAST: (inlinedCallArgs2021, <inlinedCallArgs2021>)
assocTy: (<inlinedCallArgs2021>, <inlinedCallArgs2021>) <=> bool
assocTy: (<inlinedCallArgs2021>, <inlinedCallArgs2021>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2021> <= bool
trackAST: (inlinedCallArgs2021_timeout2022, integer)
assocAST: (WITHDRAW_timeout1968, <WITHDRAW_timeout1968>, integer) => (inlinedCallArgs2021_timeout2022, <inlinedCallArgs2021_timeout2022>, integer)
assocAST: (inlinedCallArgs2021_timeout2022, <WITHDRAW_timeout1968>, integer) => (sale-active_timeout1972, <sale-active_timeout1972>, integer)
assocTy: (<key1993>, string) <=> string
assocTy: (<key1993>, string) <= string
trackAST: (inlinedCallArgs2023, <inlinedCallArgs2023>)
assocTy: (<inlinedCallArgs2023>, <inlinedCallArgs2023>) <=> string
assocTy: (<inlinedCallArgs2023>, <inlinedCallArgs2023>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2023> <= string
trackAST: (inlinedCallArgs2023_id2024, string)
assocAST: (account-guard_id1984, <account-guard_id1984>, string) => (inlinedCallArgs2023_id2024, <inlinedCallArgs2023_id2024>, string)
trackAST: (inlinedCallArgs2023_account2025, string)
assocAST: (account-guard_account1985, <account-guard_account1985>, string) => (inlinedCallArgs2023_account2025, <inlinedCallArgs2023_account2025>, string)
assocAST: (inlinedCallArgs2023_id2024, <account-guard_id1984>, string) => (key_id1988, <key_id1988>, string)
assocAST: (inlinedCallArgs2023_account2025, <account-guard_account1985>, string) => (key_account1989, <key_account1989>, string)
assocTy: (<account-guard1999>, guard) <=> guard
assocTy: (<account-guard1999>, guard) <= guard
trackAST: (inlinedCallArgs2026, <inlinedCallArgs2026>)
assocTy: (<inlinedCallArgs2026>, <inlinedCallArgs2026>) <=> guard
assocTy: (<inlinedCallArgs2026>, <inlinedCallArgs2026>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs2026> <= guard
trackAST: (inlinedCallArgs2026_id2027, string)
assocAST: (DEBIT_id1981, <DEBIT_id1981>, string) => (inlinedCallArgs2026_id2027, <inlinedCallArgs2026_id2027>, string)
trackAST: (inlinedCallArgs2026_account2028, string)
assocAST: (DEBIT_sender1982, <DEBIT_sender1982>, string) => (inlinedCallArgs2026_account2028, <inlinedCallArgs2026_account2028>, string)
assocAST: (inlinedCallArgs2026_id2027, <DEBIT_id1981>, string) => (account-guard_id1984, <account-guard_id1984>, string)
assocAST: (inlinedCallArgs2026_id2027, <DEBIT_id1981>, string) => (account-guard_id1984, <DEBIT_id1981>, string)
assocAST: (inlinedCallArgs2026_account2028, <DEBIT_sender1982>, string) => (account-guard_account1985, <account-guard_account1985>, string)
assocAST: (inlinedCallArgs2026_account2028, <DEBIT_sender1982>, string) => (account-guard_account1985, <DEBIT_sender1982>, string)
assocTy: (<sale-account2007>, string) <=> string
assocTy: (<sale-account2007>, string) <= string
trackAST: (inlinedCallArgs2029, <inlinedCallArgs2029>)
assocTy: (<inlinedCallArgs2029>, <inlinedCallArgs2029>) <=> string
assocTy: (<inlinedCallArgs2029>, <inlinedCallArgs2029>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2029> <= string
assocTy: (<enforce-guard1983>, <enforce-guard1983>) <=> <DEBIT2002_e>
assocTy: (<enforce-guard1983>, <enforce-guard1983>) <= <DEBIT2002_e>
assocTy: tracking/updating type variable <enforce-guard1983> <= <DEBIT2002_e>
trackAST: (inlinedCallArgs2030, <inlinedCallArgs2030>)
assocTy: (<inlinedCallArgs2030>, <inlinedCallArgs2030>) <=> <DEBIT2002_e>
assocTy: (<inlinedCallArgs2030>, <inlinedCallArgs2030>) <= <DEBIT2002_e>
assocTy: tracking/updating type variable <inlinedCallArgs2030> <= <DEBIT2002_e>
trackAST: (inlinedCallArgs2030_id2031, string)
assocAST: (WITHDRAW_id1965, <WITHDRAW_id1965>, string) => (inlinedCallArgs2030_id2031, <inlinedCallArgs2030_id2031>, string)
trackAST: (inlinedCallArgs2030_sender2032, string)
assocAST: (sale-account2008, <sale-account2007>, string) => (inlinedCallArgs2030_sender2032, <inlinedCallArgs2030_sender2032>, string)
assocAST: (inlinedCallArgs2030_id2031, <WITHDRAW_id1965>, string) => (DEBIT_id1981, <DEBIT_id1981>, string)
assocAST: (inlinedCallArgs2030_id2031, <WITHDRAW_id1965>, string) => (DEBIT_id1981, <WITHDRAW_id1965>, string)
assocAST: (inlinedCallArgs2030_sender2032, <sale-account2007>, string) => (DEBIT_sender1982, <DEBIT_sender1982>, string)
assocAST: (inlinedCallArgs2030_sender2032, <sale-account2007>, string) => (DEBIT_sender1982, <sale-account2007>, string)
assocTy: (<bool2012>, bool) <=> <CREDIT2014_g>
assocTy: bool => <CREDIT2014_g>
trackAST: (inlinedCallArgs2033, <inlinedCallArgs2033>)
assocTy: (<inlinedCallArgs2033>, <inlinedCallArgs2033>) <=> <CREDIT2014_g>
assocTy: (<inlinedCallArgs2033>, <inlinedCallArgs2033>) <= <CREDIT2014_g>
assocTy: tracking/updating type variable <inlinedCallArgs2033> <= <CREDIT2014_g>
trackAST: (inlinedCallArgs2033_id2034, string)
assocAST: (WITHDRAW_id1965, <WITHDRAW_id1965>, string) => (inlinedCallArgs2033_id2034, <inlinedCallArgs2033_id2034>, string)
trackAST: (inlinedCallArgs2033_receiver2035, string)
assocAST: (WITHDRAW_seller1966, <WITHDRAW_seller1966>, string) => (inlinedCallArgs2033_receiver2035, <inlinedCallArgs2033_receiver2035>, string)
assocTy: (<bool2017>, bool) <=> bool
assocTy: (<bool2017>, bool) <= bool
trackAST: (inlinedCallArgs2036, <inlinedCallArgs2036>)
assocTy: (<inlinedCallArgs2036>, <inlinedCallArgs2036>) <=> bool
assocTy: (<inlinedCallArgs2036>, <inlinedCallArgs2036>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2036> <= bool
trackAST: (inlinedCallArgs2036_sale-id2037, string)
assocAST: (WITHDRAW_sale-id1969, <WITHDRAW_sale-id1969>, string) => (inlinedCallArgs2036_sale-id2037, <inlinedCallArgs2036_sale-id2037>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<not1971>, <not1971>) <=> bool
assocTy: (<not1971>, <not1971>) <= bool
assocTy: tracking/updating type variable <not1971> <= bool
assocTy: (<string1979>, string) <=> string
assocTy: (<string1979>, string) <= string
assocTy: (<enforce1970>, <enforce1970>) <=> bool
assocTy: (<enforce1970>, <enforce1970>) <= bool
assocTy: tracking/updating type variable <enforce1970> <= bool
Mangled funtype: x:bool -> bool -> x:bool -> bool
assocTy: (<sale-active1977>, bool) <=> bool
assocTy: (<sale-active1977>, bool) <= bool
assocTy: (<not1971>, bool) <=> bool
assocTy: (<not1971>, bool) <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<1973_a[integer,decimal,string,time]> y:<<1973_a[integer,decimal,string,time]> -> bool
assocTy: (<at1974>, <at1974>) <=> <<1973_a[integer,decimal,string,time]>
assocTy: (<at1974>, <at1974>) <= <<1973_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at1974> <= <<1973_a[integer,decimal,string,time]>
assocTy: (<WITHDRAW_timeout1968>, integer) <=> <<1973_a[integer,decimal,string,time]>
assocTy: integer => <<1973_a[integer,decimal,string,time]>
assocTy: (<sale-active1977>, bool) <=> bool
assocTy: (<sale-active1977>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data1976>, <chain-data1976>) <=> object:{.public-chain-data}
assocTy: (<chain-data1976>, <chain-data1976>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data1976> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard1983>, <DEBIT2002_e>) <=> bool
assocTy: (<enforce-guard1983>, <DEBIT2002_e>) <= bool
assocTy: tracking/updating type variable <DEBIT2002_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability1980>, <compose-capability1980>) <=> bool
assocTy: (<compose-capability1980>, <compose-capability1980>) <= bool
assocTy: tracking/updating type variable <compose-capability1980> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2004>, string) <=> string
assocTy: (<string2004>, string) <= string
assocTy: (<list2005>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account2007>, string) <=> string
assocTy: (<sale-account2007>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2006>, <pact-id2006>) <=> string
assocTy: (<pact-id2006>, <pact-id2006>) <= string
assocTy: tracking/updating type variable <pact-id2006> <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read1986_row}> key:string bindings:binding:<{with-read1986_row}> -> <with-read1986_a>
assocTy: (<marmalade.ledger.ledger1987>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read1986_row}>
assocTy: (<{with-read1986_row}>, <{with-read1986_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read1986_row}>, <{with-read1986_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read1986_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read1986_row}>)
assocTy: (<key1993>, string) <=> string
assocTy: (<key1993>, string) <= string
assocTy: (<account-guard1999>, guard) <=> <with-read1986_a>
assocTy: guard => <with-read1986_a>
assocTy: (<BindSchema1995_guard1996_f>, <BindSchema1995_guard1996_f>) <=> <with-read1986_a>
assocTy: (<BindSchema1995_guard1996_f>, <BindSchema1995_guard1996_f>) <= <with-read1986_a>
assocTy: tracking/updating type variable <BindSchema1995_guard1996_f> <= <with-read1986_a>
assocTy: (<BindSchema1995schema1998>, *) <=> binding:<{with-read1986_row}>
assocTy: (<BindSchema1995schema1998>, *) <= binding:<{with-read1986_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string1991>, string) <=> string
assocTy: (<string1991>, string) <= string
assocTy: (<list1992>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key1993>, string) <=> string
assocTy: (<key1993>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2004>, string) <=> string
assocTy: (<string2004>, string) <= string
assocTy: (<list2005>, [*]) <=> [*]
assocTy: (<list2005>, [*]) <= [*]
assocTy: (<sale-account2007>, string) <=> string
assocTy: (<sale-account2007>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2006>, string) <=> string
assocTy: (<pact-id2006>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2012>, bool) <=> bool
assocTy: (<bool2012>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability2009>, <compose-capability2009>) <=> bool
assocTy: (<compose-capability2009>, <compose-capability2009>) <= bool
assocTy: tracking/updating type variable <compose-capability2009> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2017>, bool) <=> bool
assocTy: (<bool2017>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<WITHDRAW2020>, bool) <=> bool
assocTy: (<WITHDRAW2020>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list2005::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema1995schema1998::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema1995_guard1996_f>, guard) <=> guard
assocTy: (<BindSchema1995_guard1996_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list1992::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2005::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard1983::<enforce-guard1983>, tyVar=<enforce-guard1983>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard2000::<account-guard2000>, tyVar=<account-guard1999>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard1983, <enforce-guard1983>, bool)]), (guard, [(account-guard2000, <account-guard1999>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard1983, <enforce-guard1983>)])), (guard, (guard, [(account-guard2000, <account-guard1999>)]))]
Adjusting type for solution: ((enforce-guard1983, <enforce-guard1983>), bool, bool)
assocTy: (<enforce-guard1983>, bool) <=> bool
assocTy: (<enforce-guard1983>, bool) <= bool
assocTy: (<enforce-guard1983>, bool) <=> bool
assocTy: (<enforce-guard1983>, bool) <= bool
Adjusting type for solution: ((account-guard2000, <account-guard1999>), guard, guard)
assocTy: (<account-guard1999>, guard) <=> guard
assocTy: (<account-guard1999>, guard) <= guard
assocTy: (<account-guard1999>, guard) <=> guard
assocTy: (<account-guard1999>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at1974_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at1974_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at1974_l>] -> <at1974_a>: roles=[(RetVar, RoleTys { candArgTy=<at1974_a>, AST=at1974::<at1974>, tyVar=<at1974>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at1974_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at1974_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at1974_o}> -> <at1974_a>, roles=[(RetVar, RoleTys { candArgTy=<at1974_a>, AST=at1974::<at1974>, tyVar=<at1974>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string1975::string, tyVar=<string1975>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at1974_o}>, AST=chain-data1976::<chain-data1976>, tyVar=<chain-data1976>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at1974_o}> -> <at1974_a> with [(<at1974_a>, [(at1974, <at1974>, integer)]), (string, [(string1975, <string1975>, string)]), (object:<{at1974_o}>, [(chain-data1976, <chain-data1976>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at1974_o}> -> <at1974_a>: [(<at1974_a>, (integer, [(at1974, <at1974>)])), (string, (string, [(string1975, <string1975>)])), (object:<{at1974_o}>, (object:{.public-chain-data}, [(chain-data1976, <chain-data1976>)]))]
Adjusting type for solution: ((at1974, <at1974>), <at1974_a>, integer)
assocTy: (<at1974>, integer) <=> <at1974_a>
assocTy: integer => <at1974_a>
assocTy: (<at1974>, integer) <=> integer
assocTy: (<at1974>, integer) <= integer
Adjusting type for solution: ((string1975, <string1975>), string, string)
assocTy: (<string1975>, string) <=> string
assocTy: (<string1975>, string) <= string
assocTy: (<string1975>, string) <=> string
assocTy: (<string1975>, string) <= string
Adjusting type for solution: ((chain-data1976, <chain-data1976>), object:<{at1974_o}>, object:{.public-chain-data})
assocTy: (<chain-data1976>, object:{.public-chain-data}) <=> object:<{at1974_o}>
assocTy: (<{at1974_o}>, <{at1974_o}>) <=> {.public-chain-data}
assocTy: (<{at1974_o}>, <{at1974_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at1974_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at1974_o}>)
assocTy: (<chain-data1976>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data1976>, object:{.public-chain-data}) <= object:{.public-chain-data}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.WITHDRAW:bool (id:string ...
===== Fun: (defun marmalade.ledger.sale-active:bool (timeout:...
trackAST: (sale-active_timeout2039, integer)
trackAST: (<2040, <<2040>)
trackAST: (at2041, <at2041>)
trackAST: (string2042, string)
trackAST: (chain-data2043, <chain-data2043>)
trackAST: (sale-active2044, bool)
assocAST: (sale-active2044, <sale-active2044>, bool) => (<2040, <<2040>, <<2040>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<2040_a[integer,decimal,string,time]> y:<<2040_a[integer,decimal,string,time]> -> bool
assocTy: (<at2041>, <at2041>) <=> <<2040_a[integer,decimal,string,time]>
assocTy: (<at2041>, <at2041>) <= <<2040_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at2041> <= <<2040_a[integer,decimal,string,time]>
assocTy: (<sale-active_timeout2039>, integer) <=> <<2040_a[integer,decimal,string,time]>
assocTy: integer => <<2040_a[integer,decimal,string,time]>
assocTy: (<sale-active2044>, bool) <=> bool
assocTy: (<sale-active2044>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data2043>, <chain-data2043>) <=> object:{.public-chain-data}
assocTy: (<chain-data2043>, <chain-data2043>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data2043> <= object:{.public-chain-data}
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2041_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at2041_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2041_l>] -> <at2041_a>: roles=[(RetVar, RoleTys { candArgTy=<at2041_a>, AST=at2041::<at2041>, tyVar=<at2041>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2041_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at2041_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2041_o}> -> <at2041_a>, roles=[(RetVar, RoleTys { candArgTy=<at2041_a>, AST=at2041::<at2041>, tyVar=<at2041>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2042::string, tyVar=<string2042>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2041_o}>, AST=chain-data2043::<chain-data2043>, tyVar=<chain-data2043>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at2041_o}> -> <at2041_a> with [(<at2041_a>, [(at2041, <at2041>, integer)]), (string, [(string2042, <string2042>, string)]), (object:<{at2041_o}>, [(chain-data2043, <chain-data2043>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at2041_o}> -> <at2041_a>: [(<at2041_a>, (integer, [(at2041, <at2041>)])), (string, (string, [(string2042, <string2042>)])), (object:<{at2041_o}>, (object:{.public-chain-data}, [(chain-data2043, <chain-data2043>)]))]
Adjusting type for solution: ((at2041, <at2041>), <at2041_a>, integer)
assocTy: (<at2041>, integer) <=> <at2041_a>
assocTy: integer => <at2041_a>
assocTy: (<at2041>, integer) <=> integer
assocTy: (<at2041>, integer) <= integer
Adjusting type for solution: ((string2042, <string2042>), string, string)
assocTy: (<string2042>, string) <=> string
assocTy: (<string2042>, string) <= string
assocTy: (<string2042>, string) <=> string
assocTy: (<string2042>, string) <= string
Adjusting type for solution: ((chain-data2043, <chain-data2043>), object:<{at2041_o}>, object:{.public-chain-data})
assocTy: (<chain-data2043>, object:{.public-chain-data}) <=> object:<{at2041_o}>
assocTy: (<{at2041_o}>, <{at2041_o}>) <=> {.public-chain-data}
assocTy: (<{at2041_o}>, <{at2041_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at2041_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at2041_o}>)
assocTy: (<chain-data2043>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data2043>, object:{.public-chain-data}) <= object:{.public-chain-data}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.sale-active:bool (timeout:...
===== Fun: (defun marmalade.ledger.withdraw:bool (id:string s...
trackAST: (withdraw_id2046, string)
trackAST: (withdraw_seller2047, string)
trackAST: (withdraw_amount2048, decimal)
trackAST: (require-capability2049, <require-capability2049>)
trackAST: (SALE_PRIVATE_sale-id2050, string)
trackAST: (bool2051, bool)
trackAST: (SALE_PRIVATE2052, bool)
assocAST: (bool2051, <bool2051>, bool) => (SALE_PRIVATE2052, <SALE_PRIVATE2052>, bool)
trackAST: (SALE_PRIVATE2053, <SALE_PRIVATE2053>)
trackAST: (pact-id2054, <pact-id2054>)
assocAST: (bool2051, <bool2051>, bool) => (SALE_PRIVATE2053, <SALE_PRIVATE2053>, <SALE_PRIVATE2053>)
trackAST: (BindLet2055, <BindLet2055>)
trackAST: (BindLet2055_sender2056, <BindLet2055_sender2056_ao>)
trackAST: (debit_id2057, string)
trackAST: (debit_account2058, string)
trackAST: (debit_amount2059, decimal)
trackAST: (require-capability2060, <require-capability2060>)
trackAST: (DEBIT_id2061, string)
trackAST: (DEBIT_sender2062, string)
trackAST: (enforce-guard2063, <enforce-guard2063>)
trackAST: (account-guard_id2064, string)
trackAST: (account-guard_account2065, string)
trackAST: (with-read2066, <with-read2066>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2067, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2068, string)
trackAST: (key_account2069, string)
trackAST: (format2070, <format2070>)
trackAST: (string2071, string)
trackAST: (list2072, [<ak>])
trackAST: (key2073, string)
assocAST: (key2073, <key2073>, string) => (format2070, <format2070>, <format2070>)
trackAST: (key2074, <key2074>)
assocAST: (format2070, <key2073>, string) => (key2074, <key2074>, <key2074>)
trackAST: (BindSchema2075, <BindSchema2075>)
trackAST: (BindSchema2075_guard2076, <BindSchema2075_guard2076_f>)
trackAST: (string2077, string)
assocAST: (BindSchema2075_guard2076, <BindSchema2075_guard2076_f>, <BindSchema2075_guard2076_f>) => (BindSchema2075, <BindSchema2075>, <BindSchema2075>)
trackAST: (BindSchema2075schema2078, *)
trackAST: (account-guard2079, guard)
assocAST: (account-guard2079, <account-guard2079>, guard) => (with-read2066, <with-read2066>, <with-read2066>)
trackAST: (account-guard2080, <account-guard2080>)
assocAST: (with-read2066, <account-guard2079>, guard) => (account-guard2080, <account-guard2080>, <account-guard2080>)
trackAST: (DEBIT2081, <e>)
assocAST: (enforce-guard2063, <enforce-guard2063>, <enforce-guard2063>) => (DEBIT2081, <e>, <e>)
trackAST: (DEBIT2082, <DEBIT2082>)
assocAST: (enforce-guard2063, <enforce-guard2063>, <enforce-guard2063>) => (DEBIT2082, <DEBIT2082>, <DEBIT2082>)
trackAST: (enforce-unit_id2083, string)
trackAST: (enforce-unit_amount2084, decimal)
trackAST: (BindLet2085, <BindLet2085>)
trackAST: (BindLet2085_p2086, <BindLet2085_p2086_ai>)
trackAST: (precision_id2087, string)
trackAST: (at2088, <at2088>)
trackAST: (string2089, string)
trackAST: (read2090, <read2090>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2091, table:{marmalade.ledger.token-schema})
trackAST: (precision2092, integer)
assocAST: (precision2092, <precision2092>, integer) => (at2088, <at2088>, <at2088>)
trackAST: (precision2093, <precision2093>)
assocAST: (at2088, <precision2092>, integer) => (precision2093, <precision2093>, <precision2093>)
assocAST: (precision2093, <precision2092>, integer) => (BindLet2085_p2086, <BindLet2085_p2086_ai>, <BindLet2085_p2086_ai>)
trackAST: (enforce2094, <enforce2094>)
trackAST: (=2095, <=2095>)
trackAST: (floor2096, <floor2096>)
trackAST: (string2097, string)
assocAST: (enforce2094, <enforce2094>, <enforce2094>) => (BindLet2085, <BindLet2085>, <BindLet2085>)
trackAST: (enforce-unit2098, bool)
assocAST: (enforce-unit2098, <enforce-unit2098>, bool) => (BindLet2085, <enforce2094>, <enforce2094>)
trackAST: (enforce-unit2099, <enforce-unit2099>)
assocAST: (BindLet2085, <enforce-unit2098>, bool) => (enforce-unit2099, <enforce-unit2099>, <enforce-unit2099>)
trackAST: (with-read2100, <with-read2100>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2101, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2102, string)
trackAST: (key_account2103, string)
trackAST: (format2104, <format2104>)
trackAST: (string2105, string)
trackAST: (list2106, [<ak>])
trackAST: (key2107, string)
assocAST: (key2107, <key2107>, string) => (format2104, <format2104>, <format2104>)
trackAST: (key2108, <key2108>)
assocAST: (format2104, <key2107>, string) => (key2108, <key2108>, <key2108>)
trackAST: (BindSchema2109, <BindSchema2109>)
trackAST: (BindSchema2109_old-bal2110, <BindSchema2109_old-bal2110_aa>)
trackAST: (string2111, string)
trackAST: (enforce2112, <enforce2112>)
trackAST: (<=2113, <<=2113>)
trackAST: (string2114, string)
trackAST: (BindLet2115, <BindLet2115>)
trackAST: (BindLet2115_new-bal2116, <BindLet2115_new-bal2116_ab>)
trackAST: (-2117, <-2117>)
assocAST: (-2117, <-2117>, <-2117>) => (BindLet2115_new-bal2116, <BindLet2115_new-bal2116_ab>, <BindLet2115_new-bal2116_ab>)
trackAST: (update2118, <update2118>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2119, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2120, string)
trackAST: (key_account2121, string)
trackAST: (format2122, <format2122>)
trackAST: (string2123, string)
trackAST: (list2124, [<ak>])
trackAST: (key2125, string)
assocAST: (key2125, <key2125>, string) => (format2122, <format2122>, <format2122>)
trackAST: (key2126, <key2126>)
assocAST: (format2122, <key2125>, string) => (key2126, <key2126>, <key2126>)
TObject: TyAny
trackAST: (object2127, object:*)
TObject: TyAny
trackAST: (object2128, object:*)
assocAST: (object2128, <object2128>, object:*) => (BindLet2115, <BindLet2115>, <BindLet2115>)
assocAST: (BindLet2115, <object2128>, object:*) => (BindSchema2109, <BindSchema2109>, <BindSchema2109>)
trackAST: (BindSchema2109schema2129, *)
trackAST: (debit2130, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit2130, <debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read2100, <with-read2100>, <with-read2100>)
trackAST: (debit2131, <debit2131>)
trackAST: (format2132, <format2132>)
trackAST: (string2133, string)
trackAST: (list2134, [<at>])
trackAST: (pact-id2135, <pact-id2135>)
trackAST: (sale-account2136, string)
assocAST: (sale-account2136, <sale-account2136>, string) => (format2132, <format2132>, <format2132>)
trackAST: (sale-account2137, <sale-account2137>)
assocAST: (format2132, <sale-account2136>, string) => (sale-account2137, <sale-account2137>, <sale-account2137>)
assocAST: (with-read2100, <debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit2131, <debit2131>, <debit2131>)
assocAST: (debit2131, <debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet2055_sender2056, <BindLet2055_sender2056_ao>, <BindLet2055_sender2056_ao>)
trackAST: (BindLet2055_receiver2138, <BindLet2055_receiver2138_ap>)
trackAST: (credit-account_id2139, string)
trackAST: (credit-account_account2140, string)
trackAST: (credit-account_amount2141, decimal)
trackAST: (credit_id2142, string)
trackAST: (credit_account2143, string)
trackAST: (credit_guard2144, guard)
trackAST: (credit_amount2145, decimal)
trackAST: (enforce-valid-account_account2146, string)
trackAST: (enforce2147, <enforce2147>)
trackAST: (>2148, <>2148>)
trackAST: (length2149, <length2149>)
trackAST: (integer2150, integer)
trackAST: (string2151, string)
trackAST: (enforce-valid-account2152, <c>)
assocAST: (enforce2147, <enforce2147>, <enforce2147>) => (enforce-valid-account2152, <c>, <c>)
trackAST: (enforce-valid-account2153, <enforce-valid-account2153>)
assocAST: (enforce2147, <enforce2147>, <enforce2147>) => (enforce-valid-account2153, <enforce-valid-account2153>, <enforce-valid-account2153>)
trackAST: (enforce-unit_id2154, string)
trackAST: (enforce-unit_amount2155, decimal)
trackAST: (BindLet2156, <BindLet2156>)
trackAST: (BindLet2156_p2157, <BindLet2156_p2157_ai>)
trackAST: (precision_id2158, string)
trackAST: (at2159, <at2159>)
trackAST: (string2160, string)
trackAST: (read2161, <read2161>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2162, table:{marmalade.ledger.token-schema})
trackAST: (precision2163, integer)
assocAST: (precision2163, <precision2163>, integer) => (at2159, <at2159>, <at2159>)
trackAST: (precision2164, <precision2164>)
assocAST: (at2159, <precision2163>, integer) => (precision2164, <precision2164>, <precision2164>)
assocAST: (precision2164, <precision2163>, integer) => (BindLet2156_p2157, <BindLet2156_p2157_ai>, <BindLet2156_p2157_ai>)
trackAST: (enforce2165, <enforce2165>)
trackAST: (=2166, <=2166>)
trackAST: (floor2167, <floor2167>)
trackAST: (string2168, string)
assocAST: (enforce2165, <enforce2165>, <enforce2165>) => (BindLet2156, <BindLet2156>, <BindLet2156>)
trackAST: (enforce-unit2169, bool)
assocAST: (enforce-unit2169, <enforce-unit2169>, bool) => (BindLet2156, <enforce2165>, <enforce2165>)
trackAST: (enforce-unit2170, <enforce-unit2170>)
assocAST: (BindLet2156, <enforce-unit2169>, bool) => (enforce-unit2170, <enforce-unit2170>, <enforce-unit2170>)
trackAST: (require-capability2171, <require-capability2171>)
trackAST: (CREDIT_id2172, string)
trackAST: (CREDIT_receiver2173, string)
trackAST: (bool2174, bool)
trackAST: (CREDIT2175, <g>)
assocAST: (bool2174, <bool2174>, bool) => (CREDIT2175, <g>, <g>)
trackAST: (CREDIT2176, <CREDIT2176>)
assocAST: (bool2174, <bool2174>, bool) => (CREDIT2176, <CREDIT2176>, <CREDIT2176>)
trackAST: (with-default-read2177, <with-default-read2177>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2178, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2179, string)
trackAST: (key_account2180, string)
trackAST: (format2181, <format2181>)
trackAST: (string2182, string)
trackAST: (list2183, [<ak>])
trackAST: (key2184, string)
assocAST: (key2184, <key2184>, string) => (format2181, <format2181>, <format2181>)
trackAST: (key2185, <key2185>)
assocAST: (format2181, <key2184>, string) => (key2185, <key2185>, <key2185>)
TObject: TyAny
trackAST: (object2186, object:*)
trackAST: (decimal2187, decimal)
trackAST: (BindSchema2188, <BindSchema2188>)
trackAST: (BindSchema2188_old-bal2189, <BindSchema2188_old-bal2189_ac>)
trackAST: (string2190, string)
trackAST: (BindSchema2188_retg2191, <BindSchema2188_retg2191_ad>)
trackAST: (string2192, string)
trackAST: (enforce2193, <enforce2193>)
trackAST: (=2194, <=2194>)
trackAST: (string2195, string)
trackAST: (BindLet2196, <BindLet2196>)
trackAST: (BindLet2196_is-new2197, <BindLet2196_is-new2197_ae>)
trackAST: (if2198, <if2198>)
trackAST: (=2199, <=2199>)
trackAST: (decimal2200, decimal)
trackAST: (enforce-reserved_account2201, string)
trackAST: (enforce-reserved_guard2202, guard)
trackAST: (BindLet2203, <BindLet2203>)
trackAST: (BindLet2203_r2204, <BindLet2203_r2204_g>)
trackAST: (check-reserved_account2205, string)
trackAST: (BindLet2206, <BindLet2206>)
trackAST: (BindLet2206_pfx2207, <BindLet2206_pfx2207_f>)
trackAST: (take2208, <take2208>)
trackAST: (integer2209, integer)
assocAST: (take2208, <take2208>, <take2208>) => (BindLet2206_pfx2207, <BindLet2206_pfx2207_f>, <BindLet2206_pfx2207_f>)
trackAST: (if2210, <if2210>)
trackAST: (=2211, <=2211>)
trackAST: (string2212, string)
trackAST: (take2213, <take2213>)
trackAST: (integer2214, integer)
trackAST: (take2215, <take2215>)
trackAST: (integer2216, integer)
trackAST: (string2217, string)
assocAST: (if2210, <if2210>, <if2210>) => (BindLet2206, <BindLet2206>, <BindLet2206>)
trackAST: (check-reserved2218, string)
assocAST: (check-reserved2218, <check-reserved2218>, string) => (BindLet2206, <if2210>, <if2210>)
trackAST: (check-reserved2219, <check-reserved2219>)
assocAST: (BindLet2206, <check-reserved2218>, string) => (check-reserved2219, <check-reserved2219>, <check-reserved2219>)
assocAST: (check-reserved2219, <check-reserved2218>, string) => (BindLet2203_r2204, <BindLet2203_r2204_g>, <BindLet2203_r2204_g>)
trackAST: (if2220, <if2220>)
trackAST: (=2221, <=2221>)
trackAST: (string2222, string)
trackAST: (bool2223, bool)
trackAST: (if2224, <if2224>)
trackAST: (=2225, <=2225>)
trackAST: (string2226, string)
trackAST: (enforce2227, <enforce2227>)
trackAST: (=2228, <=2228>)
trackAST: (format2229, <format2229>)
trackAST: (string2230, string)
trackAST: (list2231, [<h>])
trackAST: (format2232, <format2232>)
trackAST: (string2233, string)
trackAST: (list2234, [<i>])
trackAST: (drop2235, <drop2235>)
trackAST: (integer2236, integer)
trackAST: (string2237, string)
trackAST: (enforce2238, <enforce2238>)
trackAST: (bool2239, bool)
trackAST: (format2240, <format2240>)
trackAST: (string2241, string)
trackAST: (list2242, [<j>])
assocAST: (if2220, <if2220>, <if2220>) => (BindLet2203, <BindLet2203>, <BindLet2203>)
trackAST: (enforce-reserved2243, bool)
assocAST: (enforce-reserved2243, <enforce-reserved2243>, bool) => (BindLet2203, <if2220>, <if2220>)
trackAST: (enforce-reserved2244, <enforce-reserved2244>)
assocAST: (BindLet2203, <enforce-reserved2243>, bool) => (enforce-reserved2244, <enforce-reserved2244>, <enforce-reserved2244>)
trackAST: (bool2245, bool)
assocAST: (if2198, <if2198>, <if2198>) => (BindLet2196_is-new2197, <BindLet2196_is-new2197_ae>, <BindLet2196_is-new2197_ae>)
trackAST: (BindLet2246, <BindLet2246>)
trackAST: (BindLet2246_new-bal2247, <BindLet2246_new-bal2247_af>)
trackAST: (if2248, <if2248>)
trackAST: (+2249, <+2249>)
assocAST: (if2248, <if2248>, <if2248>) => (BindLet2246_new-bal2247, <BindLet2246_new-bal2247_af>, <BindLet2246_new-bal2247_af>)
trackAST: (write2250, <write2250>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2251, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2252, string)
trackAST: (key_account2253, string)
trackAST: (format2254, <format2254>)
trackAST: (string2255, string)
trackAST: (list2256, [<ak>])
trackAST: (key2257, string)
assocAST: (key2257, <key2257>, string) => (format2254, <format2254>, <format2254>)
trackAST: (key2258, <key2258>)
assocAST: (format2254, <key2257>, string) => (key2258, <key2258>, <key2258>)
TObject: TyAny
trackAST: (object2259, object:*)
trackAST: (if2260, <if2260>)
trackAST: (emit-event2261, <emit-event2261>)
trackAST: (ACCOUNT_GUARD_id2262, string)
trackAST: (ACCOUNT_GUARD_account2263, string)
trackAST: (ACCOUNT_GUARD_guard2264, guard)
trackAST: (bool2265, bool)
trackAST: (ACCOUNT_GUARD2266, bool)
assocAST: (bool2265, <bool2265>, bool) => (ACCOUNT_GUARD2266, <ACCOUNT_GUARD2266>, bool)
trackAST: (ACCOUNT_GUARD2267, <ACCOUNT_GUARD2267>)
assocAST: (bool2265, <bool2265>, bool) => (ACCOUNT_GUARD2267, <ACCOUNT_GUARD2267>, <ACCOUNT_GUARD2267>)
trackAST: (bool2268, bool)
TObject: TyAny
trackAST: (object2269, object:*)
trackAST: (if2270, <if2270>)
trackAST: (decimal2271, decimal)
assocAST: (object2269, <object2269>, object:*) => (BindLet2246, <BindLet2246>, <BindLet2246>)
assocAST: (BindLet2246, <object2269>, object:*) => (BindLet2196, <BindLet2196>, <BindLet2196>)
assocAST: (BindLet2196, <object2269>, object:*) => (BindSchema2188, <BindSchema2188>, <BindSchema2188>)
trackAST: (BindSchema2188schema2272, *)
trackAST: (credit2273, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit2273, <credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read2177, <with-default-read2177>, <with-default-read2177>)
trackAST: (credit2274, <credit2274>)
trackAST: (account-guard_id2275, string)
trackAST: (account-guard_account2276, string)
trackAST: (with-read2277, <with-read2277>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2278, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2279, string)
trackAST: (key_account2280, string)
trackAST: (format2281, <format2281>)
trackAST: (string2282, string)
trackAST: (list2283, [<ak>])
trackAST: (key2284, string)
assocAST: (key2284, <key2284>, string) => (format2281, <format2281>, <format2281>)
trackAST: (key2285, <key2285>)
assocAST: (format2281, <key2284>, string) => (key2285, <key2285>, <key2285>)
trackAST: (BindSchema2286, <BindSchema2286>)
trackAST: (BindSchema2286_guard2287, <BindSchema2286_guard2287_f>)
trackAST: (string2288, string)
assocAST: (BindSchema2286_guard2287, <BindSchema2286_guard2287_f>, <BindSchema2286_guard2287_f>) => (BindSchema2286, <BindSchema2286>, <BindSchema2286>)
trackAST: (BindSchema2286schema2289, *)
trackAST: (account-guard2290, guard)
assocAST: (account-guard2290, <account-guard2290>, guard) => (with-read2277, <with-read2277>, <with-read2277>)
trackAST: (account-guard2291, <account-guard2291>)
assocAST: (with-read2277, <account-guard2290>, guard) => (account-guard2291, <account-guard2291>, <account-guard2291>)
assocAST: (with-default-read2177, <credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit2274, <credit2274>, <credit2274>)
trackAST: (credit-account2292, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit2274, <credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit-account2292, <credit-account2292>, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (credit-account2293, <credit-account2293>)
assocAST: (credit2274, <credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit-account2293, <credit-account2293>, <credit-account2293>)
assocAST: (credit-account2293, <credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet2055_receiver2138, <BindLet2055_receiver2138_ap>, <BindLet2055_receiver2138_ap>)
trackAST: (emit-event2294, <emit-event2294>)
trackAST: (TRANSFER_id2295, string)
trackAST: (TRANSFER_sender2296, string)
trackAST: (TRANSFER_receiver2297, string)
trackAST: (TRANSFER_amount2298, decimal)
trackAST: (enforce-unit_id2299, string)
trackAST: (enforce-unit_amount2300, decimal)
trackAST: (BindLet2301, <BindLet2301>)
trackAST: (BindLet2301_p2302, <BindLet2301_p2302_ai>)
trackAST: (precision_id2303, string)
trackAST: (at2304, <at2304>)
trackAST: (string2305, string)
trackAST: (read2306, <read2306>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2307, table:{marmalade.ledger.token-schema})
trackAST: (precision2308, integer)
assocAST: (precision2308, <precision2308>, integer) => (at2304, <at2304>, <at2304>)
trackAST: (precision2309, <precision2309>)
assocAST: (at2304, <precision2308>, integer) => (precision2309, <precision2309>, <precision2309>)
assocAST: (precision2309, <precision2308>, integer) => (BindLet2301_p2302, <BindLet2301_p2302_ai>, <BindLet2301_p2302_ai>)
trackAST: (enforce2310, <enforce2310>)
trackAST: (=2311, <=2311>)
trackAST: (floor2312, <floor2312>)
trackAST: (string2313, string)
assocAST: (enforce2310, <enforce2310>, <enforce2310>) => (BindLet2301, <BindLet2301>, <BindLet2301>)
trackAST: (enforce-unit2314, bool)
assocAST: (enforce-unit2314, <enforce-unit2314>, bool) => (BindLet2301, <enforce2310>, <enforce2310>)
trackAST: (enforce-unit2315, <enforce-unit2315>)
assocAST: (BindLet2301, <enforce-unit2314>, bool) => (enforce-unit2315, <enforce-unit2315>, <enforce-unit2315>)
trackAST: (enforce2316, <enforce2316>)
trackAST: (>2317, <>2317>)
trackAST: (decimal2318, decimal)
trackAST: (string2319, string)
trackAST: (compose-capability2320, <compose-capability2320>)
trackAST: (DEBIT_id2321, string)
trackAST: (DEBIT_sender2322, string)
trackAST: (enforce-guard2323, <enforce-guard2323>)
trackAST: (account-guard_id2324, string)
trackAST: (account-guard_account2325, string)
trackAST: (with-read2326, <with-read2326>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2327, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2328, string)
trackAST: (key_account2329, string)
trackAST: (format2330, <format2330>)
trackAST: (string2331, string)
trackAST: (list2332, [<ak>])
trackAST: (key2333, string)
assocAST: (key2333, <key2333>, string) => (format2330, <format2330>, <format2330>)
trackAST: (key2334, <key2334>)
assocAST: (format2330, <key2333>, string) => (key2334, <key2334>, <key2334>)
trackAST: (BindSchema2335, <BindSchema2335>)
trackAST: (BindSchema2335_guard2336, <BindSchema2335_guard2336_f>)
trackAST: (string2337, string)
assocAST: (BindSchema2335_guard2336, <BindSchema2335_guard2336_f>, <BindSchema2335_guard2336_f>) => (BindSchema2335, <BindSchema2335>, <BindSchema2335>)
trackAST: (BindSchema2335schema2338, *)
trackAST: (account-guard2339, guard)
assocAST: (account-guard2339, <account-guard2339>, guard) => (with-read2326, <with-read2326>, <with-read2326>)
trackAST: (account-guard2340, <account-guard2340>)
assocAST: (with-read2326, <account-guard2339>, guard) => (account-guard2340, <account-guard2340>, <account-guard2340>)
trackAST: (DEBIT2341, <e>)
assocAST: (enforce-guard2323, <enforce-guard2323>, <enforce-guard2323>) => (DEBIT2341, <e>, <e>)
trackAST: (DEBIT2342, <DEBIT2342>)
assocAST: (enforce-guard2323, <enforce-guard2323>, <enforce-guard2323>) => (DEBIT2342, <DEBIT2342>, <DEBIT2342>)
trackAST: (compose-capability2343, <compose-capability2343>)
trackAST: (CREDIT_id2344, string)
trackAST: (CREDIT_receiver2345, string)
trackAST: (bool2346, bool)
trackAST: (CREDIT2347, <g>)
assocAST: (bool2346, <bool2346>, bool) => (CREDIT2347, <g>, <g>)
trackAST: (CREDIT2348, <CREDIT2348>)
assocAST: (bool2346, <bool2346>, bool) => (CREDIT2348, <CREDIT2348>, <CREDIT2348>)
trackAST: (TRANSFER2349, bool)
assocAST: (TRANSFER2349, <TRANSFER2349>, bool) => (compose-capability2343, <compose-capability2343>, <compose-capability2343>)
trackAST: (TRANSFER2350, <TRANSFER2350>)
trackAST: (format2351, <format2351>)
trackAST: (string2352, string)
trackAST: (list2353, [<at>])
trackAST: (pact-id2354, <pact-id2354>)
trackAST: (sale-account2355, string)
assocAST: (sale-account2355, <sale-account2355>, string) => (format2351, <format2351>, <format2351>)
trackAST: (sale-account2356, <sale-account2356>)
assocAST: (format2351, <sale-account2355>, string) => (sale-account2356, <sale-account2356>, <sale-account2356>)
assocAST: (compose-capability2343, <TRANSFER2349>, bool) => (TRANSFER2350, <TRANSFER2350>, <TRANSFER2350>)
trackAST: (emit-event2357, <emit-event2357>)
trackAST: (RECONCILE_token-id2358, string)
trackAST: (RECONCILE_amount2359, decimal)
trackAST: (RECONCILE_sender2360, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver2361, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool2362, bool)
trackAST: (RECONCILE2363, bool)
assocAST: (bool2362, <bool2362>, bool) => (RECONCILE2363, <RECONCILE2363>, bool)
trackAST: (RECONCILE2364, <RECONCILE2364>)
assocAST: (bool2362, <bool2362>, bool) => (RECONCILE2364, <RECONCILE2364>, <RECONCILE2364>)
assocAST: (emit-event2357, <emit-event2357>, <emit-event2357>) => (BindLet2055, <BindLet2055>, <BindLet2055>)
trackAST: (withdraw2365, bool)
assocAST: (withdraw2365, <withdraw2365>, bool) => (BindLet2055, <emit-event2357>, <emit-event2357>)
--------------------------------
 Substitute defuns:

assocTy: (<bool2051>, bool) <=> bool
assocTy: (<bool2051>, bool) <= bool
trackAST: (inlinedCallArgs2366, <inlinedCallArgs2366>)
assocTy: (<inlinedCallArgs2366>, <inlinedCallArgs2366>) <=> bool
assocTy: (<inlinedCallArgs2366>, <inlinedCallArgs2366>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2366> <= bool
trackAST: (inlinedCallArgs2366_sale-id2367, string)
assocAST: (inlinedCallArgs2366_sale-id2367, <inlinedCallArgs2366_sale-id2367>, string) => (pact-id2054, <pact-id2054>, <pact-id2054>)
assocTy: (<key2073>, string) <=> string
assocTy: (<key2073>, string) <= string
trackAST: (inlinedCallArgs2368, <inlinedCallArgs2368>)
assocTy: (<inlinedCallArgs2368>, <inlinedCallArgs2368>) <=> string
assocTy: (<inlinedCallArgs2368>, <inlinedCallArgs2368>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2368> <= string
trackAST: (inlinedCallArgs2368_id2369, string)
assocAST: (account-guard_id2064, <account-guard_id2064>, string) => (inlinedCallArgs2368_id2369, <inlinedCallArgs2368_id2369>, string)
trackAST: (inlinedCallArgs2368_account2370, string)
assocAST: (account-guard_account2065, <account-guard_account2065>, string) => (inlinedCallArgs2368_account2370, <inlinedCallArgs2368_account2370>, string)
assocAST: (inlinedCallArgs2368_id2369, <account-guard_id2064>, string) => (key_id2068, <key_id2068>, string)
assocAST: (inlinedCallArgs2368_account2370, <account-guard_account2065>, string) => (key_account2069, <key_account2069>, string)
assocTy: (<account-guard2079>, guard) <=> guard
assocTy: (<account-guard2079>, guard) <= guard
trackAST: (inlinedCallArgs2371, <inlinedCallArgs2371>)
assocTy: (<inlinedCallArgs2371>, <inlinedCallArgs2371>) <=> guard
assocTy: (<inlinedCallArgs2371>, <inlinedCallArgs2371>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs2371> <= guard
trackAST: (inlinedCallArgs2371_id2372, string)
assocAST: (DEBIT_id2061, <DEBIT_id2061>, string) => (inlinedCallArgs2371_id2372, <inlinedCallArgs2371_id2372>, string)
trackAST: (inlinedCallArgs2371_account2373, string)
assocAST: (DEBIT_sender2062, <DEBIT_sender2062>, string) => (inlinedCallArgs2371_account2373, <inlinedCallArgs2371_account2373>, string)
assocAST: (inlinedCallArgs2371_id2372, <DEBIT_id2061>, string) => (account-guard_id2064, <account-guard_id2064>, string)
assocAST: (inlinedCallArgs2371_id2372, <DEBIT_id2061>, string) => (account-guard_id2064, <DEBIT_id2061>, string)
assocAST: (inlinedCallArgs2371_account2373, <DEBIT_sender2062>, string) => (account-guard_account2065, <account-guard_account2065>, string)
assocAST: (inlinedCallArgs2371_account2373, <DEBIT_sender2062>, string) => (account-guard_account2065, <DEBIT_sender2062>, string)
assocTy: (<enforce-guard2063>, <enforce-guard2063>) <=> <DEBIT2082_e>
assocTy: (<enforce-guard2063>, <enforce-guard2063>) <= <DEBIT2082_e>
assocTy: tracking/updating type variable <enforce-guard2063> <= <DEBIT2082_e>
trackAST: (inlinedCallArgs2374, <inlinedCallArgs2374>)
assocTy: (<inlinedCallArgs2374>, <inlinedCallArgs2374>) <=> <DEBIT2082_e>
assocTy: (<inlinedCallArgs2374>, <inlinedCallArgs2374>) <= <DEBIT2082_e>
assocTy: tracking/updating type variable <inlinedCallArgs2374> <= <DEBIT2082_e>
trackAST: (inlinedCallArgs2374_id2375, string)
assocAST: (debit_id2057, <debit_id2057>, string) => (inlinedCallArgs2374_id2375, <inlinedCallArgs2374_id2375>, string)
trackAST: (inlinedCallArgs2374_sender2376, string)
assocAST: (debit_account2058, <debit_account2058>, string) => (inlinedCallArgs2374_sender2376, <inlinedCallArgs2374_sender2376>, string)
assocAST: (inlinedCallArgs2374_id2375, <debit_id2057>, string) => (DEBIT_id2061, <DEBIT_id2061>, string)
assocAST: (inlinedCallArgs2374_id2375, <debit_id2057>, string) => (DEBIT_id2061, <debit_id2057>, string)
assocAST: (inlinedCallArgs2374_sender2376, <debit_account2058>, string) => (DEBIT_sender2062, <DEBIT_sender2062>, string)
assocAST: (inlinedCallArgs2374_sender2376, <debit_account2058>, string) => (DEBIT_sender2062, <debit_account2058>, string)
assocTy: (<precision2092>, integer) <=> integer
assocTy: (<precision2092>, integer) <= integer
trackAST: (inlinedCallArgs2377, <inlinedCallArgs2377>)
assocTy: (<inlinedCallArgs2377>, <inlinedCallArgs2377>) <=> integer
assocTy: (<inlinedCallArgs2377>, <inlinedCallArgs2377>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs2377> <= integer
trackAST: (inlinedCallArgs2377_id2378, string)
assocAST: (enforce-unit_id2083, <enforce-unit_id2083>, string) => (inlinedCallArgs2377_id2378, <inlinedCallArgs2377_id2378>, string)
assocAST: (inlinedCallArgs2377_id2378, <enforce-unit_id2083>, string) => (precision_id2087, <precision_id2087>, string)
assocTy: (<enforce-unit2098>, bool) <=> bool
assocTy: (<enforce-unit2098>, bool) <= bool
trackAST: (inlinedCallArgs2379, <inlinedCallArgs2379>)
assocTy: (<inlinedCallArgs2379>, <inlinedCallArgs2379>) <=> bool
assocTy: (<inlinedCallArgs2379>, <inlinedCallArgs2379>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2379> <= bool
trackAST: (inlinedCallArgs2379_id2380, string)
assocAST: (debit_id2057, <debit_id2057>, string) => (inlinedCallArgs2379_id2380, <inlinedCallArgs2379_id2380>, string)
trackAST: (inlinedCallArgs2379_amount2381, decimal)
assocAST: (debit_amount2059, <debit_amount2059>, decimal) => (inlinedCallArgs2379_amount2381, <inlinedCallArgs2379_amount2381>, decimal)
assocAST: (inlinedCallArgs2379_id2380, <debit_id2057>, string) => (enforce-unit_id2083, <enforce-unit_id2083>, string)
assocAST: (inlinedCallArgs2379_id2380, <debit_id2057>, string) => (enforce-unit_id2083, <debit_id2057>, string)
assocAST: (inlinedCallArgs2379_amount2381, <debit_amount2059>, decimal) => (enforce-unit_amount2084, <enforce-unit_amount2084>, decimal)
assocAST: (inlinedCallArgs2379_amount2381, <debit_amount2059>, decimal) => (enforce-unit_amount2084, <debit_amount2059>, decimal)
assocTy: (<key2125>, string) <=> string
assocTy: (<key2125>, string) <= string
trackAST: (inlinedCallArgs2382, <inlinedCallArgs2382>)
assocTy: (<inlinedCallArgs2382>, <inlinedCallArgs2382>) <=> string
assocTy: (<inlinedCallArgs2382>, <inlinedCallArgs2382>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2382> <= string
trackAST: (inlinedCallArgs2382_id2383, string)
assocAST: (debit_id2057, <debit_id2057>, string) => (inlinedCallArgs2382_id2383, <inlinedCallArgs2382_id2383>, string)
trackAST: (inlinedCallArgs2382_account2384, string)
assocAST: (debit_account2058, <debit_account2058>, string) => (inlinedCallArgs2382_account2384, <inlinedCallArgs2382_account2384>, string)
assocAST: (inlinedCallArgs2382_id2383, <debit_id2057>, string) => (key_id2120, <key_id2120>, string)
assocAST: (inlinedCallArgs2382_account2384, <debit_account2058>, string) => (key_account2121, <key_account2121>, string)
assocTy: (<key2107>, string) <=> string
assocTy: (<key2107>, string) <= string
trackAST: (inlinedCallArgs2385, <inlinedCallArgs2385>)
assocTy: (<inlinedCallArgs2385>, <inlinedCallArgs2385>) <=> string
assocTy: (<inlinedCallArgs2385>, <inlinedCallArgs2385>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2385> <= string
trackAST: (inlinedCallArgs2385_id2386, string)
assocAST: (debit_id2057, <debit_id2057>, string) => (inlinedCallArgs2385_id2386, <inlinedCallArgs2385_id2386>, string)
trackAST: (inlinedCallArgs2385_account2387, string)
assocAST: (debit_account2058, <debit_account2058>, string) => (inlinedCallArgs2385_account2387, <inlinedCallArgs2385_account2387>, string)
assocAST: (inlinedCallArgs2385_id2386, <debit_id2057>, string) => (key_id2102, <key_id2102>, string)
assocAST: (inlinedCallArgs2385_account2387, <debit_account2058>, string) => (key_account2103, <key_account2103>, string)
assocTy: (<sale-account2136>, string) <=> string
assocTy: (<sale-account2136>, string) <= string
trackAST: (inlinedCallArgs2388, <inlinedCallArgs2388>)
assocTy: (<inlinedCallArgs2388>, <inlinedCallArgs2388>) <=> string
assocTy: (<inlinedCallArgs2388>, <inlinedCallArgs2388>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2388> <= string
assocTy: (<debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs2389, <inlinedCallArgs2389>)
assocTy: (<inlinedCallArgs2389>, <inlinedCallArgs2389>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs2389>, <inlinedCallArgs2389>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs2389> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs2389_id2390, string)
assocAST: (withdraw_id2046, <withdraw_id2046>, string) => (inlinedCallArgs2389_id2390, <inlinedCallArgs2389_id2390>, string)
trackAST: (inlinedCallArgs2389_account2391, string)
assocAST: (sale-account2137, <sale-account2136>, string) => (inlinedCallArgs2389_account2391, <inlinedCallArgs2389_account2391>, string)
trackAST: (inlinedCallArgs2389_amount2392, decimal)
assocAST: (withdraw_amount2048, <withdraw_amount2048>, decimal) => (inlinedCallArgs2389_amount2392, <inlinedCallArgs2389_amount2392>, decimal)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <debit_id2057>, string)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <debit_account2058>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <sale-account2136>, string)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_amount2392, <withdraw_amount2048>, decimal) => (debit_amount2059, <debit_amount2059>, decimal)
assocAST: (inlinedCallArgs2389_amount2392, <withdraw_amount2048>, decimal) => (debit_amount2059, <withdraw_amount2048>, decimal)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_id2390, <withdraw_id2046>, string) => (debit_id2057, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <sale-account2136>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <sale-account2136>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <sale-account2136>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <sale-account2136>, string)
assocAST: (inlinedCallArgs2389_account2391, <sale-account2136>, string) => (debit_account2058, <sale-account2136>, string)
assocAST: (inlinedCallArgs2389_amount2392, <withdraw_amount2048>, decimal) => (debit_amount2059, <withdraw_amount2048>, decimal)
assocAST: (inlinedCallArgs2389_amount2392, <withdraw_amount2048>, decimal) => (debit_amount2059, <withdraw_amount2048>, decimal)
assocTy: (<enforce2147>, <enforce2147>) <=> <enforce-valid-account2153_c>
assocTy: (<enforce2147>, <enforce2147>) <= <enforce-valid-account2153_c>
assocTy: tracking/updating type variable <enforce2147> <= <enforce-valid-account2153_c>
trackAST: (inlinedCallArgs2393, <inlinedCallArgs2393>)
assocTy: (<inlinedCallArgs2393>, <inlinedCallArgs2393>) <=> <enforce-valid-account2153_c>
assocTy: (<inlinedCallArgs2393>, <inlinedCallArgs2393>) <= <enforce-valid-account2153_c>
assocTy: tracking/updating type variable <inlinedCallArgs2393> <= <enforce-valid-account2153_c>
trackAST: (inlinedCallArgs2393_account2394, string)
assocAST: (credit_account2143, <credit_account2143>, string) => (inlinedCallArgs2393_account2394, <inlinedCallArgs2393_account2394>, string)
assocAST: (inlinedCallArgs2393_account2394, <credit_account2143>, string) => (enforce-valid-account_account2146, <enforce-valid-account_account2146>, string)
assocTy: (<precision2163>, integer) <=> integer
assocTy: (<precision2163>, integer) <= integer
trackAST: (inlinedCallArgs2395, <inlinedCallArgs2395>)
assocTy: (<inlinedCallArgs2395>, <inlinedCallArgs2395>) <=> integer
assocTy: (<inlinedCallArgs2395>, <inlinedCallArgs2395>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs2395> <= integer
trackAST: (inlinedCallArgs2395_id2396, string)
assocAST: (enforce-unit_id2154, <enforce-unit_id2154>, string) => (inlinedCallArgs2395_id2396, <inlinedCallArgs2395_id2396>, string)
assocAST: (inlinedCallArgs2395_id2396, <enforce-unit_id2154>, string) => (precision_id2158, <precision_id2158>, string)
assocTy: (<enforce-unit2169>, bool) <=> bool
assocTy: (<enforce-unit2169>, bool) <= bool
trackAST: (inlinedCallArgs2397, <inlinedCallArgs2397>)
assocTy: (<inlinedCallArgs2397>, <inlinedCallArgs2397>) <=> bool
assocTy: (<inlinedCallArgs2397>, <inlinedCallArgs2397>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2397> <= bool
trackAST: (inlinedCallArgs2397_id2398, string)
assocAST: (credit_id2142, <credit_id2142>, string) => (inlinedCallArgs2397_id2398, <inlinedCallArgs2397_id2398>, string)
trackAST: (inlinedCallArgs2397_amount2399, decimal)
assocAST: (credit_amount2145, <credit_amount2145>, decimal) => (inlinedCallArgs2397_amount2399, <inlinedCallArgs2397_amount2399>, decimal)
assocAST: (inlinedCallArgs2397_id2398, <credit_id2142>, string) => (enforce-unit_id2154, <enforce-unit_id2154>, string)
assocAST: (inlinedCallArgs2397_id2398, <credit_id2142>, string) => (enforce-unit_id2154, <credit_id2142>, string)
assocAST: (inlinedCallArgs2397_amount2399, <credit_amount2145>, decimal) => (enforce-unit_amount2155, <enforce-unit_amount2155>, decimal)
assocAST: (inlinedCallArgs2397_amount2399, <credit_amount2145>, decimal) => (enforce-unit_amount2155, <credit_amount2145>, decimal)
assocTy: (<bool2174>, bool) <=> <CREDIT2176_g>
assocTy: bool => <CREDIT2176_g>
trackAST: (inlinedCallArgs2400, <inlinedCallArgs2400>)
assocTy: (<inlinedCallArgs2400>, <inlinedCallArgs2400>) <=> <CREDIT2176_g>
assocTy: (<inlinedCallArgs2400>, <inlinedCallArgs2400>) <= <CREDIT2176_g>
assocTy: tracking/updating type variable <inlinedCallArgs2400> <= <CREDIT2176_g>
trackAST: (inlinedCallArgs2400_id2401, string)
assocAST: (credit_id2142, <credit_id2142>, string) => (inlinedCallArgs2400_id2401, <inlinedCallArgs2400_id2401>, string)
trackAST: (inlinedCallArgs2400_receiver2402, string)
assocAST: (credit_account2143, <credit_account2143>, string) => (inlinedCallArgs2400_receiver2402, <inlinedCallArgs2400_receiver2402>, string)
assocTy: (<check-reserved2218>, string) <=> string
assocTy: (<check-reserved2218>, string) <= string
trackAST: (inlinedCallArgs2403, <inlinedCallArgs2403>)
assocTy: (<inlinedCallArgs2403>, <inlinedCallArgs2403>) <=> string
assocTy: (<inlinedCallArgs2403>, <inlinedCallArgs2403>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2403> <= string
trackAST: (inlinedCallArgs2403_account2404, string)
assocAST: (enforce-reserved_account2201, <enforce-reserved_account2201>, string) => (inlinedCallArgs2403_account2404, <inlinedCallArgs2403_account2404>, string)
assocAST: (inlinedCallArgs2403_account2404, <enforce-reserved_account2201>, string) => (check-reserved_account2205, <check-reserved_account2205>, string)
assocTy: (<enforce-reserved2243>, bool) <=> bool
assocTy: (<enforce-reserved2243>, bool) <= bool
trackAST: (inlinedCallArgs2405, <inlinedCallArgs2405>)
assocTy: (<inlinedCallArgs2405>, <inlinedCallArgs2405>) <=> bool
assocTy: (<inlinedCallArgs2405>, <inlinedCallArgs2405>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2405> <= bool
trackAST: (inlinedCallArgs2405_account2406, string)
assocAST: (credit_account2143, <credit_account2143>, string) => (inlinedCallArgs2405_account2406, <inlinedCallArgs2405_account2406>, string)
trackAST: (inlinedCallArgs2405_guard2407, guard)
assocAST: (credit_guard2144, <credit_guard2144>, guard) => (inlinedCallArgs2405_guard2407, <inlinedCallArgs2405_guard2407>, guard)
assocAST: (inlinedCallArgs2405_account2406, <credit_account2143>, string) => (enforce-reserved_account2201, <enforce-reserved_account2201>, string)
assocAST: (inlinedCallArgs2405_account2406, <credit_account2143>, string) => (enforce-reserved_account2201, <credit_account2143>, string)
assocAST: (inlinedCallArgs2405_account2406, <credit_account2143>, string) => (enforce-reserved_account2201, <credit_account2143>, string)
assocAST: (inlinedCallArgs2405_guard2407, <credit_guard2144>, guard) => (enforce-reserved_guard2202, <enforce-reserved_guard2202>, guard)
assocTy: (<key2257>, string) <=> string
assocTy: (<key2257>, string) <= string
trackAST: (inlinedCallArgs2408, <inlinedCallArgs2408>)
assocTy: (<inlinedCallArgs2408>, <inlinedCallArgs2408>) <=> string
assocTy: (<inlinedCallArgs2408>, <inlinedCallArgs2408>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2408> <= string
trackAST: (inlinedCallArgs2408_id2409, string)
assocAST: (credit_id2142, <credit_id2142>, string) => (inlinedCallArgs2408_id2409, <inlinedCallArgs2408_id2409>, string)
trackAST: (inlinedCallArgs2408_account2410, string)
assocAST: (credit_account2143, <credit_account2143>, string) => (inlinedCallArgs2408_account2410, <inlinedCallArgs2408_account2410>, string)
assocAST: (inlinedCallArgs2408_id2409, <credit_id2142>, string) => (key_id2252, <key_id2252>, string)
assocAST: (inlinedCallArgs2408_account2410, <credit_account2143>, string) => (key_account2253, <key_account2253>, string)
assocTy: (<bool2265>, bool) <=> bool
assocTy: (<bool2265>, bool) <= bool
trackAST: (inlinedCallArgs2411, <inlinedCallArgs2411>)
assocTy: (<inlinedCallArgs2411>, <inlinedCallArgs2411>) <=> bool
assocTy: (<inlinedCallArgs2411>, <inlinedCallArgs2411>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2411> <= bool
trackAST: (inlinedCallArgs2411_id2412, string)
assocAST: (credit_id2142, <credit_id2142>, string) => (inlinedCallArgs2411_id2412, <inlinedCallArgs2411_id2412>, string)
trackAST: (inlinedCallArgs2411_account2413, string)
assocAST: (credit_account2143, <credit_account2143>, string) => (inlinedCallArgs2411_account2413, <inlinedCallArgs2411_account2413>, string)
trackAST: (inlinedCallArgs2411_guard2414, guard)
assocAST: (inlinedCallArgs2411_guard2414, <inlinedCallArgs2411_guard2414>, guard) => (BindSchema2188_retg2191, <BindSchema2188_retg2191_ad>, <BindSchema2188_retg2191_ad>)
assocTy: (<key2184>, string) <=> string
assocTy: (<key2184>, string) <= string
trackAST: (inlinedCallArgs2415, <inlinedCallArgs2415>)
assocTy: (<inlinedCallArgs2415>, <inlinedCallArgs2415>) <=> string
assocTy: (<inlinedCallArgs2415>, <inlinedCallArgs2415>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2415> <= string
trackAST: (inlinedCallArgs2415_id2416, string)
assocAST: (credit_id2142, <credit_id2142>, string) => (inlinedCallArgs2415_id2416, <inlinedCallArgs2415_id2416>, string)
trackAST: (inlinedCallArgs2415_account2417, string)
assocAST: (credit_account2143, <credit_account2143>, string) => (inlinedCallArgs2415_account2417, <inlinedCallArgs2415_account2417>, string)
assocAST: (inlinedCallArgs2415_id2416, <credit_id2142>, string) => (key_id2179, <key_id2179>, string)
assocAST: (inlinedCallArgs2415_account2417, <credit_account2143>, string) => (key_account2180, <key_account2180>, string)
assocTy: (<key2284>, string) <=> string
assocTy: (<key2284>, string) <= string
trackAST: (inlinedCallArgs2418, <inlinedCallArgs2418>)
assocTy: (<inlinedCallArgs2418>, <inlinedCallArgs2418>) <=> string
assocTy: (<inlinedCallArgs2418>, <inlinedCallArgs2418>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2418> <= string
trackAST: (inlinedCallArgs2418_id2419, string)
assocAST: (account-guard_id2275, <account-guard_id2275>, string) => (inlinedCallArgs2418_id2419, <inlinedCallArgs2418_id2419>, string)
trackAST: (inlinedCallArgs2418_account2420, string)
assocAST: (account-guard_account2276, <account-guard_account2276>, string) => (inlinedCallArgs2418_account2420, <inlinedCallArgs2418_account2420>, string)
assocAST: (inlinedCallArgs2418_id2419, <account-guard_id2275>, string) => (key_id2279, <key_id2279>, string)
assocAST: (inlinedCallArgs2418_account2420, <account-guard_account2276>, string) => (key_account2280, <key_account2280>, string)
assocTy: (<account-guard2290>, guard) <=> guard
assocTy: (<account-guard2290>, guard) <= guard
trackAST: (inlinedCallArgs2421, <inlinedCallArgs2421>)
assocTy: (<inlinedCallArgs2421>, <inlinedCallArgs2421>) <=> guard
assocTy: (<inlinedCallArgs2421>, <inlinedCallArgs2421>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs2421> <= guard
trackAST: (inlinedCallArgs2421_id2422, string)
assocAST: (credit-account_id2139, <credit-account_id2139>, string) => (inlinedCallArgs2421_id2422, <inlinedCallArgs2421_id2422>, string)
trackAST: (inlinedCallArgs2421_account2423, string)
assocAST: (credit-account_account2140, <credit-account_account2140>, string) => (inlinedCallArgs2421_account2423, <inlinedCallArgs2421_account2423>, string)
assocAST: (inlinedCallArgs2421_id2422, <credit-account_id2139>, string) => (account-guard_id2275, <account-guard_id2275>, string)
assocAST: (inlinedCallArgs2421_id2422, <credit-account_id2139>, string) => (account-guard_id2275, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2421_account2423, <credit-account_account2140>, string) => (account-guard_account2276, <account-guard_account2276>, string)
assocAST: (inlinedCallArgs2421_account2423, <credit-account_account2140>, string) => (account-guard_account2276, <credit-account_account2140>, string)
assocTy: (<credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs2424, <inlinedCallArgs2424>)
assocTy: (<inlinedCallArgs2424>, <inlinedCallArgs2424>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs2424>, <inlinedCallArgs2424>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs2424> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs2424_id2425, string)
assocAST: (credit-account_id2139, <credit-account_id2139>, string) => (inlinedCallArgs2424_id2425, <inlinedCallArgs2424_id2425>, string)
trackAST: (inlinedCallArgs2424_account2426, string)
assocAST: (credit-account_account2140, <credit-account_account2140>, string) => (inlinedCallArgs2424_account2426, <inlinedCallArgs2424_account2426>, string)
trackAST: (inlinedCallArgs2424_guard2427, guard)
assocAST: (account-guard2291, <account-guard2290>, guard) => (inlinedCallArgs2424_guard2427, <inlinedCallArgs2424_guard2427>, guard)
trackAST: (inlinedCallArgs2424_amount2428, decimal)
assocAST: (credit-account_amount2141, <credit-account_amount2141>, decimal) => (inlinedCallArgs2424_amount2428, <inlinedCallArgs2424_amount2428>, decimal)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit_account2143>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit_id2142>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_amount2428, <credit-account_amount2141>, decimal) => (credit_amount2145, <credit_amount2145>, decimal)
assocAST: (inlinedCallArgs2424_amount2428, <credit-account_amount2141>, decimal) => (credit_amount2145, <credit-account_amount2141>, decimal)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_id2425, <credit-account_id2139>, string) => (credit_id2142, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_account2426, <credit-account_account2140>, string) => (credit_account2143, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2424_guard2427, <account-guard2290>, guard) => (credit_guard2144, <credit_guard2144>, guard)
assocAST: (inlinedCallArgs2424_guard2427, <account-guard2290>, guard) => (credit_guard2144, <account-guard2290>, guard)
assocAST: (inlinedCallArgs2424_guard2427, <account-guard2290>, guard) => (credit_guard2144, <account-guard2290>, guard)
assocAST: (inlinedCallArgs2424_guard2427, <account-guard2290>, guard) => (credit_guard2144, <account-guard2290>, guard)
assocAST: (inlinedCallArgs2424_amount2428, <credit-account_amount2141>, decimal) => (credit_amount2145, <credit-account_amount2141>, decimal)
assocAST: (inlinedCallArgs2424_amount2428, <credit-account_amount2141>, decimal) => (credit_amount2145, <credit-account_amount2141>, decimal)
assocTy: (<credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs2429, <inlinedCallArgs2429>)
assocTy: (<inlinedCallArgs2429>, <inlinedCallArgs2429>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs2429>, <inlinedCallArgs2429>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs2429> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs2429_id2430, string)
assocAST: (withdraw_id2046, <withdraw_id2046>, string) => (inlinedCallArgs2429_id2430, <inlinedCallArgs2429_id2430>, string)
trackAST: (inlinedCallArgs2429_account2431, string)
assocAST: (withdraw_seller2047, <withdraw_seller2047>, string) => (inlinedCallArgs2429_account2431, <inlinedCallArgs2429_account2431>, string)
trackAST: (inlinedCallArgs2429_amount2432, decimal)
assocAST: (withdraw_amount2048, <withdraw_amount2048>, decimal) => (inlinedCallArgs2429_amount2432, <inlinedCallArgs2429_amount2432>, decimal)
assocAST: (inlinedCallArgs2429_id2430, <withdraw_id2046>, string) => (credit-account_id2139, <credit-account_id2139>, string)
assocAST: (inlinedCallArgs2429_id2430, <withdraw_id2046>, string) => (credit-account_id2139, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2429_id2430, <withdraw_id2046>, string) => (credit-account_id2139, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2429_id2430, <withdraw_id2046>, string) => (credit-account_id2139, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2429_id2430, <withdraw_id2046>, string) => (credit-account_id2139, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2429_id2430, <withdraw_id2046>, string) => (credit-account_id2139, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2429_account2431, <withdraw_seller2047>, string) => (credit-account_account2140, <credit-account_account2140>, string)
assocAST: (inlinedCallArgs2429_account2431, <withdraw_seller2047>, string) => (credit-account_account2140, <withdraw_seller2047>, string)
assocAST: (inlinedCallArgs2429_account2431, <withdraw_seller2047>, string) => (credit-account_account2140, <withdraw_seller2047>, string)
assocAST: (inlinedCallArgs2429_account2431, <withdraw_seller2047>, string) => (credit-account_account2140, <withdraw_seller2047>, string)
assocAST: (inlinedCallArgs2429_account2431, <withdraw_seller2047>, string) => (credit-account_account2140, <withdraw_seller2047>, string)
assocAST: (inlinedCallArgs2429_account2431, <withdraw_seller2047>, string) => (credit-account_account2140, <withdraw_seller2047>, string)
assocAST: (inlinedCallArgs2429_amount2432, <withdraw_amount2048>, decimal) => (credit-account_amount2141, <credit-account_amount2141>, decimal)
assocAST: (inlinedCallArgs2429_amount2432, <withdraw_amount2048>, decimal) => (credit-account_amount2141, <withdraw_amount2048>, decimal)
assocTy: (<precision2308>, integer) <=> integer
assocTy: (<precision2308>, integer) <= integer
trackAST: (inlinedCallArgs2433, <inlinedCallArgs2433>)
assocTy: (<inlinedCallArgs2433>, <inlinedCallArgs2433>) <=> integer
assocTy: (<inlinedCallArgs2433>, <inlinedCallArgs2433>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs2433> <= integer
trackAST: (inlinedCallArgs2433_id2434, string)
assocAST: (enforce-unit_id2299, <enforce-unit_id2299>, string) => (inlinedCallArgs2433_id2434, <inlinedCallArgs2433_id2434>, string)
assocAST: (inlinedCallArgs2433_id2434, <enforce-unit_id2299>, string) => (precision_id2303, <precision_id2303>, string)
assocTy: (<enforce-unit2314>, bool) <=> bool
assocTy: (<enforce-unit2314>, bool) <= bool
trackAST: (inlinedCallArgs2435, <inlinedCallArgs2435>)
assocTy: (<inlinedCallArgs2435>, <inlinedCallArgs2435>) <=> bool
assocTy: (<inlinedCallArgs2435>, <inlinedCallArgs2435>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2435> <= bool
trackAST: (inlinedCallArgs2435_id2436, string)
assocAST: (TRANSFER_id2295, <TRANSFER_id2295>, string) => (inlinedCallArgs2435_id2436, <inlinedCallArgs2435_id2436>, string)
trackAST: (inlinedCallArgs2435_amount2437, decimal)
assocAST: (TRANSFER_amount2298, <TRANSFER_amount2298>, decimal) => (inlinedCallArgs2435_amount2437, <inlinedCallArgs2435_amount2437>, decimal)
assocAST: (inlinedCallArgs2435_id2436, <TRANSFER_id2295>, string) => (enforce-unit_id2299, <enforce-unit_id2299>, string)
assocAST: (inlinedCallArgs2435_id2436, <TRANSFER_id2295>, string) => (enforce-unit_id2299, <TRANSFER_id2295>, string)
assocAST: (inlinedCallArgs2435_amount2437, <TRANSFER_amount2298>, decimal) => (enforce-unit_amount2300, <enforce-unit_amount2300>, decimal)
assocAST: (inlinedCallArgs2435_amount2437, <TRANSFER_amount2298>, decimal) => (enforce-unit_amount2300, <TRANSFER_amount2298>, decimal)
assocTy: (<key2333>, string) <=> string
assocTy: (<key2333>, string) <= string
trackAST: (inlinedCallArgs2438, <inlinedCallArgs2438>)
assocTy: (<inlinedCallArgs2438>, <inlinedCallArgs2438>) <=> string
assocTy: (<inlinedCallArgs2438>, <inlinedCallArgs2438>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2438> <= string
trackAST: (inlinedCallArgs2438_id2439, string)
assocAST: (account-guard_id2324, <account-guard_id2324>, string) => (inlinedCallArgs2438_id2439, <inlinedCallArgs2438_id2439>, string)
trackAST: (inlinedCallArgs2438_account2440, string)
assocAST: (account-guard_account2325, <account-guard_account2325>, string) => (inlinedCallArgs2438_account2440, <inlinedCallArgs2438_account2440>, string)
assocAST: (inlinedCallArgs2438_id2439, <account-guard_id2324>, string) => (key_id2328, <key_id2328>, string)
assocAST: (inlinedCallArgs2438_account2440, <account-guard_account2325>, string) => (key_account2329, <key_account2329>, string)
assocTy: (<account-guard2339>, guard) <=> guard
assocTy: (<account-guard2339>, guard) <= guard
trackAST: (inlinedCallArgs2441, <inlinedCallArgs2441>)
assocTy: (<inlinedCallArgs2441>, <inlinedCallArgs2441>) <=> guard
assocTy: (<inlinedCallArgs2441>, <inlinedCallArgs2441>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs2441> <= guard
trackAST: (inlinedCallArgs2441_id2442, string)
assocAST: (DEBIT_id2321, <DEBIT_id2321>, string) => (inlinedCallArgs2441_id2442, <inlinedCallArgs2441_id2442>, string)
trackAST: (inlinedCallArgs2441_account2443, string)
assocAST: (DEBIT_sender2322, <DEBIT_sender2322>, string) => (inlinedCallArgs2441_account2443, <inlinedCallArgs2441_account2443>, string)
assocAST: (inlinedCallArgs2441_id2442, <DEBIT_id2321>, string) => (account-guard_id2324, <account-guard_id2324>, string)
assocAST: (inlinedCallArgs2441_id2442, <DEBIT_id2321>, string) => (account-guard_id2324, <DEBIT_id2321>, string)
assocAST: (inlinedCallArgs2441_account2443, <DEBIT_sender2322>, string) => (account-guard_account2325, <account-guard_account2325>, string)
assocAST: (inlinedCallArgs2441_account2443, <DEBIT_sender2322>, string) => (account-guard_account2325, <DEBIT_sender2322>, string)
assocTy: (<enforce-guard2323>, <enforce-guard2323>) <=> <DEBIT2342_e>
assocTy: (<enforce-guard2323>, <enforce-guard2323>) <= <DEBIT2342_e>
assocTy: tracking/updating type variable <enforce-guard2323> <= <DEBIT2342_e>
trackAST: (inlinedCallArgs2444, <inlinedCallArgs2444>)
assocTy: (<inlinedCallArgs2444>, <inlinedCallArgs2444>) <=> <DEBIT2342_e>
assocTy: (<inlinedCallArgs2444>, <inlinedCallArgs2444>) <= <DEBIT2342_e>
assocTy: tracking/updating type variable <inlinedCallArgs2444> <= <DEBIT2342_e>
trackAST: (inlinedCallArgs2444_id2445, string)
assocAST: (TRANSFER_id2295, <TRANSFER_id2295>, string) => (inlinedCallArgs2444_id2445, <inlinedCallArgs2444_id2445>, string)
trackAST: (inlinedCallArgs2444_sender2446, string)
assocAST: (TRANSFER_sender2296, <TRANSFER_sender2296>, string) => (inlinedCallArgs2444_sender2446, <inlinedCallArgs2444_sender2446>, string)
assocAST: (inlinedCallArgs2444_id2445, <TRANSFER_id2295>, string) => (DEBIT_id2321, <DEBIT_id2321>, string)
assocAST: (inlinedCallArgs2444_id2445, <TRANSFER_id2295>, string) => (DEBIT_id2321, <TRANSFER_id2295>, string)
assocAST: (inlinedCallArgs2444_sender2446, <TRANSFER_sender2296>, string) => (DEBIT_sender2322, <DEBIT_sender2322>, string)
assocAST: (inlinedCallArgs2444_sender2446, <TRANSFER_sender2296>, string) => (DEBIT_sender2322, <TRANSFER_sender2296>, string)
assocTy: (<bool2346>, bool) <=> <CREDIT2348_g>
assocTy: bool => <CREDIT2348_g>
trackAST: (inlinedCallArgs2447, <inlinedCallArgs2447>)
assocTy: (<inlinedCallArgs2447>, <inlinedCallArgs2447>) <=> <CREDIT2348_g>
assocTy: (<inlinedCallArgs2447>, <inlinedCallArgs2447>) <= <CREDIT2348_g>
assocTy: tracking/updating type variable <inlinedCallArgs2447> <= <CREDIT2348_g>
trackAST: (inlinedCallArgs2447_id2448, string)
assocAST: (TRANSFER_id2295, <TRANSFER_id2295>, string) => (inlinedCallArgs2447_id2448, <inlinedCallArgs2447_id2448>, string)
trackAST: (inlinedCallArgs2447_receiver2449, string)
assocAST: (TRANSFER_receiver2297, <TRANSFER_receiver2297>, string) => (inlinedCallArgs2447_receiver2449, <inlinedCallArgs2447_receiver2449>, string)
assocTy: (<sale-account2355>, string) <=> string
assocTy: (<sale-account2355>, string) <= string
trackAST: (inlinedCallArgs2450, <inlinedCallArgs2450>)
assocTy: (<inlinedCallArgs2450>, <inlinedCallArgs2450>) <=> string
assocTy: (<inlinedCallArgs2450>, <inlinedCallArgs2450>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2450> <= string
assocTy: (<TRANSFER2349>, bool) <=> bool
assocTy: (<TRANSFER2349>, bool) <= bool
trackAST: (inlinedCallArgs2451, <inlinedCallArgs2451>)
assocTy: (<inlinedCallArgs2451>, <inlinedCallArgs2451>) <=> bool
assocTy: (<inlinedCallArgs2451>, <inlinedCallArgs2451>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2451> <= bool
trackAST: (inlinedCallArgs2451_id2452, string)
assocAST: (withdraw_id2046, <withdraw_id2046>, string) => (inlinedCallArgs2451_id2452, <inlinedCallArgs2451_id2452>, string)
trackAST: (inlinedCallArgs2451_sender2453, string)
assocAST: (sale-account2356, <sale-account2355>, string) => (inlinedCallArgs2451_sender2453, <inlinedCallArgs2451_sender2453>, string)
trackAST: (inlinedCallArgs2451_receiver2454, string)
assocAST: (withdraw_seller2047, <withdraw_seller2047>, string) => (inlinedCallArgs2451_receiver2454, <inlinedCallArgs2451_receiver2454>, string)
trackAST: (inlinedCallArgs2451_amount2455, decimal)
assocAST: (withdraw_amount2048, <withdraw_amount2048>, decimal) => (inlinedCallArgs2451_amount2455, <inlinedCallArgs2451_amount2455>, decimal)
assocAST: (inlinedCallArgs2451_id2452, <withdraw_id2046>, string) => (TRANSFER_id2295, <TRANSFER_id2295>, string)
assocAST: (inlinedCallArgs2451_id2452, <withdraw_id2046>, string) => (TRANSFER_id2295, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2451_amount2455, <withdraw_amount2048>, decimal) => (TRANSFER_amount2298, <TRANSFER_amount2298>, decimal)
assocAST: (inlinedCallArgs2451_amount2455, <withdraw_amount2048>, decimal) => (TRANSFER_amount2298, <withdraw_amount2048>, decimal)
assocAST: (inlinedCallArgs2451_amount2455, <withdraw_amount2048>, decimal) => (TRANSFER_amount2298, <withdraw_amount2048>, decimal)
assocAST: (inlinedCallArgs2451_id2452, <withdraw_id2046>, string) => (TRANSFER_id2295, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2451_id2452, <withdraw_id2046>, string) => (TRANSFER_id2295, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2451_sender2453, <sale-account2355>, string) => (TRANSFER_sender2296, <TRANSFER_sender2296>, string)
assocAST: (inlinedCallArgs2451_sender2453, <sale-account2355>, string) => (TRANSFER_sender2296, <sale-account2355>, string)
assocAST: (inlinedCallArgs2451_id2452, <withdraw_id2046>, string) => (TRANSFER_id2295, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2451_id2452, <withdraw_id2046>, string) => (TRANSFER_id2295, <withdraw_id2046>, string)
assocAST: (inlinedCallArgs2451_receiver2454, <withdraw_seller2047>, string) => (TRANSFER_receiver2297, <TRANSFER_receiver2297>, string)
assocAST: (inlinedCallArgs2451_receiver2454, <withdraw_seller2047>, string) => (TRANSFER_receiver2297, <withdraw_seller2047>, string)
assocTy: (<bool2362>, bool) <=> bool
assocTy: (<bool2362>, bool) <= bool
trackAST: (inlinedCallArgs2456, <inlinedCallArgs2456>)
assocTy: (<inlinedCallArgs2456>, <inlinedCallArgs2456>) <=> bool
assocTy: (<inlinedCallArgs2456>, <inlinedCallArgs2456>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2456> <= bool
trackAST: (inlinedCallArgs2456_token-id2457, string)
assocAST: (withdraw_id2046, <withdraw_id2046>, string) => (inlinedCallArgs2456_token-id2457, <inlinedCallArgs2456_token-id2457>, string)
trackAST: (inlinedCallArgs2456_amount2458, decimal)
assocAST: (withdraw_amount2048, <withdraw_amount2048>, decimal) => (inlinedCallArgs2456_amount2458, <inlinedCallArgs2456_amount2458>, decimal)
trackAST: (inlinedCallArgs2456_sender2459, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet2055_sender2056, <debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs2456_sender2459, <inlinedCallArgs2456_sender2459>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs2456_receiver2460, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet2055_receiver2138, <credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs2456_receiver2460, <inlinedCallArgs2456_receiver2460>, object:{kip.poly-fungible-v3.receiver-balance-change})
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2051>, bool) <=> bool
assocTy: (<bool2051>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2049>, <require-capability2049>) <=> bool
assocTy: (<require-capability2049>, <require-capability2049>) <= bool
assocTy: tracking/updating type variable <require-capability2049> <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs2366_sale-id2367>, string) <=> string
assocTy: (<inlinedCallArgs2366_sale-id2367>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs2366_sale-id2367>, string) <=> string
assocTy: (<inlinedCallArgs2366_sale-id2367>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2133>, string) <=> string
assocTy: (<string2133>, string) <= string
assocTy: (<list2134>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account2136>, string) <=> string
assocTy: (<sale-account2136>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2135>, <pact-id2135>) <=> string
assocTy: (<pact-id2135>, <pact-id2135>) <= string
assocTy: tracking/updating type variable <pact-id2135> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard2063>, <DEBIT2082_e>) <=> bool
assocTy: (<enforce-guard2063>, <DEBIT2082_e>) <= bool
assocTy: tracking/updating type variable <DEBIT2082_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2060>, <require-capability2060>) <=> bool
assocTy: (<require-capability2060>, <require-capability2060>) <= bool
assocTy: tracking/updating type variable <require-capability2060> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2066_row}> key:string bindings:binding:<{with-read2066_row}> -> <with-read2066_a>
assocTy: (<marmalade.ledger.ledger2067>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2066_row}>
assocTy: (<{with-read2066_row}>, <{with-read2066_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2066_row}>, <{with-read2066_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2066_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2066_row}>)
assocTy: (<key2073>, string) <=> string
assocTy: (<key2073>, string) <= string
assocTy: (<account-guard2079>, guard) <=> <with-read2066_a>
assocTy: guard => <with-read2066_a>
assocTy: (<BindSchema2075_guard2076_f>, <BindSchema2075_guard2076_f>) <=> <with-read2066_a>
assocTy: (<BindSchema2075_guard2076_f>, <BindSchema2075_guard2076_f>) <= <with-read2066_a>
assocTy: tracking/updating type variable <BindSchema2075_guard2076_f> <= <with-read2066_a>
assocTy: (<BindSchema2075schema2078>, *) <=> binding:<{with-read2066_row}>
assocTy: (<BindSchema2075schema2078>, *) <= binding:<{with-read2066_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2071>, string) <=> string
assocTy: (<string2071>, string) <= string
assocTy: (<list2072>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2073>, string) <=> string
assocTy: (<key2073>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2095>, <=2095>) <=> bool
assocTy: (<=2095>, <=2095>) <= bool
assocTy: tracking/updating type variable <=2095> <= bool
assocTy: (<string2097>, string) <=> string
assocTy: (<string2097>, string) <= string
assocTy: (<enforce-unit2098>, bool) <=> bool
assocTy: (<enforce-unit2098>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor2096>, <floor2096>) <=> <=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor2096>, <floor2096>) <= <=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor2096> <= <=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<withdraw_amount2048>, decimal) <=> <=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2095_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2095>, bool) <=> bool
assocTy: (<=2095>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2100_row}> key:string bindings:binding:<{with-read2100_row}> -> <with-read2100_a>
assocTy: (<marmalade.ledger.ledger2101>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2100_row}>
assocTy: (<{with-read2100_row}>, <{with-read2100_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2100_row}>, <{with-read2100_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2100_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2100_row}>)
assocTy: (<key2107>, string) <=> string
assocTy: (<key2107>, string) <= string
assocTy: (<debit2130>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read2100_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read2100_a>
assocTy: (<object2128>, object:*) <=> <with-read2100_a>
assocTy: (<BindSchema2109schema2129>, *) <=> binding:<{with-read2100_row}>
assocTy: (<BindSchema2109schema2129>, *) <= binding:<{with-read2100_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=2113>, <<=2113>) <=> bool
assocTy: (<<=2113>, <<=2113>) <= bool
assocTy: tracking/updating type variable <<=2113> <= bool
assocTy: (<string2114>, string) <=> string
assocTy: (<string2114>, string) <= string
assocTy: (<enforce2112>, <enforce2112>) <=> bool
assocTy: (<enforce2112>, <enforce2112>) <= bool
assocTy: tracking/updating type variable <enforce2112> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=2113_a[integer,decimal,string,time]> y:<<=2113_a[integer,decimal,string,time]> -> bool
assocTy: (<withdraw_amount2048>, decimal) <=> <<=2113_a[integer,decimal,string,time]>
assocTy: decimal => <<=2113_a[integer,decimal,string,time]>
assocTy: (<BindSchema2109_old-bal2110_aa>, <BindSchema2109_old-bal2110_aa>) <=> <<=2113_a[integer,decimal,string,time]>
assocTy: (<BindSchema2109_old-bal2110_aa>, <BindSchema2109_old-bal2110_aa>) <= <<=2113_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema2109_old-bal2110_aa> <= <<=2113_a[integer,decimal,string,time]>
assocTy: (<<=2113>, bool) <=> bool
assocTy: (<<=2113>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update2118_row}> key:string object:object:~<{update2118_row}> -> string
assocTy: (<marmalade.ledger.ledger2119>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update2118_row}>
assocTy: (<{update2118_row}>, <{update2118_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update2118_row}>, <{update2118_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update2118_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update2118_row}>)
assocTy: (<key2125>, string) <=> string
assocTy: (<key2125>, string) <= string
assocTy: (<object2127>, object:*) <=> object:~<{update2118_row}>
assocTy: (<object2127>, object:*) <= object:~<{update2118_row}>
assocTy: (<update2118>, <update2118>) <=> string
assocTy: (<update2118>, <update2118>) <= string
assocTy: tracking/updating type variable <update2118> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2123>, string) <=> string
assocTy: (<string2123>, string) <= string
assocTy: (<list2124>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2125>, string) <=> string
assocTy: (<key2125>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2105>, string) <=> string
assocTy: (<string2105>, string) <= string
assocTy: (<list2106>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2107>, string) <=> string
assocTy: (<key2107>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2133>, string) <=> string
assocTy: (<string2133>, string) <= string
assocTy: (<list2134>, [*]) <=> [*]
assocTy: (<list2134>, [*]) <= [*]
assocTy: (<sale-account2136>, string) <=> string
assocTy: (<sale-account2136>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2135>, string) <=> string
assocTy: (<pact-id2135>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2277_row}> key:string bindings:binding:<{with-read2277_row}> -> <with-read2277_a>
assocTy: (<marmalade.ledger.ledger2278>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2277_row}>
assocTy: (<{with-read2277_row}>, <{with-read2277_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2277_row}>, <{with-read2277_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2277_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2277_row}>)
assocTy: (<key2284>, string) <=> string
assocTy: (<key2284>, string) <= string
assocTy: (<account-guard2290>, guard) <=> <with-read2277_a>
assocTy: guard => <with-read2277_a>
assocTy: (<BindSchema2286_guard2287_f>, <BindSchema2286_guard2287_f>) <=> <with-read2277_a>
assocTy: (<BindSchema2286_guard2287_f>, <BindSchema2286_guard2287_f>) <= <with-read2277_a>
assocTy: tracking/updating type variable <BindSchema2286_guard2287_f> <= <with-read2277_a>
assocTy: (<BindSchema2286schema2289>, *) <=> binding:<{with-read2277_row}>
assocTy: (<BindSchema2286schema2289>, *) <= binding:<{with-read2277_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2282>, string) <=> string
assocTy: (<string2282>, string) <= string
assocTy: (<list2283>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2284>, string) <=> string
assocTy: (<key2284>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>2148>, <>2148>) <=> bool
assocTy: (<>2148>, <>2148>) <= bool
assocTy: tracking/updating type variable <>2148> <= bool
assocTy: (<string2151>, string) <=> string
assocTy: (<string2151>, string) <= string
assocTy: (<enforce2147>, <enforce-valid-account2153_c>) <=> bool
assocTy: (<enforce2147>, <enforce-valid-account2153_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account2153_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>2148_a[integer,decimal,string,time]> y:<>2148_a[integer,decimal,string,time]> -> bool
assocTy: (<length2149>, <length2149>) <=> <>2148_a[integer,decimal,string,time]>
assocTy: (<length2149>, <length2149>) <= <>2148_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length2149> <= <>2148_a[integer,decimal,string,time]>
assocTy: (<integer2150>, integer) <=> <>2148_a[integer,decimal,string,time]>
assocTy: integer => <>2148_a[integer,decimal,string,time]>
assocTy: (<>2148>, bool) <=> bool
assocTy: (<>2148>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length2149_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<withdraw_seller2047>, string) <=> <length2149_a[[<l>],string,object:<{o}>]>
assocTy: string => <length2149_a[[<l>],string,object:<{o}>]>
assocTy: (<length2149>, integer) <=> integer
assocTy: (<length2149>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2166>, <=2166>) <=> bool
assocTy: (<=2166>, <=2166>) <= bool
assocTy: tracking/updating type variable <=2166> <= bool
assocTy: (<string2168>, string) <=> string
assocTy: (<string2168>, string) <= string
assocTy: (<enforce-unit2169>, bool) <=> bool
assocTy: (<enforce-unit2169>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor2167>, <floor2167>) <=> <=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor2167>, <floor2167>) <= <=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor2167> <= <=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<withdraw_amount2048>, decimal) <=> <=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2166_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2166>, bool) <=> bool
assocTy: (<=2166>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2174>, bool) <=> bool
assocTy: (<bool2174>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2171>, <require-capability2171>) <=> bool
assocTy: (<require-capability2171>, <require-capability2171>) <= bool
assocTy: tracking/updating type variable <require-capability2171> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read2177_row}> key:string defaults:object:~<{with-default-read2177_row}> bindings:binding:~<{with-default-read2177_row}> -> <with-default-read2177_a>
assocTy: (<marmalade.ledger.ledger2178>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read2177_row}>
assocTy: (<{with-default-read2177_row}>, <{with-default-read2177_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read2177_row}>, <{with-default-read2177_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read2177_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read2177_row}>)
assocTy: (<key2184>, string) <=> string
assocTy: (<key2184>, string) <= string
assocTy: (<object2186>, object:*) <=> object:~<{with-default-read2177_row}>
assocTy: (<object2186>, object:*) <= object:~<{with-default-read2177_row}>
assocTy: (<credit2273>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read2177_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read2177_a>
assocTy: (<object2269>, object:*) <=> <with-default-read2177_a>
assocTy: (<BindSchema2188schema2272>, *) <=> binding:~<{with-default-read2177_row}>
assocTy: (<BindSchema2188schema2272>, *) <= binding:~<{with-default-read2177_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2194>, <=2194>) <=> bool
assocTy: (<=2194>, <=2194>) <= bool
assocTy: tracking/updating type variable <=2194> <= bool
assocTy: (<string2195>, string) <=> string
assocTy: (<string2195>, string) <= string
assocTy: (<enforce2193>, <enforce2193>) <=> bool
assocTy: (<enforce2193>, <enforce2193>) <= bool
assocTy: tracking/updating type variable <enforce2193> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2194_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2194_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs2411_guard2414>, guard) <=> <=2194_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=2194_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<account-guard2290>, guard) <=> <=2194_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2194>, bool) <=> bool
assocTy: (<=2194>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2198_a> else:<if2198_a> -> <if2198_a>
assocTy: (<=2199>, <=2199>) <=> bool
assocTy: (<=2199>, <=2199>) <= bool
assocTy: tracking/updating type variable <=2199> <= bool
assocTy: (<enforce-reserved2243>, bool) <=> <if2198_a>
assocTy: bool => <if2198_a>
assocTy: (<bool2245>, bool) <=> <if2198_a>
assocTy: (<if2198>, <if2198>) <=> <if2198_a>
assocTy: (<if2198>, <if2198>) <= <if2198_a>
assocTy: tracking/updating type variable <if2198> <= <if2198_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema2188_old-bal2189_ac>, <BindSchema2188_old-bal2189_ac>) <=> <=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema2188_old-bal2189_ac>, <BindSchema2188_old-bal2189_ac>) <= <=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema2188_old-bal2189_ac> <= <=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal2200>, decimal) <=> <=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2199_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2199>, bool) <=> bool
assocTy: (<=2199>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2210_a> else:<if2210_a> -> <if2210_a>
assocTy: (<=2211>, <=2211>) <=> bool
assocTy: (<=2211>, <=2211>) <= bool
assocTy: tracking/updating type variable <=2211> <= bool
assocTy: (<take2215>, <take2215>) <=> <if2210_a>
assocTy: (<take2215>, <take2215>) <= <if2210_a>
assocTy: tracking/updating type variable <take2215> <= <if2210_a>
assocTy: (<string2217>, string) <=> <if2210_a>
assocTy: string => <if2210_a>
assocTy: (<check-reserved2218>, string) <=> <if2210_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2212>, string) <=> <=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take2213>, <take2213>) <=> <=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take2213>, <take2213>) <= <=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take2213> <= <=2211_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2211>, bool) <=> bool
assocTy: (<=2211>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2220_a> else:<if2220_a> -> <if2220_a>
assocTy: (<=2221>, <=2221>) <=> bool
assocTy: (<=2221>, <=2221>) <= bool
assocTy: tracking/updating type variable <=2221> <= bool
assocTy: (<bool2223>, bool) <=> <if2220_a>
assocTy: bool => <if2220_a>
assocTy: (<if2224>, <if2224>) <=> <if2220_a>
assocTy: (<if2224>, <if2224>) <= <if2220_a>
assocTy: tracking/updating type variable <if2224> <= <if2220_a>
assocTy: (<enforce-reserved2243>, bool) <=> <if2220_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2221_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2221_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2222>, string) <=> <=2221_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2221_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved2218>, string) <=> <=2221_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2221>, bool) <=> bool
assocTy: (<=2221>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2224_a> else:<if2224_a> -> <if2224_a>
assocTy: (<=2225>, <=2225>) <=> bool
assocTy: (<=2225>, <=2225>) <= bool
assocTy: tracking/updating type variable <=2225> <= bool
assocTy: (<enforce2227>, <enforce2227>) <=> <if2224_a>
assocTy: (<enforce2227>, <enforce2227>) <= <if2224_a>
assocTy: tracking/updating type variable <enforce2227> <= <if2224_a>
assocTy: (<enforce2238>, <enforce2238>) <=> <if2224_a>
assocTy: (<enforce2238>, <enforce2238>) <= <if2224_a>
assocTy: tracking/updating type variable <enforce2238> <= <if2224_a>
assocTy: (<if2224>, bool) <=> <if2224_a>
assocTy: bool => <if2224_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2225_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2225_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2226>, string) <=> <=2225_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2225_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved2218>, string) <=> <=2225_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2225>, bool) <=> bool
assocTy: (<=2225>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2228>, <=2228>) <=> bool
assocTy: (<=2228>, <=2228>) <= bool
assocTy: tracking/updating type variable <=2228> <= bool
assocTy: (<string2237>, string) <=> string
assocTy: (<string2237>, string) <= string
assocTy: (<enforce2227>, bool) <=> bool
assocTy: (<enforce2227>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format2229>, <format2229>) <=> <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2229>, <format2229>) <= <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format2229> <= <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2232>, <format2232>) <=> <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2232>, <format2232>) <= <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format2232> <= <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2228>, bool) <=> bool
assocTy: (<=2228>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2230>, string) <=> string
assocTy: (<string2230>, string) <= string
assocTy: (<list2231>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format2229>, <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format2229>, <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=2228_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2233>, string) <=> string
assocTy: (<string2233>, string) <= string
assocTy: (<list2234>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format2232>, string) <=> string
assocTy: (<format2232>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool2239>, bool) <=> bool
assocTy: (<bool2239>, bool) <= bool
assocTy: (<format2240>, <format2240>) <=> string
assocTy: (<format2240>, <format2240>) <= string
assocTy: tracking/updating type variable <format2240> <= string
assocTy: (<enforce2238>, bool) <=> bool
assocTy: (<enforce2238>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2241>, string) <=> string
assocTy: (<string2241>, string) <= string
assocTy: (<list2242>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format2240>, string) <=> string
assocTy: (<format2240>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2248_a> else:<if2248_a> -> <if2248_a>
assocTy: (<if2198>, bool) <=> bool
assocTy: (<if2198>, bool) <= bool
assocTy: (<withdraw_amount2048>, decimal) <=> <if2248_a>
assocTy: decimal => <if2248_a>
assocTy: (<+2249>, <+2249>) <=> <if2248_a>
assocTy: (<+2249>, <+2249>) <= <if2248_a>
assocTy: tracking/updating type variable <+2249> <= <if2248_a>
assocTy: (<if2248>, <if2248>) <=> <if2248_a>
assocTy: (<if2248>, <if2248>) <= <if2248_a>
assocTy: tracking/updating type variable <if2248> <= <if2248_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write2250_row}> key:string object:object:<{write2250_row}> -> string
assocTy: (<marmalade.ledger.ledger2251>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write2250_row}>
assocTy: (<{write2250_row}>, <{write2250_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write2250_row}>, <{write2250_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write2250_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write2250_row}>)
assocTy: (<key2257>, string) <=> string
assocTy: (<key2257>, string) <= string
assocTy: (<object2259>, object:*) <=> object:<{write2250_row}>
assocTy: (<object2259>, object:*) <= object:<{write2250_row}>
assocTy: (<write2250>, <write2250>) <=> string
assocTy: (<write2250>, <write2250>) <= string
assocTy: tracking/updating type variable <write2250> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2255>, string) <=> string
assocTy: (<string2255>, string) <= string
assocTy: (<list2256>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2257>, string) <=> string
assocTy: (<key2257>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2260_a> else:<if2260_a> -> <if2260_a>
assocTy: (<if2198>, bool) <=> bool
assocTy: (<if2198>, bool) <= bool
assocTy: (<emit-event2261>, <emit-event2261>) <=> <if2260_a>
assocTy: (<emit-event2261>, <emit-event2261>) <= <if2260_a>
assocTy: tracking/updating type variable <emit-event2261> <= <if2260_a>
assocTy: (<bool2268>, bool) <=> <if2260_a>
assocTy: bool => <if2260_a>
assocTy: (<if2260>, <if2260>) <=> <if2260_a>
assocTy: (<if2260>, <if2260>) <= <if2260_a>
assocTy: tracking/updating type variable <if2260> <= <if2260_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2265>, bool) <=> bool
assocTy: (<bool2265>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event2261>, bool) <=> bool
assocTy: (<emit-event2261>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2270_a> else:<if2270_a> -> <if2270_a>
assocTy: (<if2198>, bool) <=> bool
assocTy: (<if2198>, bool) <= bool
assocTy: (<decimal2271>, decimal) <=> <if2270_a>
assocTy: decimal => <if2270_a>
assocTy: (<BindSchema2188_old-bal2189_ac>, decimal) <=> <if2270_a>
assocTy: (<if2270>, <if2270>) <=> <if2270_a>
assocTy: (<if2270>, <if2270>) <= <if2270_a>
assocTy: tracking/updating type variable <if2270> <= <if2270_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2182>, string) <=> string
assocTy: (<string2182>, string) <= string
assocTy: (<list2183>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2184>, string) <=> string
assocTy: (<key2184>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2277_row}> key:string bindings:binding:<{with-read2277_row}> -> <with-read2277_a>
assocTy: (<marmalade.ledger.ledger2278>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2277_row}>
assocTy: (<{with-read2277_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2277_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2277_row}>)
assocTy: (<key2284>, string) <=> string
assocTy: (<key2284>, string) <= string
assocTy: (<account-guard2290>, guard) <=> <with-read2277_a>
assocTy: (<BindSchema2286_guard2287_f>, guard) <=> <with-read2277_a>
assocTy: (<BindSchema2286schema2289>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read2277_row}>
assocTy: (<{with-read2277_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2277_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read2277_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2282>, string) <=> string
assocTy: (<string2282>, string) <= string
assocTy: (<list2283>, [*]) <=> [*]
assocTy: (<list2283>, [*]) <= [*]
assocTy: (<key2284>, string) <=> string
assocTy: (<key2284>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER2349>, bool) <=> bool
assocTy: (<TRANSFER2349>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event2294>, <emit-event2294>) <=> bool
assocTy: (<emit-event2294>, <emit-event2294>) <= bool
assocTy: tracking/updating type variable <emit-event2294> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2352>, string) <=> string
assocTy: (<string2352>, string) <= string
assocTy: (<list2353>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account2355>, string) <=> string
assocTy: (<sale-account2355>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2354>, <pact-id2354>) <=> string
assocTy: (<pact-id2354>, <pact-id2354>) <= string
assocTy: tracking/updating type variable <pact-id2354> <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2311>, <=2311>) <=> bool
assocTy: (<=2311>, <=2311>) <= bool
assocTy: tracking/updating type variable <=2311> <= bool
assocTy: (<string2313>, string) <=> string
assocTy: (<string2313>, string) <= string
assocTy: (<enforce-unit2314>, bool) <=> bool
assocTy: (<enforce-unit2314>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor2312>, <floor2312>) <=> <=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor2312>, <floor2312>) <= <=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor2312> <= <=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<withdraw_amount2048>, decimal) <=> <=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2311>, bool) <=> bool
assocTy: (<=2311>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>2317>, <>2317>) <=> bool
assocTy: (<>2317>, <>2317>) <= bool
assocTy: tracking/updating type variable <>2317> <= bool
assocTy: (<string2319>, string) <=> string
assocTy: (<string2319>, string) <= string
assocTy: (<enforce2316>, <enforce2316>) <=> bool
assocTy: (<enforce2316>, <enforce2316>) <= bool
assocTy: tracking/updating type variable <enforce2316> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>2317_a[integer,decimal,string,time]> y:<>2317_a[integer,decimal,string,time]> -> bool
assocTy: (<withdraw_amount2048>, decimal) <=> <>2317_a[integer,decimal,string,time]>
assocTy: decimal => <>2317_a[integer,decimal,string,time]>
assocTy: (<decimal2318>, decimal) <=> <>2317_a[integer,decimal,string,time]>
assocTy: (<>2317>, bool) <=> bool
assocTy: (<>2317>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard2323>, <DEBIT2342_e>) <=> bool
assocTy: (<enforce-guard2323>, <DEBIT2342_e>) <= bool
assocTy: tracking/updating type variable <DEBIT2342_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability2320>, <compose-capability2320>) <=> bool
assocTy: (<compose-capability2320>, <compose-capability2320>) <= bool
assocTy: tracking/updating type variable <compose-capability2320> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2326_row}> key:string bindings:binding:<{with-read2326_row}> -> <with-read2326_a>
assocTy: (<marmalade.ledger.ledger2327>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2326_row}>
assocTy: (<{with-read2326_row}>, <{with-read2326_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2326_row}>, <{with-read2326_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2326_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2326_row}>)
assocTy: (<key2333>, string) <=> string
assocTy: (<key2333>, string) <= string
assocTy: (<account-guard2339>, guard) <=> <with-read2326_a>
assocTy: guard => <with-read2326_a>
assocTy: (<BindSchema2335_guard2336_f>, <BindSchema2335_guard2336_f>) <=> <with-read2326_a>
assocTy: (<BindSchema2335_guard2336_f>, <BindSchema2335_guard2336_f>) <= <with-read2326_a>
assocTy: tracking/updating type variable <BindSchema2335_guard2336_f> <= <with-read2326_a>
assocTy: (<BindSchema2335schema2338>, *) <=> binding:<{with-read2326_row}>
assocTy: (<BindSchema2335schema2338>, *) <= binding:<{with-read2326_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2331>, string) <=> string
assocTy: (<string2331>, string) <= string
assocTy: (<list2332>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2333>, string) <=> string
assocTy: (<key2333>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2346>, bool) <=> bool
assocTy: (<bool2346>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER2349>, bool) <=> bool
assocTy: (<TRANSFER2349>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2352>, string) <=> string
assocTy: (<string2352>, string) <= string
assocTy: (<list2353>, [*]) <=> [*]
assocTy: (<list2353>, [*]) <= [*]
assocTy: (<sale-account2355>, string) <=> string
assocTy: (<sale-account2355>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2354>, string) <=> string
assocTy: (<pact-id2354>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2362>, bool) <=> bool
assocTy: (<bool2362>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<withdraw2365>, bool) <=> bool
assocTy: (<withdraw2365>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list2134::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2075schema2078::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2075_guard2076_f>, guard) <=> guard
assocTy: (<BindSchema2075_guard2076_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2072::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2109schema2129::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2109_old-bal2110_aa>, decimal) <=> decimal
assocTy: (<BindSchema2109_old-bal2110_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list2124::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2127::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-2117>, <-2117>) <=> decimal
assocTy: (<-2117>, <-2117>) <= decimal
assocTy: tracking/updating type variable <-2117> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object2127>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object2127>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list2106::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2134::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2286schema2289::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2286_guard2287_f>, guard) <=> guard
assocTy: (<BindSchema2286_guard2287_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2283::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2188schema2272::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2188_old-bal2189_ac>, decimal) <=> decimal
assocTy: (<BindSchema2188_old-bal2189_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs2411_guard2414>, guard) <=> guard
assocTy: (<inlinedCallArgs2411_guard2414>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2231::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2234::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2242::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2256::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2259::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<withdraw_seller2047>, string) <=> string
assocTy: (<withdraw_seller2047>, string) <= string
assocTy: (<if2248>, decimal) <=> decimal
assocTy: (<if2248>, decimal) <= decimal
assocTy: (<inlinedCallArgs2411_guard2414>, guard) <=> guard
assocTy: (<inlinedCallArgs2411_guard2414>, guard) <= guard
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
Skipping TC on specified heterogenous list for node: list2183::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2186::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal2187>, decimal) <=> decimal
assocTy: (<decimal2187>, decimal) <= decimal
assocTy: (<account-guard2290>, guard) <=> guard
assocTy: (<account-guard2290>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object2186>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object2186>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
applySchemas [binding]: (BindSchema2286schema2289::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2286_guard2287_f>, guard) <=> guard
assocTy: (<BindSchema2286_guard2287_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2283::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2353::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2335schema2338::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2335_guard2336_f>, guard) <=> guard
assocTy: (<BindSchema2335_guard2336_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2332::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2353::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard2323::<enforce-guard2323>, tyVar=<enforce-guard2323>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard2340::<account-guard2340>, tyVar=<account-guard2339>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard2323, <enforce-guard2323>, bool)]), (guard, [(account-guard2340, <account-guard2339>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard2323, <enforce-guard2323>)])), (guard, (guard, [(account-guard2340, <account-guard2339>)]))]
Adjusting type for solution: ((enforce-guard2323, <enforce-guard2323>), bool, bool)
assocTy: (<enforce-guard2323>, bool) <=> bool
assocTy: (<enforce-guard2323>, bool) <= bool
assocTy: (<enforce-guard2323>, bool) <=> bool
assocTy: (<enforce-guard2323>, bool) <= bool
Adjusting type for solution: ((account-guard2340, <account-guard2339>), guard, guard)
assocTy: (<account-guard2339>, guard) <=> guard
assocTy: (<account-guard2339>, guard) <= guard
assocTy: (<account-guard2339>, guard) <=> guard
assocTy: (<account-guard2339>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor2312::<floor2312>, tyVar=<floor2312>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs2435_amount2437::decimal, tyVar=<withdraw_amount2048>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet2301_p2302::<BindLet2301_p2302_ai>, tyVar=<precision2308>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet2301_p2302, <precision2308>, integer)]), (decimal, [(floor2312, <floor2312>, decimal), (inlinedCallArgs2435_amount2437, <withdraw_amount2048>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet2301_p2302, <precision2308>)])), (decimal, (decimal, [(floor2312, <floor2312>), (inlinedCallArgs2435_amount2437, <withdraw_amount2048>)]))]
Adjusting type for solution: ((BindLet2301_p2302, <precision2308>), integer, integer)
assocTy: (<precision2308>, integer) <=> integer
assocTy: (<precision2308>, integer) <= integer
assocTy: (<precision2308>, integer) <=> integer
assocTy: (<precision2308>, integer) <= integer
Adjusting type for solution: ((floor2312, <floor2312>), decimal, decimal)
assocTy: (<floor2312>, decimal) <=> decimal
assocTy: (<floor2312>, decimal) <= decimal
assocTy: (<floor2312>, decimal) <=> decimal
assocTy: (<floor2312>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs2435_amount2437, <withdraw_amount2048>), decimal, decimal)
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2306_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2306_row}>, roleTy=<read2306>
tryFunType: cand: table:table:<{read2306_row}> key:string -> object:<{read2306_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2306_row}>, AST=read2306::<read2306>, tyVar=<read2306>, resolvedTy=<read2306>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2306_row}>, AST=marmalade.ledger.tokens2307::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens2307>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs2433_id2434::string, tyVar=<withdraw_id2046>, resolvedTy=string})]
tryFunType: trying table:table:<{read2306_row}> key:string -> object:<{read2306_row}> with [(string, [(inlinedCallArgs2433_id2434, <withdraw_id2046>, string)]), (table:<{read2306_row}>, [(marmalade.ledger.tokens2307, <marmalade.ledger.tokens2307>, table:{marmalade.ledger.token-schema})]), (object:<{read2306_row}>, [(read2306, <read2306>, <read2306>)])]
Solved overload with table:table:<{read2306_row}> key:string -> object:<{read2306_row}>: [(string, (string, [(inlinedCallArgs2433_id2434, <withdraw_id2046>)])), (table:<{read2306_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens2307, <marmalade.ledger.tokens2307>)])), (object:<{read2306_row}>, (object:<{read2306_row}>, [(read2306, <read2306>)]))]
Adjusting type for solution: ((inlinedCallArgs2433_id2434, <withdraw_id2046>), string, string)
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens2307, <marmalade.ledger.tokens2307>), table:<{read2306_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens2307>, table:{marmalade.ledger.token-schema}) <=> table:<{read2306_row}>
assocTy: (<{read2306_row}>, <{read2306_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2306_row}>, <{read2306_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read2306_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read2306_row}>)
assocTy: (<marmalade.ledger.tokens2307>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens2307>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read2306, <read2306>), object:<{read2306_row}>, object:<{read2306_row}>)
assocTy: (<read2306>, <read2306>) <=> object:<{read2306_row}>
assocTy: (<read2306>, <read2306>) <= object:<{read2306_row}>
assocTy: tracking/updating type variable <read2306> <= object:<{read2306_row}>
assocTy: (<read2306>, object:{marmalade.ledger.token-schema}) <=> object:<{read2306_row}>
assocTy: (<{read2306_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2306_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read2306_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2304_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2304_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2304_l>] -> <at2304_a>: roles=[(RetVar, RoleTys { candArgTy=<at2304_a>, AST=at2304::<at2304>, tyVar=<precision2308>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2304_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2304_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2304_o}> -> <at2304_a>, roles=[(RetVar, RoleTys { candArgTy=<at2304_a>, AST=at2304::<at2304>, tyVar=<precision2308>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2305::string, tyVar=<string2305>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2304_o}>, AST=read2306::<read2306>, tyVar=<read2306>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at2304_o}> -> <at2304_a> with [(<at2304_a>, [(at2304, <precision2308>, integer)]), (string, [(string2305, <string2305>, string)]), (object:<{at2304_o}>, [(read2306, <read2306>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at2304_o}> -> <at2304_a>: [(<at2304_a>, (integer, [(at2304, <precision2308>)])), (string, (string, [(string2305, <string2305>)])), (object:<{at2304_o}>, (object:{marmalade.ledger.token-schema}, [(read2306, <read2306>)]))]
Adjusting type for solution: ((at2304, <precision2308>), <at2304_a>, integer)
assocTy: (<precision2308>, integer) <=> <at2304_a>
assocTy: integer => <at2304_a>
assocTy: (<precision2308>, integer) <=> integer
assocTy: (<precision2308>, integer) <= integer
Adjusting type for solution: ((string2305, <string2305>), string, string)
assocTy: (<string2305>, string) <=> string
assocTy: (<string2305>, string) <= string
assocTy: (<string2305>, string) <=> string
assocTy: (<string2305>, string) <= string
Adjusting type for solution: ((read2306, <read2306>), object:<{at2304_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read2306>, object:{marmalade.ledger.token-schema}) <=> object:<{at2304_o}>
assocTy: (<{at2304_o}>, <{at2304_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at2304_o}>, <{at2304_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at2304_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at2304_o}>)
assocTy: (<read2306>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read2306>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+2249_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+2249_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+2249_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+2249_a[integer,decimal]> y:<+2249_a[integer,decimal]> -> <+2249_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+2249_a[integer,decimal]>, AST=+2249::<+2249>, tyVar=<+2249>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+2249_a[integer,decimal]>, AST=BindSchema2188_old-bal2189::<BindSchema2188_old-bal2189_ac>, tyVar=<BindSchema2188_old-bal2189_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+2249_a[integer,decimal]>, AST=inlinedCallArgs2424_amount2428::decimal, tyVar=<withdraw_amount2048>, resolvedTy=decimal})]
tryFunType: trying x:<+2249_a[integer,decimal]> y:<+2249_a[integer,decimal]> -> <+2249_a[integer,decimal]> with [(<+2249_a[integer,decimal]>, [(+2249, <+2249>, decimal), (inlinedCallArgs2424_amount2428, <withdraw_amount2048>, decimal), (BindSchema2188_old-bal2189, <BindSchema2188_old-bal2189_ac>, decimal)])]
Solved overload with x:<+2249_a[integer,decimal]> y:<+2249_a[integer,decimal]> -> <+2249_a[integer,decimal]>: [(<+2249_a[integer,decimal]>, (decimal, [(+2249, <+2249>), (inlinedCallArgs2424_amount2428, <withdraw_amount2048>), (BindSchema2188_old-bal2189, <BindSchema2188_old-bal2189_ac>)]))]
Adjusting type for solution: ((+2249, <+2249>), <+2249_a[integer,decimal]>, decimal)
assocTy: (<+2249>, decimal) <=> <+2249_a[integer,decimal]>
assocTy: decimal => <+2249_a[integer,decimal]>
assocTy: (<+2249>, decimal) <=> decimal
assocTy: (<+2249>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs2424_amount2428, <withdraw_amount2048>), <+2249_a[integer,decimal]>, decimal)
assocTy: (<withdraw_amount2048>, decimal) <=> <+2249_a[integer,decimal]>
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
Adjusting type for solution: ((BindSchema2188_old-bal2189, <BindSchema2188_old-bal2189_ac>), <+2249_a[integer,decimal]>, decimal)
assocTy: (<BindSchema2188_old-bal2189_ac>, decimal) <=> <+2249_a[integer,decimal]>
assocTy: (<BindSchema2188_old-bal2189_ac>, decimal) <=> decimal
assocTy: (<BindSchema2188_old-bal2189_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop2235_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop2235_a[[<l>],string]>, roleTy=<drop2235>
tryFunType: cand: count:integer list:<drop2235_a[[<l>],string]> -> <drop2235_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop2235_a[[<l>],string]>, AST=drop2235::<drop2235>, tyVar=<drop2235>, resolvedTy=<drop2235>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2236::integer, tyVar=<integer2236>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop2235_a[[<l>],string]>, AST=inlinedCallArgs2405_account2406::string, tyVar=<withdraw_seller2047>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop2235_a[[<l>],string]> -> <drop2235_a[[<l>],string]> with [(<drop2235_a[[<l>],string]>, [(drop2235, <drop2235>, <drop2235>), (inlinedCallArgs2405_account2406, <withdraw_seller2047>, string)]), (integer, [(integer2236, <integer2236>, integer)])]
Solved overload with count:integer list:<drop2235_a[[<l>],string]> -> <drop2235_a[[<l>],string]>: [(<drop2235_a[[<l>],string]>, (string, [(drop2235, <drop2235>), (inlinedCallArgs2405_account2406, <withdraw_seller2047>)])), (integer, (integer, [(integer2236, <integer2236>)]))]
Adjusting type for solution: ((drop2235, <drop2235>), <drop2235_a[[<l>],string]>, string)
assocTy: (<drop2235>, <drop2235>) <=> <drop2235_a[[<l>],string]>
assocTy: (<drop2235>, <drop2235>) <= <drop2235_a[[<l>],string]>
assocTy: tracking/updating type variable <drop2235> <= <drop2235_a[[<l>],string]>
assocTy: (<drop2235>, <drop2235_a[[<l>],string]>) <=> string
assocTy: (<drop2235>, <drop2235_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop2235_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs2405_account2406, <withdraw_seller2047>), <drop2235_a[[<l>],string]>, string)
assocTy: (<withdraw_seller2047>, string) <=> <drop2235_a[[<l>],string]>
assocTy: (<withdraw_seller2047>, string) <=> string
assocTy: (<withdraw_seller2047>, string) <= string
Adjusting type for solution: ((integer2236, <integer2236>), integer, integer)
assocTy: (<integer2236>, integer) <=> integer
assocTy: (<integer2236>, integer) <= integer
assocTy: (<integer2236>, integer) <=> integer
assocTy: (<integer2236>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2215_a[[<l>],string]>, roleTy=<take2208>
tryFunType: unify role: role=RetVar, candTy=<take2215_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2215_a[[<l>],string]> -> <take2215_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2215_a[[<l>],string]>, AST=take2215::<take2215>, tyVar=<take2215>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2216::integer, tyVar=<integer2216>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2215_a[[<l>],string]>, AST=BindLet2206_pfx2207::<BindLet2206_pfx2207_f>, tyVar=<take2208>, resolvedTy=<take2208>})]
tryFunType: trying count:integer list:<take2215_a[[<l>],string]> -> <take2215_a[[<l>],string]> with [(<take2215_a[[<l>],string]>, [(take2215, <take2215>, string), (BindLet2206_pfx2207, <take2208>, <take2208>)]), (integer, [(integer2216, <integer2216>, integer)])]
Solved overload with count:integer list:<take2215_a[[<l>],string]> -> <take2215_a[[<l>],string]>: [(<take2215_a[[<l>],string]>, (string, [(take2215, <take2215>), (BindLet2206_pfx2207, <take2208>)])), (integer, (integer, [(integer2216, <integer2216>)]))]
Adjusting type for solution: ((take2215, <take2215>), <take2215_a[[<l>],string]>, string)
assocTy: (<take2215>, string) <=> <take2215_a[[<l>],string]>
assocTy: string => <take2215_a[[<l>],string]>
assocTy: (<take2215>, string) <=> string
assocTy: (<take2215>, string) <= string
Adjusting type for solution: ((BindLet2206_pfx2207, <take2208>), <take2215_a[[<l>],string]>, string)
assocTy: (<take2208>, <take2208>) <=> <take2215_a[[<l>],string]>
assocTy: (<take2208>, <take2208>) <= <take2215_a[[<l>],string]>
assocTy: tracking/updating type variable <take2208> <= <take2215_a[[<l>],string]>
assocTy: (<take2208>, string) <=> string
assocTy: (<take2208>, string) <= string
Adjusting type for solution: ((integer2216, <integer2216>), integer, integer)
assocTy: (<integer2216>, integer) <=> integer
assocTy: (<integer2216>, integer) <= integer
assocTy: (<integer2216>, integer) <=> integer
assocTy: (<integer2216>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2213_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take2213_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2213_a[[<l>],string]> -> <take2213_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2213_a[[<l>],string]>, AST=take2213::<take2213>, tyVar=<take2213>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2214::integer, tyVar=<integer2214>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2213_a[[<l>],string]>, AST=BindLet2206_pfx2207::<BindLet2206_pfx2207_f>, tyVar=<take2208>, resolvedTy=string})]
tryFunType: trying count:integer list:<take2213_a[[<l>],string]> -> <take2213_a[[<l>],string]> with [(<take2213_a[[<l>],string]>, [(take2213, <take2213>, string), (BindLet2206_pfx2207, <take2208>, string)]), (integer, [(integer2214, <integer2214>, integer)])]
Solved overload with count:integer list:<take2213_a[[<l>],string]> -> <take2213_a[[<l>],string]>: [(<take2213_a[[<l>],string]>, (string, [(take2213, <take2213>), (BindLet2206_pfx2207, <take2208>)])), (integer, (integer, [(integer2214, <integer2214>)]))]
Adjusting type for solution: ((take2213, <take2213>), <take2213_a[[<l>],string]>, string)
assocTy: (<take2213>, string) <=> <take2213_a[[<l>],string]>
assocTy: string => <take2213_a[[<l>],string]>
assocTy: (<take2213>, string) <=> string
assocTy: (<take2213>, string) <= string
Adjusting type for solution: ((BindLet2206_pfx2207, <take2208>), <take2213_a[[<l>],string]>, string)
assocTy: (<take2208>, string) <=> <take2213_a[[<l>],string]>
assocTy: (<take2208>, string) <=> string
assocTy: (<take2208>, string) <= string
Adjusting type for solution: ((integer2214, <integer2214>), integer, integer)
assocTy: (<integer2214>, integer) <=> integer
assocTy: (<integer2214>, integer) <= integer
assocTy: (<integer2214>, integer) <=> integer
assocTy: (<integer2214>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2208_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take2208_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2208_a[[<l>],string]> -> <take2208_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2208_a[[<l>],string]>, AST=take2208::<take2208>, tyVar=<take2208>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2209::integer, tyVar=<integer2209>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2208_a[[<l>],string]>, AST=inlinedCallArgs2403_account2404::string, tyVar=<withdraw_seller2047>, resolvedTy=string})]
tryFunType: trying count:integer list:<take2208_a[[<l>],string]> -> <take2208_a[[<l>],string]> with [(<take2208_a[[<l>],string]>, [(take2208, <take2208>, string), (inlinedCallArgs2403_account2404, <withdraw_seller2047>, string)]), (integer, [(integer2209, <integer2209>, integer)])]
Solved overload with count:integer list:<take2208_a[[<l>],string]> -> <take2208_a[[<l>],string]>: [(<take2208_a[[<l>],string]>, (string, [(take2208, <take2208>), (inlinedCallArgs2403_account2404, <withdraw_seller2047>)])), (integer, (integer, [(integer2209, <integer2209>)]))]
Adjusting type for solution: ((take2208, <take2208>), <take2208_a[[<l>],string]>, string)
assocTy: (<take2208>, string) <=> <take2208_a[[<l>],string]>
assocTy: string => <take2208_a[[<l>],string]>
assocTy: (<take2208>, string) <=> string
assocTy: (<take2208>, string) <= string
Adjusting type for solution: ((inlinedCallArgs2403_account2404, <withdraw_seller2047>), <take2208_a[[<l>],string]>, string)
assocTy: (<withdraw_seller2047>, string) <=> <take2208_a[[<l>],string]>
assocTy: (<withdraw_seller2047>, string) <=> string
assocTy: (<withdraw_seller2047>, string) <= string
Adjusting type for solution: ((integer2209, <integer2209>), integer, integer)
assocTy: (<integer2209>, integer) <=> integer
assocTy: (<integer2209>, integer) <= integer
assocTy: (<integer2209>, integer) <=> integer
assocTy: (<integer2209>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor2167::<floor2167>, tyVar=<floor2167>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs2397_amount2399::decimal, tyVar=<withdraw_amount2048>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet2156_p2157::<BindLet2156_p2157_ai>, tyVar=<precision2163>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet2156_p2157, <precision2163>, integer)]), (decimal, [(floor2167, <floor2167>, decimal), (inlinedCallArgs2397_amount2399, <withdraw_amount2048>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet2156_p2157, <precision2163>)])), (decimal, (decimal, [(floor2167, <floor2167>), (inlinedCallArgs2397_amount2399, <withdraw_amount2048>)]))]
Adjusting type for solution: ((BindLet2156_p2157, <precision2163>), integer, integer)
assocTy: (<precision2163>, integer) <=> integer
assocTy: (<precision2163>, integer) <= integer
assocTy: (<precision2163>, integer) <=> integer
assocTy: (<precision2163>, integer) <= integer
Adjusting type for solution: ((floor2167, <floor2167>), decimal, decimal)
assocTy: (<floor2167>, decimal) <=> decimal
assocTy: (<floor2167>, decimal) <= decimal
assocTy: (<floor2167>, decimal) <=> decimal
assocTy: (<floor2167>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs2397_amount2399, <withdraw_amount2048>), decimal, decimal)
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2161_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2161_row}>, roleTy=<read2161>
tryFunType: cand: table:table:<{read2161_row}> key:string -> object:<{read2161_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2161_row}>, AST=read2161::<read2161>, tyVar=<read2161>, resolvedTy=<read2161>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2161_row}>, AST=marmalade.ledger.tokens2162::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens2162>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs2395_id2396::string, tyVar=<withdraw_id2046>, resolvedTy=string})]
tryFunType: trying table:table:<{read2161_row}> key:string -> object:<{read2161_row}> with [(string, [(inlinedCallArgs2395_id2396, <withdraw_id2046>, string)]), (table:<{read2161_row}>, [(marmalade.ledger.tokens2162, <marmalade.ledger.tokens2162>, table:{marmalade.ledger.token-schema})]), (object:<{read2161_row}>, [(read2161, <read2161>, <read2161>)])]
Solved overload with table:table:<{read2161_row}> key:string -> object:<{read2161_row}>: [(string, (string, [(inlinedCallArgs2395_id2396, <withdraw_id2046>)])), (table:<{read2161_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens2162, <marmalade.ledger.tokens2162>)])), (object:<{read2161_row}>, (object:<{read2161_row}>, [(read2161, <read2161>)]))]
Adjusting type for solution: ((inlinedCallArgs2395_id2396, <withdraw_id2046>), string, string)
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens2162, <marmalade.ledger.tokens2162>), table:<{read2161_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens2162>, table:{marmalade.ledger.token-schema}) <=> table:<{read2161_row}>
assocTy: (<{read2161_row}>, <{read2161_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2161_row}>, <{read2161_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read2161_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read2161_row}>)
assocTy: (<marmalade.ledger.tokens2162>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens2162>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read2161, <read2161>), object:<{read2161_row}>, object:<{read2161_row}>)
assocTy: (<read2161>, <read2161>) <=> object:<{read2161_row}>
assocTy: (<read2161>, <read2161>) <= object:<{read2161_row}>
assocTy: tracking/updating type variable <read2161> <= object:<{read2161_row}>
assocTy: (<read2161>, object:{marmalade.ledger.token-schema}) <=> object:<{read2161_row}>
assocTy: (<{read2161_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2161_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read2161_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2159_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2159_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2159_l>] -> <at2159_a>: roles=[(RetVar, RoleTys { candArgTy=<at2159_a>, AST=at2159::<at2159>, tyVar=<precision2163>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2159_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2159_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2159_o}> -> <at2159_a>, roles=[(RetVar, RoleTys { candArgTy=<at2159_a>, AST=at2159::<at2159>, tyVar=<precision2163>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2160::string, tyVar=<string2160>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2159_o}>, AST=read2161::<read2161>, tyVar=<read2161>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at2159_o}> -> <at2159_a> with [(<at2159_a>, [(at2159, <precision2163>, integer)]), (string, [(string2160, <string2160>, string)]), (object:<{at2159_o}>, [(read2161, <read2161>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at2159_o}> -> <at2159_a>: [(<at2159_a>, (integer, [(at2159, <precision2163>)])), (string, (string, [(string2160, <string2160>)])), (object:<{at2159_o}>, (object:{marmalade.ledger.token-schema}, [(read2161, <read2161>)]))]
Adjusting type for solution: ((at2159, <precision2163>), <at2159_a>, integer)
assocTy: (<precision2163>, integer) <=> <at2159_a>
assocTy: integer => <at2159_a>
assocTy: (<precision2163>, integer) <=> integer
assocTy: (<precision2163>, integer) <= integer
Adjusting type for solution: ((string2160, <string2160>), string, string)
assocTy: (<string2160>, string) <=> string
assocTy: (<string2160>, string) <= string
assocTy: (<string2160>, string) <=> string
assocTy: (<string2160>, string) <= string
Adjusting type for solution: ((read2161, <read2161>), object:<{at2159_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read2161>, object:{marmalade.ledger.token-schema}) <=> object:<{at2159_o}>
assocTy: (<{at2159_o}>, <{at2159_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at2159_o}>, <{at2159_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at2159_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at2159_o}>)
assocTy: (<read2161>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read2161>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-2117_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-2117_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-2117_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-2117_a[integer,decimal]> y:<-2117_a[integer,decimal]> -> <-2117_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-2117_a[integer,decimal]>, AST=-2117::<-2117>, tyVar=<-2117>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-2117_a[integer,decimal]>, AST=BindSchema2109_old-bal2110::<BindSchema2109_old-bal2110_aa>, tyVar=<BindSchema2109_old-bal2110_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-2117_a[integer,decimal]>, AST=inlinedCallArgs2389_amount2392::decimal, tyVar=<withdraw_amount2048>, resolvedTy=decimal})]
tryFunType: trying x:<-2117_a[integer,decimal]> y:<-2117_a[integer,decimal]> -> <-2117_a[integer,decimal]> with [(<-2117_a[integer,decimal]>, [(-2117, <-2117>, decimal), (inlinedCallArgs2389_amount2392, <withdraw_amount2048>, decimal), (BindSchema2109_old-bal2110, <BindSchema2109_old-bal2110_aa>, decimal)])]
Solved overload with x:<-2117_a[integer,decimal]> y:<-2117_a[integer,decimal]> -> <-2117_a[integer,decimal]>: [(<-2117_a[integer,decimal]>, (decimal, [(-2117, <-2117>), (inlinedCallArgs2389_amount2392, <withdraw_amount2048>), (BindSchema2109_old-bal2110, <BindSchema2109_old-bal2110_aa>)]))]
Adjusting type for solution: ((-2117, <-2117>), <-2117_a[integer,decimal]>, decimal)
assocTy: (<-2117>, decimal) <=> <-2117_a[integer,decimal]>
assocTy: decimal => <-2117_a[integer,decimal]>
assocTy: (<-2117>, decimal) <=> decimal
assocTy: (<-2117>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs2389_amount2392, <withdraw_amount2048>), <-2117_a[integer,decimal]>, decimal)
assocTy: (<withdraw_amount2048>, decimal) <=> <-2117_a[integer,decimal]>
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
Adjusting type for solution: ((BindSchema2109_old-bal2110, <BindSchema2109_old-bal2110_aa>), <-2117_a[integer,decimal]>, decimal)
assocTy: (<BindSchema2109_old-bal2110_aa>, decimal) <=> <-2117_a[integer,decimal]>
assocTy: (<BindSchema2109_old-bal2110_aa>, decimal) <=> decimal
assocTy: (<BindSchema2109_old-bal2110_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor2096::<floor2096>, tyVar=<floor2096>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs2379_amount2381::decimal, tyVar=<withdraw_amount2048>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet2085_p2086::<BindLet2085_p2086_ai>, tyVar=<precision2092>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet2085_p2086, <precision2092>, integer)]), (decimal, [(floor2096, <floor2096>, decimal), (inlinedCallArgs2379_amount2381, <withdraw_amount2048>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet2085_p2086, <precision2092>)])), (decimal, (decimal, [(floor2096, <floor2096>), (inlinedCallArgs2379_amount2381, <withdraw_amount2048>)]))]
Adjusting type for solution: ((BindLet2085_p2086, <precision2092>), integer, integer)
assocTy: (<precision2092>, integer) <=> integer
assocTy: (<precision2092>, integer) <= integer
assocTy: (<precision2092>, integer) <=> integer
assocTy: (<precision2092>, integer) <= integer
Adjusting type for solution: ((floor2096, <floor2096>), decimal, decimal)
assocTy: (<floor2096>, decimal) <=> decimal
assocTy: (<floor2096>, decimal) <= decimal
assocTy: (<floor2096>, decimal) <=> decimal
assocTy: (<floor2096>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs2379_amount2381, <withdraw_amount2048>), decimal, decimal)
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
assocTy: (<withdraw_amount2048>, decimal) <=> decimal
assocTy: (<withdraw_amount2048>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2090_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2090_row}>, roleTy=<read2090>
tryFunType: cand: table:table:<{read2090_row}> key:string -> object:<{read2090_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2090_row}>, AST=read2090::<read2090>, tyVar=<read2090>, resolvedTy=<read2090>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2090_row}>, AST=marmalade.ledger.tokens2091::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens2091>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs2377_id2378::string, tyVar=<withdraw_id2046>, resolvedTy=string})]
tryFunType: trying table:table:<{read2090_row}> key:string -> object:<{read2090_row}> with [(string, [(inlinedCallArgs2377_id2378, <withdraw_id2046>, string)]), (table:<{read2090_row}>, [(marmalade.ledger.tokens2091, <marmalade.ledger.tokens2091>, table:{marmalade.ledger.token-schema})]), (object:<{read2090_row}>, [(read2090, <read2090>, <read2090>)])]
Solved overload with table:table:<{read2090_row}> key:string -> object:<{read2090_row}>: [(string, (string, [(inlinedCallArgs2377_id2378, <withdraw_id2046>)])), (table:<{read2090_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens2091, <marmalade.ledger.tokens2091>)])), (object:<{read2090_row}>, (object:<{read2090_row}>, [(read2090, <read2090>)]))]
Adjusting type for solution: ((inlinedCallArgs2377_id2378, <withdraw_id2046>), string, string)
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
assocTy: (<withdraw_id2046>, string) <=> string
assocTy: (<withdraw_id2046>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens2091, <marmalade.ledger.tokens2091>), table:<{read2090_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens2091>, table:{marmalade.ledger.token-schema}) <=> table:<{read2090_row}>
assocTy: (<{read2090_row}>, <{read2090_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2090_row}>, <{read2090_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read2090_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read2090_row}>)
assocTy: (<marmalade.ledger.tokens2091>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens2091>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read2090, <read2090>), object:<{read2090_row}>, object:<{read2090_row}>)
assocTy: (<read2090>, <read2090>) <=> object:<{read2090_row}>
assocTy: (<read2090>, <read2090>) <= object:<{read2090_row}>
assocTy: tracking/updating type variable <read2090> <= object:<{read2090_row}>
assocTy: (<read2090>, object:{marmalade.ledger.token-schema}) <=> object:<{read2090_row}>
assocTy: (<{read2090_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2090_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read2090_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2088_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2088_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2088_l>] -> <at2088_a>: roles=[(RetVar, RoleTys { candArgTy=<at2088_a>, AST=at2088::<at2088>, tyVar=<precision2092>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2088_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2088_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2088_o}> -> <at2088_a>, roles=[(RetVar, RoleTys { candArgTy=<at2088_a>, AST=at2088::<at2088>, tyVar=<precision2092>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2089::string, tyVar=<string2089>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2088_o}>, AST=read2090::<read2090>, tyVar=<read2090>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at2088_o}> -> <at2088_a> with [(<at2088_a>, [(at2088, <precision2092>, integer)]), (string, [(string2089, <string2089>, string)]), (object:<{at2088_o}>, [(read2090, <read2090>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at2088_o}> -> <at2088_a>: [(<at2088_a>, (integer, [(at2088, <precision2092>)])), (string, (string, [(string2089, <string2089>)])), (object:<{at2088_o}>, (object:{marmalade.ledger.token-schema}, [(read2090, <read2090>)]))]
Adjusting type for solution: ((at2088, <precision2092>), <at2088_a>, integer)
assocTy: (<precision2092>, integer) <=> <at2088_a>
assocTy: integer => <at2088_a>
assocTy: (<precision2092>, integer) <=> integer
assocTy: (<precision2092>, integer) <= integer
Adjusting type for solution: ((string2089, <string2089>), string, string)
assocTy: (<string2089>, string) <=> string
assocTy: (<string2089>, string) <= string
assocTy: (<string2089>, string) <=> string
assocTy: (<string2089>, string) <= string
Adjusting type for solution: ((read2090, <read2090>), object:<{at2088_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read2090>, object:{marmalade.ledger.token-schema}) <=> object:<{at2088_o}>
assocTy: (<{at2088_o}>, <{at2088_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at2088_o}>, <{at2088_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at2088_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at2088_o}>)
assocTy: (<read2090>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read2090>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard2063::<enforce-guard2063>, tyVar=<enforce-guard2063>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard2080::<account-guard2080>, tyVar=<account-guard2079>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard2063, <enforce-guard2063>, bool)]), (guard, [(account-guard2080, <account-guard2079>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard2063, <enforce-guard2063>)])), (guard, (guard, [(account-guard2080, <account-guard2079>)]))]
Adjusting type for solution: ((enforce-guard2063, <enforce-guard2063>), bool, bool)
assocTy: (<enforce-guard2063>, bool) <=> bool
assocTy: (<enforce-guard2063>, bool) <= bool
assocTy: (<enforce-guard2063>, bool) <=> bool
assocTy: (<enforce-guard2063>, bool) <= bool
Adjusting type for solution: ((account-guard2080, <account-guard2079>), guard, guard)
assocTy: (<account-guard2079>, guard) <=> guard
assocTy: (<account-guard2079>, guard) <= guard
assocTy: (<account-guard2079>, guard) <=> guard
assocTy: (<account-guard2079>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.withdraw:bool (id:string s...
===== Fun: (defun marmalade.ledger.details:object:(defschema ...
trackAST: (details_id2462, string)
trackAST: (details_account2463, string)
trackAST: (read2464, <read2464>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2465, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2466, string)
trackAST: (key_account2467, string)
trackAST: (format2468, <format2468>)
trackAST: (string2469, string)
trackAST: (list2470, [<ak>])
trackAST: (key2471, string)
assocAST: (key2471, <key2471>, string) => (format2468, <format2468>, <format2468>)
trackAST: (key2472, <key2472>)
assocAST: (format2468, <key2471>, string) => (key2472, <key2472>, <key2472>)
trackAST: (details2473, object:{kip.poly-fungible-v3.account-details})
assocAST: (details2473, <details2473>, object:{kip.poly-fungible-v3.account-details}) => (read2464, <read2464>, <read2464>)
--------------------------------
 Substitute defuns:

assocTy: (<key2471>, string) <=> string
assocTy: (<key2471>, string) <= string
trackAST: (inlinedCallArgs2474, <inlinedCallArgs2474>)
assocTy: (<inlinedCallArgs2474>, <inlinedCallArgs2474>) <=> string
assocTy: (<inlinedCallArgs2474>, <inlinedCallArgs2474>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2474> <= string
trackAST: (inlinedCallArgs2474_id2475, string)
assocAST: (details_id2462, <details_id2462>, string) => (inlinedCallArgs2474_id2475, <inlinedCallArgs2474_id2475>, string)
trackAST: (inlinedCallArgs2474_account2476, string)
assocAST: (details_account2463, <details_account2463>, string) => (inlinedCallArgs2474_account2476, <inlinedCallArgs2474_account2476>, string)
assocAST: (inlinedCallArgs2474_id2475, <details_id2462>, string) => (key_id2466, <key_id2466>, string)
assocAST: (inlinedCallArgs2474_account2476, <details_account2463>, string) => (key_account2467, <key_account2467>, string)
--------------------------------
Substitute natives:

Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2469>, string) <=> string
assocTy: (<string2469>, string) <= string
assocTy: (<list2470>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2471>, string) <=> string
assocTy: (<key2471>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list2470::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2464_row}>, roleTy=table:{kip.poly-fungible-v3.account-details}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2464_row}>, roleTy=object:{kip.poly-fungible-v3.account-details}
tryFunType: cand: table:table:<{read2464_row}> key:string -> object:<{read2464_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2464_row}>, AST=read2464::<read2464>, tyVar=<details2473>, resolvedTy=object:{kip.poly-fungible-v3.account-details}}), (ArgVar 0, RoleTys { candArgTy=table:<{read2464_row}>, AST=marmalade.ledger.ledger2465::table:{kip.poly-fungible-v3.account-details}, tyVar=<marmalade.ledger.ledger2465>, resolvedTy=table:{kip.poly-fungible-v3.account-details}}), (ArgVar 1, RoleTys { candArgTy=string, AST=key2472::<key2472>, tyVar=<key2471>, resolvedTy=string})]
tryFunType: trying table:table:<{read2464_row}> key:string -> object:<{read2464_row}> with [(string, [(key2472, <key2471>, string)]), (table:<{read2464_row}>, [(marmalade.ledger.ledger2465, <marmalade.ledger.ledger2465>, table:{kip.poly-fungible-v3.account-details})]), (object:<{read2464_row}>, [(read2464, <details2473>, object:{kip.poly-fungible-v3.account-details})])]
Solved overload with table:table:<{read2464_row}> key:string -> object:<{read2464_row}>: [(string, (string, [(key2472, <key2471>)])), (table:<{read2464_row}>, (table:{kip.poly-fungible-v3.account-details}, [(marmalade.ledger.ledger2465, <marmalade.ledger.ledger2465>)])), (object:<{read2464_row}>, (object:{kip.poly-fungible-v3.account-details}, [(read2464, <details2473>)]))]
Adjusting type for solution: ((key2472, <key2471>), string, string)
assocTy: (<key2471>, string) <=> string
assocTy: (<key2471>, string) <= string
assocTy: (<key2471>, string) <=> string
assocTy: (<key2471>, string) <= string
Adjusting type for solution: ((marmalade.ledger.ledger2465, <marmalade.ledger.ledger2465>), table:<{read2464_row}>, table:{kip.poly-fungible-v3.account-details})
assocTy: (<marmalade.ledger.ledger2465>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{read2464_row}>
assocTy: (<{read2464_row}>, <{read2464_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{read2464_row}>, <{read2464_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{read2464_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{read2464_row}>)
assocTy: (<marmalade.ledger.ledger2465>, table:{kip.poly-fungible-v3.account-details}) <=> table:{kip.poly-fungible-v3.account-details}
assocTy: (<marmalade.ledger.ledger2465>, table:{kip.poly-fungible-v3.account-details}) <= table:{kip.poly-fungible-v3.account-details}
Adjusting type for solution: ((read2464, <details2473>), object:<{read2464_row}>, object:{kip.poly-fungible-v3.account-details})
assocTy: (<details2473>, object:{kip.poly-fungible-v3.account-details}) <=> object:<{read2464_row}>
assocTy: (<{read2464_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{read2464_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (object:{kip.poly-fungible-v3.account-details}, object:<{read2464_row}>)
assocTy: (<details2473>, object:{kip.poly-fungible-v3.account-details}) <=> object:{kip.poly-fungible-v3.account-details}
assocTy: (<details2473>, object:{kip.poly-fungible-v3.account-details}) <= object:{kip.poly-fungible-v3.account-details}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.details:object:(defschema ...
===== Fun: (defun marmalade.ledger.credit:object:(defschema r...
trackAST: (credit_id2478, string)
trackAST: (credit_account2479, string)
trackAST: (credit_guard2480, guard)
trackAST: (credit_amount2481, decimal)
trackAST: (enforce-valid-account_account2482, string)
trackAST: (enforce2483, <enforce2483>)
trackAST: (>2484, <>2484>)
trackAST: (length2485, <length2485>)
trackAST: (integer2486, integer)
trackAST: (string2487, string)
trackAST: (enforce-valid-account2488, <c>)
assocAST: (enforce2483, <enforce2483>, <enforce2483>) => (enforce-valid-account2488, <c>, <c>)
trackAST: (enforce-valid-account2489, <enforce-valid-account2489>)
assocAST: (enforce2483, <enforce2483>, <enforce2483>) => (enforce-valid-account2489, <enforce-valid-account2489>, <enforce-valid-account2489>)
trackAST: (enforce-unit_id2490, string)
trackAST: (enforce-unit_amount2491, decimal)
trackAST: (BindLet2492, <BindLet2492>)
trackAST: (BindLet2492_p2493, <BindLet2492_p2493_ai>)
trackAST: (precision_id2494, string)
trackAST: (at2495, <at2495>)
trackAST: (string2496, string)
trackAST: (read2497, <read2497>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2498, table:{marmalade.ledger.token-schema})
trackAST: (precision2499, integer)
assocAST: (precision2499, <precision2499>, integer) => (at2495, <at2495>, <at2495>)
trackAST: (precision2500, <precision2500>)
assocAST: (at2495, <precision2499>, integer) => (precision2500, <precision2500>, <precision2500>)
assocAST: (precision2500, <precision2499>, integer) => (BindLet2492_p2493, <BindLet2492_p2493_ai>, <BindLet2492_p2493_ai>)
trackAST: (enforce2501, <enforce2501>)
trackAST: (=2502, <=2502>)
trackAST: (floor2503, <floor2503>)
trackAST: (string2504, string)
assocAST: (enforce2501, <enforce2501>, <enforce2501>) => (BindLet2492, <BindLet2492>, <BindLet2492>)
trackAST: (enforce-unit2505, bool)
assocAST: (enforce-unit2505, <enforce-unit2505>, bool) => (BindLet2492, <enforce2501>, <enforce2501>)
trackAST: (enforce-unit2506, <enforce-unit2506>)
assocAST: (BindLet2492, <enforce-unit2505>, bool) => (enforce-unit2506, <enforce-unit2506>, <enforce-unit2506>)
trackAST: (require-capability2507, <require-capability2507>)
trackAST: (CREDIT_id2508, string)
trackAST: (CREDIT_receiver2509, string)
trackAST: (bool2510, bool)
trackAST: (CREDIT2511, <g>)
assocAST: (bool2510, <bool2510>, bool) => (CREDIT2511, <g>, <g>)
trackAST: (CREDIT2512, <CREDIT2512>)
assocAST: (bool2510, <bool2510>, bool) => (CREDIT2512, <CREDIT2512>, <CREDIT2512>)
trackAST: (with-default-read2513, <with-default-read2513>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2514, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2515, string)
trackAST: (key_account2516, string)
trackAST: (format2517, <format2517>)
trackAST: (string2518, string)
trackAST: (list2519, [<ak>])
trackAST: (key2520, string)
assocAST: (key2520, <key2520>, string) => (format2517, <format2517>, <format2517>)
trackAST: (key2521, <key2521>)
assocAST: (format2517, <key2520>, string) => (key2521, <key2521>, <key2521>)
TObject: TyAny
trackAST: (object2522, object:*)
trackAST: (decimal2523, decimal)
trackAST: (BindSchema2524, <BindSchema2524>)
trackAST: (BindSchema2524_old-bal2525, <BindSchema2524_old-bal2525_ac>)
trackAST: (string2526, string)
trackAST: (BindSchema2524_retg2527, <BindSchema2524_retg2527_ad>)
trackAST: (string2528, string)
trackAST: (enforce2529, <enforce2529>)
trackAST: (=2530, <=2530>)
trackAST: (string2531, string)
trackAST: (BindLet2532, <BindLet2532>)
trackAST: (BindLet2532_is-new2533, <BindLet2532_is-new2533_ae>)
trackAST: (if2534, <if2534>)
trackAST: (=2535, <=2535>)
trackAST: (decimal2536, decimal)
trackAST: (enforce-reserved_account2537, string)
trackAST: (enforce-reserved_guard2538, guard)
trackAST: (BindLet2539, <BindLet2539>)
trackAST: (BindLet2539_r2540, <BindLet2539_r2540_g>)
trackAST: (check-reserved_account2541, string)
trackAST: (BindLet2542, <BindLet2542>)
trackAST: (BindLet2542_pfx2543, <BindLet2542_pfx2543_f>)
trackAST: (take2544, <take2544>)
trackAST: (integer2545, integer)
assocAST: (take2544, <take2544>, <take2544>) => (BindLet2542_pfx2543, <BindLet2542_pfx2543_f>, <BindLet2542_pfx2543_f>)
trackAST: (if2546, <if2546>)
trackAST: (=2547, <=2547>)
trackAST: (string2548, string)
trackAST: (take2549, <take2549>)
trackAST: (integer2550, integer)
trackAST: (take2551, <take2551>)
trackAST: (integer2552, integer)
trackAST: (string2553, string)
assocAST: (if2546, <if2546>, <if2546>) => (BindLet2542, <BindLet2542>, <BindLet2542>)
trackAST: (check-reserved2554, string)
assocAST: (check-reserved2554, <check-reserved2554>, string) => (BindLet2542, <if2546>, <if2546>)
trackAST: (check-reserved2555, <check-reserved2555>)
assocAST: (BindLet2542, <check-reserved2554>, string) => (check-reserved2555, <check-reserved2555>, <check-reserved2555>)
assocAST: (check-reserved2555, <check-reserved2554>, string) => (BindLet2539_r2540, <BindLet2539_r2540_g>, <BindLet2539_r2540_g>)
trackAST: (if2556, <if2556>)
trackAST: (=2557, <=2557>)
trackAST: (string2558, string)
trackAST: (bool2559, bool)
trackAST: (if2560, <if2560>)
trackAST: (=2561, <=2561>)
trackAST: (string2562, string)
trackAST: (enforce2563, <enforce2563>)
trackAST: (=2564, <=2564>)
trackAST: (format2565, <format2565>)
trackAST: (string2566, string)
trackAST: (list2567, [<h>])
trackAST: (format2568, <format2568>)
trackAST: (string2569, string)
trackAST: (list2570, [<i>])
trackAST: (drop2571, <drop2571>)
trackAST: (integer2572, integer)
trackAST: (string2573, string)
trackAST: (enforce2574, <enforce2574>)
trackAST: (bool2575, bool)
trackAST: (format2576, <format2576>)
trackAST: (string2577, string)
trackAST: (list2578, [<j>])
assocAST: (if2556, <if2556>, <if2556>) => (BindLet2539, <BindLet2539>, <BindLet2539>)
trackAST: (enforce-reserved2579, bool)
assocAST: (enforce-reserved2579, <enforce-reserved2579>, bool) => (BindLet2539, <if2556>, <if2556>)
trackAST: (enforce-reserved2580, <enforce-reserved2580>)
assocAST: (BindLet2539, <enforce-reserved2579>, bool) => (enforce-reserved2580, <enforce-reserved2580>, <enforce-reserved2580>)
trackAST: (bool2581, bool)
assocAST: (if2534, <if2534>, <if2534>) => (BindLet2532_is-new2533, <BindLet2532_is-new2533_ae>, <BindLet2532_is-new2533_ae>)
trackAST: (BindLet2582, <BindLet2582>)
trackAST: (BindLet2582_new-bal2583, <BindLet2582_new-bal2583_af>)
trackAST: (if2584, <if2584>)
trackAST: (+2585, <+2585>)
assocAST: (if2584, <if2584>, <if2584>) => (BindLet2582_new-bal2583, <BindLet2582_new-bal2583_af>, <BindLet2582_new-bal2583_af>)
trackAST: (write2586, <write2586>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2587, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2588, string)
trackAST: (key_account2589, string)
trackAST: (format2590, <format2590>)
trackAST: (string2591, string)
trackAST: (list2592, [<ak>])
trackAST: (key2593, string)
assocAST: (key2593, <key2593>, string) => (format2590, <format2590>, <format2590>)
trackAST: (key2594, <key2594>)
assocAST: (format2590, <key2593>, string) => (key2594, <key2594>, <key2594>)
TObject: TyAny
trackAST: (object2595, object:*)
trackAST: (if2596, <if2596>)
trackAST: (emit-event2597, <emit-event2597>)
trackAST: (ACCOUNT_GUARD_id2598, string)
trackAST: (ACCOUNT_GUARD_account2599, string)
trackAST: (ACCOUNT_GUARD_guard2600, guard)
trackAST: (bool2601, bool)
trackAST: (ACCOUNT_GUARD2602, bool)
assocAST: (bool2601, <bool2601>, bool) => (ACCOUNT_GUARD2602, <ACCOUNT_GUARD2602>, bool)
trackAST: (ACCOUNT_GUARD2603, <ACCOUNT_GUARD2603>)
assocAST: (bool2601, <bool2601>, bool) => (ACCOUNT_GUARD2603, <ACCOUNT_GUARD2603>, <ACCOUNT_GUARD2603>)
trackAST: (bool2604, bool)
TObject: TyAny
trackAST: (object2605, object:*)
trackAST: (if2606, <if2606>)
trackAST: (decimal2607, decimal)
assocAST: (object2605, <object2605>, object:*) => (BindLet2582, <BindLet2582>, <BindLet2582>)
assocAST: (BindLet2582, <object2605>, object:*) => (BindLet2532, <BindLet2532>, <BindLet2532>)
assocAST: (BindLet2532, <object2605>, object:*) => (BindSchema2524, <BindSchema2524>, <BindSchema2524>)
trackAST: (BindSchema2524schema2608, *)
trackAST: (credit2609, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit2609, <credit2609>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read2513, <with-default-read2513>, <with-default-read2513>)
--------------------------------
 Substitute defuns:

assocTy: (<enforce2483>, <enforce2483>) <=> <enforce-valid-account2489_c>
assocTy: (<enforce2483>, <enforce2483>) <= <enforce-valid-account2489_c>
assocTy: tracking/updating type variable <enforce2483> <= <enforce-valid-account2489_c>
trackAST: (inlinedCallArgs2610, <inlinedCallArgs2610>)
assocTy: (<inlinedCallArgs2610>, <inlinedCallArgs2610>) <=> <enforce-valid-account2489_c>
assocTy: (<inlinedCallArgs2610>, <inlinedCallArgs2610>) <= <enforce-valid-account2489_c>
assocTy: tracking/updating type variable <inlinedCallArgs2610> <= <enforce-valid-account2489_c>
trackAST: (inlinedCallArgs2610_account2611, string)
assocAST: (credit_account2479, <credit_account2479>, string) => (inlinedCallArgs2610_account2611, <inlinedCallArgs2610_account2611>, string)
assocAST: (inlinedCallArgs2610_account2611, <credit_account2479>, string) => (enforce-valid-account_account2482, <enforce-valid-account_account2482>, string)
assocTy: (<precision2499>, integer) <=> integer
assocTy: (<precision2499>, integer) <= integer
trackAST: (inlinedCallArgs2612, <inlinedCallArgs2612>)
assocTy: (<inlinedCallArgs2612>, <inlinedCallArgs2612>) <=> integer
assocTy: (<inlinedCallArgs2612>, <inlinedCallArgs2612>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs2612> <= integer
trackAST: (inlinedCallArgs2612_id2613, string)
assocAST: (enforce-unit_id2490, <enforce-unit_id2490>, string) => (inlinedCallArgs2612_id2613, <inlinedCallArgs2612_id2613>, string)
assocAST: (inlinedCallArgs2612_id2613, <enforce-unit_id2490>, string) => (precision_id2494, <precision_id2494>, string)
assocTy: (<enforce-unit2505>, bool) <=> bool
assocTy: (<enforce-unit2505>, bool) <= bool
trackAST: (inlinedCallArgs2614, <inlinedCallArgs2614>)
assocTy: (<inlinedCallArgs2614>, <inlinedCallArgs2614>) <=> bool
assocTy: (<inlinedCallArgs2614>, <inlinedCallArgs2614>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2614> <= bool
trackAST: (inlinedCallArgs2614_id2615, string)
assocAST: (credit_id2478, <credit_id2478>, string) => (inlinedCallArgs2614_id2615, <inlinedCallArgs2614_id2615>, string)
trackAST: (inlinedCallArgs2614_amount2616, decimal)
assocAST: (credit_amount2481, <credit_amount2481>, decimal) => (inlinedCallArgs2614_amount2616, <inlinedCallArgs2614_amount2616>, decimal)
assocAST: (inlinedCallArgs2614_id2615, <credit_id2478>, string) => (enforce-unit_id2490, <enforce-unit_id2490>, string)
assocAST: (inlinedCallArgs2614_id2615, <credit_id2478>, string) => (enforce-unit_id2490, <credit_id2478>, string)
assocAST: (inlinedCallArgs2614_amount2616, <credit_amount2481>, decimal) => (enforce-unit_amount2491, <enforce-unit_amount2491>, decimal)
assocAST: (inlinedCallArgs2614_amount2616, <credit_amount2481>, decimal) => (enforce-unit_amount2491, <credit_amount2481>, decimal)
assocTy: (<bool2510>, bool) <=> <CREDIT2512_g>
assocTy: bool => <CREDIT2512_g>
trackAST: (inlinedCallArgs2617, <inlinedCallArgs2617>)
assocTy: (<inlinedCallArgs2617>, <inlinedCallArgs2617>) <=> <CREDIT2512_g>
assocTy: (<inlinedCallArgs2617>, <inlinedCallArgs2617>) <= <CREDIT2512_g>
assocTy: tracking/updating type variable <inlinedCallArgs2617> <= <CREDIT2512_g>
trackAST: (inlinedCallArgs2617_id2618, string)
assocAST: (credit_id2478, <credit_id2478>, string) => (inlinedCallArgs2617_id2618, <inlinedCallArgs2617_id2618>, string)
trackAST: (inlinedCallArgs2617_receiver2619, string)
assocAST: (credit_account2479, <credit_account2479>, string) => (inlinedCallArgs2617_receiver2619, <inlinedCallArgs2617_receiver2619>, string)
assocTy: (<check-reserved2554>, string) <=> string
assocTy: (<check-reserved2554>, string) <= string
trackAST: (inlinedCallArgs2620, <inlinedCallArgs2620>)
assocTy: (<inlinedCallArgs2620>, <inlinedCallArgs2620>) <=> string
assocTy: (<inlinedCallArgs2620>, <inlinedCallArgs2620>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2620> <= string
trackAST: (inlinedCallArgs2620_account2621, string)
assocAST: (enforce-reserved_account2537, <enforce-reserved_account2537>, string) => (inlinedCallArgs2620_account2621, <inlinedCallArgs2620_account2621>, string)
assocAST: (inlinedCallArgs2620_account2621, <enforce-reserved_account2537>, string) => (check-reserved_account2541, <check-reserved_account2541>, string)
assocTy: (<enforce-reserved2579>, bool) <=> bool
assocTy: (<enforce-reserved2579>, bool) <= bool
trackAST: (inlinedCallArgs2622, <inlinedCallArgs2622>)
assocTy: (<inlinedCallArgs2622>, <inlinedCallArgs2622>) <=> bool
assocTy: (<inlinedCallArgs2622>, <inlinedCallArgs2622>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2622> <= bool
trackAST: (inlinedCallArgs2622_account2623, string)
assocAST: (credit_account2479, <credit_account2479>, string) => (inlinedCallArgs2622_account2623, <inlinedCallArgs2622_account2623>, string)
trackAST: (inlinedCallArgs2622_guard2624, guard)
assocAST: (credit_guard2480, <credit_guard2480>, guard) => (inlinedCallArgs2622_guard2624, <inlinedCallArgs2622_guard2624>, guard)
assocAST: (inlinedCallArgs2622_account2623, <credit_account2479>, string) => (enforce-reserved_account2537, <enforce-reserved_account2537>, string)
assocAST: (inlinedCallArgs2622_account2623, <credit_account2479>, string) => (enforce-reserved_account2537, <credit_account2479>, string)
assocAST: (inlinedCallArgs2622_account2623, <credit_account2479>, string) => (enforce-reserved_account2537, <credit_account2479>, string)
assocAST: (inlinedCallArgs2622_guard2624, <credit_guard2480>, guard) => (enforce-reserved_guard2538, <enforce-reserved_guard2538>, guard)
assocTy: (<key2593>, string) <=> string
assocTy: (<key2593>, string) <= string
trackAST: (inlinedCallArgs2625, <inlinedCallArgs2625>)
assocTy: (<inlinedCallArgs2625>, <inlinedCallArgs2625>) <=> string
assocTy: (<inlinedCallArgs2625>, <inlinedCallArgs2625>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2625> <= string
trackAST: (inlinedCallArgs2625_id2626, string)
assocAST: (credit_id2478, <credit_id2478>, string) => (inlinedCallArgs2625_id2626, <inlinedCallArgs2625_id2626>, string)
trackAST: (inlinedCallArgs2625_account2627, string)
assocAST: (credit_account2479, <credit_account2479>, string) => (inlinedCallArgs2625_account2627, <inlinedCallArgs2625_account2627>, string)
assocAST: (inlinedCallArgs2625_id2626, <credit_id2478>, string) => (key_id2588, <key_id2588>, string)
assocAST: (inlinedCallArgs2625_account2627, <credit_account2479>, string) => (key_account2589, <key_account2589>, string)
assocTy: (<bool2601>, bool) <=> bool
assocTy: (<bool2601>, bool) <= bool
trackAST: (inlinedCallArgs2628, <inlinedCallArgs2628>)
assocTy: (<inlinedCallArgs2628>, <inlinedCallArgs2628>) <=> bool
assocTy: (<inlinedCallArgs2628>, <inlinedCallArgs2628>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs2628> <= bool
trackAST: (inlinedCallArgs2628_id2629, string)
assocAST: (credit_id2478, <credit_id2478>, string) => (inlinedCallArgs2628_id2629, <inlinedCallArgs2628_id2629>, string)
trackAST: (inlinedCallArgs2628_account2630, string)
assocAST: (credit_account2479, <credit_account2479>, string) => (inlinedCallArgs2628_account2630, <inlinedCallArgs2628_account2630>, string)
trackAST: (inlinedCallArgs2628_guard2631, guard)
assocAST: (inlinedCallArgs2628_guard2631, <inlinedCallArgs2628_guard2631>, guard) => (BindSchema2524_retg2527, <BindSchema2524_retg2527_ad>, <BindSchema2524_retg2527_ad>)
assocTy: (<key2520>, string) <=> string
assocTy: (<key2520>, string) <= string
trackAST: (inlinedCallArgs2632, <inlinedCallArgs2632>)
assocTy: (<inlinedCallArgs2632>, <inlinedCallArgs2632>) <=> string
assocTy: (<inlinedCallArgs2632>, <inlinedCallArgs2632>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2632> <= string
trackAST: (inlinedCallArgs2632_id2633, string)
assocAST: (credit_id2478, <credit_id2478>, string) => (inlinedCallArgs2632_id2633, <inlinedCallArgs2632_id2633>, string)
trackAST: (inlinedCallArgs2632_account2634, string)
assocAST: (credit_account2479, <credit_account2479>, string) => (inlinedCallArgs2632_account2634, <inlinedCallArgs2632_account2634>, string)
assocAST: (inlinedCallArgs2632_id2633, <credit_id2478>, string) => (key_id2515, <key_id2515>, string)
assocAST: (inlinedCallArgs2632_account2634, <credit_account2479>, string) => (key_account2516, <key_account2516>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>2484>, <>2484>) <=> bool
assocTy: (<>2484>, <>2484>) <= bool
assocTy: tracking/updating type variable <>2484> <= bool
assocTy: (<string2487>, string) <=> string
assocTy: (<string2487>, string) <= string
assocTy: (<enforce2483>, <enforce-valid-account2489_c>) <=> bool
assocTy: (<enforce2483>, <enforce-valid-account2489_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account2489_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>2484_a[integer,decimal,string,time]> y:<>2484_a[integer,decimal,string,time]> -> bool
assocTy: (<length2485>, <length2485>) <=> <>2484_a[integer,decimal,string,time]>
assocTy: (<length2485>, <length2485>) <= <>2484_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length2485> <= <>2484_a[integer,decimal,string,time]>
assocTy: (<integer2486>, integer) <=> <>2484_a[integer,decimal,string,time]>
assocTy: integer => <>2484_a[integer,decimal,string,time]>
assocTy: (<>2484>, bool) <=> bool
assocTy: (<>2484>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length2485_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<credit_account2479>, string) <=> <length2485_a[[<l>],string,object:<{o}>]>
assocTy: string => <length2485_a[[<l>],string,object:<{o}>]>
assocTy: (<length2485>, integer) <=> integer
assocTy: (<length2485>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2502>, <=2502>) <=> bool
assocTy: (<=2502>, <=2502>) <= bool
assocTy: tracking/updating type variable <=2502> <= bool
assocTy: (<string2504>, string) <=> string
assocTy: (<string2504>, string) <= string
assocTy: (<enforce-unit2505>, bool) <=> bool
assocTy: (<enforce-unit2505>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor2503>, <floor2503>) <=> <=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor2503>, <floor2503>) <= <=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor2503> <= <=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<credit_amount2481>, decimal) <=> <=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2502_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2502>, bool) <=> bool
assocTy: (<=2502>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2510>, bool) <=> bool
assocTy: (<bool2510>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2507>, <require-capability2507>) <=> bool
assocTy: (<require-capability2507>, <require-capability2507>) <= bool
assocTy: tracking/updating type variable <require-capability2507> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read2513_row}> key:string defaults:object:~<{with-default-read2513_row}> bindings:binding:~<{with-default-read2513_row}> -> <with-default-read2513_a>
assocTy: (<marmalade.ledger.ledger2514>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read2513_row}>
assocTy: (<{with-default-read2513_row}>, <{with-default-read2513_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read2513_row}>, <{with-default-read2513_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read2513_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read2513_row}>)
assocTy: (<key2520>, string) <=> string
assocTy: (<key2520>, string) <= string
assocTy: (<object2522>, object:*) <=> object:~<{with-default-read2513_row}>
assocTy: (<object2522>, object:*) <= object:~<{with-default-read2513_row}>
assocTy: (<credit2609>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read2513_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read2513_a>
assocTy: (<object2605>, object:*) <=> <with-default-read2513_a>
assocTy: (<BindSchema2524schema2608>, *) <=> binding:~<{with-default-read2513_row}>
assocTy: (<BindSchema2524schema2608>, *) <= binding:~<{with-default-read2513_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2530>, <=2530>) <=> bool
assocTy: (<=2530>, <=2530>) <= bool
assocTy: tracking/updating type variable <=2530> <= bool
assocTy: (<string2531>, string) <=> string
assocTy: (<string2531>, string) <= string
assocTy: (<enforce2529>, <enforce2529>) <=> bool
assocTy: (<enforce2529>, <enforce2529>) <= bool
assocTy: tracking/updating type variable <enforce2529> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2530_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2530_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs2628_guard2631>, guard) <=> <=2530_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=2530_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<credit_guard2480>, guard) <=> <=2530_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2530>, bool) <=> bool
assocTy: (<=2530>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2534_a> else:<if2534_a> -> <if2534_a>
assocTy: (<=2535>, <=2535>) <=> bool
assocTy: (<=2535>, <=2535>) <= bool
assocTy: tracking/updating type variable <=2535> <= bool
assocTy: (<enforce-reserved2579>, bool) <=> <if2534_a>
assocTy: bool => <if2534_a>
assocTy: (<bool2581>, bool) <=> <if2534_a>
assocTy: (<if2534>, <if2534>) <=> <if2534_a>
assocTy: (<if2534>, <if2534>) <= <if2534_a>
assocTy: tracking/updating type variable <if2534> <= <if2534_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema2524_old-bal2525_ac>, <BindSchema2524_old-bal2525_ac>) <=> <=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema2524_old-bal2525_ac>, <BindSchema2524_old-bal2525_ac>) <= <=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema2524_old-bal2525_ac> <= <=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal2536>, decimal) <=> <=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2535_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2535>, bool) <=> bool
assocTy: (<=2535>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2546_a> else:<if2546_a> -> <if2546_a>
assocTy: (<=2547>, <=2547>) <=> bool
assocTy: (<=2547>, <=2547>) <= bool
assocTy: tracking/updating type variable <=2547> <= bool
assocTy: (<take2551>, <take2551>) <=> <if2546_a>
assocTy: (<take2551>, <take2551>) <= <if2546_a>
assocTy: tracking/updating type variable <take2551> <= <if2546_a>
assocTy: (<string2553>, string) <=> <if2546_a>
assocTy: string => <if2546_a>
assocTy: (<check-reserved2554>, string) <=> <if2546_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2548>, string) <=> <=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take2549>, <take2549>) <=> <=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take2549>, <take2549>) <= <=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take2549> <= <=2547_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2547>, bool) <=> bool
assocTy: (<=2547>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2556_a> else:<if2556_a> -> <if2556_a>
assocTy: (<=2557>, <=2557>) <=> bool
assocTy: (<=2557>, <=2557>) <= bool
assocTy: tracking/updating type variable <=2557> <= bool
assocTy: (<bool2559>, bool) <=> <if2556_a>
assocTy: bool => <if2556_a>
assocTy: (<if2560>, <if2560>) <=> <if2556_a>
assocTy: (<if2560>, <if2560>) <= <if2556_a>
assocTy: tracking/updating type variable <if2560> <= <if2556_a>
assocTy: (<enforce-reserved2579>, bool) <=> <if2556_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2557_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2557_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2558>, string) <=> <=2557_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2557_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved2554>, string) <=> <=2557_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2557>, bool) <=> bool
assocTy: (<=2557>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2560_a> else:<if2560_a> -> <if2560_a>
assocTy: (<=2561>, <=2561>) <=> bool
assocTy: (<=2561>, <=2561>) <= bool
assocTy: tracking/updating type variable <=2561> <= bool
assocTy: (<enforce2563>, <enforce2563>) <=> <if2560_a>
assocTy: (<enforce2563>, <enforce2563>) <= <if2560_a>
assocTy: tracking/updating type variable <enforce2563> <= <if2560_a>
assocTy: (<enforce2574>, <enforce2574>) <=> <if2560_a>
assocTy: (<enforce2574>, <enforce2574>) <= <if2560_a>
assocTy: tracking/updating type variable <enforce2574> <= <if2560_a>
assocTy: (<if2560>, bool) <=> <if2560_a>
assocTy: bool => <if2560_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2561_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2561_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2562>, string) <=> <=2561_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2561_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved2554>, string) <=> <=2561_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2561>, bool) <=> bool
assocTy: (<=2561>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2564>, <=2564>) <=> bool
assocTy: (<=2564>, <=2564>) <= bool
assocTy: tracking/updating type variable <=2564> <= bool
assocTy: (<string2573>, string) <=> string
assocTy: (<string2573>, string) <= string
assocTy: (<enforce2563>, bool) <=> bool
assocTy: (<enforce2563>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format2565>, <format2565>) <=> <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2565>, <format2565>) <= <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format2565> <= <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2568>, <format2568>) <=> <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2568>, <format2568>) <= <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format2568> <= <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2564>, bool) <=> bool
assocTy: (<=2564>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2566>, string) <=> string
assocTy: (<string2566>, string) <= string
assocTy: (<list2567>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format2565>, <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format2565>, <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=2564_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2569>, string) <=> string
assocTy: (<string2569>, string) <= string
assocTy: (<list2570>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format2568>, string) <=> string
assocTy: (<format2568>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool2575>, bool) <=> bool
assocTy: (<bool2575>, bool) <= bool
assocTy: (<format2576>, <format2576>) <=> string
assocTy: (<format2576>, <format2576>) <= string
assocTy: tracking/updating type variable <format2576> <= string
assocTy: (<enforce2574>, bool) <=> bool
assocTy: (<enforce2574>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2577>, string) <=> string
assocTy: (<string2577>, string) <= string
assocTy: (<list2578>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format2576>, string) <=> string
assocTy: (<format2576>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2584_a> else:<if2584_a> -> <if2584_a>
assocTy: (<if2534>, bool) <=> bool
assocTy: (<if2534>, bool) <= bool
assocTy: (<credit_amount2481>, decimal) <=> <if2584_a>
assocTy: decimal => <if2584_a>
assocTy: (<+2585>, <+2585>) <=> <if2584_a>
assocTy: (<+2585>, <+2585>) <= <if2584_a>
assocTy: tracking/updating type variable <+2585> <= <if2584_a>
assocTy: (<if2584>, <if2584>) <=> <if2584_a>
assocTy: (<if2584>, <if2584>) <= <if2584_a>
assocTy: tracking/updating type variable <if2584> <= <if2584_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write2586_row}> key:string object:object:<{write2586_row}> -> string
assocTy: (<marmalade.ledger.ledger2587>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write2586_row}>
assocTy: (<{write2586_row}>, <{write2586_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write2586_row}>, <{write2586_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write2586_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write2586_row}>)
assocTy: (<key2593>, string) <=> string
assocTy: (<key2593>, string) <= string
assocTy: (<object2595>, object:*) <=> object:<{write2586_row}>
assocTy: (<object2595>, object:*) <= object:<{write2586_row}>
assocTy: (<write2586>, <write2586>) <=> string
assocTy: (<write2586>, <write2586>) <= string
assocTy: tracking/updating type variable <write2586> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2591>, string) <=> string
assocTy: (<string2591>, string) <= string
assocTy: (<list2592>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2593>, string) <=> string
assocTy: (<key2593>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2596_a> else:<if2596_a> -> <if2596_a>
assocTy: (<if2534>, bool) <=> bool
assocTy: (<if2534>, bool) <= bool
assocTy: (<emit-event2597>, <emit-event2597>) <=> <if2596_a>
assocTy: (<emit-event2597>, <emit-event2597>) <= <if2596_a>
assocTy: tracking/updating type variable <emit-event2597> <= <if2596_a>
assocTy: (<bool2604>, bool) <=> <if2596_a>
assocTy: bool => <if2596_a>
assocTy: (<if2596>, <if2596>) <=> <if2596_a>
assocTy: (<if2596>, <if2596>) <= <if2596_a>
assocTy: tracking/updating type variable <if2596> <= <if2596_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2601>, bool) <=> bool
assocTy: (<bool2601>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event2597>, bool) <=> bool
assocTy: (<emit-event2597>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2606_a> else:<if2606_a> -> <if2606_a>
assocTy: (<if2534>, bool) <=> bool
assocTy: (<if2534>, bool) <= bool
assocTy: (<decimal2607>, decimal) <=> <if2606_a>
assocTy: decimal => <if2606_a>
assocTy: (<BindSchema2524_old-bal2525_ac>, decimal) <=> <if2606_a>
assocTy: (<if2606>, <if2606>) <=> <if2606_a>
assocTy: (<if2606>, <if2606>) <= <if2606_a>
assocTy: tracking/updating type variable <if2606> <= <if2606_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2518>, string) <=> string
assocTy: (<string2518>, string) <= string
assocTy: (<list2519>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2520>, string) <=> string
assocTy: (<key2520>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema2524schema2608::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2524_old-bal2525_ac>, decimal) <=> decimal
assocTy: (<BindSchema2524_old-bal2525_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs2628_guard2631>, guard) <=> guard
assocTy: (<inlinedCallArgs2628_guard2631>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2567::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2570::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2578::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2592::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2595::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<credit_account2479>, string) <=> string
assocTy: (<credit_account2479>, string) <= string
assocTy: (<if2584>, decimal) <=> decimal
assocTy: (<if2584>, decimal) <= decimal
assocTy: (<inlinedCallArgs2628_guard2631>, guard) <=> guard
assocTy: (<inlinedCallArgs2628_guard2631>, guard) <= guard
assocTy: (<credit_id2478>, string) <=> string
assocTy: (<credit_id2478>, string) <= string
Skipping TC on specified heterogenous list for node: list2519::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2522::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal2523>, decimal) <=> decimal
assocTy: (<decimal2523>, decimal) <= decimal
assocTy: (<credit_guard2480>, guard) <=> guard
assocTy: (<credit_guard2480>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object2522>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object2522>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=<+2585_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+2585_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+2585_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+2585_a[integer,decimal]> y:<+2585_a[integer,decimal]> -> <+2585_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+2585_a[integer,decimal]>, AST=+2585::<+2585>, tyVar=<+2585>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+2585_a[integer,decimal]>, AST=BindSchema2524_old-bal2525::<BindSchema2524_old-bal2525_ac>, tyVar=<BindSchema2524_old-bal2525_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+2585_a[integer,decimal]>, AST=credit_amount2481::decimal, tyVar=<credit_amount2481>, resolvedTy=decimal})]
tryFunType: trying x:<+2585_a[integer,decimal]> y:<+2585_a[integer,decimal]> -> <+2585_a[integer,decimal]> with [(<+2585_a[integer,decimal]>, [(+2585, <+2585>, decimal), (credit_amount2481, <credit_amount2481>, decimal), (BindSchema2524_old-bal2525, <BindSchema2524_old-bal2525_ac>, decimal)])]
Solved overload with x:<+2585_a[integer,decimal]> y:<+2585_a[integer,decimal]> -> <+2585_a[integer,decimal]>: [(<+2585_a[integer,decimal]>, (decimal, [(+2585, <+2585>), (credit_amount2481, <credit_amount2481>), (BindSchema2524_old-bal2525, <BindSchema2524_old-bal2525_ac>)]))]
Adjusting type for solution: ((+2585, <+2585>), <+2585_a[integer,decimal]>, decimal)
assocTy: (<+2585>, decimal) <=> <+2585_a[integer,decimal]>
assocTy: decimal => <+2585_a[integer,decimal]>
assocTy: (<+2585>, decimal) <=> decimal
assocTy: (<+2585>, decimal) <= decimal
Adjusting type for solution: ((credit_amount2481, <credit_amount2481>), <+2585_a[integer,decimal]>, decimal)
assocTy: (<credit_amount2481>, decimal) <=> <+2585_a[integer,decimal]>
assocTy: (<credit_amount2481>, decimal) <=> decimal
assocTy: (<credit_amount2481>, decimal) <= decimal
Adjusting type for solution: ((BindSchema2524_old-bal2525, <BindSchema2524_old-bal2525_ac>), <+2585_a[integer,decimal]>, decimal)
assocTy: (<BindSchema2524_old-bal2525_ac>, decimal) <=> <+2585_a[integer,decimal]>
assocTy: (<BindSchema2524_old-bal2525_ac>, decimal) <=> decimal
assocTy: (<BindSchema2524_old-bal2525_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop2571_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop2571_a[[<l>],string]>, roleTy=<drop2571>
tryFunType: cand: count:integer list:<drop2571_a[[<l>],string]> -> <drop2571_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop2571_a[[<l>],string]>, AST=drop2571::<drop2571>, tyVar=<drop2571>, resolvedTy=<drop2571>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2572::integer, tyVar=<integer2572>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop2571_a[[<l>],string]>, AST=inlinedCallArgs2622_account2623::string, tyVar=<credit_account2479>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop2571_a[[<l>],string]> -> <drop2571_a[[<l>],string]> with [(<drop2571_a[[<l>],string]>, [(drop2571, <drop2571>, <drop2571>), (inlinedCallArgs2622_account2623, <credit_account2479>, string)]), (integer, [(integer2572, <integer2572>, integer)])]
Solved overload with count:integer list:<drop2571_a[[<l>],string]> -> <drop2571_a[[<l>],string]>: [(<drop2571_a[[<l>],string]>, (string, [(drop2571, <drop2571>), (inlinedCallArgs2622_account2623, <credit_account2479>)])), (integer, (integer, [(integer2572, <integer2572>)]))]
Adjusting type for solution: ((drop2571, <drop2571>), <drop2571_a[[<l>],string]>, string)
assocTy: (<drop2571>, <drop2571>) <=> <drop2571_a[[<l>],string]>
assocTy: (<drop2571>, <drop2571>) <= <drop2571_a[[<l>],string]>
assocTy: tracking/updating type variable <drop2571> <= <drop2571_a[[<l>],string]>
assocTy: (<drop2571>, <drop2571_a[[<l>],string]>) <=> string
assocTy: (<drop2571>, <drop2571_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop2571_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs2622_account2623, <credit_account2479>), <drop2571_a[[<l>],string]>, string)
assocTy: (<credit_account2479>, string) <=> <drop2571_a[[<l>],string]>
assocTy: (<credit_account2479>, string) <=> string
assocTy: (<credit_account2479>, string) <= string
Adjusting type for solution: ((integer2572, <integer2572>), integer, integer)
assocTy: (<integer2572>, integer) <=> integer
assocTy: (<integer2572>, integer) <= integer
assocTy: (<integer2572>, integer) <=> integer
assocTy: (<integer2572>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2551_a[[<l>],string]>, roleTy=<take2544>
tryFunType: unify role: role=RetVar, candTy=<take2551_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2551_a[[<l>],string]> -> <take2551_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2551_a[[<l>],string]>, AST=take2551::<take2551>, tyVar=<take2551>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2552::integer, tyVar=<integer2552>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2551_a[[<l>],string]>, AST=BindLet2542_pfx2543::<BindLet2542_pfx2543_f>, tyVar=<take2544>, resolvedTy=<take2544>})]
tryFunType: trying count:integer list:<take2551_a[[<l>],string]> -> <take2551_a[[<l>],string]> with [(<take2551_a[[<l>],string]>, [(take2551, <take2551>, string), (BindLet2542_pfx2543, <take2544>, <take2544>)]), (integer, [(integer2552, <integer2552>, integer)])]
Solved overload with count:integer list:<take2551_a[[<l>],string]> -> <take2551_a[[<l>],string]>: [(<take2551_a[[<l>],string]>, (string, [(take2551, <take2551>), (BindLet2542_pfx2543, <take2544>)])), (integer, (integer, [(integer2552, <integer2552>)]))]
Adjusting type for solution: ((take2551, <take2551>), <take2551_a[[<l>],string]>, string)
assocTy: (<take2551>, string) <=> <take2551_a[[<l>],string]>
assocTy: string => <take2551_a[[<l>],string]>
assocTy: (<take2551>, string) <=> string
assocTy: (<take2551>, string) <= string
Adjusting type for solution: ((BindLet2542_pfx2543, <take2544>), <take2551_a[[<l>],string]>, string)
assocTy: (<take2544>, <take2544>) <=> <take2551_a[[<l>],string]>
assocTy: (<take2544>, <take2544>) <= <take2551_a[[<l>],string]>
assocTy: tracking/updating type variable <take2544> <= <take2551_a[[<l>],string]>
assocTy: (<take2544>, string) <=> string
assocTy: (<take2544>, string) <= string
Adjusting type for solution: ((integer2552, <integer2552>), integer, integer)
assocTy: (<integer2552>, integer) <=> integer
assocTy: (<integer2552>, integer) <= integer
assocTy: (<integer2552>, integer) <=> integer
assocTy: (<integer2552>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2549_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take2549_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2549_a[[<l>],string]> -> <take2549_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2549_a[[<l>],string]>, AST=take2549::<take2549>, tyVar=<take2549>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2550::integer, tyVar=<integer2550>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2549_a[[<l>],string]>, AST=BindLet2542_pfx2543::<BindLet2542_pfx2543_f>, tyVar=<take2544>, resolvedTy=string})]
tryFunType: trying count:integer list:<take2549_a[[<l>],string]> -> <take2549_a[[<l>],string]> with [(<take2549_a[[<l>],string]>, [(take2549, <take2549>, string), (BindLet2542_pfx2543, <take2544>, string)]), (integer, [(integer2550, <integer2550>, integer)])]
Solved overload with count:integer list:<take2549_a[[<l>],string]> -> <take2549_a[[<l>],string]>: [(<take2549_a[[<l>],string]>, (string, [(take2549, <take2549>), (BindLet2542_pfx2543, <take2544>)])), (integer, (integer, [(integer2550, <integer2550>)]))]
Adjusting type for solution: ((take2549, <take2549>), <take2549_a[[<l>],string]>, string)
assocTy: (<take2549>, string) <=> <take2549_a[[<l>],string]>
assocTy: string => <take2549_a[[<l>],string]>
assocTy: (<take2549>, string) <=> string
assocTy: (<take2549>, string) <= string
Adjusting type for solution: ((BindLet2542_pfx2543, <take2544>), <take2549_a[[<l>],string]>, string)
assocTy: (<take2544>, string) <=> <take2549_a[[<l>],string]>
assocTy: (<take2544>, string) <=> string
assocTy: (<take2544>, string) <= string
Adjusting type for solution: ((integer2550, <integer2550>), integer, integer)
assocTy: (<integer2550>, integer) <=> integer
assocTy: (<integer2550>, integer) <= integer
assocTy: (<integer2550>, integer) <=> integer
assocTy: (<integer2550>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2544_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take2544_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2544_a[[<l>],string]> -> <take2544_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2544_a[[<l>],string]>, AST=take2544::<take2544>, tyVar=<take2544>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2545::integer, tyVar=<integer2545>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2544_a[[<l>],string]>, AST=inlinedCallArgs2620_account2621::string, tyVar=<credit_account2479>, resolvedTy=string})]
tryFunType: trying count:integer list:<take2544_a[[<l>],string]> -> <take2544_a[[<l>],string]> with [(<take2544_a[[<l>],string]>, [(take2544, <take2544>, string), (inlinedCallArgs2620_account2621, <credit_account2479>, string)]), (integer, [(integer2545, <integer2545>, integer)])]
Solved overload with count:integer list:<take2544_a[[<l>],string]> -> <take2544_a[[<l>],string]>: [(<take2544_a[[<l>],string]>, (string, [(take2544, <take2544>), (inlinedCallArgs2620_account2621, <credit_account2479>)])), (integer, (integer, [(integer2545, <integer2545>)]))]
Adjusting type for solution: ((take2544, <take2544>), <take2544_a[[<l>],string]>, string)
assocTy: (<take2544>, string) <=> <take2544_a[[<l>],string]>
assocTy: string => <take2544_a[[<l>],string]>
assocTy: (<take2544>, string) <=> string
assocTy: (<take2544>, string) <= string
Adjusting type for solution: ((inlinedCallArgs2620_account2621, <credit_account2479>), <take2544_a[[<l>],string]>, string)
assocTy: (<credit_account2479>, string) <=> <take2544_a[[<l>],string]>
assocTy: (<credit_account2479>, string) <=> string
assocTy: (<credit_account2479>, string) <= string
Adjusting type for solution: ((integer2545, <integer2545>), integer, integer)
assocTy: (<integer2545>, integer) <=> integer
assocTy: (<integer2545>, integer) <= integer
assocTy: (<integer2545>, integer) <=> integer
assocTy: (<integer2545>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor2503::<floor2503>, tyVar=<floor2503>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs2614_amount2616::decimal, tyVar=<credit_amount2481>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet2492_p2493::<BindLet2492_p2493_ai>, tyVar=<precision2499>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet2492_p2493, <precision2499>, integer)]), (decimal, [(floor2503, <floor2503>, decimal), (inlinedCallArgs2614_amount2616, <credit_amount2481>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet2492_p2493, <precision2499>)])), (decimal, (decimal, [(floor2503, <floor2503>), (inlinedCallArgs2614_amount2616, <credit_amount2481>)]))]
Adjusting type for solution: ((BindLet2492_p2493, <precision2499>), integer, integer)
assocTy: (<precision2499>, integer) <=> integer
assocTy: (<precision2499>, integer) <= integer
assocTy: (<precision2499>, integer) <=> integer
assocTy: (<precision2499>, integer) <= integer
Adjusting type for solution: ((floor2503, <floor2503>), decimal, decimal)
assocTy: (<floor2503>, decimal) <=> decimal
assocTy: (<floor2503>, decimal) <= decimal
assocTy: (<floor2503>, decimal) <=> decimal
assocTy: (<floor2503>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs2614_amount2616, <credit_amount2481>), decimal, decimal)
assocTy: (<credit_amount2481>, decimal) <=> decimal
assocTy: (<credit_amount2481>, decimal) <= decimal
assocTy: (<credit_amount2481>, decimal) <=> decimal
assocTy: (<credit_amount2481>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2497_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2497_row}>, roleTy=<read2497>
tryFunType: cand: table:table:<{read2497_row}> key:string -> object:<{read2497_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2497_row}>, AST=read2497::<read2497>, tyVar=<read2497>, resolvedTy=<read2497>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2497_row}>, AST=marmalade.ledger.tokens2498::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens2498>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs2612_id2613::string, tyVar=<credit_id2478>, resolvedTy=string})]
tryFunType: trying table:table:<{read2497_row}> key:string -> object:<{read2497_row}> with [(string, [(inlinedCallArgs2612_id2613, <credit_id2478>, string)]), (table:<{read2497_row}>, [(marmalade.ledger.tokens2498, <marmalade.ledger.tokens2498>, table:{marmalade.ledger.token-schema})]), (object:<{read2497_row}>, [(read2497, <read2497>, <read2497>)])]
Solved overload with table:table:<{read2497_row}> key:string -> object:<{read2497_row}>: [(string, (string, [(inlinedCallArgs2612_id2613, <credit_id2478>)])), (table:<{read2497_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens2498, <marmalade.ledger.tokens2498>)])), (object:<{read2497_row}>, (object:<{read2497_row}>, [(read2497, <read2497>)]))]
Adjusting type for solution: ((inlinedCallArgs2612_id2613, <credit_id2478>), string, string)
assocTy: (<credit_id2478>, string) <=> string
assocTy: (<credit_id2478>, string) <= string
assocTy: (<credit_id2478>, string) <=> string
assocTy: (<credit_id2478>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens2498, <marmalade.ledger.tokens2498>), table:<{read2497_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens2498>, table:{marmalade.ledger.token-schema}) <=> table:<{read2497_row}>
assocTy: (<{read2497_row}>, <{read2497_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2497_row}>, <{read2497_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read2497_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read2497_row}>)
assocTy: (<marmalade.ledger.tokens2498>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens2498>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read2497, <read2497>), object:<{read2497_row}>, object:<{read2497_row}>)
assocTy: (<read2497>, <read2497>) <=> object:<{read2497_row}>
assocTy: (<read2497>, <read2497>) <= object:<{read2497_row}>
assocTy: tracking/updating type variable <read2497> <= object:<{read2497_row}>
assocTy: (<read2497>, object:{marmalade.ledger.token-schema}) <=> object:<{read2497_row}>
assocTy: (<{read2497_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2497_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read2497_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2495_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2495_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2495_l>] -> <at2495_a>: roles=[(RetVar, RoleTys { candArgTy=<at2495_a>, AST=at2495::<at2495>, tyVar=<precision2499>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2495_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2495_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2495_o}> -> <at2495_a>, roles=[(RetVar, RoleTys { candArgTy=<at2495_a>, AST=at2495::<at2495>, tyVar=<precision2499>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2496::string, tyVar=<string2496>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2495_o}>, AST=read2497::<read2497>, tyVar=<read2497>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at2495_o}> -> <at2495_a> with [(<at2495_a>, [(at2495, <precision2499>, integer)]), (string, [(string2496, <string2496>, string)]), (object:<{at2495_o}>, [(read2497, <read2497>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at2495_o}> -> <at2495_a>: [(<at2495_a>, (integer, [(at2495, <precision2499>)])), (string, (string, [(string2496, <string2496>)])), (object:<{at2495_o}>, (object:{marmalade.ledger.token-schema}, [(read2497, <read2497>)]))]
Adjusting type for solution: ((at2495, <precision2499>), <at2495_a>, integer)
assocTy: (<precision2499>, integer) <=> <at2495_a>
assocTy: integer => <at2495_a>
assocTy: (<precision2499>, integer) <=> integer
assocTy: (<precision2499>, integer) <= integer
Adjusting type for solution: ((string2496, <string2496>), string, string)
assocTy: (<string2496>, string) <=> string
assocTy: (<string2496>, string) <= string
assocTy: (<string2496>, string) <=> string
assocTy: (<string2496>, string) <= string
Adjusting type for solution: ((read2497, <read2497>), object:<{at2495_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read2497>, object:{marmalade.ledger.token-schema}) <=> object:<{at2495_o}>
assocTy: (<{at2495_o}>, <{at2495_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at2495_o}>, <{at2495_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at2495_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at2495_o}>)
assocTy: (<read2497>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read2497>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.credit:object:(defschema r...
===== Fun: (defun marmalade.ledger.get-balance:decimal (id:st...
trackAST: (get-balance_id2636, string)
trackAST: (get-balance_account2637, string)
trackAST: (at2638, <at2638>)
trackAST: (string2639, string)
trackAST: (read2640, <read2640>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2641, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2642, string)
trackAST: (key_account2643, string)
trackAST: (format2644, <format2644>)
trackAST: (string2645, string)
trackAST: (list2646, [<ak>])
trackAST: (key2647, string)
assocAST: (key2647, <key2647>, string) => (format2644, <format2644>, <format2644>)
trackAST: (key2648, <key2648>)
assocAST: (format2644, <key2647>, string) => (key2648, <key2648>, <key2648>)
trackAST: (get-balance2649, decimal)
assocAST: (get-balance2649, <get-balance2649>, decimal) => (at2638, <at2638>, <at2638>)
--------------------------------
 Substitute defuns:

assocTy: (<key2647>, string) <=> string
assocTy: (<key2647>, string) <= string
trackAST: (inlinedCallArgs2650, <inlinedCallArgs2650>)
assocTy: (<inlinedCallArgs2650>, <inlinedCallArgs2650>) <=> string
assocTy: (<inlinedCallArgs2650>, <inlinedCallArgs2650>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs2650> <= string
trackAST: (inlinedCallArgs2650_id2651, string)
assocAST: (get-balance_id2636, <get-balance_id2636>, string) => (inlinedCallArgs2650_id2651, <inlinedCallArgs2650_id2651>, string)
trackAST: (inlinedCallArgs2650_account2652, string)
assocAST: (get-balance_account2637, <get-balance_account2637>, string) => (inlinedCallArgs2650_account2652, <inlinedCallArgs2650_account2652>, string)
assocAST: (inlinedCallArgs2650_id2651, <get-balance_id2636>, string) => (key_id2642, <key_id2642>, string)
assocAST: (inlinedCallArgs2650_account2652, <get-balance_account2637>, string) => (key_account2643, <key_account2643>, string)
--------------------------------
Substitute natives:

Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2645>, string) <=> string
assocTy: (<string2645>, string) <= string
assocTy: (<list2646>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2647>, string) <=> string
assocTy: (<key2647>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list2646::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2640_row}>, roleTy=table:{kip.poly-fungible-v3.account-details}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2640_row}>, roleTy=<read2640>
tryFunType: cand: table:table:<{read2640_row}> key:string -> object:<{read2640_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2640_row}>, AST=read2640::<read2640>, tyVar=<read2640>, resolvedTy=<read2640>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2640_row}>, AST=marmalade.ledger.ledger2641::table:{kip.poly-fungible-v3.account-details}, tyVar=<marmalade.ledger.ledger2641>, resolvedTy=table:{kip.poly-fungible-v3.account-details}}), (ArgVar 1, RoleTys { candArgTy=string, AST=key2648::<key2648>, tyVar=<key2647>, resolvedTy=string})]
tryFunType: trying table:table:<{read2640_row}> key:string -> object:<{read2640_row}> with [(string, [(key2648, <key2647>, string)]), (table:<{read2640_row}>, [(marmalade.ledger.ledger2641, <marmalade.ledger.ledger2641>, table:{kip.poly-fungible-v3.account-details})]), (object:<{read2640_row}>, [(read2640, <read2640>, <read2640>)])]
Solved overload with table:table:<{read2640_row}> key:string -> object:<{read2640_row}>: [(string, (string, [(key2648, <key2647>)])), (table:<{read2640_row}>, (table:{kip.poly-fungible-v3.account-details}, [(marmalade.ledger.ledger2641, <marmalade.ledger.ledger2641>)])), (object:<{read2640_row}>, (object:<{read2640_row}>, [(read2640, <read2640>)]))]
Adjusting type for solution: ((key2648, <key2647>), string, string)
assocTy: (<key2647>, string) <=> string
assocTy: (<key2647>, string) <= string
assocTy: (<key2647>, string) <=> string
assocTy: (<key2647>, string) <= string
Adjusting type for solution: ((marmalade.ledger.ledger2641, <marmalade.ledger.ledger2641>), table:<{read2640_row}>, table:{kip.poly-fungible-v3.account-details})
assocTy: (<marmalade.ledger.ledger2641>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{read2640_row}>
assocTy: (<{read2640_row}>, <{read2640_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{read2640_row}>, <{read2640_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{read2640_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{read2640_row}>)
assocTy: (<marmalade.ledger.ledger2641>, table:{kip.poly-fungible-v3.account-details}) <=> table:{kip.poly-fungible-v3.account-details}
assocTy: (<marmalade.ledger.ledger2641>, table:{kip.poly-fungible-v3.account-details}) <= table:{kip.poly-fungible-v3.account-details}
Adjusting type for solution: ((read2640, <read2640>), object:<{read2640_row}>, object:<{read2640_row}>)
assocTy: (<read2640>, <read2640>) <=> object:<{read2640_row}>
assocTy: (<read2640>, <read2640>) <= object:<{read2640_row}>
assocTy: tracking/updating type variable <read2640> <= object:<{read2640_row}>
assocTy: (<read2640>, object:{kip.poly-fungible-v3.account-details}) <=> object:<{read2640_row}>
assocTy: (<{read2640_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{read2640_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (object:{kip.poly-fungible-v3.account-details}, object:<{read2640_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2638_l>], roleTy=object:{kip.poly-fungible-v3.account-details}
tryFunType: unify role: role=RetVar, candTy=<at2638_a>, roleTy=decimal
tryFunType: failed: idx:integer list:[<at2638_l>] -> <at2638_a>: roles=[(RetVar, RoleTys { candArgTy=<at2638_a>, AST=at2638::<at2638>, tyVar=<get-balance2649>, resolvedTy=decimal}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2638_o}>, roleTy=object:{kip.poly-fungible-v3.account-details}
tryFunType: unify role: role=RetVar, candTy=<at2638_a>, roleTy=decimal
tryFunType: cand: idx:string object:object:<{at2638_o}> -> <at2638_a>, roles=[(RetVar, RoleTys { candArgTy=<at2638_a>, AST=at2638::<at2638>, tyVar=<get-balance2649>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2639::string, tyVar=<string2639>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2638_o}>, AST=read2640::<read2640>, tyVar=<read2640>, resolvedTy=object:{kip.poly-fungible-v3.account-details}})]
tryFunType: trying idx:string object:object:<{at2638_o}> -> <at2638_a> with [(<at2638_a>, [(at2638, <get-balance2649>, decimal)]), (string, [(string2639, <string2639>, string)]), (object:<{at2638_o}>, [(read2640, <read2640>, object:{kip.poly-fungible-v3.account-details})])]
Solved overload with idx:string object:object:<{at2638_o}> -> <at2638_a>: [(<at2638_a>, (decimal, [(at2638, <get-balance2649>)])), (string, (string, [(string2639, <string2639>)])), (object:<{at2638_o}>, (object:{kip.poly-fungible-v3.account-details}, [(read2640, <read2640>)]))]
Adjusting type for solution: ((at2638, <get-balance2649>), <at2638_a>, decimal)
assocTy: (<get-balance2649>, decimal) <=> <at2638_a>
assocTy: decimal => <at2638_a>
assocTy: (<get-balance2649>, decimal) <=> decimal
assocTy: (<get-balance2649>, decimal) <= decimal
Adjusting type for solution: ((string2639, <string2639>), string, string)
assocTy: (<string2639>, string) <=> string
assocTy: (<string2639>, string) <= string
assocTy: (<string2639>, string) <=> string
assocTy: (<string2639>, string) <= string
Adjusting type for solution: ((read2640, <read2640>), object:<{at2638_o}>, object:{kip.poly-fungible-v3.account-details})
assocTy: (<read2640>, object:{kip.poly-fungible-v3.account-details}) <=> object:<{at2638_o}>
assocTy: (<{at2638_o}>, <{at2638_o}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{at2638_o}>, <{at2638_o}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{at2638_o}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (object:{kip.poly-fungible-v3.account-details}, object:<{at2638_o}>)
assocTy: (<read2640>, object:{kip.poly-fungible-v3.account-details}) <=> object:{kip.poly-fungible-v3.account-details}
assocTy: (<read2640>, object:{kip.poly-fungible-v3.account-details}) <= object:{kip.poly-fungible-v3.account-details}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.get-balance:decimal (id:st...
===== Fun: (defcap marmalade.ledger.CREDIT:<g> (id:string rec...
trackAST: (CREDIT_id2654, string)
trackAST: (CREDIT_receiver2655, string)
trackAST: (bool2656, bool)
trackAST: (CREDIT2657, <g>)
assocAST: (bool2656, <bool2656>, bool) => (CREDIT2657, <g>, <g>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.CREDIT:<g> (id:string rec...
===== Table: (deftable ledger:(defschema account-details " Acco...

===== Done: (deftable ledger:(defschema account-details " Acco...
===== Fun: (defcap marmalade.ledger.UPDATE_SUPPLY:<h> () priv...
trackAST: (bool2660, bool)
trackAST: (UPDATE_SUPPLY2661, <h>)
assocAST: (bool2660, <bool2660>, bool) => (UPDATE_SUPPLY2661, <h>, <h>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.UPDATE_SUPPLY:<h> () priv...
===== Fun: (defpact marmalade.ledger.transfer-crosschain:bool...
trackAST: (transfer-crosschain_id2663, string)
trackAST: (transfer-crosschain_sender2664, string)
trackAST: (transfer-crosschain_receiver2665, string)
trackAST: (transfer-crosschain_receiver-guard2666, guard)
trackAST: (transfer-crosschain_target-chain2667, string)
trackAST: (transfer-crosschain_amount2668, decimal)
trackAST: (format2669, <format2669>)
trackAST: (string2670, string)
trackAST: (list2671, [<aj>])
trackAST: (enforce2672, <enforce2672>)
trackAST: (bool2673, bool)
trackAST: (string2674, string)
assocTy: (<format2669>, <format2669>) <=> string
assocTy: (<format2669>, <format2669>) <= string
assocTy: tracking/updating type variable <format2669> <= string
trackAST: (step2675, <step2675>)
trackAST: (bool2676, bool)
assocAST: (bool2676, <bool2676>, bool) => (step2675, <step2675>, <step2675>)
trackAST: (transfer-crosschain2677, bool)
assocAST: (step2675, <bool2676>, bool) => (transfer-crosschain2677, <transfer-crosschain2677>, bool)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2670>, string) <=> string
assocTy: (<string2670>, string) <= string
assocTy: (<list2671>, [<aj>]) <=> [*]
assocTy: specified heterogenous list, [<aj>] <= [*]
assocTy: (<format2669>, string) <=> string
assocTy: (<format2669>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool2673>, bool) <=> bool
assocTy: (<bool2673>, bool) <= bool
assocTy: (<string2674>, string) <=> string
assocTy: (<string2674>, string) <= string
assocTy: (<enforce2672>, <enforce2672>) <=> bool
assocTy: (<enforce2672>, <enforce2672>) <= bool
assocTy: tracking/updating type variable <enforce2672> <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list2671::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "aj", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defpact marmalade.ledger.transfer-crosschain:bool...
===== Fun: (defun marmalade.ledger.get-policy-info:object:(de...
trackAST: (get-policy-info_id2679, string)
trackAST: (with-read2680, <with-read2680>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2681, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema2682, <BindSchema2682>)
trackAST: (BindSchema2682_policy2683, module{kip.token-policy-v1})
trackAST: (string2684, string)
trackAST: (BindSchema2682_supply2685, <BindSchema2682_supply2685_k>)
trackAST: (string2686, string)
trackAST: (BindSchema2682_precision2687, <BindSchema2682_precision2687_l>)
trackAST: (string2688, string)
trackAST: (BindSchema2682_manifest2689, <BindSchema2682_manifest2689_m>)
trackAST: (string2690, string)
TObject: TyAny
trackAST: (object2691, object:*)
TObject: TyAny
trackAST: (object2692, object:*)
assocAST: (object2691, <object2691>, object:*) => (BindSchema2682, <BindSchema2682>, <BindSchema2682>)
trackAST: (BindSchema2682schema2693, *)
trackAST: (get-policy-info2694, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info2694, <get-policy-info2694>, object:{marmalade.ledger.policy-info}) => (with-read2680, <with-read2680>, <with-read2680>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2680_row}> key:string bindings:binding:<{with-read2680_row}> -> <with-read2680_a>
assocTy: (<marmalade.ledger.tokens2681>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read2680_row}>
assocTy: (<{with-read2680_row}>, <{with-read2680_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read2680_row}>, <{with-read2680_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read2680_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read2680_row}>)
assocTy: (<get-policy-info_id2679>, string) <=> string
assocTy: (<get-policy-info_id2679>, string) <= string
assocTy: (<get-policy-info2694>, object:{marmalade.ledger.policy-info}) <=> <with-read2680_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read2680_a>
assocTy: (<object2691>, object:*) <=> <with-read2680_a>
assocTy: (<BindSchema2682schema2693>, *) <=> binding:<{with-read2680_row}>
assocTy: (<BindSchema2682schema2693>, *) <= binding:<{with-read2680_row}>
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema2682schema2693::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema2682_manifest2689_m>, <BindSchema2682_manifest2689_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema2682_manifest2689_m>, <BindSchema2682_manifest2689_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema2682_manifest2689_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema2682_policy2683>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema2682_policy2683>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema2682_precision2687_l>, <BindSchema2682_precision2687_l>) <=> integer
assocTy: (<BindSchema2682_precision2687_l>, <BindSchema2682_precision2687_l>) <= integer
assocTy: tracking/updating type variable <BindSchema2682_precision2687_l> <= integer
assocTy: (<BindSchema2682_supply2685_k>, <BindSchema2682_supply2685_k>) <=> decimal
assocTy: (<BindSchema2682_supply2685_k>, <BindSchema2682_supply2685_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema2682_supply2685_k> <= decimal
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.get-policy-info:object:(de...
===== Fun: (defpact marmalade.ledger.sale:bool (id:string sel...
trackAST: (sale_id2696, string)
trackAST: (sale_seller2697, string)
trackAST: (sale_amount2698, decimal)
trackAST: (sale_timeout2699, integer)
trackAST: (step2700, <step2700>)
trackAST: (with-capability2701, <with-capability2701>)
trackAST: (SALE_id2702, string)
trackAST: (SALE_seller2703, string)
trackAST: (SALE_amount2704, decimal)
trackAST: (SALE_timeout2705, integer)
trackAST: (SALE_sale-id2706, string)
trackAST: (enforce2707, <enforce2707>)
trackAST: (>2708, <>2708>)
trackAST: (decimal2709, decimal)
trackAST: (string2710, string)
trackAST: (compose-capability2711, <compose-capability2711>)
trackAST: (OFFER_id2712, string)
trackAST: (OFFER_seller2713, string)
trackAST: (OFFER_amount2714, decimal)
trackAST: (OFFER_timeout2715, integer)
trackAST: (enforce2716, <enforce2716>)
trackAST: (sale-active_timeout2717, integer)
trackAST: (<2718, <<2718>)
trackAST: (at2719, <at2719>)
trackAST: (string2720, string)
trackAST: (chain-data2721, <chain-data2721>)
trackAST: (sale-active2722, bool)
assocAST: (sale-active2722, <sale-active2722>, bool) => (<2718, <<2718>, <<2718>)
trackAST: (sale-active2723, <sale-active2723>)
assocAST: (<2718, <sale-active2722>, bool) => (sale-active2723, <sale-active2723>, <sale-active2723>)
trackAST: (string2724, string)
trackAST: (compose-capability2725, <compose-capability2725>)
trackAST: (DEBIT_id2726, string)
trackAST: (DEBIT_sender2727, string)
trackAST: (enforce-guard2728, <enforce-guard2728>)
trackAST: (account-guard_id2729, string)
trackAST: (account-guard_account2730, string)
trackAST: (with-read2731, <with-read2731>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2732, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2733, string)
trackAST: (key_account2734, string)
trackAST: (format2735, <format2735>)
trackAST: (string2736, string)
trackAST: (list2737, [<ak>])
trackAST: (key2738, string)
assocAST: (key2738, <key2738>, string) => (format2735, <format2735>, <format2735>)
trackAST: (key2739, <key2739>)
assocAST: (format2735, <key2738>, string) => (key2739, <key2739>, <key2739>)
trackAST: (BindSchema2740, <BindSchema2740>)
trackAST: (BindSchema2740_guard2741, <BindSchema2740_guard2741_f>)
trackAST: (string2742, string)
assocAST: (BindSchema2740_guard2741, <BindSchema2740_guard2741_f>, <BindSchema2740_guard2741_f>) => (BindSchema2740, <BindSchema2740>, <BindSchema2740>)
trackAST: (BindSchema2740schema2743, *)
trackAST: (account-guard2744, guard)
assocAST: (account-guard2744, <account-guard2744>, guard) => (with-read2731, <with-read2731>, <with-read2731>)
trackAST: (account-guard2745, <account-guard2745>)
assocAST: (with-read2731, <account-guard2744>, guard) => (account-guard2745, <account-guard2745>, <account-guard2745>)
trackAST: (DEBIT2746, <e>)
assocAST: (enforce-guard2728, <enforce-guard2728>, <enforce-guard2728>) => (DEBIT2746, <e>, <e>)
trackAST: (DEBIT2747, <DEBIT2747>)
assocAST: (enforce-guard2728, <enforce-guard2728>, <enforce-guard2728>) => (DEBIT2747, <DEBIT2747>, <DEBIT2747>)
trackAST: (compose-capability2748, <compose-capability2748>)
trackAST: (CREDIT_id2749, string)
trackAST: (CREDIT_receiver2750, string)
trackAST: (bool2751, bool)
trackAST: (CREDIT2752, <g>)
assocAST: (bool2751, <bool2751>, bool) => (CREDIT2752, <g>, <g>)
trackAST: (CREDIT2753, <CREDIT2753>)
trackAST: (format2754, <format2754>)
trackAST: (string2755, string)
trackAST: (list2756, [<at>])
trackAST: (pact-id2757, <pact-id2757>)
trackAST: (sale-account2758, string)
assocAST: (sale-account2758, <sale-account2758>, string) => (format2754, <format2754>, <format2754>)
trackAST: (sale-account2759, <sale-account2759>)
assocAST: (format2754, <sale-account2758>, string) => (sale-account2759, <sale-account2759>, <sale-account2759>)
assocAST: (bool2751, <bool2751>, bool) => (CREDIT2753, <CREDIT2753>, <CREDIT2753>)
trackAST: (OFFER2760, bool)
assocAST: (OFFER2760, <OFFER2760>, bool) => (compose-capability2748, <compose-capability2748>, <compose-capability2748>)
trackAST: (OFFER2761, <OFFER2761>)
assocAST: (compose-capability2748, <OFFER2760>, bool) => (OFFER2761, <OFFER2761>, <OFFER2761>)
trackAST: (compose-capability2762, <compose-capability2762>)
trackAST: (SALE_PRIVATE_sale-id2763, string)
trackAST: (bool2764, bool)
trackAST: (SALE_PRIVATE2765, bool)
assocAST: (bool2764, <bool2764>, bool) => (SALE_PRIVATE2765, <SALE_PRIVATE2765>, bool)
trackAST: (SALE_PRIVATE2766, <SALE_PRIVATE2766>)
assocAST: (bool2764, <bool2764>, bool) => (SALE_PRIVATE2766, <SALE_PRIVATE2766>, <SALE_PRIVATE2766>)
trackAST: (SALE2767, bool)
assocAST: (SALE2767, <SALE2767>, bool) => (compose-capability2762, <compose-capability2762>, <compose-capability2762>)
trackAST: (SALE2768, <SALE2768>)
trackAST: (pact-id2769, <pact-id2769>)
assocAST: (compose-capability2762, <SALE2767>, bool) => (SALE2768, <SALE2768>, <SALE2768>)
trackAST: (list2770, [*])
trackAST: (offer_id2771, string)
trackAST: (offer_seller2772, string)
trackAST: (offer_amount2773, decimal)
trackAST: (require-capability2774, <require-capability2774>)
trackAST: (SALE_PRIVATE_sale-id2775, string)
trackAST: (bool2776, bool)
trackAST: (SALE_PRIVATE2777, bool)
assocAST: (bool2776, <bool2776>, bool) => (SALE_PRIVATE2777, <SALE_PRIVATE2777>, bool)
trackAST: (SALE_PRIVATE2778, <SALE_PRIVATE2778>)
trackAST: (pact-id2779, <pact-id2779>)
assocAST: (bool2776, <bool2776>, bool) => (SALE_PRIVATE2778, <SALE_PRIVATE2778>, <SALE_PRIVATE2778>)
trackAST: (bind2780, <bind2780>)
trackAST: (get-policy-info_id2781, string)
trackAST: (with-read2782, <with-read2782>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2783, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema2784, <BindSchema2784>)
trackAST: (BindSchema2784_policy2785, module{kip.token-policy-v1})
trackAST: (string2786, string)
trackAST: (BindSchema2784_supply2787, <BindSchema2784_supply2787_k>)
trackAST: (string2788, string)
trackAST: (BindSchema2784_precision2789, <BindSchema2784_precision2789_l>)
trackAST: (string2790, string)
trackAST: (BindSchema2784_manifest2791, <BindSchema2784_manifest2791_m>)
trackAST: (string2792, string)
TObject: TyAny
trackAST: (object2793, object:*)
TObject: TyAny
trackAST: (object2794, object:*)
assocAST: (object2793, <object2793>, object:*) => (BindSchema2784, <BindSchema2784>, <BindSchema2784>)
trackAST: (BindSchema2784schema2795, *)
trackAST: (get-policy-info2796, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info2796, <get-policy-info2796>, object:{marmalade.ledger.policy-info}) => (with-read2782, <with-read2782>, <with-read2782>)
trackAST: (get-policy-info2797, <get-policy-info2797>)
assocAST: (with-read2782, <get-policy-info2796>, object:{marmalade.ledger.policy-info}) => (get-policy-info2797, <get-policy-info2797>, <get-policy-info2797>)
trackAST: (BindSchema2798, <BindSchema2798>)
trackAST: (BindSchema2798_policy2799, module{kip.token-policy-v1})
trackAST: (string2800, string)
trackAST: (BindSchema2798_token2801, <BindSchema2798_token2801_al>)
trackAST: (string2802, string)
trackAST: (enforce-offer_token2803, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-offer_seller2804, string)
trackAST: (enforce-offer_amount2805, decimal)
trackAST: (enforce-offer_sale-id2806, string)
trackAST: (enforce-offer2807, bool)
trackAST: (enforce-offer2808, <enforce-offer2808>)
trackAST: (pact-id2809, <pact-id2809>)
assocAST: (enforce-offer2807, <enforce-offer2807>, bool) => (enforce-offer2808, <enforce-offer2808>, <enforce-offer2808>)
assocAST: (enforce-offer2808, <enforce-offer2807>, bool) => (BindSchema2798, <BindSchema2798>, <BindSchema2798>)
trackAST: (BindSchema2798schema2810, *)
trackAST: (BindLet2811, <BindLet2811>)
trackAST: (BindLet2811_sender2812, <BindLet2811_sender2812_am>)
trackAST: (debit_id2813, string)
trackAST: (debit_account2814, string)
trackAST: (debit_amount2815, decimal)
trackAST: (require-capability2816, <require-capability2816>)
trackAST: (DEBIT_id2817, string)
trackAST: (DEBIT_sender2818, string)
trackAST: (enforce-guard2819, <enforce-guard2819>)
trackAST: (account-guard_id2820, string)
trackAST: (account-guard_account2821, string)
trackAST: (with-read2822, <with-read2822>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2823, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2824, string)
trackAST: (key_account2825, string)
trackAST: (format2826, <format2826>)
trackAST: (string2827, string)
trackAST: (list2828, [<ak>])
trackAST: (key2829, string)
assocAST: (key2829, <key2829>, string) => (format2826, <format2826>, <format2826>)
trackAST: (key2830, <key2830>)
assocAST: (format2826, <key2829>, string) => (key2830, <key2830>, <key2830>)
trackAST: (BindSchema2831, <BindSchema2831>)
trackAST: (BindSchema2831_guard2832, <BindSchema2831_guard2832_f>)
trackAST: (string2833, string)
assocAST: (BindSchema2831_guard2832, <BindSchema2831_guard2832_f>, <BindSchema2831_guard2832_f>) => (BindSchema2831, <BindSchema2831>, <BindSchema2831>)
trackAST: (BindSchema2831schema2834, *)
trackAST: (account-guard2835, guard)
assocAST: (account-guard2835, <account-guard2835>, guard) => (with-read2822, <with-read2822>, <with-read2822>)
trackAST: (account-guard2836, <account-guard2836>)
assocAST: (with-read2822, <account-guard2835>, guard) => (account-guard2836, <account-guard2836>, <account-guard2836>)
trackAST: (DEBIT2837, <e>)
assocAST: (enforce-guard2819, <enforce-guard2819>, <enforce-guard2819>) => (DEBIT2837, <e>, <e>)
trackAST: (DEBIT2838, <DEBIT2838>)
assocAST: (enforce-guard2819, <enforce-guard2819>, <enforce-guard2819>) => (DEBIT2838, <DEBIT2838>, <DEBIT2838>)
trackAST: (enforce-unit_id2839, string)
trackAST: (enforce-unit_amount2840, decimal)
trackAST: (BindLet2841, <BindLet2841>)
trackAST: (BindLet2841_p2842, <BindLet2841_p2842_ai>)
trackAST: (precision_id2843, string)
trackAST: (at2844, <at2844>)
trackAST: (string2845, string)
trackAST: (read2846, <read2846>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2847, table:{marmalade.ledger.token-schema})
trackAST: (precision2848, integer)
assocAST: (precision2848, <precision2848>, integer) => (at2844, <at2844>, <at2844>)
trackAST: (precision2849, <precision2849>)
assocAST: (at2844, <precision2848>, integer) => (precision2849, <precision2849>, <precision2849>)
assocAST: (precision2849, <precision2848>, integer) => (BindLet2841_p2842, <BindLet2841_p2842_ai>, <BindLet2841_p2842_ai>)
trackAST: (enforce2850, <enforce2850>)
trackAST: (=2851, <=2851>)
trackAST: (floor2852, <floor2852>)
trackAST: (string2853, string)
assocAST: (enforce2850, <enforce2850>, <enforce2850>) => (BindLet2841, <BindLet2841>, <BindLet2841>)
trackAST: (enforce-unit2854, bool)
assocAST: (enforce-unit2854, <enforce-unit2854>, bool) => (BindLet2841, <enforce2850>, <enforce2850>)
trackAST: (enforce-unit2855, <enforce-unit2855>)
assocAST: (BindLet2841, <enforce-unit2854>, bool) => (enforce-unit2855, <enforce-unit2855>, <enforce-unit2855>)
trackAST: (with-read2856, <with-read2856>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2857, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2858, string)
trackAST: (key_account2859, string)
trackAST: (format2860, <format2860>)
trackAST: (string2861, string)
trackAST: (list2862, [<ak>])
trackAST: (key2863, string)
assocAST: (key2863, <key2863>, string) => (format2860, <format2860>, <format2860>)
trackAST: (key2864, <key2864>)
assocAST: (format2860, <key2863>, string) => (key2864, <key2864>, <key2864>)
trackAST: (BindSchema2865, <BindSchema2865>)
trackAST: (BindSchema2865_old-bal2866, <BindSchema2865_old-bal2866_aa>)
trackAST: (string2867, string)
trackAST: (enforce2868, <enforce2868>)
trackAST: (<=2869, <<=2869>)
trackAST: (string2870, string)
trackAST: (BindLet2871, <BindLet2871>)
trackAST: (BindLet2871_new-bal2872, <BindLet2871_new-bal2872_ab>)
trackAST: (-2873, <-2873>)
assocAST: (-2873, <-2873>, <-2873>) => (BindLet2871_new-bal2872, <BindLet2871_new-bal2872_ab>, <BindLet2871_new-bal2872_ab>)
trackAST: (update2874, <update2874>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2875, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2876, string)
trackAST: (key_account2877, string)
trackAST: (format2878, <format2878>)
trackAST: (string2879, string)
trackAST: (list2880, [<ak>])
trackAST: (key2881, string)
assocAST: (key2881, <key2881>, string) => (format2878, <format2878>, <format2878>)
trackAST: (key2882, <key2882>)
assocAST: (format2878, <key2881>, string) => (key2882, <key2882>, <key2882>)
TObject: TyAny
trackAST: (object2883, object:*)
TObject: TyAny
trackAST: (object2884, object:*)
assocAST: (object2884, <object2884>, object:*) => (BindLet2871, <BindLet2871>, <BindLet2871>)
assocAST: (BindLet2871, <object2884>, object:*) => (BindSchema2865, <BindSchema2865>, <BindSchema2865>)
trackAST: (BindSchema2865schema2885, *)
trackAST: (debit2886, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit2886, <debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read2856, <with-read2856>, <with-read2856>)
trackAST: (debit2887, <debit2887>)
assocAST: (with-read2856, <debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit2887, <debit2887>, <debit2887>)
assocAST: (debit2887, <debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet2811_sender2812, <BindLet2811_sender2812_am>, <BindLet2811_sender2812_am>)
trackAST: (BindLet2811_receiver2888, <BindLet2811_receiver2888_an>)
trackAST: (credit_id2889, string)
trackAST: (credit_account2890, string)
trackAST: (credit_guard2891, guard)
trackAST: (credit_amount2892, decimal)
trackAST: (enforce-valid-account_account2893, string)
trackAST: (enforce2894, <enforce2894>)
trackAST: (>2895, <>2895>)
trackAST: (length2896, <length2896>)
trackAST: (integer2897, integer)
trackAST: (string2898, string)
trackAST: (enforce-valid-account2899, <c>)
assocAST: (enforce2894, <enforce2894>, <enforce2894>) => (enforce-valid-account2899, <c>, <c>)
trackAST: (enforce-valid-account2900, <enforce-valid-account2900>)
assocAST: (enforce2894, <enforce2894>, <enforce2894>) => (enforce-valid-account2900, <enforce-valid-account2900>, <enforce-valid-account2900>)
trackAST: (enforce-unit_id2901, string)
trackAST: (enforce-unit_amount2902, decimal)
trackAST: (BindLet2903, <BindLet2903>)
trackAST: (BindLet2903_p2904, <BindLet2903_p2904_ai>)
trackAST: (precision_id2905, string)
trackAST: (at2906, <at2906>)
trackAST: (string2907, string)
trackAST: (read2908, <read2908>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens2909, table:{marmalade.ledger.token-schema})
trackAST: (precision2910, integer)
assocAST: (precision2910, <precision2910>, integer) => (at2906, <at2906>, <at2906>)
trackAST: (precision2911, <precision2911>)
assocAST: (at2906, <precision2910>, integer) => (precision2911, <precision2911>, <precision2911>)
assocAST: (precision2911, <precision2910>, integer) => (BindLet2903_p2904, <BindLet2903_p2904_ai>, <BindLet2903_p2904_ai>)
trackAST: (enforce2912, <enforce2912>)
trackAST: (=2913, <=2913>)
trackAST: (floor2914, <floor2914>)
trackAST: (string2915, string)
assocAST: (enforce2912, <enforce2912>, <enforce2912>) => (BindLet2903, <BindLet2903>, <BindLet2903>)
trackAST: (enforce-unit2916, bool)
assocAST: (enforce-unit2916, <enforce-unit2916>, bool) => (BindLet2903, <enforce2912>, <enforce2912>)
trackAST: (enforce-unit2917, <enforce-unit2917>)
assocAST: (BindLet2903, <enforce-unit2916>, bool) => (enforce-unit2917, <enforce-unit2917>, <enforce-unit2917>)
trackAST: (require-capability2918, <require-capability2918>)
trackAST: (CREDIT_id2919, string)
trackAST: (CREDIT_receiver2920, string)
trackAST: (bool2921, bool)
trackAST: (CREDIT2922, <g>)
assocAST: (bool2921, <bool2921>, bool) => (CREDIT2922, <g>, <g>)
trackAST: (CREDIT2923, <CREDIT2923>)
assocAST: (bool2921, <bool2921>, bool) => (CREDIT2923, <CREDIT2923>, <CREDIT2923>)
trackAST: (with-default-read2924, <with-default-read2924>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2925, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2926, string)
trackAST: (key_account2927, string)
trackAST: (format2928, <format2928>)
trackAST: (string2929, string)
trackAST: (list2930, [<ak>])
trackAST: (key2931, string)
assocAST: (key2931, <key2931>, string) => (format2928, <format2928>, <format2928>)
trackAST: (key2932, <key2932>)
assocAST: (format2928, <key2931>, string) => (key2932, <key2932>, <key2932>)
TObject: TyAny
trackAST: (object2933, object:*)
trackAST: (decimal2934, decimal)
trackAST: (BindSchema2935, <BindSchema2935>)
trackAST: (BindSchema2935_old-bal2936, <BindSchema2935_old-bal2936_ac>)
trackAST: (string2937, string)
trackAST: (BindSchema2935_retg2938, <BindSchema2935_retg2938_ad>)
trackAST: (string2939, string)
trackAST: (enforce2940, <enforce2940>)
trackAST: (=2941, <=2941>)
trackAST: (string2942, string)
trackAST: (BindLet2943, <BindLet2943>)
trackAST: (BindLet2943_is-new2944, <BindLet2943_is-new2944_ae>)
trackAST: (if2945, <if2945>)
trackAST: (=2946, <=2946>)
trackAST: (decimal2947, decimal)
trackAST: (enforce-reserved_account2948, string)
trackAST: (enforce-reserved_guard2949, guard)
trackAST: (BindLet2950, <BindLet2950>)
trackAST: (BindLet2950_r2951, <BindLet2950_r2951_g>)
trackAST: (check-reserved_account2952, string)
trackAST: (BindLet2953, <BindLet2953>)
trackAST: (BindLet2953_pfx2954, <BindLet2953_pfx2954_f>)
trackAST: (take2955, <take2955>)
trackAST: (integer2956, integer)
assocAST: (take2955, <take2955>, <take2955>) => (BindLet2953_pfx2954, <BindLet2953_pfx2954_f>, <BindLet2953_pfx2954_f>)
trackAST: (if2957, <if2957>)
trackAST: (=2958, <=2958>)
trackAST: (string2959, string)
trackAST: (take2960, <take2960>)
trackAST: (integer2961, integer)
trackAST: (take2962, <take2962>)
trackAST: (integer2963, integer)
trackAST: (string2964, string)
assocAST: (if2957, <if2957>, <if2957>) => (BindLet2953, <BindLet2953>, <BindLet2953>)
trackAST: (check-reserved2965, string)
assocAST: (check-reserved2965, <check-reserved2965>, string) => (BindLet2953, <if2957>, <if2957>)
trackAST: (check-reserved2966, <check-reserved2966>)
assocAST: (BindLet2953, <check-reserved2965>, string) => (check-reserved2966, <check-reserved2966>, <check-reserved2966>)
assocAST: (check-reserved2966, <check-reserved2965>, string) => (BindLet2950_r2951, <BindLet2950_r2951_g>, <BindLet2950_r2951_g>)
trackAST: (if2967, <if2967>)
trackAST: (=2968, <=2968>)
trackAST: (string2969, string)
trackAST: (bool2970, bool)
trackAST: (if2971, <if2971>)
trackAST: (=2972, <=2972>)
trackAST: (string2973, string)
trackAST: (enforce2974, <enforce2974>)
trackAST: (=2975, <=2975>)
trackAST: (format2976, <format2976>)
trackAST: (string2977, string)
trackAST: (list2978, [<h>])
trackAST: (format2979, <format2979>)
trackAST: (string2980, string)
trackAST: (list2981, [<i>])
trackAST: (drop2982, <drop2982>)
trackAST: (integer2983, integer)
trackAST: (string2984, string)
trackAST: (enforce2985, <enforce2985>)
trackAST: (bool2986, bool)
trackAST: (format2987, <format2987>)
trackAST: (string2988, string)
trackAST: (list2989, [<j>])
assocAST: (if2967, <if2967>, <if2967>) => (BindLet2950, <BindLet2950>, <BindLet2950>)
trackAST: (enforce-reserved2990, bool)
assocAST: (enforce-reserved2990, <enforce-reserved2990>, bool) => (BindLet2950, <if2967>, <if2967>)
trackAST: (enforce-reserved2991, <enforce-reserved2991>)
assocAST: (BindLet2950, <enforce-reserved2990>, bool) => (enforce-reserved2991, <enforce-reserved2991>, <enforce-reserved2991>)
trackAST: (bool2992, bool)
assocAST: (if2945, <if2945>, <if2945>) => (BindLet2943_is-new2944, <BindLet2943_is-new2944_ae>, <BindLet2943_is-new2944_ae>)
trackAST: (BindLet2993, <BindLet2993>)
trackAST: (BindLet2993_new-bal2994, <BindLet2993_new-bal2994_af>)
trackAST: (if2995, <if2995>)
trackAST: (+2996, <+2996>)
assocAST: (if2995, <if2995>, <if2995>) => (BindLet2993_new-bal2994, <BindLet2993_new-bal2994_af>, <BindLet2993_new-bal2994_af>)
trackAST: (write2997, <write2997>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger2998, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id2999, string)
trackAST: (key_account3000, string)
trackAST: (format3001, <format3001>)
trackAST: (string3002, string)
trackAST: (list3003, [<ak>])
trackAST: (key3004, string)
assocAST: (key3004, <key3004>, string) => (format3001, <format3001>, <format3001>)
trackAST: (key3005, <key3005>)
assocAST: (format3001, <key3004>, string) => (key3005, <key3005>, <key3005>)
TObject: TyAny
trackAST: (object3006, object:*)
trackAST: (if3007, <if3007>)
trackAST: (emit-event3008, <emit-event3008>)
trackAST: (ACCOUNT_GUARD_id3009, string)
trackAST: (ACCOUNT_GUARD_account3010, string)
trackAST: (ACCOUNT_GUARD_guard3011, guard)
trackAST: (bool3012, bool)
trackAST: (ACCOUNT_GUARD3013, bool)
assocAST: (bool3012, <bool3012>, bool) => (ACCOUNT_GUARD3013, <ACCOUNT_GUARD3013>, bool)
trackAST: (ACCOUNT_GUARD3014, <ACCOUNT_GUARD3014>)
assocAST: (bool3012, <bool3012>, bool) => (ACCOUNT_GUARD3014, <ACCOUNT_GUARD3014>, <ACCOUNT_GUARD3014>)
trackAST: (bool3015, bool)
TObject: TyAny
trackAST: (object3016, object:*)
trackAST: (if3017, <if3017>)
trackAST: (decimal3018, decimal)
assocAST: (object3016, <object3016>, object:*) => (BindLet2993, <BindLet2993>, <BindLet2993>)
assocAST: (BindLet2993, <object3016>, object:*) => (BindLet2943, <BindLet2943>, <BindLet2943>)
assocAST: (BindLet2943, <object3016>, object:*) => (BindSchema2935, <BindSchema2935>, <BindSchema2935>)
trackAST: (BindSchema2935schema3019, *)
trackAST: (credit3020, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit3020, <credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read2924, <with-default-read2924>, <with-default-read2924>)
trackAST: (credit3021, <credit3021>)
trackAST: (format3022, <format3022>)
trackAST: (string3023, string)
trackAST: (list3024, [<at>])
trackAST: (pact-id3025, <pact-id3025>)
trackAST: (sale-account3026, string)
assocAST: (sale-account3026, <sale-account3026>, string) => (format3022, <format3022>, <format3022>)
trackAST: (sale-account3027, <sale-account3027>)
assocAST: (format3022, <sale-account3026>, string) => (sale-account3027, <sale-account3027>, <sale-account3027>)
trackAST: (create-pact-guard3028, <create-pact-guard3028>)
trackAST: (string3029, string)
assocAST: (with-default-read2924, <credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit3021, <credit3021>, <credit3021>)
assocAST: (credit3021, <credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet2811_receiver2888, <BindLet2811_receiver2888_an>, <BindLet2811_receiver2888_an>)
trackAST: (emit-event3030, <emit-event3030>)
trackAST: (TRANSFER_id3031, string)
trackAST: (TRANSFER_sender3032, string)
trackAST: (TRANSFER_receiver3033, string)
trackAST: (TRANSFER_amount3034, decimal)
trackAST: (enforce-unit_id3035, string)
trackAST: (enforce-unit_amount3036, decimal)
trackAST: (BindLet3037, <BindLet3037>)
trackAST: (BindLet3037_p3038, <BindLet3037_p3038_ai>)
trackAST: (precision_id3039, string)
trackAST: (at3040, <at3040>)
trackAST: (string3041, string)
trackAST: (read3042, <read3042>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3043, table:{marmalade.ledger.token-schema})
trackAST: (precision3044, integer)
assocAST: (precision3044, <precision3044>, integer) => (at3040, <at3040>, <at3040>)
trackAST: (precision3045, <precision3045>)
assocAST: (at3040, <precision3044>, integer) => (precision3045, <precision3045>, <precision3045>)
assocAST: (precision3045, <precision3044>, integer) => (BindLet3037_p3038, <BindLet3037_p3038_ai>, <BindLet3037_p3038_ai>)
trackAST: (enforce3046, <enforce3046>)
trackAST: (=3047, <=3047>)
trackAST: (floor3048, <floor3048>)
trackAST: (string3049, string)
assocAST: (enforce3046, <enforce3046>, <enforce3046>) => (BindLet3037, <BindLet3037>, <BindLet3037>)
trackAST: (enforce-unit3050, bool)
assocAST: (enforce-unit3050, <enforce-unit3050>, bool) => (BindLet3037, <enforce3046>, <enforce3046>)
trackAST: (enforce-unit3051, <enforce-unit3051>)
assocAST: (BindLet3037, <enforce-unit3050>, bool) => (enforce-unit3051, <enforce-unit3051>, <enforce-unit3051>)
trackAST: (enforce3052, <enforce3052>)
trackAST: (>3053, <>3053>)
trackAST: (decimal3054, decimal)
trackAST: (string3055, string)
trackAST: (compose-capability3056, <compose-capability3056>)
trackAST: (DEBIT_id3057, string)
trackAST: (DEBIT_sender3058, string)
trackAST: (enforce-guard3059, <enforce-guard3059>)
trackAST: (account-guard_id3060, string)
trackAST: (account-guard_account3061, string)
trackAST: (with-read3062, <with-read3062>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3063, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3064, string)
trackAST: (key_account3065, string)
trackAST: (format3066, <format3066>)
trackAST: (string3067, string)
trackAST: (list3068, [<ak>])
trackAST: (key3069, string)
assocAST: (key3069, <key3069>, string) => (format3066, <format3066>, <format3066>)
trackAST: (key3070, <key3070>)
assocAST: (format3066, <key3069>, string) => (key3070, <key3070>, <key3070>)
trackAST: (BindSchema3071, <BindSchema3071>)
trackAST: (BindSchema3071_guard3072, <BindSchema3071_guard3072_f>)
trackAST: (string3073, string)
assocAST: (BindSchema3071_guard3072, <BindSchema3071_guard3072_f>, <BindSchema3071_guard3072_f>) => (BindSchema3071, <BindSchema3071>, <BindSchema3071>)
trackAST: (BindSchema3071schema3074, *)
trackAST: (account-guard3075, guard)
assocAST: (account-guard3075, <account-guard3075>, guard) => (with-read3062, <with-read3062>, <with-read3062>)
trackAST: (account-guard3076, <account-guard3076>)
assocAST: (with-read3062, <account-guard3075>, guard) => (account-guard3076, <account-guard3076>, <account-guard3076>)
trackAST: (DEBIT3077, <e>)
assocAST: (enforce-guard3059, <enforce-guard3059>, <enforce-guard3059>) => (DEBIT3077, <e>, <e>)
trackAST: (DEBIT3078, <DEBIT3078>)
assocAST: (enforce-guard3059, <enforce-guard3059>, <enforce-guard3059>) => (DEBIT3078, <DEBIT3078>, <DEBIT3078>)
trackAST: (compose-capability3079, <compose-capability3079>)
trackAST: (CREDIT_id3080, string)
trackAST: (CREDIT_receiver3081, string)
trackAST: (bool3082, bool)
trackAST: (CREDIT3083, <g>)
assocAST: (bool3082, <bool3082>, bool) => (CREDIT3083, <g>, <g>)
trackAST: (CREDIT3084, <CREDIT3084>)
assocAST: (bool3082, <bool3082>, bool) => (CREDIT3084, <CREDIT3084>, <CREDIT3084>)
trackAST: (TRANSFER3085, bool)
assocAST: (TRANSFER3085, <TRANSFER3085>, bool) => (compose-capability3079, <compose-capability3079>, <compose-capability3079>)
trackAST: (TRANSFER3086, <TRANSFER3086>)
trackAST: (format3087, <format3087>)
trackAST: (string3088, string)
trackAST: (list3089, [<at>])
trackAST: (pact-id3090, <pact-id3090>)
trackAST: (sale-account3091, string)
assocAST: (sale-account3091, <sale-account3091>, string) => (format3087, <format3087>, <format3087>)
trackAST: (sale-account3092, <sale-account3092>)
assocAST: (format3087, <sale-account3091>, string) => (sale-account3092, <sale-account3092>, <sale-account3092>)
assocAST: (compose-capability3079, <TRANSFER3085>, bool) => (TRANSFER3086, <TRANSFER3086>, <TRANSFER3086>)
trackAST: (emit-event3093, <emit-event3093>)
trackAST: (RECONCILE_token-id3094, string)
trackAST: (RECONCILE_amount3095, decimal)
trackAST: (RECONCILE_sender3096, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver3097, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool3098, bool)
trackAST: (RECONCILE3099, bool)
assocAST: (bool3098, <bool3098>, bool) => (RECONCILE3099, <RECONCILE3099>, bool)
trackAST: (RECONCILE3100, <RECONCILE3100>)
assocAST: (bool3098, <bool3098>, bool) => (RECONCILE3100, <RECONCILE3100>, <RECONCILE3100>)
assocAST: (emit-event3093, <emit-event3093>, <emit-event3093>) => (BindLet2811, <BindLet2811>, <BindLet2811>)
trackAST: (offer3101, bool)
assocAST: (offer3101, <offer3101>, bool) => (BindLet2811, <emit-event3093>, <emit-event3093>)
trackAST: (offer3102, <offer3102>)
assocAST: (BindLet2811, <offer3101>, bool) => (offer3102, <offer3102>, <offer3102>)
assocAST: (with-capability2701, <with-capability2701>, <with-capability2701>) => (step2700, <step2700>, <step2700>)
trackAST: (with-capability3103, <with-capability3103>)
trackAST: (WITHDRAW_id3104, string)
trackAST: (WITHDRAW_seller3105, string)
trackAST: (WITHDRAW_amount3106, decimal)
trackAST: (WITHDRAW_timeout3107, integer)
trackAST: (WITHDRAW_sale-id3108, string)
trackAST: (enforce3109, <enforce3109>)
trackAST: (not3110, <not3110>)
trackAST: (sale-active_timeout3111, integer)
trackAST: (<3112, <<3112>)
trackAST: (at3113, <at3113>)
trackAST: (string3114, string)
trackAST: (chain-data3115, <chain-data3115>)
trackAST: (sale-active3116, bool)
assocAST: (sale-active3116, <sale-active3116>, bool) => (<3112, <<3112>, <<3112>)
trackAST: (sale-active3117, <sale-active3117>)
assocAST: (<3112, <sale-active3116>, bool) => (sale-active3117, <sale-active3117>, <sale-active3117>)
trackAST: (string3118, string)
trackAST: (compose-capability3119, <compose-capability3119>)
trackAST: (DEBIT_id3120, string)
trackAST: (DEBIT_sender3121, string)
trackAST: (enforce-guard3122, <enforce-guard3122>)
trackAST: (account-guard_id3123, string)
trackAST: (account-guard_account3124, string)
trackAST: (with-read3125, <with-read3125>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3126, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3127, string)
trackAST: (key_account3128, string)
trackAST: (format3129, <format3129>)
trackAST: (string3130, string)
trackAST: (list3131, [<ak>])
trackAST: (key3132, string)
assocAST: (key3132, <key3132>, string) => (format3129, <format3129>, <format3129>)
trackAST: (key3133, <key3133>)
assocAST: (format3129, <key3132>, string) => (key3133, <key3133>, <key3133>)
trackAST: (BindSchema3134, <BindSchema3134>)
trackAST: (BindSchema3134_guard3135, <BindSchema3134_guard3135_f>)
trackAST: (string3136, string)
assocAST: (BindSchema3134_guard3135, <BindSchema3134_guard3135_f>, <BindSchema3134_guard3135_f>) => (BindSchema3134, <BindSchema3134>, <BindSchema3134>)
trackAST: (BindSchema3134schema3137, *)
trackAST: (account-guard3138, guard)
assocAST: (account-guard3138, <account-guard3138>, guard) => (with-read3125, <with-read3125>, <with-read3125>)
trackAST: (account-guard3139, <account-guard3139>)
assocAST: (with-read3125, <account-guard3138>, guard) => (account-guard3139, <account-guard3139>, <account-guard3139>)
trackAST: (DEBIT3140, <e>)
assocAST: (enforce-guard3122, <enforce-guard3122>, <enforce-guard3122>) => (DEBIT3140, <e>, <e>)
trackAST: (DEBIT3141, <DEBIT3141>)
trackAST: (format3142, <format3142>)
trackAST: (string3143, string)
trackAST: (list3144, [<at>])
trackAST: (pact-id3145, <pact-id3145>)
trackAST: (sale-account3146, string)
assocAST: (sale-account3146, <sale-account3146>, string) => (format3142, <format3142>, <format3142>)
trackAST: (sale-account3147, <sale-account3147>)
assocAST: (format3142, <sale-account3146>, string) => (sale-account3147, <sale-account3147>, <sale-account3147>)
assocAST: (enforce-guard3122, <enforce-guard3122>, <enforce-guard3122>) => (DEBIT3141, <DEBIT3141>, <DEBIT3141>)
trackAST: (compose-capability3148, <compose-capability3148>)
trackAST: (CREDIT_id3149, string)
trackAST: (CREDIT_receiver3150, string)
trackAST: (bool3151, bool)
trackAST: (CREDIT3152, <g>)
assocAST: (bool3151, <bool3151>, bool) => (CREDIT3152, <g>, <g>)
trackAST: (CREDIT3153, <CREDIT3153>)
assocAST: (bool3151, <bool3151>, bool) => (CREDIT3153, <CREDIT3153>, <CREDIT3153>)
trackAST: (compose-capability3154, <compose-capability3154>)
trackAST: (SALE_PRIVATE_sale-id3155, string)
trackAST: (bool3156, bool)
trackAST: (SALE_PRIVATE3157, bool)
assocAST: (bool3156, <bool3156>, bool) => (SALE_PRIVATE3157, <SALE_PRIVATE3157>, bool)
trackAST: (SALE_PRIVATE3158, <SALE_PRIVATE3158>)
assocAST: (bool3156, <bool3156>, bool) => (SALE_PRIVATE3158, <SALE_PRIVATE3158>, <SALE_PRIVATE3158>)
trackAST: (WITHDRAW3159, bool)
assocAST: (WITHDRAW3159, <WITHDRAW3159>, bool) => (compose-capability3154, <compose-capability3154>, <compose-capability3154>)
trackAST: (WITHDRAW3160, <WITHDRAW3160>)
trackAST: (pact-id3161, <pact-id3161>)
assocAST: (compose-capability3154, <WITHDRAW3159>, bool) => (WITHDRAW3160, <WITHDRAW3160>, <WITHDRAW3160>)
trackAST: (list3162, [*])
trackAST: (withdraw_id3163, string)
trackAST: (withdraw_seller3164, string)
trackAST: (withdraw_amount3165, decimal)
trackAST: (require-capability3166, <require-capability3166>)
trackAST: (SALE_PRIVATE_sale-id3167, string)
trackAST: (bool3168, bool)
trackAST: (SALE_PRIVATE3169, bool)
assocAST: (bool3168, <bool3168>, bool) => (SALE_PRIVATE3169, <SALE_PRIVATE3169>, bool)
trackAST: (SALE_PRIVATE3170, <SALE_PRIVATE3170>)
trackAST: (pact-id3171, <pact-id3171>)
assocAST: (bool3168, <bool3168>, bool) => (SALE_PRIVATE3170, <SALE_PRIVATE3170>, <SALE_PRIVATE3170>)
trackAST: (BindLet3172, <BindLet3172>)
trackAST: (BindLet3172_sender3173, <BindLet3172_sender3173_ao>)
trackAST: (debit_id3174, string)
trackAST: (debit_account3175, string)
trackAST: (debit_amount3176, decimal)
trackAST: (require-capability3177, <require-capability3177>)
trackAST: (DEBIT_id3178, string)
trackAST: (DEBIT_sender3179, string)
trackAST: (enforce-guard3180, <enforce-guard3180>)
trackAST: (account-guard_id3181, string)
trackAST: (account-guard_account3182, string)
trackAST: (with-read3183, <with-read3183>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3184, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3185, string)
trackAST: (key_account3186, string)
trackAST: (format3187, <format3187>)
trackAST: (string3188, string)
trackAST: (list3189, [<ak>])
trackAST: (key3190, string)
assocAST: (key3190, <key3190>, string) => (format3187, <format3187>, <format3187>)
trackAST: (key3191, <key3191>)
assocAST: (format3187, <key3190>, string) => (key3191, <key3191>, <key3191>)
trackAST: (BindSchema3192, <BindSchema3192>)
trackAST: (BindSchema3192_guard3193, <BindSchema3192_guard3193_f>)
trackAST: (string3194, string)
assocAST: (BindSchema3192_guard3193, <BindSchema3192_guard3193_f>, <BindSchema3192_guard3193_f>) => (BindSchema3192, <BindSchema3192>, <BindSchema3192>)
trackAST: (BindSchema3192schema3195, *)
trackAST: (account-guard3196, guard)
assocAST: (account-guard3196, <account-guard3196>, guard) => (with-read3183, <with-read3183>, <with-read3183>)
trackAST: (account-guard3197, <account-guard3197>)
assocAST: (with-read3183, <account-guard3196>, guard) => (account-guard3197, <account-guard3197>, <account-guard3197>)
trackAST: (DEBIT3198, <e>)
assocAST: (enforce-guard3180, <enforce-guard3180>, <enforce-guard3180>) => (DEBIT3198, <e>, <e>)
trackAST: (DEBIT3199, <DEBIT3199>)
assocAST: (enforce-guard3180, <enforce-guard3180>, <enforce-guard3180>) => (DEBIT3199, <DEBIT3199>, <DEBIT3199>)
trackAST: (enforce-unit_id3200, string)
trackAST: (enforce-unit_amount3201, decimal)
trackAST: (BindLet3202, <BindLet3202>)
trackAST: (BindLet3202_p3203, <BindLet3202_p3203_ai>)
trackAST: (precision_id3204, string)
trackAST: (at3205, <at3205>)
trackAST: (string3206, string)
trackAST: (read3207, <read3207>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3208, table:{marmalade.ledger.token-schema})
trackAST: (precision3209, integer)
assocAST: (precision3209, <precision3209>, integer) => (at3205, <at3205>, <at3205>)
trackAST: (precision3210, <precision3210>)
assocAST: (at3205, <precision3209>, integer) => (precision3210, <precision3210>, <precision3210>)
assocAST: (precision3210, <precision3209>, integer) => (BindLet3202_p3203, <BindLet3202_p3203_ai>, <BindLet3202_p3203_ai>)
trackAST: (enforce3211, <enforce3211>)
trackAST: (=3212, <=3212>)
trackAST: (floor3213, <floor3213>)
trackAST: (string3214, string)
assocAST: (enforce3211, <enforce3211>, <enforce3211>) => (BindLet3202, <BindLet3202>, <BindLet3202>)
trackAST: (enforce-unit3215, bool)
assocAST: (enforce-unit3215, <enforce-unit3215>, bool) => (BindLet3202, <enforce3211>, <enforce3211>)
trackAST: (enforce-unit3216, <enforce-unit3216>)
assocAST: (BindLet3202, <enforce-unit3215>, bool) => (enforce-unit3216, <enforce-unit3216>, <enforce-unit3216>)
trackAST: (with-read3217, <with-read3217>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3218, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3219, string)
trackAST: (key_account3220, string)
trackAST: (format3221, <format3221>)
trackAST: (string3222, string)
trackAST: (list3223, [<ak>])
trackAST: (key3224, string)
assocAST: (key3224, <key3224>, string) => (format3221, <format3221>, <format3221>)
trackAST: (key3225, <key3225>)
assocAST: (format3221, <key3224>, string) => (key3225, <key3225>, <key3225>)
trackAST: (BindSchema3226, <BindSchema3226>)
trackAST: (BindSchema3226_old-bal3227, <BindSchema3226_old-bal3227_aa>)
trackAST: (string3228, string)
trackAST: (enforce3229, <enforce3229>)
trackAST: (<=3230, <<=3230>)
trackAST: (string3231, string)
trackAST: (BindLet3232, <BindLet3232>)
trackAST: (BindLet3232_new-bal3233, <BindLet3232_new-bal3233_ab>)
trackAST: (-3234, <-3234>)
assocAST: (-3234, <-3234>, <-3234>) => (BindLet3232_new-bal3233, <BindLet3232_new-bal3233_ab>, <BindLet3232_new-bal3233_ab>)
trackAST: (update3235, <update3235>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3236, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3237, string)
trackAST: (key_account3238, string)
trackAST: (format3239, <format3239>)
trackAST: (string3240, string)
trackAST: (list3241, [<ak>])
trackAST: (key3242, string)
assocAST: (key3242, <key3242>, string) => (format3239, <format3239>, <format3239>)
trackAST: (key3243, <key3243>)
assocAST: (format3239, <key3242>, string) => (key3243, <key3243>, <key3243>)
TObject: TyAny
trackAST: (object3244, object:*)
TObject: TyAny
trackAST: (object3245, object:*)
assocAST: (object3245, <object3245>, object:*) => (BindLet3232, <BindLet3232>, <BindLet3232>)
assocAST: (BindLet3232, <object3245>, object:*) => (BindSchema3226, <BindSchema3226>, <BindSchema3226>)
trackAST: (BindSchema3226schema3246, *)
trackAST: (debit3247, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit3247, <debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read3217, <with-read3217>, <with-read3217>)
trackAST: (debit3248, <debit3248>)
trackAST: (format3249, <format3249>)
trackAST: (string3250, string)
trackAST: (list3251, [<at>])
trackAST: (pact-id3252, <pact-id3252>)
trackAST: (sale-account3253, string)
assocAST: (sale-account3253, <sale-account3253>, string) => (format3249, <format3249>, <format3249>)
trackAST: (sale-account3254, <sale-account3254>)
assocAST: (format3249, <sale-account3253>, string) => (sale-account3254, <sale-account3254>, <sale-account3254>)
assocAST: (with-read3217, <debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit3248, <debit3248>, <debit3248>)
assocAST: (debit3248, <debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet3172_sender3173, <BindLet3172_sender3173_ao>, <BindLet3172_sender3173_ao>)
trackAST: (BindLet3172_receiver3255, <BindLet3172_receiver3255_ap>)
trackAST: (credit-account_id3256, string)
trackAST: (credit-account_account3257, string)
trackAST: (credit-account_amount3258, decimal)
trackAST: (credit_id3259, string)
trackAST: (credit_account3260, string)
trackAST: (credit_guard3261, guard)
trackAST: (credit_amount3262, decimal)
trackAST: (enforce-valid-account_account3263, string)
trackAST: (enforce3264, <enforce3264>)
trackAST: (>3265, <>3265>)
trackAST: (length3266, <length3266>)
trackAST: (integer3267, integer)
trackAST: (string3268, string)
trackAST: (enforce-valid-account3269, <c>)
assocAST: (enforce3264, <enforce3264>, <enforce3264>) => (enforce-valid-account3269, <c>, <c>)
trackAST: (enforce-valid-account3270, <enforce-valid-account3270>)
assocAST: (enforce3264, <enforce3264>, <enforce3264>) => (enforce-valid-account3270, <enforce-valid-account3270>, <enforce-valid-account3270>)
trackAST: (enforce-unit_id3271, string)
trackAST: (enforce-unit_amount3272, decimal)
trackAST: (BindLet3273, <BindLet3273>)
trackAST: (BindLet3273_p3274, <BindLet3273_p3274_ai>)
trackAST: (precision_id3275, string)
trackAST: (at3276, <at3276>)
trackAST: (string3277, string)
trackAST: (read3278, <read3278>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3279, table:{marmalade.ledger.token-schema})
trackAST: (precision3280, integer)
assocAST: (precision3280, <precision3280>, integer) => (at3276, <at3276>, <at3276>)
trackAST: (precision3281, <precision3281>)
assocAST: (at3276, <precision3280>, integer) => (precision3281, <precision3281>, <precision3281>)
assocAST: (precision3281, <precision3280>, integer) => (BindLet3273_p3274, <BindLet3273_p3274_ai>, <BindLet3273_p3274_ai>)
trackAST: (enforce3282, <enforce3282>)
trackAST: (=3283, <=3283>)
trackAST: (floor3284, <floor3284>)
trackAST: (string3285, string)
assocAST: (enforce3282, <enforce3282>, <enforce3282>) => (BindLet3273, <BindLet3273>, <BindLet3273>)
trackAST: (enforce-unit3286, bool)
assocAST: (enforce-unit3286, <enforce-unit3286>, bool) => (BindLet3273, <enforce3282>, <enforce3282>)
trackAST: (enforce-unit3287, <enforce-unit3287>)
assocAST: (BindLet3273, <enforce-unit3286>, bool) => (enforce-unit3287, <enforce-unit3287>, <enforce-unit3287>)
trackAST: (require-capability3288, <require-capability3288>)
trackAST: (CREDIT_id3289, string)
trackAST: (CREDIT_receiver3290, string)
trackAST: (bool3291, bool)
trackAST: (CREDIT3292, <g>)
assocAST: (bool3291, <bool3291>, bool) => (CREDIT3292, <g>, <g>)
trackAST: (CREDIT3293, <CREDIT3293>)
assocAST: (bool3291, <bool3291>, bool) => (CREDIT3293, <CREDIT3293>, <CREDIT3293>)
trackAST: (with-default-read3294, <with-default-read3294>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3295, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3296, string)
trackAST: (key_account3297, string)
trackAST: (format3298, <format3298>)
trackAST: (string3299, string)
trackAST: (list3300, [<ak>])
trackAST: (key3301, string)
assocAST: (key3301, <key3301>, string) => (format3298, <format3298>, <format3298>)
trackAST: (key3302, <key3302>)
assocAST: (format3298, <key3301>, string) => (key3302, <key3302>, <key3302>)
TObject: TyAny
trackAST: (object3303, object:*)
trackAST: (decimal3304, decimal)
trackAST: (BindSchema3305, <BindSchema3305>)
trackAST: (BindSchema3305_old-bal3306, <BindSchema3305_old-bal3306_ac>)
trackAST: (string3307, string)
trackAST: (BindSchema3305_retg3308, <BindSchema3305_retg3308_ad>)
trackAST: (string3309, string)
trackAST: (enforce3310, <enforce3310>)
trackAST: (=3311, <=3311>)
trackAST: (string3312, string)
trackAST: (BindLet3313, <BindLet3313>)
trackAST: (BindLet3313_is-new3314, <BindLet3313_is-new3314_ae>)
trackAST: (if3315, <if3315>)
trackAST: (=3316, <=3316>)
trackAST: (decimal3317, decimal)
trackAST: (enforce-reserved_account3318, string)
trackAST: (enforce-reserved_guard3319, guard)
trackAST: (BindLet3320, <BindLet3320>)
trackAST: (BindLet3320_r3321, <BindLet3320_r3321_g>)
trackAST: (check-reserved_account3322, string)
trackAST: (BindLet3323, <BindLet3323>)
trackAST: (BindLet3323_pfx3324, <BindLet3323_pfx3324_f>)
trackAST: (take3325, <take3325>)
trackAST: (integer3326, integer)
assocAST: (take3325, <take3325>, <take3325>) => (BindLet3323_pfx3324, <BindLet3323_pfx3324_f>, <BindLet3323_pfx3324_f>)
trackAST: (if3327, <if3327>)
trackAST: (=3328, <=3328>)
trackAST: (string3329, string)
trackAST: (take3330, <take3330>)
trackAST: (integer3331, integer)
trackAST: (take3332, <take3332>)
trackAST: (integer3333, integer)
trackAST: (string3334, string)
assocAST: (if3327, <if3327>, <if3327>) => (BindLet3323, <BindLet3323>, <BindLet3323>)
trackAST: (check-reserved3335, string)
assocAST: (check-reserved3335, <check-reserved3335>, string) => (BindLet3323, <if3327>, <if3327>)
trackAST: (check-reserved3336, <check-reserved3336>)
assocAST: (BindLet3323, <check-reserved3335>, string) => (check-reserved3336, <check-reserved3336>, <check-reserved3336>)
assocAST: (check-reserved3336, <check-reserved3335>, string) => (BindLet3320_r3321, <BindLet3320_r3321_g>, <BindLet3320_r3321_g>)
trackAST: (if3337, <if3337>)
trackAST: (=3338, <=3338>)
trackAST: (string3339, string)
trackAST: (bool3340, bool)
trackAST: (if3341, <if3341>)
trackAST: (=3342, <=3342>)
trackAST: (string3343, string)
trackAST: (enforce3344, <enforce3344>)
trackAST: (=3345, <=3345>)
trackAST: (format3346, <format3346>)
trackAST: (string3347, string)
trackAST: (list3348, [<h>])
trackAST: (format3349, <format3349>)
trackAST: (string3350, string)
trackAST: (list3351, [<i>])
trackAST: (drop3352, <drop3352>)
trackAST: (integer3353, integer)
trackAST: (string3354, string)
trackAST: (enforce3355, <enforce3355>)
trackAST: (bool3356, bool)
trackAST: (format3357, <format3357>)
trackAST: (string3358, string)
trackAST: (list3359, [<j>])
assocAST: (if3337, <if3337>, <if3337>) => (BindLet3320, <BindLet3320>, <BindLet3320>)
trackAST: (enforce-reserved3360, bool)
assocAST: (enforce-reserved3360, <enforce-reserved3360>, bool) => (BindLet3320, <if3337>, <if3337>)
trackAST: (enforce-reserved3361, <enforce-reserved3361>)
assocAST: (BindLet3320, <enforce-reserved3360>, bool) => (enforce-reserved3361, <enforce-reserved3361>, <enforce-reserved3361>)
trackAST: (bool3362, bool)
assocAST: (if3315, <if3315>, <if3315>) => (BindLet3313_is-new3314, <BindLet3313_is-new3314_ae>, <BindLet3313_is-new3314_ae>)
trackAST: (BindLet3363, <BindLet3363>)
trackAST: (BindLet3363_new-bal3364, <BindLet3363_new-bal3364_af>)
trackAST: (if3365, <if3365>)
trackAST: (+3366, <+3366>)
assocAST: (if3365, <if3365>, <if3365>) => (BindLet3363_new-bal3364, <BindLet3363_new-bal3364_af>, <BindLet3363_new-bal3364_af>)
trackAST: (write3367, <write3367>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3368, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3369, string)
trackAST: (key_account3370, string)
trackAST: (format3371, <format3371>)
trackAST: (string3372, string)
trackAST: (list3373, [<ak>])
trackAST: (key3374, string)
assocAST: (key3374, <key3374>, string) => (format3371, <format3371>, <format3371>)
trackAST: (key3375, <key3375>)
assocAST: (format3371, <key3374>, string) => (key3375, <key3375>, <key3375>)
TObject: TyAny
trackAST: (object3376, object:*)
trackAST: (if3377, <if3377>)
trackAST: (emit-event3378, <emit-event3378>)
trackAST: (ACCOUNT_GUARD_id3379, string)
trackAST: (ACCOUNT_GUARD_account3380, string)
trackAST: (ACCOUNT_GUARD_guard3381, guard)
trackAST: (bool3382, bool)
trackAST: (ACCOUNT_GUARD3383, bool)
assocAST: (bool3382, <bool3382>, bool) => (ACCOUNT_GUARD3383, <ACCOUNT_GUARD3383>, bool)
trackAST: (ACCOUNT_GUARD3384, <ACCOUNT_GUARD3384>)
assocAST: (bool3382, <bool3382>, bool) => (ACCOUNT_GUARD3384, <ACCOUNT_GUARD3384>, <ACCOUNT_GUARD3384>)
trackAST: (bool3385, bool)
TObject: TyAny
trackAST: (object3386, object:*)
trackAST: (if3387, <if3387>)
trackAST: (decimal3388, decimal)
assocAST: (object3386, <object3386>, object:*) => (BindLet3363, <BindLet3363>, <BindLet3363>)
assocAST: (BindLet3363, <object3386>, object:*) => (BindLet3313, <BindLet3313>, <BindLet3313>)
assocAST: (BindLet3313, <object3386>, object:*) => (BindSchema3305, <BindSchema3305>, <BindSchema3305>)
trackAST: (BindSchema3305schema3389, *)
trackAST: (credit3390, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit3390, <credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read3294, <with-default-read3294>, <with-default-read3294>)
trackAST: (credit3391, <credit3391>)
trackAST: (account-guard_id3392, string)
trackAST: (account-guard_account3393, string)
trackAST: (with-read3394, <with-read3394>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3395, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3396, string)
trackAST: (key_account3397, string)
trackAST: (format3398, <format3398>)
trackAST: (string3399, string)
trackAST: (list3400, [<ak>])
trackAST: (key3401, string)
assocAST: (key3401, <key3401>, string) => (format3398, <format3398>, <format3398>)
trackAST: (key3402, <key3402>)
assocAST: (format3398, <key3401>, string) => (key3402, <key3402>, <key3402>)
trackAST: (BindSchema3403, <BindSchema3403>)
trackAST: (BindSchema3403_guard3404, <BindSchema3403_guard3404_f>)
trackAST: (string3405, string)
assocAST: (BindSchema3403_guard3404, <BindSchema3403_guard3404_f>, <BindSchema3403_guard3404_f>) => (BindSchema3403, <BindSchema3403>, <BindSchema3403>)
trackAST: (BindSchema3403schema3406, *)
trackAST: (account-guard3407, guard)
assocAST: (account-guard3407, <account-guard3407>, guard) => (with-read3394, <with-read3394>, <with-read3394>)
trackAST: (account-guard3408, <account-guard3408>)
assocAST: (with-read3394, <account-guard3407>, guard) => (account-guard3408, <account-guard3408>, <account-guard3408>)
assocAST: (with-default-read3294, <credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit3391, <credit3391>, <credit3391>)
trackAST: (credit-account3409, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit3391, <credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit-account3409, <credit-account3409>, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (credit-account3410, <credit-account3410>)
assocAST: (credit3391, <credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit-account3410, <credit-account3410>, <credit-account3410>)
assocAST: (credit-account3410, <credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet3172_receiver3255, <BindLet3172_receiver3255_ap>, <BindLet3172_receiver3255_ap>)
trackAST: (emit-event3411, <emit-event3411>)
trackAST: (TRANSFER_id3412, string)
trackAST: (TRANSFER_sender3413, string)
trackAST: (TRANSFER_receiver3414, string)
trackAST: (TRANSFER_amount3415, decimal)
trackAST: (enforce-unit_id3416, string)
trackAST: (enforce-unit_amount3417, decimal)
trackAST: (BindLet3418, <BindLet3418>)
trackAST: (BindLet3418_p3419, <BindLet3418_p3419_ai>)
trackAST: (precision_id3420, string)
trackAST: (at3421, <at3421>)
trackAST: (string3422, string)
trackAST: (read3423, <read3423>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3424, table:{marmalade.ledger.token-schema})
trackAST: (precision3425, integer)
assocAST: (precision3425, <precision3425>, integer) => (at3421, <at3421>, <at3421>)
trackAST: (precision3426, <precision3426>)
assocAST: (at3421, <precision3425>, integer) => (precision3426, <precision3426>, <precision3426>)
assocAST: (precision3426, <precision3425>, integer) => (BindLet3418_p3419, <BindLet3418_p3419_ai>, <BindLet3418_p3419_ai>)
trackAST: (enforce3427, <enforce3427>)
trackAST: (=3428, <=3428>)
trackAST: (floor3429, <floor3429>)
trackAST: (string3430, string)
assocAST: (enforce3427, <enforce3427>, <enforce3427>) => (BindLet3418, <BindLet3418>, <BindLet3418>)
trackAST: (enforce-unit3431, bool)
assocAST: (enforce-unit3431, <enforce-unit3431>, bool) => (BindLet3418, <enforce3427>, <enforce3427>)
trackAST: (enforce-unit3432, <enforce-unit3432>)
assocAST: (BindLet3418, <enforce-unit3431>, bool) => (enforce-unit3432, <enforce-unit3432>, <enforce-unit3432>)
trackAST: (enforce3433, <enforce3433>)
trackAST: (>3434, <>3434>)
trackAST: (decimal3435, decimal)
trackAST: (string3436, string)
trackAST: (compose-capability3437, <compose-capability3437>)
trackAST: (DEBIT_id3438, string)
trackAST: (DEBIT_sender3439, string)
trackAST: (enforce-guard3440, <enforce-guard3440>)
trackAST: (account-guard_id3441, string)
trackAST: (account-guard_account3442, string)
trackAST: (with-read3443, <with-read3443>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3444, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3445, string)
trackAST: (key_account3446, string)
trackAST: (format3447, <format3447>)
trackAST: (string3448, string)
trackAST: (list3449, [<ak>])
trackAST: (key3450, string)
assocAST: (key3450, <key3450>, string) => (format3447, <format3447>, <format3447>)
trackAST: (key3451, <key3451>)
assocAST: (format3447, <key3450>, string) => (key3451, <key3451>, <key3451>)
trackAST: (BindSchema3452, <BindSchema3452>)
trackAST: (BindSchema3452_guard3453, <BindSchema3452_guard3453_f>)
trackAST: (string3454, string)
assocAST: (BindSchema3452_guard3453, <BindSchema3452_guard3453_f>, <BindSchema3452_guard3453_f>) => (BindSchema3452, <BindSchema3452>, <BindSchema3452>)
trackAST: (BindSchema3452schema3455, *)
trackAST: (account-guard3456, guard)
assocAST: (account-guard3456, <account-guard3456>, guard) => (with-read3443, <with-read3443>, <with-read3443>)
trackAST: (account-guard3457, <account-guard3457>)
assocAST: (with-read3443, <account-guard3456>, guard) => (account-guard3457, <account-guard3457>, <account-guard3457>)
trackAST: (DEBIT3458, <e>)
assocAST: (enforce-guard3440, <enforce-guard3440>, <enforce-guard3440>) => (DEBIT3458, <e>, <e>)
trackAST: (DEBIT3459, <DEBIT3459>)
assocAST: (enforce-guard3440, <enforce-guard3440>, <enforce-guard3440>) => (DEBIT3459, <DEBIT3459>, <DEBIT3459>)
trackAST: (compose-capability3460, <compose-capability3460>)
trackAST: (CREDIT_id3461, string)
trackAST: (CREDIT_receiver3462, string)
trackAST: (bool3463, bool)
trackAST: (CREDIT3464, <g>)
assocAST: (bool3463, <bool3463>, bool) => (CREDIT3464, <g>, <g>)
trackAST: (CREDIT3465, <CREDIT3465>)
assocAST: (bool3463, <bool3463>, bool) => (CREDIT3465, <CREDIT3465>, <CREDIT3465>)
trackAST: (TRANSFER3466, bool)
assocAST: (TRANSFER3466, <TRANSFER3466>, bool) => (compose-capability3460, <compose-capability3460>, <compose-capability3460>)
trackAST: (TRANSFER3467, <TRANSFER3467>)
trackAST: (format3468, <format3468>)
trackAST: (string3469, string)
trackAST: (list3470, [<at>])
trackAST: (pact-id3471, <pact-id3471>)
trackAST: (sale-account3472, string)
assocAST: (sale-account3472, <sale-account3472>, string) => (format3468, <format3468>, <format3468>)
trackAST: (sale-account3473, <sale-account3473>)
assocAST: (format3468, <sale-account3472>, string) => (sale-account3473, <sale-account3473>, <sale-account3473>)
assocAST: (compose-capability3460, <TRANSFER3466>, bool) => (TRANSFER3467, <TRANSFER3467>, <TRANSFER3467>)
trackAST: (emit-event3474, <emit-event3474>)
trackAST: (RECONCILE_token-id3475, string)
trackAST: (RECONCILE_amount3476, decimal)
trackAST: (RECONCILE_sender3477, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver3478, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool3479, bool)
trackAST: (RECONCILE3480, bool)
assocAST: (bool3479, <bool3479>, bool) => (RECONCILE3480, <RECONCILE3480>, bool)
trackAST: (RECONCILE3481, <RECONCILE3481>)
assocAST: (bool3479, <bool3479>, bool) => (RECONCILE3481, <RECONCILE3481>, <RECONCILE3481>)
assocAST: (emit-event3474, <emit-event3474>, <emit-event3474>) => (BindLet3172, <BindLet3172>, <BindLet3172>)
trackAST: (withdraw3482, bool)
assocAST: (withdraw3482, <withdraw3482>, bool) => (BindLet3172, <emit-event3474>, <emit-event3474>)
trackAST: (withdraw3483, <withdraw3483>)
assocAST: (BindLet3172, <withdraw3482>, bool) => (withdraw3483, <withdraw3483>, <withdraw3483>)
trackAST: (step3484, <step3484>)
trackAST: (BindLet3485, <BindLet3485>)
trackAST: (BindLet3485_buyer3486, string)
trackAST: (read-msg3487, <read-msg3487>)
trackAST: (string3488, string)
assocAST: (BindLet3485_buyer3486, <BindLet3485_buyer3486>, string) => (read-msg3487, <read-msg3487>, <read-msg3487>)
trackAST: (BindLet3485_buyer-guard3489, guard)
trackAST: (read-msg3490, <read-msg3490>)
trackAST: (string3491, string)
assocAST: (BindLet3485_buyer-guard3489, <BindLet3485_buyer-guard3489>, guard) => (read-msg3490, <read-msg3490>, <read-msg3490>)
trackAST: (with-capability3492, <with-capability3492>)
trackAST: (BUY_id3493, string)
trackAST: (BUY_seller3494, string)
trackAST: (BUY_buyer3495, string)
trackAST: (BUY_amount3496, decimal)
trackAST: (BUY_timeout3497, integer)
trackAST: (BUY_sale-id3498, string)
trackAST: (enforce3499, <enforce3499>)
trackAST: (sale-active_timeout3500, integer)
trackAST: (<3501, <<3501>)
trackAST: (at3502, <at3502>)
trackAST: (string3503, string)
trackAST: (chain-data3504, <chain-data3504>)
trackAST: (sale-active3505, bool)
assocAST: (sale-active3505, <sale-active3505>, bool) => (<3501, <<3501>, <<3501>)
trackAST: (sale-active3506, <sale-active3506>)
assocAST: (<3501, <sale-active3505>, bool) => (sale-active3506, <sale-active3506>, <sale-active3506>)
trackAST: (string3507, string)
trackAST: (compose-capability3508, <compose-capability3508>)
trackAST: (DEBIT_id3509, string)
trackAST: (DEBIT_sender3510, string)
trackAST: (enforce-guard3511, <enforce-guard3511>)
trackAST: (account-guard_id3512, string)
trackAST: (account-guard_account3513, string)
trackAST: (with-read3514, <with-read3514>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3515, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3516, string)
trackAST: (key_account3517, string)
trackAST: (format3518, <format3518>)
trackAST: (string3519, string)
trackAST: (list3520, [<ak>])
trackAST: (key3521, string)
assocAST: (key3521, <key3521>, string) => (format3518, <format3518>, <format3518>)
trackAST: (key3522, <key3522>)
assocAST: (format3518, <key3521>, string) => (key3522, <key3522>, <key3522>)
trackAST: (BindSchema3523, <BindSchema3523>)
trackAST: (BindSchema3523_guard3524, <BindSchema3523_guard3524_f>)
trackAST: (string3525, string)
assocAST: (BindSchema3523_guard3524, <BindSchema3523_guard3524_f>, <BindSchema3523_guard3524_f>) => (BindSchema3523, <BindSchema3523>, <BindSchema3523>)
trackAST: (BindSchema3523schema3526, *)
trackAST: (account-guard3527, guard)
assocAST: (account-guard3527, <account-guard3527>, guard) => (with-read3514, <with-read3514>, <with-read3514>)
trackAST: (account-guard3528, <account-guard3528>)
assocAST: (with-read3514, <account-guard3527>, guard) => (account-guard3528, <account-guard3528>, <account-guard3528>)
trackAST: (DEBIT3529, <e>)
assocAST: (enforce-guard3511, <enforce-guard3511>, <enforce-guard3511>) => (DEBIT3529, <e>, <e>)
trackAST: (DEBIT3530, <DEBIT3530>)
trackAST: (format3531, <format3531>)
trackAST: (string3532, string)
trackAST: (list3533, [<at>])
trackAST: (pact-id3534, <pact-id3534>)
trackAST: (sale-account3535, string)
assocAST: (sale-account3535, <sale-account3535>, string) => (format3531, <format3531>, <format3531>)
trackAST: (sale-account3536, <sale-account3536>)
assocAST: (format3531, <sale-account3535>, string) => (sale-account3536, <sale-account3536>, <sale-account3536>)
assocAST: (enforce-guard3511, <enforce-guard3511>, <enforce-guard3511>) => (DEBIT3530, <DEBIT3530>, <DEBIT3530>)
trackAST: (compose-capability3537, <compose-capability3537>)
trackAST: (CREDIT_id3538, string)
trackAST: (CREDIT_receiver3539, string)
trackAST: (bool3540, bool)
trackAST: (CREDIT3541, <g>)
assocAST: (bool3540, <bool3540>, bool) => (CREDIT3541, <g>, <g>)
trackAST: (CREDIT3542, <CREDIT3542>)
assocAST: (bool3540, <bool3540>, bool) => (CREDIT3542, <CREDIT3542>, <CREDIT3542>)
trackAST: (compose-capability3543, <compose-capability3543>)
trackAST: (SALE_PRIVATE_sale-id3544, string)
trackAST: (bool3545, bool)
trackAST: (SALE_PRIVATE3546, bool)
assocAST: (bool3545, <bool3545>, bool) => (SALE_PRIVATE3546, <SALE_PRIVATE3546>, bool)
trackAST: (SALE_PRIVATE3547, <SALE_PRIVATE3547>)
assocAST: (bool3545, <bool3545>, bool) => (SALE_PRIVATE3547, <SALE_PRIVATE3547>, <SALE_PRIVATE3547>)
trackAST: (BUY3548, bool)
assocAST: (BUY3548, <BUY3548>, bool) => (compose-capability3543, <compose-capability3543>, <compose-capability3543>)
trackAST: (BUY3549, <BUY3549>)
trackAST: (pact-id3550, <pact-id3550>)
assocAST: (compose-capability3543, <BUY3548>, bool) => (BUY3549, <BUY3549>, <BUY3549>)
trackAST: (list3551, [*])
trackAST: (buy_id3552, string)
trackAST: (buy_seller3553, string)
trackAST: (buy_buyer3554, string)
trackAST: (buy_buyer-guard3555, guard)
trackAST: (buy_amount3556, decimal)
trackAST: (buy_sale-id3557, string)
trackAST: (require-capability3558, <require-capability3558>)
trackAST: (SALE_PRIVATE_sale-id3559, string)
trackAST: (bool3560, bool)
trackAST: (SALE_PRIVATE3561, bool)
assocAST: (bool3560, <bool3560>, bool) => (SALE_PRIVATE3561, <SALE_PRIVATE3561>, bool)
trackAST: (SALE_PRIVATE3562, <SALE_PRIVATE3562>)
trackAST: (pact-id3563, <pact-id3563>)
assocAST: (bool3560, <bool3560>, bool) => (SALE_PRIVATE3562, <SALE_PRIVATE3562>, <SALE_PRIVATE3562>)
trackAST: (bind3564, <bind3564>)
trackAST: (get-policy-info_id3565, string)
trackAST: (with-read3566, <with-read3566>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3567, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema3568, <BindSchema3568>)
trackAST: (BindSchema3568_policy3569, module{kip.token-policy-v1})
trackAST: (string3570, string)
trackAST: (BindSchema3568_supply3571, <BindSchema3568_supply3571_k>)
trackAST: (string3572, string)
trackAST: (BindSchema3568_precision3573, <BindSchema3568_precision3573_l>)
trackAST: (string3574, string)
trackAST: (BindSchema3568_manifest3575, <BindSchema3568_manifest3575_m>)
trackAST: (string3576, string)
TObject: TyAny
trackAST: (object3577, object:*)
TObject: TyAny
trackAST: (object3578, object:*)
assocAST: (object3577, <object3577>, object:*) => (BindSchema3568, <BindSchema3568>, <BindSchema3568>)
trackAST: (BindSchema3568schema3579, *)
trackAST: (get-policy-info3580, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info3580, <get-policy-info3580>, object:{marmalade.ledger.policy-info}) => (with-read3566, <with-read3566>, <with-read3566>)
trackAST: (get-policy-info3581, <get-policy-info3581>)
assocAST: (with-read3566, <get-policy-info3580>, object:{marmalade.ledger.policy-info}) => (get-policy-info3581, <get-policy-info3581>, <get-policy-info3581>)
trackAST: (BindSchema3582, <BindSchema3582>)
trackAST: (BindSchema3582_policy3583, module{kip.token-policy-v1})
trackAST: (string3584, string)
trackAST: (BindSchema3582_token3585, <BindSchema3582_token3585_aq>)
trackAST: (string3586, string)
trackAST: (enforce-buy_token3587, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-buy_seller3588, string)
trackAST: (enforce-buy_buyer3589, string)
trackAST: (enforce-buy_amount3590, decimal)
trackAST: (enforce-buy_sale-id3591, string)
trackAST: (enforce-buy3592, bool)
trackAST: (enforce-buy3593, <enforce-buy3593>)
assocAST: (enforce-buy3592, <enforce-buy3592>, bool) => (enforce-buy3593, <enforce-buy3593>, <enforce-buy3593>)
assocAST: (enforce-buy3593, <enforce-buy3592>, bool) => (BindSchema3582, <BindSchema3582>, <BindSchema3582>)
trackAST: (BindSchema3582schema3594, *)
trackAST: (BindLet3595, <BindLet3595>)
trackAST: (BindLet3595_sender3596, <BindLet3595_sender3596_ar>)
trackAST: (debit_id3597, string)
trackAST: (debit_account3598, string)
trackAST: (debit_amount3599, decimal)
trackAST: (require-capability3600, <require-capability3600>)
trackAST: (DEBIT_id3601, string)
trackAST: (DEBIT_sender3602, string)
trackAST: (enforce-guard3603, <enforce-guard3603>)
trackAST: (account-guard_id3604, string)
trackAST: (account-guard_account3605, string)
trackAST: (with-read3606, <with-read3606>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3607, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3608, string)
trackAST: (key_account3609, string)
trackAST: (format3610, <format3610>)
trackAST: (string3611, string)
trackAST: (list3612, [<ak>])
trackAST: (key3613, string)
assocAST: (key3613, <key3613>, string) => (format3610, <format3610>, <format3610>)
trackAST: (key3614, <key3614>)
assocAST: (format3610, <key3613>, string) => (key3614, <key3614>, <key3614>)
trackAST: (BindSchema3615, <BindSchema3615>)
trackAST: (BindSchema3615_guard3616, <BindSchema3615_guard3616_f>)
trackAST: (string3617, string)
assocAST: (BindSchema3615_guard3616, <BindSchema3615_guard3616_f>, <BindSchema3615_guard3616_f>) => (BindSchema3615, <BindSchema3615>, <BindSchema3615>)
trackAST: (BindSchema3615schema3618, *)
trackAST: (account-guard3619, guard)
assocAST: (account-guard3619, <account-guard3619>, guard) => (with-read3606, <with-read3606>, <with-read3606>)
trackAST: (account-guard3620, <account-guard3620>)
assocAST: (with-read3606, <account-guard3619>, guard) => (account-guard3620, <account-guard3620>, <account-guard3620>)
trackAST: (DEBIT3621, <e>)
assocAST: (enforce-guard3603, <enforce-guard3603>, <enforce-guard3603>) => (DEBIT3621, <e>, <e>)
trackAST: (DEBIT3622, <DEBIT3622>)
assocAST: (enforce-guard3603, <enforce-guard3603>, <enforce-guard3603>) => (DEBIT3622, <DEBIT3622>, <DEBIT3622>)
trackAST: (enforce-unit_id3623, string)
trackAST: (enforce-unit_amount3624, decimal)
trackAST: (BindLet3625, <BindLet3625>)
trackAST: (BindLet3625_p3626, <BindLet3625_p3626_ai>)
trackAST: (precision_id3627, string)
trackAST: (at3628, <at3628>)
trackAST: (string3629, string)
trackAST: (read3630, <read3630>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3631, table:{marmalade.ledger.token-schema})
trackAST: (precision3632, integer)
assocAST: (precision3632, <precision3632>, integer) => (at3628, <at3628>, <at3628>)
trackAST: (precision3633, <precision3633>)
assocAST: (at3628, <precision3632>, integer) => (precision3633, <precision3633>, <precision3633>)
assocAST: (precision3633, <precision3632>, integer) => (BindLet3625_p3626, <BindLet3625_p3626_ai>, <BindLet3625_p3626_ai>)
trackAST: (enforce3634, <enforce3634>)
trackAST: (=3635, <=3635>)
trackAST: (floor3636, <floor3636>)
trackAST: (string3637, string)
assocAST: (enforce3634, <enforce3634>, <enforce3634>) => (BindLet3625, <BindLet3625>, <BindLet3625>)
trackAST: (enforce-unit3638, bool)
assocAST: (enforce-unit3638, <enforce-unit3638>, bool) => (BindLet3625, <enforce3634>, <enforce3634>)
trackAST: (enforce-unit3639, <enforce-unit3639>)
assocAST: (BindLet3625, <enforce-unit3638>, bool) => (enforce-unit3639, <enforce-unit3639>, <enforce-unit3639>)
trackAST: (with-read3640, <with-read3640>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3641, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3642, string)
trackAST: (key_account3643, string)
trackAST: (format3644, <format3644>)
trackAST: (string3645, string)
trackAST: (list3646, [<ak>])
trackAST: (key3647, string)
assocAST: (key3647, <key3647>, string) => (format3644, <format3644>, <format3644>)
trackAST: (key3648, <key3648>)
assocAST: (format3644, <key3647>, string) => (key3648, <key3648>, <key3648>)
trackAST: (BindSchema3649, <BindSchema3649>)
trackAST: (BindSchema3649_old-bal3650, <BindSchema3649_old-bal3650_aa>)
trackAST: (string3651, string)
trackAST: (enforce3652, <enforce3652>)
trackAST: (<=3653, <<=3653>)
trackAST: (string3654, string)
trackAST: (BindLet3655, <BindLet3655>)
trackAST: (BindLet3655_new-bal3656, <BindLet3655_new-bal3656_ab>)
trackAST: (-3657, <-3657>)
assocAST: (-3657, <-3657>, <-3657>) => (BindLet3655_new-bal3656, <BindLet3655_new-bal3656_ab>, <BindLet3655_new-bal3656_ab>)
trackAST: (update3658, <update3658>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3659, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3660, string)
trackAST: (key_account3661, string)
trackAST: (format3662, <format3662>)
trackAST: (string3663, string)
trackAST: (list3664, [<ak>])
trackAST: (key3665, string)
assocAST: (key3665, <key3665>, string) => (format3662, <format3662>, <format3662>)
trackAST: (key3666, <key3666>)
assocAST: (format3662, <key3665>, string) => (key3666, <key3666>, <key3666>)
TObject: TyAny
trackAST: (object3667, object:*)
TObject: TyAny
trackAST: (object3668, object:*)
assocAST: (object3668, <object3668>, object:*) => (BindLet3655, <BindLet3655>, <BindLet3655>)
assocAST: (BindLet3655, <object3668>, object:*) => (BindSchema3649, <BindSchema3649>, <BindSchema3649>)
trackAST: (BindSchema3649schema3669, *)
trackAST: (debit3670, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit3670, <debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read3640, <with-read3640>, <with-read3640>)
trackAST: (debit3671, <debit3671>)
trackAST: (format3672, <format3672>)
trackAST: (string3673, string)
trackAST: (list3674, [<at>])
trackAST: (pact-id3675, <pact-id3675>)
trackAST: (sale-account3676, string)
assocAST: (sale-account3676, <sale-account3676>, string) => (format3672, <format3672>, <format3672>)
trackAST: (sale-account3677, <sale-account3677>)
assocAST: (format3672, <sale-account3676>, string) => (sale-account3677, <sale-account3677>, <sale-account3677>)
assocAST: (with-read3640, <debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit3671, <debit3671>, <debit3671>)
assocAST: (debit3671, <debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet3595_sender3596, <BindLet3595_sender3596_ar>, <BindLet3595_sender3596_ar>)
trackAST: (BindLet3595_receiver3678, <BindLet3595_receiver3678_as>)
trackAST: (credit_id3679, string)
trackAST: (credit_account3680, string)
trackAST: (credit_guard3681, guard)
trackAST: (credit_amount3682, decimal)
trackAST: (enforce-valid-account_account3683, string)
trackAST: (enforce3684, <enforce3684>)
trackAST: (>3685, <>3685>)
trackAST: (length3686, <length3686>)
trackAST: (integer3687, integer)
trackAST: (string3688, string)
trackAST: (enforce-valid-account3689, <c>)
assocAST: (enforce3684, <enforce3684>, <enforce3684>) => (enforce-valid-account3689, <c>, <c>)
trackAST: (enforce-valid-account3690, <enforce-valid-account3690>)
assocAST: (enforce3684, <enforce3684>, <enforce3684>) => (enforce-valid-account3690, <enforce-valid-account3690>, <enforce-valid-account3690>)
trackAST: (enforce-unit_id3691, string)
trackAST: (enforce-unit_amount3692, decimal)
trackAST: (BindLet3693, <BindLet3693>)
trackAST: (BindLet3693_p3694, <BindLet3693_p3694_ai>)
trackAST: (precision_id3695, string)
trackAST: (at3696, <at3696>)
trackAST: (string3697, string)
trackAST: (read3698, <read3698>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3699, table:{marmalade.ledger.token-schema})
trackAST: (precision3700, integer)
assocAST: (precision3700, <precision3700>, integer) => (at3696, <at3696>, <at3696>)
trackAST: (precision3701, <precision3701>)
assocAST: (at3696, <precision3700>, integer) => (precision3701, <precision3701>, <precision3701>)
assocAST: (precision3701, <precision3700>, integer) => (BindLet3693_p3694, <BindLet3693_p3694_ai>, <BindLet3693_p3694_ai>)
trackAST: (enforce3702, <enforce3702>)
trackAST: (=3703, <=3703>)
trackAST: (floor3704, <floor3704>)
trackAST: (string3705, string)
assocAST: (enforce3702, <enforce3702>, <enforce3702>) => (BindLet3693, <BindLet3693>, <BindLet3693>)
trackAST: (enforce-unit3706, bool)
assocAST: (enforce-unit3706, <enforce-unit3706>, bool) => (BindLet3693, <enforce3702>, <enforce3702>)
trackAST: (enforce-unit3707, <enforce-unit3707>)
assocAST: (BindLet3693, <enforce-unit3706>, bool) => (enforce-unit3707, <enforce-unit3707>, <enforce-unit3707>)
trackAST: (require-capability3708, <require-capability3708>)
trackAST: (CREDIT_id3709, string)
trackAST: (CREDIT_receiver3710, string)
trackAST: (bool3711, bool)
trackAST: (CREDIT3712, <g>)
assocAST: (bool3711, <bool3711>, bool) => (CREDIT3712, <g>, <g>)
trackAST: (CREDIT3713, <CREDIT3713>)
assocAST: (bool3711, <bool3711>, bool) => (CREDIT3713, <CREDIT3713>, <CREDIT3713>)
trackAST: (with-default-read3714, <with-default-read3714>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3715, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3716, string)
trackAST: (key_account3717, string)
trackAST: (format3718, <format3718>)
trackAST: (string3719, string)
trackAST: (list3720, [<ak>])
trackAST: (key3721, string)
assocAST: (key3721, <key3721>, string) => (format3718, <format3718>, <format3718>)
trackAST: (key3722, <key3722>)
assocAST: (format3718, <key3721>, string) => (key3722, <key3722>, <key3722>)
TObject: TyAny
trackAST: (object3723, object:*)
trackAST: (decimal3724, decimal)
trackAST: (BindSchema3725, <BindSchema3725>)
trackAST: (BindSchema3725_old-bal3726, <BindSchema3725_old-bal3726_ac>)
trackAST: (string3727, string)
trackAST: (BindSchema3725_retg3728, <BindSchema3725_retg3728_ad>)
trackAST: (string3729, string)
trackAST: (enforce3730, <enforce3730>)
trackAST: (=3731, <=3731>)
trackAST: (string3732, string)
trackAST: (BindLet3733, <BindLet3733>)
trackAST: (BindLet3733_is-new3734, <BindLet3733_is-new3734_ae>)
trackAST: (if3735, <if3735>)
trackAST: (=3736, <=3736>)
trackAST: (decimal3737, decimal)
trackAST: (enforce-reserved_account3738, string)
trackAST: (enforce-reserved_guard3739, guard)
trackAST: (BindLet3740, <BindLet3740>)
trackAST: (BindLet3740_r3741, <BindLet3740_r3741_g>)
trackAST: (check-reserved_account3742, string)
trackAST: (BindLet3743, <BindLet3743>)
trackAST: (BindLet3743_pfx3744, <BindLet3743_pfx3744_f>)
trackAST: (take3745, <take3745>)
trackAST: (integer3746, integer)
assocAST: (take3745, <take3745>, <take3745>) => (BindLet3743_pfx3744, <BindLet3743_pfx3744_f>, <BindLet3743_pfx3744_f>)
trackAST: (if3747, <if3747>)
trackAST: (=3748, <=3748>)
trackAST: (string3749, string)
trackAST: (take3750, <take3750>)
trackAST: (integer3751, integer)
trackAST: (take3752, <take3752>)
trackAST: (integer3753, integer)
trackAST: (string3754, string)
assocAST: (if3747, <if3747>, <if3747>) => (BindLet3743, <BindLet3743>, <BindLet3743>)
trackAST: (check-reserved3755, string)
assocAST: (check-reserved3755, <check-reserved3755>, string) => (BindLet3743, <if3747>, <if3747>)
trackAST: (check-reserved3756, <check-reserved3756>)
assocAST: (BindLet3743, <check-reserved3755>, string) => (check-reserved3756, <check-reserved3756>, <check-reserved3756>)
assocAST: (check-reserved3756, <check-reserved3755>, string) => (BindLet3740_r3741, <BindLet3740_r3741_g>, <BindLet3740_r3741_g>)
trackAST: (if3757, <if3757>)
trackAST: (=3758, <=3758>)
trackAST: (string3759, string)
trackAST: (bool3760, bool)
trackAST: (if3761, <if3761>)
trackAST: (=3762, <=3762>)
trackAST: (string3763, string)
trackAST: (enforce3764, <enforce3764>)
trackAST: (=3765, <=3765>)
trackAST: (format3766, <format3766>)
trackAST: (string3767, string)
trackAST: (list3768, [<h>])
trackAST: (format3769, <format3769>)
trackAST: (string3770, string)
trackAST: (list3771, [<i>])
trackAST: (drop3772, <drop3772>)
trackAST: (integer3773, integer)
trackAST: (string3774, string)
trackAST: (enforce3775, <enforce3775>)
trackAST: (bool3776, bool)
trackAST: (format3777, <format3777>)
trackAST: (string3778, string)
trackAST: (list3779, [<j>])
assocAST: (if3757, <if3757>, <if3757>) => (BindLet3740, <BindLet3740>, <BindLet3740>)
trackAST: (enforce-reserved3780, bool)
assocAST: (enforce-reserved3780, <enforce-reserved3780>, bool) => (BindLet3740, <if3757>, <if3757>)
trackAST: (enforce-reserved3781, <enforce-reserved3781>)
assocAST: (BindLet3740, <enforce-reserved3780>, bool) => (enforce-reserved3781, <enforce-reserved3781>, <enforce-reserved3781>)
trackAST: (bool3782, bool)
assocAST: (if3735, <if3735>, <if3735>) => (BindLet3733_is-new3734, <BindLet3733_is-new3734_ae>, <BindLet3733_is-new3734_ae>)
trackAST: (BindLet3783, <BindLet3783>)
trackAST: (BindLet3783_new-bal3784, <BindLet3783_new-bal3784_af>)
trackAST: (if3785, <if3785>)
trackAST: (+3786, <+3786>)
assocAST: (if3785, <if3785>, <if3785>) => (BindLet3783_new-bal3784, <BindLet3783_new-bal3784_af>, <BindLet3783_new-bal3784_af>)
trackAST: (write3787, <write3787>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3788, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3789, string)
trackAST: (key_account3790, string)
trackAST: (format3791, <format3791>)
trackAST: (string3792, string)
trackAST: (list3793, [<ak>])
trackAST: (key3794, string)
assocAST: (key3794, <key3794>, string) => (format3791, <format3791>, <format3791>)
trackAST: (key3795, <key3795>)
assocAST: (format3791, <key3794>, string) => (key3795, <key3795>, <key3795>)
TObject: TyAny
trackAST: (object3796, object:*)
trackAST: (if3797, <if3797>)
trackAST: (emit-event3798, <emit-event3798>)
trackAST: (ACCOUNT_GUARD_id3799, string)
trackAST: (ACCOUNT_GUARD_account3800, string)
trackAST: (ACCOUNT_GUARD_guard3801, guard)
trackAST: (bool3802, bool)
trackAST: (ACCOUNT_GUARD3803, bool)
assocAST: (bool3802, <bool3802>, bool) => (ACCOUNT_GUARD3803, <ACCOUNT_GUARD3803>, bool)
trackAST: (ACCOUNT_GUARD3804, <ACCOUNT_GUARD3804>)
assocAST: (bool3802, <bool3802>, bool) => (ACCOUNT_GUARD3804, <ACCOUNT_GUARD3804>, <ACCOUNT_GUARD3804>)
trackAST: (bool3805, bool)
TObject: TyAny
trackAST: (object3806, object:*)
trackAST: (if3807, <if3807>)
trackAST: (decimal3808, decimal)
assocAST: (object3806, <object3806>, object:*) => (BindLet3783, <BindLet3783>, <BindLet3783>)
assocAST: (BindLet3783, <object3806>, object:*) => (BindLet3733, <BindLet3733>, <BindLet3733>)
assocAST: (BindLet3733, <object3806>, object:*) => (BindSchema3725, <BindSchema3725>, <BindSchema3725>)
trackAST: (BindSchema3725schema3809, *)
trackAST: (credit3810, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit3810, <credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read3714, <with-default-read3714>, <with-default-read3714>)
trackAST: (credit3811, <credit3811>)
assocAST: (with-default-read3714, <credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit3811, <credit3811>, <credit3811>)
assocAST: (credit3811, <credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet3595_receiver3678, <BindLet3595_receiver3678_as>, <BindLet3595_receiver3678_as>)
trackAST: (emit-event3812, <emit-event3812>)
trackAST: (TRANSFER_id3813, string)
trackAST: (TRANSFER_sender3814, string)
trackAST: (TRANSFER_receiver3815, string)
trackAST: (TRANSFER_amount3816, decimal)
trackAST: (enforce-unit_id3817, string)
trackAST: (enforce-unit_amount3818, decimal)
trackAST: (BindLet3819, <BindLet3819>)
trackAST: (BindLet3819_p3820, <BindLet3819_p3820_ai>)
trackAST: (precision_id3821, string)
trackAST: (at3822, <at3822>)
trackAST: (string3823, string)
trackAST: (read3824, <read3824>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens3825, table:{marmalade.ledger.token-schema})
trackAST: (precision3826, integer)
assocAST: (precision3826, <precision3826>, integer) => (at3822, <at3822>, <at3822>)
trackAST: (precision3827, <precision3827>)
assocAST: (at3822, <precision3826>, integer) => (precision3827, <precision3827>, <precision3827>)
assocAST: (precision3827, <precision3826>, integer) => (BindLet3819_p3820, <BindLet3819_p3820_ai>, <BindLet3819_p3820_ai>)
trackAST: (enforce3828, <enforce3828>)
trackAST: (=3829, <=3829>)
trackAST: (floor3830, <floor3830>)
trackAST: (string3831, string)
assocAST: (enforce3828, <enforce3828>, <enforce3828>) => (BindLet3819, <BindLet3819>, <BindLet3819>)
trackAST: (enforce-unit3832, bool)
assocAST: (enforce-unit3832, <enforce-unit3832>, bool) => (BindLet3819, <enforce3828>, <enforce3828>)
trackAST: (enforce-unit3833, <enforce-unit3833>)
assocAST: (BindLet3819, <enforce-unit3832>, bool) => (enforce-unit3833, <enforce-unit3833>, <enforce-unit3833>)
trackAST: (enforce3834, <enforce3834>)
trackAST: (>3835, <>3835>)
trackAST: (decimal3836, decimal)
trackAST: (string3837, string)
trackAST: (compose-capability3838, <compose-capability3838>)
trackAST: (DEBIT_id3839, string)
trackAST: (DEBIT_sender3840, string)
trackAST: (enforce-guard3841, <enforce-guard3841>)
trackAST: (account-guard_id3842, string)
trackAST: (account-guard_account3843, string)
trackAST: (with-read3844, <with-read3844>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger3845, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id3846, string)
trackAST: (key_account3847, string)
trackAST: (format3848, <format3848>)
trackAST: (string3849, string)
trackAST: (list3850, [<ak>])
trackAST: (key3851, string)
assocAST: (key3851, <key3851>, string) => (format3848, <format3848>, <format3848>)
trackAST: (key3852, <key3852>)
assocAST: (format3848, <key3851>, string) => (key3852, <key3852>, <key3852>)
trackAST: (BindSchema3853, <BindSchema3853>)
trackAST: (BindSchema3853_guard3854, <BindSchema3853_guard3854_f>)
trackAST: (string3855, string)
assocAST: (BindSchema3853_guard3854, <BindSchema3853_guard3854_f>, <BindSchema3853_guard3854_f>) => (BindSchema3853, <BindSchema3853>, <BindSchema3853>)
trackAST: (BindSchema3853schema3856, *)
trackAST: (account-guard3857, guard)
assocAST: (account-guard3857, <account-guard3857>, guard) => (with-read3844, <with-read3844>, <with-read3844>)
trackAST: (account-guard3858, <account-guard3858>)
assocAST: (with-read3844, <account-guard3857>, guard) => (account-guard3858, <account-guard3858>, <account-guard3858>)
trackAST: (DEBIT3859, <e>)
assocAST: (enforce-guard3841, <enforce-guard3841>, <enforce-guard3841>) => (DEBIT3859, <e>, <e>)
trackAST: (DEBIT3860, <DEBIT3860>)
assocAST: (enforce-guard3841, <enforce-guard3841>, <enforce-guard3841>) => (DEBIT3860, <DEBIT3860>, <DEBIT3860>)
trackAST: (compose-capability3861, <compose-capability3861>)
trackAST: (CREDIT_id3862, string)
trackAST: (CREDIT_receiver3863, string)
trackAST: (bool3864, bool)
trackAST: (CREDIT3865, <g>)
assocAST: (bool3864, <bool3864>, bool) => (CREDIT3865, <g>, <g>)
trackAST: (CREDIT3866, <CREDIT3866>)
assocAST: (bool3864, <bool3864>, bool) => (CREDIT3866, <CREDIT3866>, <CREDIT3866>)
trackAST: (TRANSFER3867, bool)
assocAST: (TRANSFER3867, <TRANSFER3867>, bool) => (compose-capability3861, <compose-capability3861>, <compose-capability3861>)
trackAST: (TRANSFER3868, <TRANSFER3868>)
trackAST: (format3869, <format3869>)
trackAST: (string3870, string)
trackAST: (list3871, [<at>])
trackAST: (pact-id3872, <pact-id3872>)
trackAST: (sale-account3873, string)
assocAST: (sale-account3873, <sale-account3873>, string) => (format3869, <format3869>, <format3869>)
trackAST: (sale-account3874, <sale-account3874>)
assocAST: (format3869, <sale-account3873>, string) => (sale-account3874, <sale-account3874>, <sale-account3874>)
assocAST: (compose-capability3861, <TRANSFER3867>, bool) => (TRANSFER3868, <TRANSFER3868>, <TRANSFER3868>)
trackAST: (emit-event3875, <emit-event3875>)
trackAST: (RECONCILE_token-id3876, string)
trackAST: (RECONCILE_amount3877, decimal)
trackAST: (RECONCILE_sender3878, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver3879, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool3880, bool)
trackAST: (RECONCILE3881, bool)
assocAST: (bool3880, <bool3880>, bool) => (RECONCILE3881, <RECONCILE3881>, bool)
trackAST: (RECONCILE3882, <RECONCILE3882>)
assocAST: (bool3880, <bool3880>, bool) => (RECONCILE3882, <RECONCILE3882>, <RECONCILE3882>)
assocAST: (emit-event3875, <emit-event3875>, <emit-event3875>) => (BindLet3595, <BindLet3595>, <BindLet3595>)
trackAST: (buy3883, bool)
assocAST: (buy3883, <buy3883>, bool) => (BindLet3595, <emit-event3875>, <emit-event3875>)
trackAST: (buy3884, <buy3884>)
trackAST: (pact-id3885, <pact-id3885>)
assocAST: (BindLet3595, <buy3883>, bool) => (buy3884, <buy3884>, <buy3884>)
assocAST: (with-capability3492, <with-capability3492>, <with-capability3492>) => (BindLet3485, <BindLet3485>, <BindLet3485>)
assocAST: (BindLet3485, <with-capability3492>, <with-capability3492>) => (step3484, <step3484>, <step3484>)
trackAST: (sale3886, bool)
assocAST: (sale3886, <sale3886>, bool) => (step3484, <with-capability3492>, <with-capability3492>)
--------------------------------
 Substitute defuns:

assocTy: (<bool2776>, bool) <=> bool
assocTy: (<bool2776>, bool) <= bool
trackAST: (inlinedCallArgs3887, <inlinedCallArgs3887>)
assocTy: (<inlinedCallArgs3887>, <inlinedCallArgs3887>) <=> bool
assocTy: (<inlinedCallArgs3887>, <inlinedCallArgs3887>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3887> <= bool
trackAST: (inlinedCallArgs3887_sale-id3888, string)
assocAST: (inlinedCallArgs3887_sale-id3888, <inlinedCallArgs3887_sale-id3888>, string) => (pact-id2779, <pact-id2779>, <pact-id2779>)
assocTy: (<enforce-offer2807>, bool) <=> bool
assocTy: (<enforce-offer2807>, bool) <= bool
trackAST: (inlinedCallArgs3889, <inlinedCallArgs3889>)
assocTy: (<inlinedCallArgs3889>, <inlinedCallArgs3889>) <=> bool
assocTy: (<inlinedCallArgs3889>, <inlinedCallArgs3889>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3889> <= bool
trackAST: (inlinedCallArgs3889_token3890, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs3889_token3890, <inlinedCallArgs3889_token3890>, object:{kip.token-policy-v1.token-info}) => (BindSchema2798_token2801, <BindSchema2798_token2801_al>, <BindSchema2798_token2801_al>)
trackAST: (inlinedCallArgs3889_seller3891, string)
assocAST: (offer_seller2772, <offer_seller2772>, string) => (inlinedCallArgs3889_seller3891, <inlinedCallArgs3889_seller3891>, string)
trackAST: (inlinedCallArgs3889_amount3892, decimal)
assocAST: (offer_amount2773, <offer_amount2773>, decimal) => (inlinedCallArgs3889_amount3892, <inlinedCallArgs3889_amount3892>, decimal)
trackAST: (inlinedCallArgs3889_sale-id3893, string)
assocAST: (inlinedCallArgs3889_sale-id3893, <inlinedCallArgs3889_sale-id3893>, string) => (pact-id2809, <pact-id2809>, <pact-id2809>)
assocTy: (<get-policy-info2796>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info2796>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs3894, <inlinedCallArgs3894>)
assocTy: (<inlinedCallArgs3894>, <inlinedCallArgs3894>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs3894>, <inlinedCallArgs3894>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs3894> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs3894_id3895, string)
assocAST: (offer_id2771, <offer_id2771>, string) => (inlinedCallArgs3894_id3895, <inlinedCallArgs3894_id3895>, string)
assocAST: (inlinedCallArgs3894_id3895, <offer_id2771>, string) => (get-policy-info_id2781, <get-policy-info_id2781>, string)
assocAST: (inlinedCallArgs3894_id3895, <offer_id2771>, string) => (get-policy-info_id2781, <offer_id2771>, string)
assocTy: (<key2829>, string) <=> string
assocTy: (<key2829>, string) <= string
trackAST: (inlinedCallArgs3896, <inlinedCallArgs3896>)
assocTy: (<inlinedCallArgs3896>, <inlinedCallArgs3896>) <=> string
assocTy: (<inlinedCallArgs3896>, <inlinedCallArgs3896>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3896> <= string
trackAST: (inlinedCallArgs3896_id3897, string)
assocAST: (account-guard_id2820, <account-guard_id2820>, string) => (inlinedCallArgs3896_id3897, <inlinedCallArgs3896_id3897>, string)
trackAST: (inlinedCallArgs3896_account3898, string)
assocAST: (account-guard_account2821, <account-guard_account2821>, string) => (inlinedCallArgs3896_account3898, <inlinedCallArgs3896_account3898>, string)
assocAST: (inlinedCallArgs3896_id3897, <account-guard_id2820>, string) => (key_id2824, <key_id2824>, string)
assocAST: (inlinedCallArgs3896_account3898, <account-guard_account2821>, string) => (key_account2825, <key_account2825>, string)
assocTy: (<account-guard2835>, guard) <=> guard
assocTy: (<account-guard2835>, guard) <= guard
trackAST: (inlinedCallArgs3899, <inlinedCallArgs3899>)
assocTy: (<inlinedCallArgs3899>, <inlinedCallArgs3899>) <=> guard
assocTy: (<inlinedCallArgs3899>, <inlinedCallArgs3899>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs3899> <= guard
trackAST: (inlinedCallArgs3899_id3900, string)
assocAST: (DEBIT_id2817, <DEBIT_id2817>, string) => (inlinedCallArgs3899_id3900, <inlinedCallArgs3899_id3900>, string)
trackAST: (inlinedCallArgs3899_account3901, string)
assocAST: (DEBIT_sender2818, <DEBIT_sender2818>, string) => (inlinedCallArgs3899_account3901, <inlinedCallArgs3899_account3901>, string)
assocAST: (inlinedCallArgs3899_id3900, <DEBIT_id2817>, string) => (account-guard_id2820, <account-guard_id2820>, string)
assocAST: (inlinedCallArgs3899_id3900, <DEBIT_id2817>, string) => (account-guard_id2820, <DEBIT_id2817>, string)
assocAST: (inlinedCallArgs3899_account3901, <DEBIT_sender2818>, string) => (account-guard_account2821, <account-guard_account2821>, string)
assocAST: (inlinedCallArgs3899_account3901, <DEBIT_sender2818>, string) => (account-guard_account2821, <DEBIT_sender2818>, string)
assocTy: (<enforce-guard2819>, <enforce-guard2819>) <=> <DEBIT2838_e>
assocTy: (<enforce-guard2819>, <enforce-guard2819>) <= <DEBIT2838_e>
assocTy: tracking/updating type variable <enforce-guard2819> <= <DEBIT2838_e>
trackAST: (inlinedCallArgs3902, <inlinedCallArgs3902>)
assocTy: (<inlinedCallArgs3902>, <inlinedCallArgs3902>) <=> <DEBIT2838_e>
assocTy: (<inlinedCallArgs3902>, <inlinedCallArgs3902>) <= <DEBIT2838_e>
assocTy: tracking/updating type variable <inlinedCallArgs3902> <= <DEBIT2838_e>
trackAST: (inlinedCallArgs3902_id3903, string)
assocAST: (debit_id2813, <debit_id2813>, string) => (inlinedCallArgs3902_id3903, <inlinedCallArgs3902_id3903>, string)
trackAST: (inlinedCallArgs3902_sender3904, string)
assocAST: (debit_account2814, <debit_account2814>, string) => (inlinedCallArgs3902_sender3904, <inlinedCallArgs3902_sender3904>, string)
assocAST: (inlinedCallArgs3902_id3903, <debit_id2813>, string) => (DEBIT_id2817, <DEBIT_id2817>, string)
assocAST: (inlinedCallArgs3902_id3903, <debit_id2813>, string) => (DEBIT_id2817, <debit_id2813>, string)
assocAST: (inlinedCallArgs3902_sender3904, <debit_account2814>, string) => (DEBIT_sender2818, <DEBIT_sender2818>, string)
assocAST: (inlinedCallArgs3902_sender3904, <debit_account2814>, string) => (DEBIT_sender2818, <debit_account2814>, string)
assocTy: (<precision2848>, integer) <=> integer
assocTy: (<precision2848>, integer) <= integer
trackAST: (inlinedCallArgs3905, <inlinedCallArgs3905>)
assocTy: (<inlinedCallArgs3905>, <inlinedCallArgs3905>) <=> integer
assocTy: (<inlinedCallArgs3905>, <inlinedCallArgs3905>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs3905> <= integer
trackAST: (inlinedCallArgs3905_id3906, string)
assocAST: (enforce-unit_id2839, <enforce-unit_id2839>, string) => (inlinedCallArgs3905_id3906, <inlinedCallArgs3905_id3906>, string)
assocAST: (inlinedCallArgs3905_id3906, <enforce-unit_id2839>, string) => (precision_id2843, <precision_id2843>, string)
assocTy: (<enforce-unit2854>, bool) <=> bool
assocTy: (<enforce-unit2854>, bool) <= bool
trackAST: (inlinedCallArgs3907, <inlinedCallArgs3907>)
assocTy: (<inlinedCallArgs3907>, <inlinedCallArgs3907>) <=> bool
assocTy: (<inlinedCallArgs3907>, <inlinedCallArgs3907>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3907> <= bool
trackAST: (inlinedCallArgs3907_id3908, string)
assocAST: (debit_id2813, <debit_id2813>, string) => (inlinedCallArgs3907_id3908, <inlinedCallArgs3907_id3908>, string)
trackAST: (inlinedCallArgs3907_amount3909, decimal)
assocAST: (debit_amount2815, <debit_amount2815>, decimal) => (inlinedCallArgs3907_amount3909, <inlinedCallArgs3907_amount3909>, decimal)
assocAST: (inlinedCallArgs3907_id3908, <debit_id2813>, string) => (enforce-unit_id2839, <enforce-unit_id2839>, string)
assocAST: (inlinedCallArgs3907_id3908, <debit_id2813>, string) => (enforce-unit_id2839, <debit_id2813>, string)
assocAST: (inlinedCallArgs3907_amount3909, <debit_amount2815>, decimal) => (enforce-unit_amount2840, <enforce-unit_amount2840>, decimal)
assocAST: (inlinedCallArgs3907_amount3909, <debit_amount2815>, decimal) => (enforce-unit_amount2840, <debit_amount2815>, decimal)
assocTy: (<key2881>, string) <=> string
assocTy: (<key2881>, string) <= string
trackAST: (inlinedCallArgs3910, <inlinedCallArgs3910>)
assocTy: (<inlinedCallArgs3910>, <inlinedCallArgs3910>) <=> string
assocTy: (<inlinedCallArgs3910>, <inlinedCallArgs3910>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3910> <= string
trackAST: (inlinedCallArgs3910_id3911, string)
assocAST: (debit_id2813, <debit_id2813>, string) => (inlinedCallArgs3910_id3911, <inlinedCallArgs3910_id3911>, string)
trackAST: (inlinedCallArgs3910_account3912, string)
assocAST: (debit_account2814, <debit_account2814>, string) => (inlinedCallArgs3910_account3912, <inlinedCallArgs3910_account3912>, string)
assocAST: (inlinedCallArgs3910_id3911, <debit_id2813>, string) => (key_id2876, <key_id2876>, string)
assocAST: (inlinedCallArgs3910_account3912, <debit_account2814>, string) => (key_account2877, <key_account2877>, string)
assocTy: (<key2863>, string) <=> string
assocTy: (<key2863>, string) <= string
trackAST: (inlinedCallArgs3913, <inlinedCallArgs3913>)
assocTy: (<inlinedCallArgs3913>, <inlinedCallArgs3913>) <=> string
assocTy: (<inlinedCallArgs3913>, <inlinedCallArgs3913>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3913> <= string
trackAST: (inlinedCallArgs3913_id3914, string)
assocAST: (debit_id2813, <debit_id2813>, string) => (inlinedCallArgs3913_id3914, <inlinedCallArgs3913_id3914>, string)
trackAST: (inlinedCallArgs3913_account3915, string)
assocAST: (debit_account2814, <debit_account2814>, string) => (inlinedCallArgs3913_account3915, <inlinedCallArgs3913_account3915>, string)
assocAST: (inlinedCallArgs3913_id3914, <debit_id2813>, string) => (key_id2858, <key_id2858>, string)
assocAST: (inlinedCallArgs3913_account3915, <debit_account2814>, string) => (key_account2859, <key_account2859>, string)
assocTy: (<debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs3916, <inlinedCallArgs3916>)
assocTy: (<inlinedCallArgs3916>, <inlinedCallArgs3916>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs3916>, <inlinedCallArgs3916>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs3916> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs3916_id3917, string)
assocAST: (offer_id2771, <offer_id2771>, string) => (inlinedCallArgs3916_id3917, <inlinedCallArgs3916_id3917>, string)
trackAST: (inlinedCallArgs3916_account3918, string)
assocAST: (offer_seller2772, <offer_seller2772>, string) => (inlinedCallArgs3916_account3918, <inlinedCallArgs3916_account3918>, string)
trackAST: (inlinedCallArgs3916_amount3919, decimal)
assocAST: (offer_amount2773, <offer_amount2773>, decimal) => (inlinedCallArgs3916_amount3919, <inlinedCallArgs3916_amount3919>, decimal)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <debit_id2813>, string)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <debit_account2814>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_amount3919, <offer_amount2773>, decimal) => (debit_amount2815, <debit_amount2815>, decimal)
assocAST: (inlinedCallArgs3916_amount3919, <offer_amount2773>, decimal) => (debit_amount2815, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_id3917, <offer_id2771>, string) => (debit_id2813, <offer_id2771>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3916_account3918, <offer_seller2772>, string) => (debit_account2814, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3916_amount3919, <offer_amount2773>, decimal) => (debit_amount2815, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3916_amount3919, <offer_amount2773>, decimal) => (debit_amount2815, <offer_amount2773>, decimal)
assocTy: (<enforce2894>, <enforce2894>) <=> <enforce-valid-account2900_c>
assocTy: (<enforce2894>, <enforce2894>) <= <enforce-valid-account2900_c>
assocTy: tracking/updating type variable <enforce2894> <= <enforce-valid-account2900_c>
trackAST: (inlinedCallArgs3920, <inlinedCallArgs3920>)
assocTy: (<inlinedCallArgs3920>, <inlinedCallArgs3920>) <=> <enforce-valid-account2900_c>
assocTy: (<inlinedCallArgs3920>, <inlinedCallArgs3920>) <= <enforce-valid-account2900_c>
assocTy: tracking/updating type variable <inlinedCallArgs3920> <= <enforce-valid-account2900_c>
trackAST: (inlinedCallArgs3920_account3921, string)
assocAST: (credit_account2890, <credit_account2890>, string) => (inlinedCallArgs3920_account3921, <inlinedCallArgs3920_account3921>, string)
assocAST: (inlinedCallArgs3920_account3921, <credit_account2890>, string) => (enforce-valid-account_account2893, <enforce-valid-account_account2893>, string)
assocTy: (<precision2910>, integer) <=> integer
assocTy: (<precision2910>, integer) <= integer
trackAST: (inlinedCallArgs3922, <inlinedCallArgs3922>)
assocTy: (<inlinedCallArgs3922>, <inlinedCallArgs3922>) <=> integer
assocTy: (<inlinedCallArgs3922>, <inlinedCallArgs3922>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs3922> <= integer
trackAST: (inlinedCallArgs3922_id3923, string)
assocAST: (enforce-unit_id2901, <enforce-unit_id2901>, string) => (inlinedCallArgs3922_id3923, <inlinedCallArgs3922_id3923>, string)
assocAST: (inlinedCallArgs3922_id3923, <enforce-unit_id2901>, string) => (precision_id2905, <precision_id2905>, string)
assocTy: (<enforce-unit2916>, bool) <=> bool
assocTy: (<enforce-unit2916>, bool) <= bool
trackAST: (inlinedCallArgs3924, <inlinedCallArgs3924>)
assocTy: (<inlinedCallArgs3924>, <inlinedCallArgs3924>) <=> bool
assocTy: (<inlinedCallArgs3924>, <inlinedCallArgs3924>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3924> <= bool
trackAST: (inlinedCallArgs3924_id3925, string)
assocAST: (credit_id2889, <credit_id2889>, string) => (inlinedCallArgs3924_id3925, <inlinedCallArgs3924_id3925>, string)
trackAST: (inlinedCallArgs3924_amount3926, decimal)
assocAST: (credit_amount2892, <credit_amount2892>, decimal) => (inlinedCallArgs3924_amount3926, <inlinedCallArgs3924_amount3926>, decimal)
assocAST: (inlinedCallArgs3924_id3925, <credit_id2889>, string) => (enforce-unit_id2901, <enforce-unit_id2901>, string)
assocAST: (inlinedCallArgs3924_id3925, <credit_id2889>, string) => (enforce-unit_id2901, <credit_id2889>, string)
assocAST: (inlinedCallArgs3924_amount3926, <credit_amount2892>, decimal) => (enforce-unit_amount2902, <enforce-unit_amount2902>, decimal)
assocAST: (inlinedCallArgs3924_amount3926, <credit_amount2892>, decimal) => (enforce-unit_amount2902, <credit_amount2892>, decimal)
assocTy: (<bool2921>, bool) <=> <CREDIT2923_g>
assocTy: bool => <CREDIT2923_g>
trackAST: (inlinedCallArgs3927, <inlinedCallArgs3927>)
assocTy: (<inlinedCallArgs3927>, <inlinedCallArgs3927>) <=> <CREDIT2923_g>
assocTy: (<inlinedCallArgs3927>, <inlinedCallArgs3927>) <= <CREDIT2923_g>
assocTy: tracking/updating type variable <inlinedCallArgs3927> <= <CREDIT2923_g>
trackAST: (inlinedCallArgs3927_id3928, string)
assocAST: (credit_id2889, <credit_id2889>, string) => (inlinedCallArgs3927_id3928, <inlinedCallArgs3927_id3928>, string)
trackAST: (inlinedCallArgs3927_receiver3929, string)
assocAST: (credit_account2890, <credit_account2890>, string) => (inlinedCallArgs3927_receiver3929, <inlinedCallArgs3927_receiver3929>, string)
assocTy: (<check-reserved2965>, string) <=> string
assocTy: (<check-reserved2965>, string) <= string
trackAST: (inlinedCallArgs3930, <inlinedCallArgs3930>)
assocTy: (<inlinedCallArgs3930>, <inlinedCallArgs3930>) <=> string
assocTy: (<inlinedCallArgs3930>, <inlinedCallArgs3930>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3930> <= string
trackAST: (inlinedCallArgs3930_account3931, string)
assocAST: (enforce-reserved_account2948, <enforce-reserved_account2948>, string) => (inlinedCallArgs3930_account3931, <inlinedCallArgs3930_account3931>, string)
assocAST: (inlinedCallArgs3930_account3931, <enforce-reserved_account2948>, string) => (check-reserved_account2952, <check-reserved_account2952>, string)
assocTy: (<enforce-reserved2990>, bool) <=> bool
assocTy: (<enforce-reserved2990>, bool) <= bool
trackAST: (inlinedCallArgs3932, <inlinedCallArgs3932>)
assocTy: (<inlinedCallArgs3932>, <inlinedCallArgs3932>) <=> bool
assocTy: (<inlinedCallArgs3932>, <inlinedCallArgs3932>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3932> <= bool
trackAST: (inlinedCallArgs3932_account3933, string)
assocAST: (credit_account2890, <credit_account2890>, string) => (inlinedCallArgs3932_account3933, <inlinedCallArgs3932_account3933>, string)
trackAST: (inlinedCallArgs3932_guard3934, guard)
assocAST: (credit_guard2891, <credit_guard2891>, guard) => (inlinedCallArgs3932_guard3934, <inlinedCallArgs3932_guard3934>, guard)
assocAST: (inlinedCallArgs3932_account3933, <credit_account2890>, string) => (enforce-reserved_account2948, <enforce-reserved_account2948>, string)
assocAST: (inlinedCallArgs3932_account3933, <credit_account2890>, string) => (enforce-reserved_account2948, <credit_account2890>, string)
assocAST: (inlinedCallArgs3932_account3933, <credit_account2890>, string) => (enforce-reserved_account2948, <credit_account2890>, string)
assocAST: (inlinedCallArgs3932_guard3934, <credit_guard2891>, guard) => (enforce-reserved_guard2949, <enforce-reserved_guard2949>, guard)
assocTy: (<key3004>, string) <=> string
assocTy: (<key3004>, string) <= string
trackAST: (inlinedCallArgs3935, <inlinedCallArgs3935>)
assocTy: (<inlinedCallArgs3935>, <inlinedCallArgs3935>) <=> string
assocTy: (<inlinedCallArgs3935>, <inlinedCallArgs3935>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3935> <= string
trackAST: (inlinedCallArgs3935_id3936, string)
assocAST: (credit_id2889, <credit_id2889>, string) => (inlinedCallArgs3935_id3936, <inlinedCallArgs3935_id3936>, string)
trackAST: (inlinedCallArgs3935_account3937, string)
assocAST: (credit_account2890, <credit_account2890>, string) => (inlinedCallArgs3935_account3937, <inlinedCallArgs3935_account3937>, string)
assocAST: (inlinedCallArgs3935_id3936, <credit_id2889>, string) => (key_id2999, <key_id2999>, string)
assocAST: (inlinedCallArgs3935_account3937, <credit_account2890>, string) => (key_account3000, <key_account3000>, string)
assocTy: (<bool3012>, bool) <=> bool
assocTy: (<bool3012>, bool) <= bool
trackAST: (inlinedCallArgs3938, <inlinedCallArgs3938>)
assocTy: (<inlinedCallArgs3938>, <inlinedCallArgs3938>) <=> bool
assocTy: (<inlinedCallArgs3938>, <inlinedCallArgs3938>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3938> <= bool
trackAST: (inlinedCallArgs3938_id3939, string)
assocAST: (credit_id2889, <credit_id2889>, string) => (inlinedCallArgs3938_id3939, <inlinedCallArgs3938_id3939>, string)
trackAST: (inlinedCallArgs3938_account3940, string)
assocAST: (credit_account2890, <credit_account2890>, string) => (inlinedCallArgs3938_account3940, <inlinedCallArgs3938_account3940>, string)
trackAST: (inlinedCallArgs3938_guard3941, guard)
assocAST: (inlinedCallArgs3938_guard3941, <inlinedCallArgs3938_guard3941>, guard) => (BindSchema2935_retg2938, <BindSchema2935_retg2938_ad>, <BindSchema2935_retg2938_ad>)
assocTy: (<key2931>, string) <=> string
assocTy: (<key2931>, string) <= string
trackAST: (inlinedCallArgs3942, <inlinedCallArgs3942>)
assocTy: (<inlinedCallArgs3942>, <inlinedCallArgs3942>) <=> string
assocTy: (<inlinedCallArgs3942>, <inlinedCallArgs3942>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3942> <= string
trackAST: (inlinedCallArgs3942_id3943, string)
assocAST: (credit_id2889, <credit_id2889>, string) => (inlinedCallArgs3942_id3943, <inlinedCallArgs3942_id3943>, string)
trackAST: (inlinedCallArgs3942_account3944, string)
assocAST: (credit_account2890, <credit_account2890>, string) => (inlinedCallArgs3942_account3944, <inlinedCallArgs3942_account3944>, string)
assocAST: (inlinedCallArgs3942_id3943, <credit_id2889>, string) => (key_id2926, <key_id2926>, string)
assocAST: (inlinedCallArgs3942_account3944, <credit_account2890>, string) => (key_account2927, <key_account2927>, string)
assocTy: (<sale-account3026>, string) <=> string
assocTy: (<sale-account3026>, string) <= string
trackAST: (inlinedCallArgs3945, <inlinedCallArgs3945>)
assocTy: (<inlinedCallArgs3945>, <inlinedCallArgs3945>) <=> string
assocTy: (<inlinedCallArgs3945>, <inlinedCallArgs3945>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3945> <= string
assocTy: (<credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs3946, <inlinedCallArgs3946>)
assocTy: (<inlinedCallArgs3946>, <inlinedCallArgs3946>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs3946>, <inlinedCallArgs3946>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs3946> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs3946_id3947, string)
assocAST: (offer_id2771, <offer_id2771>, string) => (inlinedCallArgs3946_id3947, <inlinedCallArgs3946_id3947>, string)
trackAST: (inlinedCallArgs3946_account3948, string)
assocAST: (sale-account3027, <sale-account3026>, string) => (inlinedCallArgs3946_account3948, <inlinedCallArgs3946_account3948>, string)
trackAST: (inlinedCallArgs3946_guard3949, guard)
assocAST: (inlinedCallArgs3946_guard3949, <inlinedCallArgs3946_guard3949>, guard) => (create-pact-guard3028, <create-pact-guard3028>, <create-pact-guard3028>)
trackAST: (inlinedCallArgs3946_amount3950, decimal)
assocAST: (offer_amount2773, <offer_amount2773>, decimal) => (inlinedCallArgs3946_amount3950, <inlinedCallArgs3946_amount3950>, decimal)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <credit_account2890>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <credit_id2889>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_amount3950, <offer_amount2773>, decimal) => (credit_amount2892, <credit_amount2892>, decimal)
assocAST: (inlinedCallArgs3946_amount3950, <offer_amount2773>, decimal) => (credit_amount2892, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_id3947, <offer_id2771>, string) => (credit_id2889, <offer_id2771>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_account3948, <sale-account3026>, string) => (credit_account2890, <sale-account3026>, string)
assocAST: (inlinedCallArgs3946_guard3949, <inlinedCallArgs3946_guard3949>, guard) => (credit_guard2891, <credit_guard2891>, guard)
assocAST: (inlinedCallArgs3946_guard3949, <inlinedCallArgs3946_guard3949>, guard) => (credit_guard2891, <inlinedCallArgs3946_guard3949>, guard)
assocAST: (inlinedCallArgs3946_guard3949, <inlinedCallArgs3946_guard3949>, guard) => (credit_guard2891, <inlinedCallArgs3946_guard3949>, guard)
assocAST: (inlinedCallArgs3946_guard3949, <inlinedCallArgs3946_guard3949>, guard) => (credit_guard2891, <inlinedCallArgs3946_guard3949>, guard)
assocAST: (inlinedCallArgs3946_amount3950, <offer_amount2773>, decimal) => (credit_amount2892, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3946_amount3950, <offer_amount2773>, decimal) => (credit_amount2892, <offer_amount2773>, decimal)
assocTy: (<precision3044>, integer) <=> integer
assocTy: (<precision3044>, integer) <= integer
trackAST: (inlinedCallArgs3951, <inlinedCallArgs3951>)
assocTy: (<inlinedCallArgs3951>, <inlinedCallArgs3951>) <=> integer
assocTy: (<inlinedCallArgs3951>, <inlinedCallArgs3951>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs3951> <= integer
trackAST: (inlinedCallArgs3951_id3952, string)
assocAST: (enforce-unit_id3035, <enforce-unit_id3035>, string) => (inlinedCallArgs3951_id3952, <inlinedCallArgs3951_id3952>, string)
assocAST: (inlinedCallArgs3951_id3952, <enforce-unit_id3035>, string) => (precision_id3039, <precision_id3039>, string)
assocTy: (<enforce-unit3050>, bool) <=> bool
assocTy: (<enforce-unit3050>, bool) <= bool
trackAST: (inlinedCallArgs3953, <inlinedCallArgs3953>)
assocTy: (<inlinedCallArgs3953>, <inlinedCallArgs3953>) <=> bool
assocTy: (<inlinedCallArgs3953>, <inlinedCallArgs3953>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3953> <= bool
trackAST: (inlinedCallArgs3953_id3954, string)
assocAST: (TRANSFER_id3031, <TRANSFER_id3031>, string) => (inlinedCallArgs3953_id3954, <inlinedCallArgs3953_id3954>, string)
trackAST: (inlinedCallArgs3953_amount3955, decimal)
assocAST: (TRANSFER_amount3034, <TRANSFER_amount3034>, decimal) => (inlinedCallArgs3953_amount3955, <inlinedCallArgs3953_amount3955>, decimal)
assocAST: (inlinedCallArgs3953_id3954, <TRANSFER_id3031>, string) => (enforce-unit_id3035, <enforce-unit_id3035>, string)
assocAST: (inlinedCallArgs3953_id3954, <TRANSFER_id3031>, string) => (enforce-unit_id3035, <TRANSFER_id3031>, string)
assocAST: (inlinedCallArgs3953_amount3955, <TRANSFER_amount3034>, decimal) => (enforce-unit_amount3036, <enforce-unit_amount3036>, decimal)
assocAST: (inlinedCallArgs3953_amount3955, <TRANSFER_amount3034>, decimal) => (enforce-unit_amount3036, <TRANSFER_amount3034>, decimal)
assocTy: (<key3069>, string) <=> string
assocTy: (<key3069>, string) <= string
trackAST: (inlinedCallArgs3956, <inlinedCallArgs3956>)
assocTy: (<inlinedCallArgs3956>, <inlinedCallArgs3956>) <=> string
assocTy: (<inlinedCallArgs3956>, <inlinedCallArgs3956>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3956> <= string
trackAST: (inlinedCallArgs3956_id3957, string)
assocAST: (account-guard_id3060, <account-guard_id3060>, string) => (inlinedCallArgs3956_id3957, <inlinedCallArgs3956_id3957>, string)
trackAST: (inlinedCallArgs3956_account3958, string)
assocAST: (account-guard_account3061, <account-guard_account3061>, string) => (inlinedCallArgs3956_account3958, <inlinedCallArgs3956_account3958>, string)
assocAST: (inlinedCallArgs3956_id3957, <account-guard_id3060>, string) => (key_id3064, <key_id3064>, string)
assocAST: (inlinedCallArgs3956_account3958, <account-guard_account3061>, string) => (key_account3065, <key_account3065>, string)
assocTy: (<account-guard3075>, guard) <=> guard
assocTy: (<account-guard3075>, guard) <= guard
trackAST: (inlinedCallArgs3959, <inlinedCallArgs3959>)
assocTy: (<inlinedCallArgs3959>, <inlinedCallArgs3959>) <=> guard
assocTy: (<inlinedCallArgs3959>, <inlinedCallArgs3959>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs3959> <= guard
trackAST: (inlinedCallArgs3959_id3960, string)
assocAST: (DEBIT_id3057, <DEBIT_id3057>, string) => (inlinedCallArgs3959_id3960, <inlinedCallArgs3959_id3960>, string)
trackAST: (inlinedCallArgs3959_account3961, string)
assocAST: (DEBIT_sender3058, <DEBIT_sender3058>, string) => (inlinedCallArgs3959_account3961, <inlinedCallArgs3959_account3961>, string)
assocAST: (inlinedCallArgs3959_id3960, <DEBIT_id3057>, string) => (account-guard_id3060, <account-guard_id3060>, string)
assocAST: (inlinedCallArgs3959_id3960, <DEBIT_id3057>, string) => (account-guard_id3060, <DEBIT_id3057>, string)
assocAST: (inlinedCallArgs3959_account3961, <DEBIT_sender3058>, string) => (account-guard_account3061, <account-guard_account3061>, string)
assocAST: (inlinedCallArgs3959_account3961, <DEBIT_sender3058>, string) => (account-guard_account3061, <DEBIT_sender3058>, string)
assocTy: (<enforce-guard3059>, <enforce-guard3059>) <=> <DEBIT3078_e>
assocTy: (<enforce-guard3059>, <enforce-guard3059>) <= <DEBIT3078_e>
assocTy: tracking/updating type variable <enforce-guard3059> <= <DEBIT3078_e>
trackAST: (inlinedCallArgs3962, <inlinedCallArgs3962>)
assocTy: (<inlinedCallArgs3962>, <inlinedCallArgs3962>) <=> <DEBIT3078_e>
assocTy: (<inlinedCallArgs3962>, <inlinedCallArgs3962>) <= <DEBIT3078_e>
assocTy: tracking/updating type variable <inlinedCallArgs3962> <= <DEBIT3078_e>
trackAST: (inlinedCallArgs3962_id3963, string)
assocAST: (TRANSFER_id3031, <TRANSFER_id3031>, string) => (inlinedCallArgs3962_id3963, <inlinedCallArgs3962_id3963>, string)
trackAST: (inlinedCallArgs3962_sender3964, string)
assocAST: (TRANSFER_sender3032, <TRANSFER_sender3032>, string) => (inlinedCallArgs3962_sender3964, <inlinedCallArgs3962_sender3964>, string)
assocAST: (inlinedCallArgs3962_id3963, <TRANSFER_id3031>, string) => (DEBIT_id3057, <DEBIT_id3057>, string)
assocAST: (inlinedCallArgs3962_id3963, <TRANSFER_id3031>, string) => (DEBIT_id3057, <TRANSFER_id3031>, string)
assocAST: (inlinedCallArgs3962_sender3964, <TRANSFER_sender3032>, string) => (DEBIT_sender3058, <DEBIT_sender3058>, string)
assocAST: (inlinedCallArgs3962_sender3964, <TRANSFER_sender3032>, string) => (DEBIT_sender3058, <TRANSFER_sender3032>, string)
assocTy: (<bool3082>, bool) <=> <CREDIT3084_g>
assocTy: bool => <CREDIT3084_g>
trackAST: (inlinedCallArgs3965, <inlinedCallArgs3965>)
assocTy: (<inlinedCallArgs3965>, <inlinedCallArgs3965>) <=> <CREDIT3084_g>
assocTy: (<inlinedCallArgs3965>, <inlinedCallArgs3965>) <= <CREDIT3084_g>
assocTy: tracking/updating type variable <inlinedCallArgs3965> <= <CREDIT3084_g>
trackAST: (inlinedCallArgs3965_id3966, string)
assocAST: (TRANSFER_id3031, <TRANSFER_id3031>, string) => (inlinedCallArgs3965_id3966, <inlinedCallArgs3965_id3966>, string)
trackAST: (inlinedCallArgs3965_receiver3967, string)
assocAST: (TRANSFER_receiver3033, <TRANSFER_receiver3033>, string) => (inlinedCallArgs3965_receiver3967, <inlinedCallArgs3965_receiver3967>, string)
assocTy: (<sale-account3091>, string) <=> string
assocTy: (<sale-account3091>, string) <= string
trackAST: (inlinedCallArgs3968, <inlinedCallArgs3968>)
assocTy: (<inlinedCallArgs3968>, <inlinedCallArgs3968>) <=> string
assocTy: (<inlinedCallArgs3968>, <inlinedCallArgs3968>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3968> <= string
assocTy: (<TRANSFER3085>, bool) <=> bool
assocTy: (<TRANSFER3085>, bool) <= bool
trackAST: (inlinedCallArgs3969, <inlinedCallArgs3969>)
assocTy: (<inlinedCallArgs3969>, <inlinedCallArgs3969>) <=> bool
assocTy: (<inlinedCallArgs3969>, <inlinedCallArgs3969>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3969> <= bool
trackAST: (inlinedCallArgs3969_id3970, string)
assocAST: (offer_id2771, <offer_id2771>, string) => (inlinedCallArgs3969_id3970, <inlinedCallArgs3969_id3970>, string)
trackAST: (inlinedCallArgs3969_sender3971, string)
assocAST: (offer_seller2772, <offer_seller2772>, string) => (inlinedCallArgs3969_sender3971, <inlinedCallArgs3969_sender3971>, string)
trackAST: (inlinedCallArgs3969_receiver3972, string)
assocAST: (sale-account3092, <sale-account3091>, string) => (inlinedCallArgs3969_receiver3972, <inlinedCallArgs3969_receiver3972>, string)
trackAST: (inlinedCallArgs3969_amount3973, decimal)
assocAST: (offer_amount2773, <offer_amount2773>, decimal) => (inlinedCallArgs3969_amount3973, <inlinedCallArgs3969_amount3973>, decimal)
assocAST: (inlinedCallArgs3969_id3970, <offer_id2771>, string) => (TRANSFER_id3031, <TRANSFER_id3031>, string)
assocAST: (inlinedCallArgs3969_id3970, <offer_id2771>, string) => (TRANSFER_id3031, <offer_id2771>, string)
assocAST: (inlinedCallArgs3969_amount3973, <offer_amount2773>, decimal) => (TRANSFER_amount3034, <TRANSFER_amount3034>, decimal)
assocAST: (inlinedCallArgs3969_amount3973, <offer_amount2773>, decimal) => (TRANSFER_amount3034, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3969_amount3973, <offer_amount2773>, decimal) => (TRANSFER_amount3034, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3969_id3970, <offer_id2771>, string) => (TRANSFER_id3031, <offer_id2771>, string)
assocAST: (inlinedCallArgs3969_id3970, <offer_id2771>, string) => (TRANSFER_id3031, <offer_id2771>, string)
assocAST: (inlinedCallArgs3969_sender3971, <offer_seller2772>, string) => (TRANSFER_sender3032, <TRANSFER_sender3032>, string)
assocAST: (inlinedCallArgs3969_sender3971, <offer_seller2772>, string) => (TRANSFER_sender3032, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3969_id3970, <offer_id2771>, string) => (TRANSFER_id3031, <offer_id2771>, string)
assocAST: (inlinedCallArgs3969_id3970, <offer_id2771>, string) => (TRANSFER_id3031, <offer_id2771>, string)
assocAST: (inlinedCallArgs3969_receiver3972, <sale-account3091>, string) => (TRANSFER_receiver3033, <TRANSFER_receiver3033>, string)
assocAST: (inlinedCallArgs3969_receiver3972, <sale-account3091>, string) => (TRANSFER_receiver3033, <sale-account3091>, string)
assocTy: (<bool3098>, bool) <=> bool
assocTy: (<bool3098>, bool) <= bool
trackAST: (inlinedCallArgs3974, <inlinedCallArgs3974>)
assocTy: (<inlinedCallArgs3974>, <inlinedCallArgs3974>) <=> bool
assocTy: (<inlinedCallArgs3974>, <inlinedCallArgs3974>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3974> <= bool
trackAST: (inlinedCallArgs3974_token-id3975, string)
assocAST: (offer_id2771, <offer_id2771>, string) => (inlinedCallArgs3974_token-id3975, <inlinedCallArgs3974_token-id3975>, string)
trackAST: (inlinedCallArgs3974_amount3976, decimal)
assocAST: (offer_amount2773, <offer_amount2773>, decimal) => (inlinedCallArgs3974_amount3976, <inlinedCallArgs3974_amount3976>, decimal)
trackAST: (inlinedCallArgs3974_sender3977, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet2811_sender2812, <debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs3974_sender3977, <inlinedCallArgs3974_sender3977>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs3974_receiver3978, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet2811_receiver2888, <credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs3974_receiver3978, <inlinedCallArgs3974_receiver3978>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<offer3101>, bool) <=> bool
assocTy: (<offer3101>, bool) <= bool
trackAST: (inlinedCallArgs3979, <inlinedCallArgs3979>)
assocTy: (<inlinedCallArgs3979>, <inlinedCallArgs3979>) <=> bool
assocTy: (<inlinedCallArgs3979>, <inlinedCallArgs3979>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3979> <= bool
trackAST: (inlinedCallArgs3979_id3980, string)
assocAST: (sale_id2696, <sale_id2696>, string) => (inlinedCallArgs3979_id3980, <inlinedCallArgs3979_id3980>, string)
trackAST: (inlinedCallArgs3979_seller3981, string)
assocAST: (sale_seller2697, <sale_seller2697>, string) => (inlinedCallArgs3979_seller3981, <inlinedCallArgs3979_seller3981>, string)
trackAST: (inlinedCallArgs3979_amount3982, decimal)
assocAST: (sale_amount2698, <sale_amount2698>, decimal) => (inlinedCallArgs3979_amount3982, <inlinedCallArgs3979_amount3982>, decimal)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <offer_id2771>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_seller3981, <sale_seller2697>, string) => (offer_seller2772, <offer_seller2772>, string)
assocAST: (inlinedCallArgs3979_seller3981, <sale_seller2697>, string) => (offer_seller2772, <sale_seller2697>, string)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <offer_amount2773>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_id3980, <sale_id2696>, string) => (offer_id2771, <sale_id2696>, string)
assocAST: (inlinedCallArgs3979_seller3981, <sale_seller2697>, string) => (offer_seller2772, <sale_seller2697>, string)
assocAST: (inlinedCallArgs3979_seller3981, <sale_seller2697>, string) => (offer_seller2772, <sale_seller2697>, string)
assocAST: (inlinedCallArgs3979_seller3981, <sale_seller2697>, string) => (offer_seller2772, <sale_seller2697>, string)
assocAST: (inlinedCallArgs3979_seller3981, <sale_seller2697>, string) => (offer_seller2772, <sale_seller2697>, string)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs3979_amount3982, <sale_amount2698>, decimal) => (offer_amount2773, <sale_amount2698>, decimal)
assocTy: (<sale-active2722>, bool) <=> bool
assocTy: (<sale-active2722>, bool) <= bool
trackAST: (inlinedCallArgs3983, <inlinedCallArgs3983>)
assocTy: (<inlinedCallArgs3983>, <inlinedCallArgs3983>) <=> bool
assocTy: (<inlinedCallArgs3983>, <inlinedCallArgs3983>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3983> <= bool
trackAST: (inlinedCallArgs3983_timeout3984, integer)
assocAST: (OFFER_timeout2715, <OFFER_timeout2715>, integer) => (inlinedCallArgs3983_timeout3984, <inlinedCallArgs3983_timeout3984>, integer)
assocAST: (inlinedCallArgs3983_timeout3984, <OFFER_timeout2715>, integer) => (sale-active_timeout2717, <sale-active_timeout2717>, integer)
assocTy: (<key2738>, string) <=> string
assocTy: (<key2738>, string) <= string
trackAST: (inlinedCallArgs3985, <inlinedCallArgs3985>)
assocTy: (<inlinedCallArgs3985>, <inlinedCallArgs3985>) <=> string
assocTy: (<inlinedCallArgs3985>, <inlinedCallArgs3985>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3985> <= string
trackAST: (inlinedCallArgs3985_id3986, string)
assocAST: (account-guard_id2729, <account-guard_id2729>, string) => (inlinedCallArgs3985_id3986, <inlinedCallArgs3985_id3986>, string)
trackAST: (inlinedCallArgs3985_account3987, string)
assocAST: (account-guard_account2730, <account-guard_account2730>, string) => (inlinedCallArgs3985_account3987, <inlinedCallArgs3985_account3987>, string)
assocAST: (inlinedCallArgs3985_id3986, <account-guard_id2729>, string) => (key_id2733, <key_id2733>, string)
assocAST: (inlinedCallArgs3985_account3987, <account-guard_account2730>, string) => (key_account2734, <key_account2734>, string)
assocTy: (<account-guard2744>, guard) <=> guard
assocTy: (<account-guard2744>, guard) <= guard
trackAST: (inlinedCallArgs3988, <inlinedCallArgs3988>)
assocTy: (<inlinedCallArgs3988>, <inlinedCallArgs3988>) <=> guard
assocTy: (<inlinedCallArgs3988>, <inlinedCallArgs3988>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs3988> <= guard
trackAST: (inlinedCallArgs3988_id3989, string)
assocAST: (DEBIT_id2726, <DEBIT_id2726>, string) => (inlinedCallArgs3988_id3989, <inlinedCallArgs3988_id3989>, string)
trackAST: (inlinedCallArgs3988_account3990, string)
assocAST: (DEBIT_sender2727, <DEBIT_sender2727>, string) => (inlinedCallArgs3988_account3990, <inlinedCallArgs3988_account3990>, string)
assocAST: (inlinedCallArgs3988_id3989, <DEBIT_id2726>, string) => (account-guard_id2729, <account-guard_id2729>, string)
assocAST: (inlinedCallArgs3988_id3989, <DEBIT_id2726>, string) => (account-guard_id2729, <DEBIT_id2726>, string)
assocAST: (inlinedCallArgs3988_account3990, <DEBIT_sender2727>, string) => (account-guard_account2730, <account-guard_account2730>, string)
assocAST: (inlinedCallArgs3988_account3990, <DEBIT_sender2727>, string) => (account-guard_account2730, <DEBIT_sender2727>, string)
assocTy: (<enforce-guard2728>, <enforce-guard2728>) <=> <DEBIT2747_e>
assocTy: (<enforce-guard2728>, <enforce-guard2728>) <= <DEBIT2747_e>
assocTy: tracking/updating type variable <enforce-guard2728> <= <DEBIT2747_e>
trackAST: (inlinedCallArgs3991, <inlinedCallArgs3991>)
assocTy: (<inlinedCallArgs3991>, <inlinedCallArgs3991>) <=> <DEBIT2747_e>
assocTy: (<inlinedCallArgs3991>, <inlinedCallArgs3991>) <= <DEBIT2747_e>
assocTy: tracking/updating type variable <inlinedCallArgs3991> <= <DEBIT2747_e>
trackAST: (inlinedCallArgs3991_id3992, string)
assocAST: (OFFER_id2712, <OFFER_id2712>, string) => (inlinedCallArgs3991_id3992, <inlinedCallArgs3991_id3992>, string)
trackAST: (inlinedCallArgs3991_sender3993, string)
assocAST: (OFFER_seller2713, <OFFER_seller2713>, string) => (inlinedCallArgs3991_sender3993, <inlinedCallArgs3991_sender3993>, string)
assocAST: (inlinedCallArgs3991_id3992, <OFFER_id2712>, string) => (DEBIT_id2726, <DEBIT_id2726>, string)
assocAST: (inlinedCallArgs3991_id3992, <OFFER_id2712>, string) => (DEBIT_id2726, <OFFER_id2712>, string)
assocAST: (inlinedCallArgs3991_sender3993, <OFFER_seller2713>, string) => (DEBIT_sender2727, <DEBIT_sender2727>, string)
assocAST: (inlinedCallArgs3991_sender3993, <OFFER_seller2713>, string) => (DEBIT_sender2727, <OFFER_seller2713>, string)
assocTy: (<sale-account2758>, string) <=> string
assocTy: (<sale-account2758>, string) <= string
trackAST: (inlinedCallArgs3994, <inlinedCallArgs3994>)
assocTy: (<inlinedCallArgs3994>, <inlinedCallArgs3994>) <=> string
assocTy: (<inlinedCallArgs3994>, <inlinedCallArgs3994>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs3994> <= string
assocTy: (<bool2751>, bool) <=> <CREDIT2753_g>
assocTy: bool => <CREDIT2753_g>
trackAST: (inlinedCallArgs3995, <inlinedCallArgs3995>)
assocTy: (<inlinedCallArgs3995>, <inlinedCallArgs3995>) <=> <CREDIT2753_g>
assocTy: (<inlinedCallArgs3995>, <inlinedCallArgs3995>) <= <CREDIT2753_g>
assocTy: tracking/updating type variable <inlinedCallArgs3995> <= <CREDIT2753_g>
trackAST: (inlinedCallArgs3995_id3996, string)
assocAST: (OFFER_id2712, <OFFER_id2712>, string) => (inlinedCallArgs3995_id3996, <inlinedCallArgs3995_id3996>, string)
trackAST: (inlinedCallArgs3995_receiver3997, string)
assocAST: (sale-account2759, <sale-account2758>, string) => (inlinedCallArgs3995_receiver3997, <inlinedCallArgs3995_receiver3997>, string)
assocTy: (<OFFER2760>, bool) <=> bool
assocTy: (<OFFER2760>, bool) <= bool
trackAST: (inlinedCallArgs3998, <inlinedCallArgs3998>)
assocTy: (<inlinedCallArgs3998>, <inlinedCallArgs3998>) <=> bool
assocTy: (<inlinedCallArgs3998>, <inlinedCallArgs3998>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs3998> <= bool
trackAST: (inlinedCallArgs3998_id3999, string)
assocAST: (SALE_id2702, <SALE_id2702>, string) => (inlinedCallArgs3998_id3999, <inlinedCallArgs3998_id3999>, string)
trackAST: (inlinedCallArgs3998_seller4000, string)
assocAST: (SALE_seller2703, <SALE_seller2703>, string) => (inlinedCallArgs3998_seller4000, <inlinedCallArgs3998_seller4000>, string)
trackAST: (inlinedCallArgs3998_amount4001, decimal)
assocAST: (SALE_amount2704, <SALE_amount2704>, decimal) => (inlinedCallArgs3998_amount4001, <inlinedCallArgs3998_amount4001>, decimal)
trackAST: (inlinedCallArgs3998_timeout4002, integer)
assocAST: (SALE_timeout2705, <SALE_timeout2705>, integer) => (inlinedCallArgs3998_timeout4002, <inlinedCallArgs3998_timeout4002>, integer)
assocAST: (inlinedCallArgs3998_timeout4002, <SALE_timeout2705>, integer) => (OFFER_timeout2715, <OFFER_timeout2715>, integer)
assocAST: (inlinedCallArgs3998_timeout4002, <SALE_timeout2705>, integer) => (OFFER_timeout2715, <SALE_timeout2705>, integer)
assocAST: (inlinedCallArgs3998_id3999, <SALE_id2702>, string) => (OFFER_id2712, <OFFER_id2712>, string)
assocAST: (inlinedCallArgs3998_id3999, <SALE_id2702>, string) => (OFFER_id2712, <SALE_id2702>, string)
assocAST: (inlinedCallArgs3998_seller4000, <SALE_seller2703>, string) => (OFFER_seller2713, <OFFER_seller2713>, string)
assocAST: (inlinedCallArgs3998_seller4000, <SALE_seller2703>, string) => (OFFER_seller2713, <SALE_seller2703>, string)
assocAST: (inlinedCallArgs3998_id3999, <SALE_id2702>, string) => (OFFER_id2712, <SALE_id2702>, string)
assocAST: (inlinedCallArgs3998_id3999, <SALE_id2702>, string) => (OFFER_id2712, <SALE_id2702>, string)
assocTy: (<bool2764>, bool) <=> bool
assocTy: (<bool2764>, bool) <= bool
trackAST: (inlinedCallArgs4003, <inlinedCallArgs4003>)
assocTy: (<inlinedCallArgs4003>, <inlinedCallArgs4003>) <=> bool
assocTy: (<inlinedCallArgs4003>, <inlinedCallArgs4003>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4003> <= bool
trackAST: (inlinedCallArgs4003_sale-id4004, string)
assocAST: (SALE_sale-id2706, <SALE_sale-id2706>, string) => (inlinedCallArgs4003_sale-id4004, <inlinedCallArgs4003_sale-id4004>, string)
assocTy: (<SALE2767>, bool) <=> bool
assocTy: (<SALE2767>, bool) <= bool
trackAST: (inlinedCallArgs4005, <inlinedCallArgs4005>)
assocTy: (<inlinedCallArgs4005>, <inlinedCallArgs4005>) <=> bool
assocTy: (<inlinedCallArgs4005>, <inlinedCallArgs4005>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4005> <= bool
trackAST: (inlinedCallArgs4005_id4006, string)
assocAST: (sale_id2696, <sale_id2696>, string) => (inlinedCallArgs4005_id4006, <inlinedCallArgs4005_id4006>, string)
trackAST: (inlinedCallArgs4005_seller4007, string)
assocAST: (sale_seller2697, <sale_seller2697>, string) => (inlinedCallArgs4005_seller4007, <inlinedCallArgs4005_seller4007>, string)
trackAST: (inlinedCallArgs4005_amount4008, decimal)
assocAST: (sale_amount2698, <sale_amount2698>, decimal) => (inlinedCallArgs4005_amount4008, <inlinedCallArgs4005_amount4008>, decimal)
trackAST: (inlinedCallArgs4005_timeout4009, integer)
assocAST: (sale_timeout2699, <sale_timeout2699>, integer) => (inlinedCallArgs4005_timeout4009, <inlinedCallArgs4005_timeout4009>, integer)
trackAST: (inlinedCallArgs4005_sale-id4010, string)
assocAST: (inlinedCallArgs4005_sale-id4010, <inlinedCallArgs4005_sale-id4010>, string) => (pact-id2769, <pact-id2769>, <pact-id2769>)
assocAST: (inlinedCallArgs4005_amount4008, <sale_amount2698>, decimal) => (SALE_amount2704, <SALE_amount2704>, decimal)
assocAST: (inlinedCallArgs4005_id4006, <sale_id2696>, string) => (SALE_id2702, <SALE_id2702>, string)
assocAST: (inlinedCallArgs4005_id4006, <sale_id2696>, string) => (SALE_id2702, <sale_id2696>, string)
assocAST: (inlinedCallArgs4005_seller4007, <sale_seller2697>, string) => (SALE_seller2703, <SALE_seller2703>, string)
assocAST: (inlinedCallArgs4005_seller4007, <sale_seller2697>, string) => (SALE_seller2703, <sale_seller2697>, string)
assocAST: (inlinedCallArgs4005_amount4008, <sale_amount2698>, decimal) => (SALE_amount2704, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4005_amount4008, <sale_amount2698>, decimal) => (SALE_amount2704, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4005_timeout4009, <sale_timeout2699>, integer) => (SALE_timeout2705, <SALE_timeout2705>, integer)
assocAST: (inlinedCallArgs4005_timeout4009, <sale_timeout2699>, integer) => (SALE_timeout2705, <sale_timeout2699>, integer)
assocAST: (inlinedCallArgs4005_sale-id4010, <inlinedCallArgs4005_sale-id4010>, string) => (SALE_sale-id2706, <SALE_sale-id2706>, string)
assocAST: (inlinedCallArgs4005_sale-id4010, <inlinedCallArgs4005_sale-id4010>, string) => (SALE_sale-id2706, <inlinedCallArgs4005_sale-id4010>, string)
assocTy: (<bool3168>, bool) <=> bool
assocTy: (<bool3168>, bool) <= bool
trackAST: (inlinedCallArgs4011, <inlinedCallArgs4011>)
assocTy: (<inlinedCallArgs4011>, <inlinedCallArgs4011>) <=> bool
assocTy: (<inlinedCallArgs4011>, <inlinedCallArgs4011>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4011> <= bool
trackAST: (inlinedCallArgs4011_sale-id4012, string)
assocAST: (inlinedCallArgs4011_sale-id4012, <inlinedCallArgs4011_sale-id4012>, string) => (pact-id3171, <pact-id3171>, <pact-id3171>)
assocTy: (<key3190>, string) <=> string
assocTy: (<key3190>, string) <= string
trackAST: (inlinedCallArgs4013, <inlinedCallArgs4013>)
assocTy: (<inlinedCallArgs4013>, <inlinedCallArgs4013>) <=> string
assocTy: (<inlinedCallArgs4013>, <inlinedCallArgs4013>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4013> <= string
trackAST: (inlinedCallArgs4013_id4014, string)
assocAST: (account-guard_id3181, <account-guard_id3181>, string) => (inlinedCallArgs4013_id4014, <inlinedCallArgs4013_id4014>, string)
trackAST: (inlinedCallArgs4013_account4015, string)
assocAST: (account-guard_account3182, <account-guard_account3182>, string) => (inlinedCallArgs4013_account4015, <inlinedCallArgs4013_account4015>, string)
assocAST: (inlinedCallArgs4013_id4014, <account-guard_id3181>, string) => (key_id3185, <key_id3185>, string)
assocAST: (inlinedCallArgs4013_account4015, <account-guard_account3182>, string) => (key_account3186, <key_account3186>, string)
assocTy: (<account-guard3196>, guard) <=> guard
assocTy: (<account-guard3196>, guard) <= guard
trackAST: (inlinedCallArgs4016, <inlinedCallArgs4016>)
assocTy: (<inlinedCallArgs4016>, <inlinedCallArgs4016>) <=> guard
assocTy: (<inlinedCallArgs4016>, <inlinedCallArgs4016>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4016> <= guard
trackAST: (inlinedCallArgs4016_id4017, string)
assocAST: (DEBIT_id3178, <DEBIT_id3178>, string) => (inlinedCallArgs4016_id4017, <inlinedCallArgs4016_id4017>, string)
trackAST: (inlinedCallArgs4016_account4018, string)
assocAST: (DEBIT_sender3179, <DEBIT_sender3179>, string) => (inlinedCallArgs4016_account4018, <inlinedCallArgs4016_account4018>, string)
assocAST: (inlinedCallArgs4016_id4017, <DEBIT_id3178>, string) => (account-guard_id3181, <account-guard_id3181>, string)
assocAST: (inlinedCallArgs4016_id4017, <DEBIT_id3178>, string) => (account-guard_id3181, <DEBIT_id3178>, string)
assocAST: (inlinedCallArgs4016_account4018, <DEBIT_sender3179>, string) => (account-guard_account3182, <account-guard_account3182>, string)
assocAST: (inlinedCallArgs4016_account4018, <DEBIT_sender3179>, string) => (account-guard_account3182, <DEBIT_sender3179>, string)
assocTy: (<enforce-guard3180>, <enforce-guard3180>) <=> <DEBIT3199_e>
assocTy: (<enforce-guard3180>, <enforce-guard3180>) <= <DEBIT3199_e>
assocTy: tracking/updating type variable <enforce-guard3180> <= <DEBIT3199_e>
trackAST: (inlinedCallArgs4019, <inlinedCallArgs4019>)
assocTy: (<inlinedCallArgs4019>, <inlinedCallArgs4019>) <=> <DEBIT3199_e>
assocTy: (<inlinedCallArgs4019>, <inlinedCallArgs4019>) <= <DEBIT3199_e>
assocTy: tracking/updating type variable <inlinedCallArgs4019> <= <DEBIT3199_e>
trackAST: (inlinedCallArgs4019_id4020, string)
assocAST: (debit_id3174, <debit_id3174>, string) => (inlinedCallArgs4019_id4020, <inlinedCallArgs4019_id4020>, string)
trackAST: (inlinedCallArgs4019_sender4021, string)
assocAST: (debit_account3175, <debit_account3175>, string) => (inlinedCallArgs4019_sender4021, <inlinedCallArgs4019_sender4021>, string)
assocAST: (inlinedCallArgs4019_id4020, <debit_id3174>, string) => (DEBIT_id3178, <DEBIT_id3178>, string)
assocAST: (inlinedCallArgs4019_id4020, <debit_id3174>, string) => (DEBIT_id3178, <debit_id3174>, string)
assocAST: (inlinedCallArgs4019_sender4021, <debit_account3175>, string) => (DEBIT_sender3179, <DEBIT_sender3179>, string)
assocAST: (inlinedCallArgs4019_sender4021, <debit_account3175>, string) => (DEBIT_sender3179, <debit_account3175>, string)
assocTy: (<precision3209>, integer) <=> integer
assocTy: (<precision3209>, integer) <= integer
trackAST: (inlinedCallArgs4022, <inlinedCallArgs4022>)
assocTy: (<inlinedCallArgs4022>, <inlinedCallArgs4022>) <=> integer
assocTy: (<inlinedCallArgs4022>, <inlinedCallArgs4022>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4022> <= integer
trackAST: (inlinedCallArgs4022_id4023, string)
assocAST: (enforce-unit_id3200, <enforce-unit_id3200>, string) => (inlinedCallArgs4022_id4023, <inlinedCallArgs4022_id4023>, string)
assocAST: (inlinedCallArgs4022_id4023, <enforce-unit_id3200>, string) => (precision_id3204, <precision_id3204>, string)
assocTy: (<enforce-unit3215>, bool) <=> bool
assocTy: (<enforce-unit3215>, bool) <= bool
trackAST: (inlinedCallArgs4024, <inlinedCallArgs4024>)
assocTy: (<inlinedCallArgs4024>, <inlinedCallArgs4024>) <=> bool
assocTy: (<inlinedCallArgs4024>, <inlinedCallArgs4024>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4024> <= bool
trackAST: (inlinedCallArgs4024_id4025, string)
assocAST: (debit_id3174, <debit_id3174>, string) => (inlinedCallArgs4024_id4025, <inlinedCallArgs4024_id4025>, string)
trackAST: (inlinedCallArgs4024_amount4026, decimal)
assocAST: (debit_amount3176, <debit_amount3176>, decimal) => (inlinedCallArgs4024_amount4026, <inlinedCallArgs4024_amount4026>, decimal)
assocAST: (inlinedCallArgs4024_id4025, <debit_id3174>, string) => (enforce-unit_id3200, <enforce-unit_id3200>, string)
assocAST: (inlinedCallArgs4024_id4025, <debit_id3174>, string) => (enforce-unit_id3200, <debit_id3174>, string)
assocAST: (inlinedCallArgs4024_amount4026, <debit_amount3176>, decimal) => (enforce-unit_amount3201, <enforce-unit_amount3201>, decimal)
assocAST: (inlinedCallArgs4024_amount4026, <debit_amount3176>, decimal) => (enforce-unit_amount3201, <debit_amount3176>, decimal)
assocTy: (<key3242>, string) <=> string
assocTy: (<key3242>, string) <= string
trackAST: (inlinedCallArgs4027, <inlinedCallArgs4027>)
assocTy: (<inlinedCallArgs4027>, <inlinedCallArgs4027>) <=> string
assocTy: (<inlinedCallArgs4027>, <inlinedCallArgs4027>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4027> <= string
trackAST: (inlinedCallArgs4027_id4028, string)
assocAST: (debit_id3174, <debit_id3174>, string) => (inlinedCallArgs4027_id4028, <inlinedCallArgs4027_id4028>, string)
trackAST: (inlinedCallArgs4027_account4029, string)
assocAST: (debit_account3175, <debit_account3175>, string) => (inlinedCallArgs4027_account4029, <inlinedCallArgs4027_account4029>, string)
assocAST: (inlinedCallArgs4027_id4028, <debit_id3174>, string) => (key_id3237, <key_id3237>, string)
assocAST: (inlinedCallArgs4027_account4029, <debit_account3175>, string) => (key_account3238, <key_account3238>, string)
assocTy: (<key3224>, string) <=> string
assocTy: (<key3224>, string) <= string
trackAST: (inlinedCallArgs4030, <inlinedCallArgs4030>)
assocTy: (<inlinedCallArgs4030>, <inlinedCallArgs4030>) <=> string
assocTy: (<inlinedCallArgs4030>, <inlinedCallArgs4030>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4030> <= string
trackAST: (inlinedCallArgs4030_id4031, string)
assocAST: (debit_id3174, <debit_id3174>, string) => (inlinedCallArgs4030_id4031, <inlinedCallArgs4030_id4031>, string)
trackAST: (inlinedCallArgs4030_account4032, string)
assocAST: (debit_account3175, <debit_account3175>, string) => (inlinedCallArgs4030_account4032, <inlinedCallArgs4030_account4032>, string)
assocAST: (inlinedCallArgs4030_id4031, <debit_id3174>, string) => (key_id3219, <key_id3219>, string)
assocAST: (inlinedCallArgs4030_account4032, <debit_account3175>, string) => (key_account3220, <key_account3220>, string)
assocTy: (<sale-account3253>, string) <=> string
assocTy: (<sale-account3253>, string) <= string
trackAST: (inlinedCallArgs4033, <inlinedCallArgs4033>)
assocTy: (<inlinedCallArgs4033>, <inlinedCallArgs4033>) <=> string
assocTy: (<inlinedCallArgs4033>, <inlinedCallArgs4033>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4033> <= string
assocTy: (<debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs4034, <inlinedCallArgs4034>)
assocTy: (<inlinedCallArgs4034>, <inlinedCallArgs4034>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs4034>, <inlinedCallArgs4034>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4034> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs4034_id4035, string)
assocAST: (withdraw_id3163, <withdraw_id3163>, string) => (inlinedCallArgs4034_id4035, <inlinedCallArgs4034_id4035>, string)
trackAST: (inlinedCallArgs4034_account4036, string)
assocAST: (sale-account3254, <sale-account3253>, string) => (inlinedCallArgs4034_account4036, <inlinedCallArgs4034_account4036>, string)
trackAST: (inlinedCallArgs4034_amount4037, decimal)
assocAST: (withdraw_amount3165, <withdraw_amount3165>, decimal) => (inlinedCallArgs4034_amount4037, <inlinedCallArgs4034_amount4037>, decimal)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <debit_id3174>, string)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <debit_account3175>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <sale-account3253>, string)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_amount4037, <withdraw_amount3165>, decimal) => (debit_amount3176, <debit_amount3176>, decimal)
assocAST: (inlinedCallArgs4034_amount4037, <withdraw_amount3165>, decimal) => (debit_amount3176, <withdraw_amount3165>, decimal)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_id4035, <withdraw_id3163>, string) => (debit_id3174, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <sale-account3253>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <sale-account3253>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <sale-account3253>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <sale-account3253>, string)
assocAST: (inlinedCallArgs4034_account4036, <sale-account3253>, string) => (debit_account3175, <sale-account3253>, string)
assocAST: (inlinedCallArgs4034_amount4037, <withdraw_amount3165>, decimal) => (debit_amount3176, <withdraw_amount3165>, decimal)
assocAST: (inlinedCallArgs4034_amount4037, <withdraw_amount3165>, decimal) => (debit_amount3176, <withdraw_amount3165>, decimal)
assocTy: (<enforce3264>, <enforce3264>) <=> <enforce-valid-account3270_c>
assocTy: (<enforce3264>, <enforce3264>) <= <enforce-valid-account3270_c>
assocTy: tracking/updating type variable <enforce3264> <= <enforce-valid-account3270_c>
trackAST: (inlinedCallArgs4038, <inlinedCallArgs4038>)
assocTy: (<inlinedCallArgs4038>, <inlinedCallArgs4038>) <=> <enforce-valid-account3270_c>
assocTy: (<inlinedCallArgs4038>, <inlinedCallArgs4038>) <= <enforce-valid-account3270_c>
assocTy: tracking/updating type variable <inlinedCallArgs4038> <= <enforce-valid-account3270_c>
trackAST: (inlinedCallArgs4038_account4039, string)
assocAST: (credit_account3260, <credit_account3260>, string) => (inlinedCallArgs4038_account4039, <inlinedCallArgs4038_account4039>, string)
assocAST: (inlinedCallArgs4038_account4039, <credit_account3260>, string) => (enforce-valid-account_account3263, <enforce-valid-account_account3263>, string)
assocTy: (<precision3280>, integer) <=> integer
assocTy: (<precision3280>, integer) <= integer
trackAST: (inlinedCallArgs4040, <inlinedCallArgs4040>)
assocTy: (<inlinedCallArgs4040>, <inlinedCallArgs4040>) <=> integer
assocTy: (<inlinedCallArgs4040>, <inlinedCallArgs4040>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4040> <= integer
trackAST: (inlinedCallArgs4040_id4041, string)
assocAST: (enforce-unit_id3271, <enforce-unit_id3271>, string) => (inlinedCallArgs4040_id4041, <inlinedCallArgs4040_id4041>, string)
assocAST: (inlinedCallArgs4040_id4041, <enforce-unit_id3271>, string) => (precision_id3275, <precision_id3275>, string)
assocTy: (<enforce-unit3286>, bool) <=> bool
assocTy: (<enforce-unit3286>, bool) <= bool
trackAST: (inlinedCallArgs4042, <inlinedCallArgs4042>)
assocTy: (<inlinedCallArgs4042>, <inlinedCallArgs4042>) <=> bool
assocTy: (<inlinedCallArgs4042>, <inlinedCallArgs4042>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4042> <= bool
trackAST: (inlinedCallArgs4042_id4043, string)
assocAST: (credit_id3259, <credit_id3259>, string) => (inlinedCallArgs4042_id4043, <inlinedCallArgs4042_id4043>, string)
trackAST: (inlinedCallArgs4042_amount4044, decimal)
assocAST: (credit_amount3262, <credit_amount3262>, decimal) => (inlinedCallArgs4042_amount4044, <inlinedCallArgs4042_amount4044>, decimal)
assocAST: (inlinedCallArgs4042_id4043, <credit_id3259>, string) => (enforce-unit_id3271, <enforce-unit_id3271>, string)
assocAST: (inlinedCallArgs4042_id4043, <credit_id3259>, string) => (enforce-unit_id3271, <credit_id3259>, string)
assocAST: (inlinedCallArgs4042_amount4044, <credit_amount3262>, decimal) => (enforce-unit_amount3272, <enforce-unit_amount3272>, decimal)
assocAST: (inlinedCallArgs4042_amount4044, <credit_amount3262>, decimal) => (enforce-unit_amount3272, <credit_amount3262>, decimal)
assocTy: (<bool3291>, bool) <=> <CREDIT3293_g>
assocTy: bool => <CREDIT3293_g>
trackAST: (inlinedCallArgs4045, <inlinedCallArgs4045>)
assocTy: (<inlinedCallArgs4045>, <inlinedCallArgs4045>) <=> <CREDIT3293_g>
assocTy: (<inlinedCallArgs4045>, <inlinedCallArgs4045>) <= <CREDIT3293_g>
assocTy: tracking/updating type variable <inlinedCallArgs4045> <= <CREDIT3293_g>
trackAST: (inlinedCallArgs4045_id4046, string)
assocAST: (credit_id3259, <credit_id3259>, string) => (inlinedCallArgs4045_id4046, <inlinedCallArgs4045_id4046>, string)
trackAST: (inlinedCallArgs4045_receiver4047, string)
assocAST: (credit_account3260, <credit_account3260>, string) => (inlinedCallArgs4045_receiver4047, <inlinedCallArgs4045_receiver4047>, string)
assocTy: (<check-reserved3335>, string) <=> string
assocTy: (<check-reserved3335>, string) <= string
trackAST: (inlinedCallArgs4048, <inlinedCallArgs4048>)
assocTy: (<inlinedCallArgs4048>, <inlinedCallArgs4048>) <=> string
assocTy: (<inlinedCallArgs4048>, <inlinedCallArgs4048>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4048> <= string
trackAST: (inlinedCallArgs4048_account4049, string)
assocAST: (enforce-reserved_account3318, <enforce-reserved_account3318>, string) => (inlinedCallArgs4048_account4049, <inlinedCallArgs4048_account4049>, string)
assocAST: (inlinedCallArgs4048_account4049, <enforce-reserved_account3318>, string) => (check-reserved_account3322, <check-reserved_account3322>, string)
assocTy: (<enforce-reserved3360>, bool) <=> bool
assocTy: (<enforce-reserved3360>, bool) <= bool
trackAST: (inlinedCallArgs4050, <inlinedCallArgs4050>)
assocTy: (<inlinedCallArgs4050>, <inlinedCallArgs4050>) <=> bool
assocTy: (<inlinedCallArgs4050>, <inlinedCallArgs4050>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4050> <= bool
trackAST: (inlinedCallArgs4050_account4051, string)
assocAST: (credit_account3260, <credit_account3260>, string) => (inlinedCallArgs4050_account4051, <inlinedCallArgs4050_account4051>, string)
trackAST: (inlinedCallArgs4050_guard4052, guard)
assocAST: (credit_guard3261, <credit_guard3261>, guard) => (inlinedCallArgs4050_guard4052, <inlinedCallArgs4050_guard4052>, guard)
assocAST: (inlinedCallArgs4050_account4051, <credit_account3260>, string) => (enforce-reserved_account3318, <enforce-reserved_account3318>, string)
assocAST: (inlinedCallArgs4050_account4051, <credit_account3260>, string) => (enforce-reserved_account3318, <credit_account3260>, string)
assocAST: (inlinedCallArgs4050_account4051, <credit_account3260>, string) => (enforce-reserved_account3318, <credit_account3260>, string)
assocAST: (inlinedCallArgs4050_guard4052, <credit_guard3261>, guard) => (enforce-reserved_guard3319, <enforce-reserved_guard3319>, guard)
assocTy: (<key3374>, string) <=> string
assocTy: (<key3374>, string) <= string
trackAST: (inlinedCallArgs4053, <inlinedCallArgs4053>)
assocTy: (<inlinedCallArgs4053>, <inlinedCallArgs4053>) <=> string
assocTy: (<inlinedCallArgs4053>, <inlinedCallArgs4053>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4053> <= string
trackAST: (inlinedCallArgs4053_id4054, string)
assocAST: (credit_id3259, <credit_id3259>, string) => (inlinedCallArgs4053_id4054, <inlinedCallArgs4053_id4054>, string)
trackAST: (inlinedCallArgs4053_account4055, string)
assocAST: (credit_account3260, <credit_account3260>, string) => (inlinedCallArgs4053_account4055, <inlinedCallArgs4053_account4055>, string)
assocAST: (inlinedCallArgs4053_id4054, <credit_id3259>, string) => (key_id3369, <key_id3369>, string)
assocAST: (inlinedCallArgs4053_account4055, <credit_account3260>, string) => (key_account3370, <key_account3370>, string)
assocTy: (<bool3382>, bool) <=> bool
assocTy: (<bool3382>, bool) <= bool
trackAST: (inlinedCallArgs4056, <inlinedCallArgs4056>)
assocTy: (<inlinedCallArgs4056>, <inlinedCallArgs4056>) <=> bool
assocTy: (<inlinedCallArgs4056>, <inlinedCallArgs4056>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4056> <= bool
trackAST: (inlinedCallArgs4056_id4057, string)
assocAST: (credit_id3259, <credit_id3259>, string) => (inlinedCallArgs4056_id4057, <inlinedCallArgs4056_id4057>, string)
trackAST: (inlinedCallArgs4056_account4058, string)
assocAST: (credit_account3260, <credit_account3260>, string) => (inlinedCallArgs4056_account4058, <inlinedCallArgs4056_account4058>, string)
trackAST: (inlinedCallArgs4056_guard4059, guard)
assocAST: (inlinedCallArgs4056_guard4059, <inlinedCallArgs4056_guard4059>, guard) => (BindSchema3305_retg3308, <BindSchema3305_retg3308_ad>, <BindSchema3305_retg3308_ad>)
assocTy: (<key3301>, string) <=> string
assocTy: (<key3301>, string) <= string
trackAST: (inlinedCallArgs4060, <inlinedCallArgs4060>)
assocTy: (<inlinedCallArgs4060>, <inlinedCallArgs4060>) <=> string
assocTy: (<inlinedCallArgs4060>, <inlinedCallArgs4060>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4060> <= string
trackAST: (inlinedCallArgs4060_id4061, string)
assocAST: (credit_id3259, <credit_id3259>, string) => (inlinedCallArgs4060_id4061, <inlinedCallArgs4060_id4061>, string)
trackAST: (inlinedCallArgs4060_account4062, string)
assocAST: (credit_account3260, <credit_account3260>, string) => (inlinedCallArgs4060_account4062, <inlinedCallArgs4060_account4062>, string)
assocAST: (inlinedCallArgs4060_id4061, <credit_id3259>, string) => (key_id3296, <key_id3296>, string)
assocAST: (inlinedCallArgs4060_account4062, <credit_account3260>, string) => (key_account3297, <key_account3297>, string)
assocTy: (<key3401>, string) <=> string
assocTy: (<key3401>, string) <= string
trackAST: (inlinedCallArgs4063, <inlinedCallArgs4063>)
assocTy: (<inlinedCallArgs4063>, <inlinedCallArgs4063>) <=> string
assocTy: (<inlinedCallArgs4063>, <inlinedCallArgs4063>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4063> <= string
trackAST: (inlinedCallArgs4063_id4064, string)
assocAST: (account-guard_id3392, <account-guard_id3392>, string) => (inlinedCallArgs4063_id4064, <inlinedCallArgs4063_id4064>, string)
trackAST: (inlinedCallArgs4063_account4065, string)
assocAST: (account-guard_account3393, <account-guard_account3393>, string) => (inlinedCallArgs4063_account4065, <inlinedCallArgs4063_account4065>, string)
assocAST: (inlinedCallArgs4063_id4064, <account-guard_id3392>, string) => (key_id3396, <key_id3396>, string)
assocAST: (inlinedCallArgs4063_account4065, <account-guard_account3393>, string) => (key_account3397, <key_account3397>, string)
assocTy: (<account-guard3407>, guard) <=> guard
assocTy: (<account-guard3407>, guard) <= guard
trackAST: (inlinedCallArgs4066, <inlinedCallArgs4066>)
assocTy: (<inlinedCallArgs4066>, <inlinedCallArgs4066>) <=> guard
assocTy: (<inlinedCallArgs4066>, <inlinedCallArgs4066>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4066> <= guard
trackAST: (inlinedCallArgs4066_id4067, string)
assocAST: (credit-account_id3256, <credit-account_id3256>, string) => (inlinedCallArgs4066_id4067, <inlinedCallArgs4066_id4067>, string)
trackAST: (inlinedCallArgs4066_account4068, string)
assocAST: (credit-account_account3257, <credit-account_account3257>, string) => (inlinedCallArgs4066_account4068, <inlinedCallArgs4066_account4068>, string)
assocAST: (inlinedCallArgs4066_id4067, <credit-account_id3256>, string) => (account-guard_id3392, <account-guard_id3392>, string)
assocAST: (inlinedCallArgs4066_id4067, <credit-account_id3256>, string) => (account-guard_id3392, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4066_account4068, <credit-account_account3257>, string) => (account-guard_account3393, <account-guard_account3393>, string)
assocAST: (inlinedCallArgs4066_account4068, <credit-account_account3257>, string) => (account-guard_account3393, <credit-account_account3257>, string)
assocTy: (<credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4069, <inlinedCallArgs4069>)
assocTy: (<inlinedCallArgs4069>, <inlinedCallArgs4069>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs4069>, <inlinedCallArgs4069>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4069> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4069_id4070, string)
assocAST: (credit-account_id3256, <credit-account_id3256>, string) => (inlinedCallArgs4069_id4070, <inlinedCallArgs4069_id4070>, string)
trackAST: (inlinedCallArgs4069_account4071, string)
assocAST: (credit-account_account3257, <credit-account_account3257>, string) => (inlinedCallArgs4069_account4071, <inlinedCallArgs4069_account4071>, string)
trackAST: (inlinedCallArgs4069_guard4072, guard)
assocAST: (account-guard3408, <account-guard3407>, guard) => (inlinedCallArgs4069_guard4072, <inlinedCallArgs4069_guard4072>, guard)
trackAST: (inlinedCallArgs4069_amount4073, decimal)
assocAST: (credit-account_amount3258, <credit-account_amount3258>, decimal) => (inlinedCallArgs4069_amount4073, <inlinedCallArgs4069_amount4073>, decimal)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit_account3260>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit_id3259>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_amount4073, <credit-account_amount3258>, decimal) => (credit_amount3262, <credit_amount3262>, decimal)
assocAST: (inlinedCallArgs4069_amount4073, <credit-account_amount3258>, decimal) => (credit_amount3262, <credit-account_amount3258>, decimal)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_id4070, <credit-account_id3256>, string) => (credit_id3259, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_account4071, <credit-account_account3257>, string) => (credit_account3260, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4069_guard4072, <account-guard3407>, guard) => (credit_guard3261, <credit_guard3261>, guard)
assocAST: (inlinedCallArgs4069_guard4072, <account-guard3407>, guard) => (credit_guard3261, <account-guard3407>, guard)
assocAST: (inlinedCallArgs4069_guard4072, <account-guard3407>, guard) => (credit_guard3261, <account-guard3407>, guard)
assocAST: (inlinedCallArgs4069_guard4072, <account-guard3407>, guard) => (credit_guard3261, <account-guard3407>, guard)
assocAST: (inlinedCallArgs4069_amount4073, <credit-account_amount3258>, decimal) => (credit_amount3262, <credit-account_amount3258>, decimal)
assocAST: (inlinedCallArgs4069_amount4073, <credit-account_amount3258>, decimal) => (credit_amount3262, <credit-account_amount3258>, decimal)
assocTy: (<credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4074, <inlinedCallArgs4074>)
assocTy: (<inlinedCallArgs4074>, <inlinedCallArgs4074>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs4074>, <inlinedCallArgs4074>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4074> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4074_id4075, string)
assocAST: (withdraw_id3163, <withdraw_id3163>, string) => (inlinedCallArgs4074_id4075, <inlinedCallArgs4074_id4075>, string)
trackAST: (inlinedCallArgs4074_account4076, string)
assocAST: (withdraw_seller3164, <withdraw_seller3164>, string) => (inlinedCallArgs4074_account4076, <inlinedCallArgs4074_account4076>, string)
trackAST: (inlinedCallArgs4074_amount4077, decimal)
assocAST: (withdraw_amount3165, <withdraw_amount3165>, decimal) => (inlinedCallArgs4074_amount4077, <inlinedCallArgs4074_amount4077>, decimal)
assocAST: (inlinedCallArgs4074_id4075, <withdraw_id3163>, string) => (credit-account_id3256, <credit-account_id3256>, string)
assocAST: (inlinedCallArgs4074_id4075, <withdraw_id3163>, string) => (credit-account_id3256, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4074_id4075, <withdraw_id3163>, string) => (credit-account_id3256, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4074_id4075, <withdraw_id3163>, string) => (credit-account_id3256, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4074_id4075, <withdraw_id3163>, string) => (credit-account_id3256, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4074_id4075, <withdraw_id3163>, string) => (credit-account_id3256, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4074_account4076, <withdraw_seller3164>, string) => (credit-account_account3257, <credit-account_account3257>, string)
assocAST: (inlinedCallArgs4074_account4076, <withdraw_seller3164>, string) => (credit-account_account3257, <withdraw_seller3164>, string)
assocAST: (inlinedCallArgs4074_account4076, <withdraw_seller3164>, string) => (credit-account_account3257, <withdraw_seller3164>, string)
assocAST: (inlinedCallArgs4074_account4076, <withdraw_seller3164>, string) => (credit-account_account3257, <withdraw_seller3164>, string)
assocAST: (inlinedCallArgs4074_account4076, <withdraw_seller3164>, string) => (credit-account_account3257, <withdraw_seller3164>, string)
assocAST: (inlinedCallArgs4074_account4076, <withdraw_seller3164>, string) => (credit-account_account3257, <withdraw_seller3164>, string)
assocAST: (inlinedCallArgs4074_amount4077, <withdraw_amount3165>, decimal) => (credit-account_amount3258, <credit-account_amount3258>, decimal)
assocAST: (inlinedCallArgs4074_amount4077, <withdraw_amount3165>, decimal) => (credit-account_amount3258, <withdraw_amount3165>, decimal)
assocTy: (<precision3425>, integer) <=> integer
assocTy: (<precision3425>, integer) <= integer
trackAST: (inlinedCallArgs4078, <inlinedCallArgs4078>)
assocTy: (<inlinedCallArgs4078>, <inlinedCallArgs4078>) <=> integer
assocTy: (<inlinedCallArgs4078>, <inlinedCallArgs4078>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4078> <= integer
trackAST: (inlinedCallArgs4078_id4079, string)
assocAST: (enforce-unit_id3416, <enforce-unit_id3416>, string) => (inlinedCallArgs4078_id4079, <inlinedCallArgs4078_id4079>, string)
assocAST: (inlinedCallArgs4078_id4079, <enforce-unit_id3416>, string) => (precision_id3420, <precision_id3420>, string)
assocTy: (<enforce-unit3431>, bool) <=> bool
assocTy: (<enforce-unit3431>, bool) <= bool
trackAST: (inlinedCallArgs4080, <inlinedCallArgs4080>)
assocTy: (<inlinedCallArgs4080>, <inlinedCallArgs4080>) <=> bool
assocTy: (<inlinedCallArgs4080>, <inlinedCallArgs4080>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4080> <= bool
trackAST: (inlinedCallArgs4080_id4081, string)
assocAST: (TRANSFER_id3412, <TRANSFER_id3412>, string) => (inlinedCallArgs4080_id4081, <inlinedCallArgs4080_id4081>, string)
trackAST: (inlinedCallArgs4080_amount4082, decimal)
assocAST: (TRANSFER_amount3415, <TRANSFER_amount3415>, decimal) => (inlinedCallArgs4080_amount4082, <inlinedCallArgs4080_amount4082>, decimal)
assocAST: (inlinedCallArgs4080_id4081, <TRANSFER_id3412>, string) => (enforce-unit_id3416, <enforce-unit_id3416>, string)
assocAST: (inlinedCallArgs4080_id4081, <TRANSFER_id3412>, string) => (enforce-unit_id3416, <TRANSFER_id3412>, string)
assocAST: (inlinedCallArgs4080_amount4082, <TRANSFER_amount3415>, decimal) => (enforce-unit_amount3417, <enforce-unit_amount3417>, decimal)
assocAST: (inlinedCallArgs4080_amount4082, <TRANSFER_amount3415>, decimal) => (enforce-unit_amount3417, <TRANSFER_amount3415>, decimal)
assocTy: (<key3450>, string) <=> string
assocTy: (<key3450>, string) <= string
trackAST: (inlinedCallArgs4083, <inlinedCallArgs4083>)
assocTy: (<inlinedCallArgs4083>, <inlinedCallArgs4083>) <=> string
assocTy: (<inlinedCallArgs4083>, <inlinedCallArgs4083>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4083> <= string
trackAST: (inlinedCallArgs4083_id4084, string)
assocAST: (account-guard_id3441, <account-guard_id3441>, string) => (inlinedCallArgs4083_id4084, <inlinedCallArgs4083_id4084>, string)
trackAST: (inlinedCallArgs4083_account4085, string)
assocAST: (account-guard_account3442, <account-guard_account3442>, string) => (inlinedCallArgs4083_account4085, <inlinedCallArgs4083_account4085>, string)
assocAST: (inlinedCallArgs4083_id4084, <account-guard_id3441>, string) => (key_id3445, <key_id3445>, string)
assocAST: (inlinedCallArgs4083_account4085, <account-guard_account3442>, string) => (key_account3446, <key_account3446>, string)
assocTy: (<account-guard3456>, guard) <=> guard
assocTy: (<account-guard3456>, guard) <= guard
trackAST: (inlinedCallArgs4086, <inlinedCallArgs4086>)
assocTy: (<inlinedCallArgs4086>, <inlinedCallArgs4086>) <=> guard
assocTy: (<inlinedCallArgs4086>, <inlinedCallArgs4086>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4086> <= guard
trackAST: (inlinedCallArgs4086_id4087, string)
assocAST: (DEBIT_id3438, <DEBIT_id3438>, string) => (inlinedCallArgs4086_id4087, <inlinedCallArgs4086_id4087>, string)
trackAST: (inlinedCallArgs4086_account4088, string)
assocAST: (DEBIT_sender3439, <DEBIT_sender3439>, string) => (inlinedCallArgs4086_account4088, <inlinedCallArgs4086_account4088>, string)
assocAST: (inlinedCallArgs4086_id4087, <DEBIT_id3438>, string) => (account-guard_id3441, <account-guard_id3441>, string)
assocAST: (inlinedCallArgs4086_id4087, <DEBIT_id3438>, string) => (account-guard_id3441, <DEBIT_id3438>, string)
assocAST: (inlinedCallArgs4086_account4088, <DEBIT_sender3439>, string) => (account-guard_account3442, <account-guard_account3442>, string)
assocAST: (inlinedCallArgs4086_account4088, <DEBIT_sender3439>, string) => (account-guard_account3442, <DEBIT_sender3439>, string)
assocTy: (<enforce-guard3440>, <enforce-guard3440>) <=> <DEBIT3459_e>
assocTy: (<enforce-guard3440>, <enforce-guard3440>) <= <DEBIT3459_e>
assocTy: tracking/updating type variable <enforce-guard3440> <= <DEBIT3459_e>
trackAST: (inlinedCallArgs4089, <inlinedCallArgs4089>)
assocTy: (<inlinedCallArgs4089>, <inlinedCallArgs4089>) <=> <DEBIT3459_e>
assocTy: (<inlinedCallArgs4089>, <inlinedCallArgs4089>) <= <DEBIT3459_e>
assocTy: tracking/updating type variable <inlinedCallArgs4089> <= <DEBIT3459_e>
trackAST: (inlinedCallArgs4089_id4090, string)
assocAST: (TRANSFER_id3412, <TRANSFER_id3412>, string) => (inlinedCallArgs4089_id4090, <inlinedCallArgs4089_id4090>, string)
trackAST: (inlinedCallArgs4089_sender4091, string)
assocAST: (TRANSFER_sender3413, <TRANSFER_sender3413>, string) => (inlinedCallArgs4089_sender4091, <inlinedCallArgs4089_sender4091>, string)
assocAST: (inlinedCallArgs4089_id4090, <TRANSFER_id3412>, string) => (DEBIT_id3438, <DEBIT_id3438>, string)
assocAST: (inlinedCallArgs4089_id4090, <TRANSFER_id3412>, string) => (DEBIT_id3438, <TRANSFER_id3412>, string)
assocAST: (inlinedCallArgs4089_sender4091, <TRANSFER_sender3413>, string) => (DEBIT_sender3439, <DEBIT_sender3439>, string)
assocAST: (inlinedCallArgs4089_sender4091, <TRANSFER_sender3413>, string) => (DEBIT_sender3439, <TRANSFER_sender3413>, string)
assocTy: (<bool3463>, bool) <=> <CREDIT3465_g>
assocTy: bool => <CREDIT3465_g>
trackAST: (inlinedCallArgs4092, <inlinedCallArgs4092>)
assocTy: (<inlinedCallArgs4092>, <inlinedCallArgs4092>) <=> <CREDIT3465_g>
assocTy: (<inlinedCallArgs4092>, <inlinedCallArgs4092>) <= <CREDIT3465_g>
assocTy: tracking/updating type variable <inlinedCallArgs4092> <= <CREDIT3465_g>
trackAST: (inlinedCallArgs4092_id4093, string)
assocAST: (TRANSFER_id3412, <TRANSFER_id3412>, string) => (inlinedCallArgs4092_id4093, <inlinedCallArgs4092_id4093>, string)
trackAST: (inlinedCallArgs4092_receiver4094, string)
assocAST: (TRANSFER_receiver3414, <TRANSFER_receiver3414>, string) => (inlinedCallArgs4092_receiver4094, <inlinedCallArgs4092_receiver4094>, string)
assocTy: (<sale-account3472>, string) <=> string
assocTy: (<sale-account3472>, string) <= string
trackAST: (inlinedCallArgs4095, <inlinedCallArgs4095>)
assocTy: (<inlinedCallArgs4095>, <inlinedCallArgs4095>) <=> string
assocTy: (<inlinedCallArgs4095>, <inlinedCallArgs4095>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4095> <= string
assocTy: (<TRANSFER3466>, bool) <=> bool
assocTy: (<TRANSFER3466>, bool) <= bool
trackAST: (inlinedCallArgs4096, <inlinedCallArgs4096>)
assocTy: (<inlinedCallArgs4096>, <inlinedCallArgs4096>) <=> bool
assocTy: (<inlinedCallArgs4096>, <inlinedCallArgs4096>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4096> <= bool
trackAST: (inlinedCallArgs4096_id4097, string)
assocAST: (withdraw_id3163, <withdraw_id3163>, string) => (inlinedCallArgs4096_id4097, <inlinedCallArgs4096_id4097>, string)
trackAST: (inlinedCallArgs4096_sender4098, string)
assocAST: (sale-account3473, <sale-account3472>, string) => (inlinedCallArgs4096_sender4098, <inlinedCallArgs4096_sender4098>, string)
trackAST: (inlinedCallArgs4096_receiver4099, string)
assocAST: (withdraw_seller3164, <withdraw_seller3164>, string) => (inlinedCallArgs4096_receiver4099, <inlinedCallArgs4096_receiver4099>, string)
trackAST: (inlinedCallArgs4096_amount4100, decimal)
assocAST: (withdraw_amount3165, <withdraw_amount3165>, decimal) => (inlinedCallArgs4096_amount4100, <inlinedCallArgs4096_amount4100>, decimal)
assocAST: (inlinedCallArgs4096_id4097, <withdraw_id3163>, string) => (TRANSFER_id3412, <TRANSFER_id3412>, string)
assocAST: (inlinedCallArgs4096_id4097, <withdraw_id3163>, string) => (TRANSFER_id3412, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4096_amount4100, <withdraw_amount3165>, decimal) => (TRANSFER_amount3415, <TRANSFER_amount3415>, decimal)
assocAST: (inlinedCallArgs4096_amount4100, <withdraw_amount3165>, decimal) => (TRANSFER_amount3415, <withdraw_amount3165>, decimal)
assocAST: (inlinedCallArgs4096_amount4100, <withdraw_amount3165>, decimal) => (TRANSFER_amount3415, <withdraw_amount3165>, decimal)
assocAST: (inlinedCallArgs4096_id4097, <withdraw_id3163>, string) => (TRANSFER_id3412, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4096_id4097, <withdraw_id3163>, string) => (TRANSFER_id3412, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4096_sender4098, <sale-account3472>, string) => (TRANSFER_sender3413, <TRANSFER_sender3413>, string)
assocAST: (inlinedCallArgs4096_sender4098, <sale-account3472>, string) => (TRANSFER_sender3413, <sale-account3472>, string)
assocAST: (inlinedCallArgs4096_id4097, <withdraw_id3163>, string) => (TRANSFER_id3412, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4096_id4097, <withdraw_id3163>, string) => (TRANSFER_id3412, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4096_receiver4099, <withdraw_seller3164>, string) => (TRANSFER_receiver3414, <TRANSFER_receiver3414>, string)
assocAST: (inlinedCallArgs4096_receiver4099, <withdraw_seller3164>, string) => (TRANSFER_receiver3414, <withdraw_seller3164>, string)
assocTy: (<bool3479>, bool) <=> bool
assocTy: (<bool3479>, bool) <= bool
trackAST: (inlinedCallArgs4101, <inlinedCallArgs4101>)
assocTy: (<inlinedCallArgs4101>, <inlinedCallArgs4101>) <=> bool
assocTy: (<inlinedCallArgs4101>, <inlinedCallArgs4101>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4101> <= bool
trackAST: (inlinedCallArgs4101_token-id4102, string)
assocAST: (withdraw_id3163, <withdraw_id3163>, string) => (inlinedCallArgs4101_token-id4102, <inlinedCallArgs4101_token-id4102>, string)
trackAST: (inlinedCallArgs4101_amount4103, decimal)
assocAST: (withdraw_amount3165, <withdraw_amount3165>, decimal) => (inlinedCallArgs4101_amount4103, <inlinedCallArgs4101_amount4103>, decimal)
trackAST: (inlinedCallArgs4101_sender4104, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet3172_sender3173, <debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs4101_sender4104, <inlinedCallArgs4101_sender4104>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs4101_receiver4105, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet3172_receiver3255, <credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs4101_receiver4105, <inlinedCallArgs4101_receiver4105>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<withdraw3482>, bool) <=> bool
assocTy: (<withdraw3482>, bool) <= bool
trackAST: (inlinedCallArgs4106, <inlinedCallArgs4106>)
assocTy: (<inlinedCallArgs4106>, <inlinedCallArgs4106>) <=> bool
assocTy: (<inlinedCallArgs4106>, <inlinedCallArgs4106>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4106> <= bool
trackAST: (inlinedCallArgs4106_id4107, string)
assocAST: (sale_id2696, <sale_id2696>, string) => (inlinedCallArgs4106_id4107, <inlinedCallArgs4106_id4107>, string)
trackAST: (inlinedCallArgs4106_seller4108, string)
assocAST: (sale_seller2697, <sale_seller2697>, string) => (inlinedCallArgs4106_seller4108, <inlinedCallArgs4106_seller4108>, string)
trackAST: (inlinedCallArgs4106_amount4109, decimal)
assocAST: (sale_amount2698, <sale_amount2698>, decimal) => (inlinedCallArgs4106_amount4109, <inlinedCallArgs4106_amount4109>, decimal)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <withdraw_id3163>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_id4107, <sale_id2696>, string) => (withdraw_id3163, <sale_id2696>, string)
assocAST: (inlinedCallArgs4106_seller4108, <sale_seller2697>, string) => (withdraw_seller3164, <withdraw_seller3164>, string)
assocAST: (inlinedCallArgs4106_seller4108, <sale_seller2697>, string) => (withdraw_seller3164, <sale_seller2697>, string)
assocAST: (inlinedCallArgs4106_seller4108, <sale_seller2697>, string) => (withdraw_seller3164, <sale_seller2697>, string)
assocAST: (inlinedCallArgs4106_seller4108, <sale_seller2697>, string) => (withdraw_seller3164, <sale_seller2697>, string)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <withdraw_amount3165>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4106_amount4109, <sale_amount2698>, decimal) => (withdraw_amount3165, <sale_amount2698>, decimal)
assocTy: (<sale-active3116>, bool) <=> bool
assocTy: (<sale-active3116>, bool) <= bool
trackAST: (inlinedCallArgs4110, <inlinedCallArgs4110>)
assocTy: (<inlinedCallArgs4110>, <inlinedCallArgs4110>) <=> bool
assocTy: (<inlinedCallArgs4110>, <inlinedCallArgs4110>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4110> <= bool
trackAST: (inlinedCallArgs4110_timeout4111, integer)
assocAST: (WITHDRAW_timeout3107, <WITHDRAW_timeout3107>, integer) => (inlinedCallArgs4110_timeout4111, <inlinedCallArgs4110_timeout4111>, integer)
assocAST: (inlinedCallArgs4110_timeout4111, <WITHDRAW_timeout3107>, integer) => (sale-active_timeout3111, <sale-active_timeout3111>, integer)
assocTy: (<key3132>, string) <=> string
assocTy: (<key3132>, string) <= string
trackAST: (inlinedCallArgs4112, <inlinedCallArgs4112>)
assocTy: (<inlinedCallArgs4112>, <inlinedCallArgs4112>) <=> string
assocTy: (<inlinedCallArgs4112>, <inlinedCallArgs4112>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4112> <= string
trackAST: (inlinedCallArgs4112_id4113, string)
assocAST: (account-guard_id3123, <account-guard_id3123>, string) => (inlinedCallArgs4112_id4113, <inlinedCallArgs4112_id4113>, string)
trackAST: (inlinedCallArgs4112_account4114, string)
assocAST: (account-guard_account3124, <account-guard_account3124>, string) => (inlinedCallArgs4112_account4114, <inlinedCallArgs4112_account4114>, string)
assocAST: (inlinedCallArgs4112_id4113, <account-guard_id3123>, string) => (key_id3127, <key_id3127>, string)
assocAST: (inlinedCallArgs4112_account4114, <account-guard_account3124>, string) => (key_account3128, <key_account3128>, string)
assocTy: (<account-guard3138>, guard) <=> guard
assocTy: (<account-guard3138>, guard) <= guard
trackAST: (inlinedCallArgs4115, <inlinedCallArgs4115>)
assocTy: (<inlinedCallArgs4115>, <inlinedCallArgs4115>) <=> guard
assocTy: (<inlinedCallArgs4115>, <inlinedCallArgs4115>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4115> <= guard
trackAST: (inlinedCallArgs4115_id4116, string)
assocAST: (DEBIT_id3120, <DEBIT_id3120>, string) => (inlinedCallArgs4115_id4116, <inlinedCallArgs4115_id4116>, string)
trackAST: (inlinedCallArgs4115_account4117, string)
assocAST: (DEBIT_sender3121, <DEBIT_sender3121>, string) => (inlinedCallArgs4115_account4117, <inlinedCallArgs4115_account4117>, string)
assocAST: (inlinedCallArgs4115_id4116, <DEBIT_id3120>, string) => (account-guard_id3123, <account-guard_id3123>, string)
assocAST: (inlinedCallArgs4115_id4116, <DEBIT_id3120>, string) => (account-guard_id3123, <DEBIT_id3120>, string)
assocAST: (inlinedCallArgs4115_account4117, <DEBIT_sender3121>, string) => (account-guard_account3124, <account-guard_account3124>, string)
assocAST: (inlinedCallArgs4115_account4117, <DEBIT_sender3121>, string) => (account-guard_account3124, <DEBIT_sender3121>, string)
assocTy: (<sale-account3146>, string) <=> string
assocTy: (<sale-account3146>, string) <= string
trackAST: (inlinedCallArgs4118, <inlinedCallArgs4118>)
assocTy: (<inlinedCallArgs4118>, <inlinedCallArgs4118>) <=> string
assocTy: (<inlinedCallArgs4118>, <inlinedCallArgs4118>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4118> <= string
assocTy: (<enforce-guard3122>, <enforce-guard3122>) <=> <DEBIT3141_e>
assocTy: (<enforce-guard3122>, <enforce-guard3122>) <= <DEBIT3141_e>
assocTy: tracking/updating type variable <enforce-guard3122> <= <DEBIT3141_e>
trackAST: (inlinedCallArgs4119, <inlinedCallArgs4119>)
assocTy: (<inlinedCallArgs4119>, <inlinedCallArgs4119>) <=> <DEBIT3141_e>
assocTy: (<inlinedCallArgs4119>, <inlinedCallArgs4119>) <= <DEBIT3141_e>
assocTy: tracking/updating type variable <inlinedCallArgs4119> <= <DEBIT3141_e>
trackAST: (inlinedCallArgs4119_id4120, string)
assocAST: (WITHDRAW_id3104, <WITHDRAW_id3104>, string) => (inlinedCallArgs4119_id4120, <inlinedCallArgs4119_id4120>, string)
trackAST: (inlinedCallArgs4119_sender4121, string)
assocAST: (sale-account3147, <sale-account3146>, string) => (inlinedCallArgs4119_sender4121, <inlinedCallArgs4119_sender4121>, string)
assocAST: (inlinedCallArgs4119_id4120, <WITHDRAW_id3104>, string) => (DEBIT_id3120, <DEBIT_id3120>, string)
assocAST: (inlinedCallArgs4119_id4120, <WITHDRAW_id3104>, string) => (DEBIT_id3120, <WITHDRAW_id3104>, string)
assocAST: (inlinedCallArgs4119_sender4121, <sale-account3146>, string) => (DEBIT_sender3121, <DEBIT_sender3121>, string)
assocAST: (inlinedCallArgs4119_sender4121, <sale-account3146>, string) => (DEBIT_sender3121, <sale-account3146>, string)
assocTy: (<bool3151>, bool) <=> <CREDIT3153_g>
assocTy: bool => <CREDIT3153_g>
trackAST: (inlinedCallArgs4122, <inlinedCallArgs4122>)
assocTy: (<inlinedCallArgs4122>, <inlinedCallArgs4122>) <=> <CREDIT3153_g>
assocTy: (<inlinedCallArgs4122>, <inlinedCallArgs4122>) <= <CREDIT3153_g>
assocTy: tracking/updating type variable <inlinedCallArgs4122> <= <CREDIT3153_g>
trackAST: (inlinedCallArgs4122_id4123, string)
assocAST: (WITHDRAW_id3104, <WITHDRAW_id3104>, string) => (inlinedCallArgs4122_id4123, <inlinedCallArgs4122_id4123>, string)
trackAST: (inlinedCallArgs4122_receiver4124, string)
assocAST: (WITHDRAW_seller3105, <WITHDRAW_seller3105>, string) => (inlinedCallArgs4122_receiver4124, <inlinedCallArgs4122_receiver4124>, string)
assocTy: (<bool3156>, bool) <=> bool
assocTy: (<bool3156>, bool) <= bool
trackAST: (inlinedCallArgs4125, <inlinedCallArgs4125>)
assocTy: (<inlinedCallArgs4125>, <inlinedCallArgs4125>) <=> bool
assocTy: (<inlinedCallArgs4125>, <inlinedCallArgs4125>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4125> <= bool
trackAST: (inlinedCallArgs4125_sale-id4126, string)
assocAST: (WITHDRAW_sale-id3108, <WITHDRAW_sale-id3108>, string) => (inlinedCallArgs4125_sale-id4126, <inlinedCallArgs4125_sale-id4126>, string)
assocTy: (<WITHDRAW3159>, bool) <=> bool
assocTy: (<WITHDRAW3159>, bool) <= bool
trackAST: (inlinedCallArgs4127, <inlinedCallArgs4127>)
assocTy: (<inlinedCallArgs4127>, <inlinedCallArgs4127>) <=> bool
assocTy: (<inlinedCallArgs4127>, <inlinedCallArgs4127>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4127> <= bool
trackAST: (inlinedCallArgs4127_id4128, string)
assocAST: (sale_id2696, <sale_id2696>, string) => (inlinedCallArgs4127_id4128, <inlinedCallArgs4127_id4128>, string)
trackAST: (inlinedCallArgs4127_seller4129, string)
assocAST: (sale_seller2697, <sale_seller2697>, string) => (inlinedCallArgs4127_seller4129, <inlinedCallArgs4127_seller4129>, string)
trackAST: (inlinedCallArgs4127_amount4130, decimal)
assocAST: (sale_amount2698, <sale_amount2698>, decimal) => (inlinedCallArgs4127_amount4130, <inlinedCallArgs4127_amount4130>, decimal)
trackAST: (inlinedCallArgs4127_timeout4131, integer)
assocAST: (sale_timeout2699, <sale_timeout2699>, integer) => (inlinedCallArgs4127_timeout4131, <inlinedCallArgs4127_timeout4131>, integer)
trackAST: (inlinedCallArgs4127_sale-id4132, string)
assocAST: (inlinedCallArgs4127_sale-id4132, <inlinedCallArgs4127_sale-id4132>, string) => (pact-id3161, <pact-id3161>, <pact-id3161>)
assocAST: (inlinedCallArgs4127_timeout4131, <sale_timeout2699>, integer) => (WITHDRAW_timeout3107, <WITHDRAW_timeout3107>, integer)
assocAST: (inlinedCallArgs4127_timeout4131, <sale_timeout2699>, integer) => (WITHDRAW_timeout3107, <sale_timeout2699>, integer)
assocAST: (inlinedCallArgs4127_id4128, <sale_id2696>, string) => (WITHDRAW_id3104, <WITHDRAW_id3104>, string)
assocAST: (inlinedCallArgs4127_id4128, <sale_id2696>, string) => (WITHDRAW_id3104, <sale_id2696>, string)
assocAST: (inlinedCallArgs4127_id4128, <sale_id2696>, string) => (WITHDRAW_id3104, <sale_id2696>, string)
assocAST: (inlinedCallArgs4127_id4128, <sale_id2696>, string) => (WITHDRAW_id3104, <sale_id2696>, string)
assocAST: (inlinedCallArgs4127_seller4129, <sale_seller2697>, string) => (WITHDRAW_seller3105, <WITHDRAW_seller3105>, string)
assocAST: (inlinedCallArgs4127_seller4129, <sale_seller2697>, string) => (WITHDRAW_seller3105, <sale_seller2697>, string)
assocAST: (inlinedCallArgs4127_sale-id4132, <inlinedCallArgs4127_sale-id4132>, string) => (WITHDRAW_sale-id3108, <WITHDRAW_sale-id3108>, string)
assocAST: (inlinedCallArgs4127_sale-id4132, <inlinedCallArgs4127_sale-id4132>, string) => (WITHDRAW_sale-id3108, <inlinedCallArgs4127_sale-id4132>, string)
assocTy: (<bool3560>, bool) <=> bool
assocTy: (<bool3560>, bool) <= bool
trackAST: (inlinedCallArgs4133, <inlinedCallArgs4133>)
assocTy: (<inlinedCallArgs4133>, <inlinedCallArgs4133>) <=> bool
assocTy: (<inlinedCallArgs4133>, <inlinedCallArgs4133>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4133> <= bool
trackAST: (inlinedCallArgs4133_sale-id4134, string)
assocAST: (inlinedCallArgs4133_sale-id4134, <inlinedCallArgs4133_sale-id4134>, string) => (pact-id3563, <pact-id3563>, <pact-id3563>)
assocTy: (<enforce-buy3592>, bool) <=> bool
assocTy: (<enforce-buy3592>, bool) <= bool
trackAST: (inlinedCallArgs4135, <inlinedCallArgs4135>)
assocTy: (<inlinedCallArgs4135>, <inlinedCallArgs4135>) <=> bool
assocTy: (<inlinedCallArgs4135>, <inlinedCallArgs4135>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4135> <= bool
trackAST: (inlinedCallArgs4135_token4136, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs4135_token4136, <inlinedCallArgs4135_token4136>, object:{kip.token-policy-v1.token-info}) => (BindSchema3582_token3585, <BindSchema3582_token3585_aq>, <BindSchema3582_token3585_aq>)
trackAST: (inlinedCallArgs4135_seller4137, string)
assocAST: (buy_seller3553, <buy_seller3553>, string) => (inlinedCallArgs4135_seller4137, <inlinedCallArgs4135_seller4137>, string)
trackAST: (inlinedCallArgs4135_buyer4138, string)
assocAST: (buy_buyer3554, <buy_buyer3554>, string) => (inlinedCallArgs4135_buyer4138, <inlinedCallArgs4135_buyer4138>, string)
trackAST: (inlinedCallArgs4135_amount4139, decimal)
assocAST: (buy_amount3556, <buy_amount3556>, decimal) => (inlinedCallArgs4135_amount4139, <inlinedCallArgs4135_amount4139>, decimal)
trackAST: (inlinedCallArgs4135_sale-id4140, string)
assocAST: (buy_sale-id3557, <buy_sale-id3557>, string) => (inlinedCallArgs4135_sale-id4140, <inlinedCallArgs4135_sale-id4140>, string)
assocTy: (<get-policy-info3580>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info3580>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs4141, <inlinedCallArgs4141>)
assocTy: (<inlinedCallArgs4141>, <inlinedCallArgs4141>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs4141>, <inlinedCallArgs4141>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs4141> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs4141_id4142, string)
assocAST: (buy_id3552, <buy_id3552>, string) => (inlinedCallArgs4141_id4142, <inlinedCallArgs4141_id4142>, string)
assocAST: (inlinedCallArgs4141_id4142, <buy_id3552>, string) => (get-policy-info_id3565, <get-policy-info_id3565>, string)
assocAST: (inlinedCallArgs4141_id4142, <buy_id3552>, string) => (get-policy-info_id3565, <buy_id3552>, string)
assocTy: (<key3613>, string) <=> string
assocTy: (<key3613>, string) <= string
trackAST: (inlinedCallArgs4143, <inlinedCallArgs4143>)
assocTy: (<inlinedCallArgs4143>, <inlinedCallArgs4143>) <=> string
assocTy: (<inlinedCallArgs4143>, <inlinedCallArgs4143>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4143> <= string
trackAST: (inlinedCallArgs4143_id4144, string)
assocAST: (account-guard_id3604, <account-guard_id3604>, string) => (inlinedCallArgs4143_id4144, <inlinedCallArgs4143_id4144>, string)
trackAST: (inlinedCallArgs4143_account4145, string)
assocAST: (account-guard_account3605, <account-guard_account3605>, string) => (inlinedCallArgs4143_account4145, <inlinedCallArgs4143_account4145>, string)
assocAST: (inlinedCallArgs4143_id4144, <account-guard_id3604>, string) => (key_id3608, <key_id3608>, string)
assocAST: (inlinedCallArgs4143_account4145, <account-guard_account3605>, string) => (key_account3609, <key_account3609>, string)
assocTy: (<account-guard3619>, guard) <=> guard
assocTy: (<account-guard3619>, guard) <= guard
trackAST: (inlinedCallArgs4146, <inlinedCallArgs4146>)
assocTy: (<inlinedCallArgs4146>, <inlinedCallArgs4146>) <=> guard
assocTy: (<inlinedCallArgs4146>, <inlinedCallArgs4146>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4146> <= guard
trackAST: (inlinedCallArgs4146_id4147, string)
assocAST: (DEBIT_id3601, <DEBIT_id3601>, string) => (inlinedCallArgs4146_id4147, <inlinedCallArgs4146_id4147>, string)
trackAST: (inlinedCallArgs4146_account4148, string)
assocAST: (DEBIT_sender3602, <DEBIT_sender3602>, string) => (inlinedCallArgs4146_account4148, <inlinedCallArgs4146_account4148>, string)
assocAST: (inlinedCallArgs4146_id4147, <DEBIT_id3601>, string) => (account-guard_id3604, <account-guard_id3604>, string)
assocAST: (inlinedCallArgs4146_id4147, <DEBIT_id3601>, string) => (account-guard_id3604, <DEBIT_id3601>, string)
assocAST: (inlinedCallArgs4146_account4148, <DEBIT_sender3602>, string) => (account-guard_account3605, <account-guard_account3605>, string)
assocAST: (inlinedCallArgs4146_account4148, <DEBIT_sender3602>, string) => (account-guard_account3605, <DEBIT_sender3602>, string)
assocTy: (<enforce-guard3603>, <enforce-guard3603>) <=> <DEBIT3622_e>
assocTy: (<enforce-guard3603>, <enforce-guard3603>) <= <DEBIT3622_e>
assocTy: tracking/updating type variable <enforce-guard3603> <= <DEBIT3622_e>
trackAST: (inlinedCallArgs4149, <inlinedCallArgs4149>)
assocTy: (<inlinedCallArgs4149>, <inlinedCallArgs4149>) <=> <DEBIT3622_e>
assocTy: (<inlinedCallArgs4149>, <inlinedCallArgs4149>) <= <DEBIT3622_e>
assocTy: tracking/updating type variable <inlinedCallArgs4149> <= <DEBIT3622_e>
trackAST: (inlinedCallArgs4149_id4150, string)
assocAST: (debit_id3597, <debit_id3597>, string) => (inlinedCallArgs4149_id4150, <inlinedCallArgs4149_id4150>, string)
trackAST: (inlinedCallArgs4149_sender4151, string)
assocAST: (debit_account3598, <debit_account3598>, string) => (inlinedCallArgs4149_sender4151, <inlinedCallArgs4149_sender4151>, string)
assocAST: (inlinedCallArgs4149_id4150, <debit_id3597>, string) => (DEBIT_id3601, <DEBIT_id3601>, string)
assocAST: (inlinedCallArgs4149_id4150, <debit_id3597>, string) => (DEBIT_id3601, <debit_id3597>, string)
assocAST: (inlinedCallArgs4149_sender4151, <debit_account3598>, string) => (DEBIT_sender3602, <DEBIT_sender3602>, string)
assocAST: (inlinedCallArgs4149_sender4151, <debit_account3598>, string) => (DEBIT_sender3602, <debit_account3598>, string)
assocTy: (<precision3632>, integer) <=> integer
assocTy: (<precision3632>, integer) <= integer
trackAST: (inlinedCallArgs4152, <inlinedCallArgs4152>)
assocTy: (<inlinedCallArgs4152>, <inlinedCallArgs4152>) <=> integer
assocTy: (<inlinedCallArgs4152>, <inlinedCallArgs4152>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4152> <= integer
trackAST: (inlinedCallArgs4152_id4153, string)
assocAST: (enforce-unit_id3623, <enforce-unit_id3623>, string) => (inlinedCallArgs4152_id4153, <inlinedCallArgs4152_id4153>, string)
assocAST: (inlinedCallArgs4152_id4153, <enforce-unit_id3623>, string) => (precision_id3627, <precision_id3627>, string)
assocTy: (<enforce-unit3638>, bool) <=> bool
assocTy: (<enforce-unit3638>, bool) <= bool
trackAST: (inlinedCallArgs4154, <inlinedCallArgs4154>)
assocTy: (<inlinedCallArgs4154>, <inlinedCallArgs4154>) <=> bool
assocTy: (<inlinedCallArgs4154>, <inlinedCallArgs4154>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4154> <= bool
trackAST: (inlinedCallArgs4154_id4155, string)
assocAST: (debit_id3597, <debit_id3597>, string) => (inlinedCallArgs4154_id4155, <inlinedCallArgs4154_id4155>, string)
trackAST: (inlinedCallArgs4154_amount4156, decimal)
assocAST: (debit_amount3599, <debit_amount3599>, decimal) => (inlinedCallArgs4154_amount4156, <inlinedCallArgs4154_amount4156>, decimal)
assocAST: (inlinedCallArgs4154_id4155, <debit_id3597>, string) => (enforce-unit_id3623, <enforce-unit_id3623>, string)
assocAST: (inlinedCallArgs4154_id4155, <debit_id3597>, string) => (enforce-unit_id3623, <debit_id3597>, string)
assocAST: (inlinedCallArgs4154_amount4156, <debit_amount3599>, decimal) => (enforce-unit_amount3624, <enforce-unit_amount3624>, decimal)
assocAST: (inlinedCallArgs4154_amount4156, <debit_amount3599>, decimal) => (enforce-unit_amount3624, <debit_amount3599>, decimal)
assocTy: (<key3665>, string) <=> string
assocTy: (<key3665>, string) <= string
trackAST: (inlinedCallArgs4157, <inlinedCallArgs4157>)
assocTy: (<inlinedCallArgs4157>, <inlinedCallArgs4157>) <=> string
assocTy: (<inlinedCallArgs4157>, <inlinedCallArgs4157>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4157> <= string
trackAST: (inlinedCallArgs4157_id4158, string)
assocAST: (debit_id3597, <debit_id3597>, string) => (inlinedCallArgs4157_id4158, <inlinedCallArgs4157_id4158>, string)
trackAST: (inlinedCallArgs4157_account4159, string)
assocAST: (debit_account3598, <debit_account3598>, string) => (inlinedCallArgs4157_account4159, <inlinedCallArgs4157_account4159>, string)
assocAST: (inlinedCallArgs4157_id4158, <debit_id3597>, string) => (key_id3660, <key_id3660>, string)
assocAST: (inlinedCallArgs4157_account4159, <debit_account3598>, string) => (key_account3661, <key_account3661>, string)
assocTy: (<key3647>, string) <=> string
assocTy: (<key3647>, string) <= string
trackAST: (inlinedCallArgs4160, <inlinedCallArgs4160>)
assocTy: (<inlinedCallArgs4160>, <inlinedCallArgs4160>) <=> string
assocTy: (<inlinedCallArgs4160>, <inlinedCallArgs4160>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4160> <= string
trackAST: (inlinedCallArgs4160_id4161, string)
assocAST: (debit_id3597, <debit_id3597>, string) => (inlinedCallArgs4160_id4161, <inlinedCallArgs4160_id4161>, string)
trackAST: (inlinedCallArgs4160_account4162, string)
assocAST: (debit_account3598, <debit_account3598>, string) => (inlinedCallArgs4160_account4162, <inlinedCallArgs4160_account4162>, string)
assocAST: (inlinedCallArgs4160_id4161, <debit_id3597>, string) => (key_id3642, <key_id3642>, string)
assocAST: (inlinedCallArgs4160_account4162, <debit_account3598>, string) => (key_account3643, <key_account3643>, string)
assocTy: (<sale-account3676>, string) <=> string
assocTy: (<sale-account3676>, string) <= string
trackAST: (inlinedCallArgs4163, <inlinedCallArgs4163>)
assocTy: (<inlinedCallArgs4163>, <inlinedCallArgs4163>) <=> string
assocTy: (<inlinedCallArgs4163>, <inlinedCallArgs4163>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4163> <= string
assocTy: (<debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs4164, <inlinedCallArgs4164>)
assocTy: (<inlinedCallArgs4164>, <inlinedCallArgs4164>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs4164>, <inlinedCallArgs4164>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4164> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs4164_id4165, string)
assocAST: (buy_id3552, <buy_id3552>, string) => (inlinedCallArgs4164_id4165, <inlinedCallArgs4164_id4165>, string)
trackAST: (inlinedCallArgs4164_account4166, string)
assocAST: (sale-account3677, <sale-account3676>, string) => (inlinedCallArgs4164_account4166, <inlinedCallArgs4164_account4166>, string)
trackAST: (inlinedCallArgs4164_amount4167, decimal)
assocAST: (buy_amount3556, <buy_amount3556>, decimal) => (inlinedCallArgs4164_amount4167, <inlinedCallArgs4164_amount4167>, decimal)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <debit_id3597>, string)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <debit_account3598>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <sale-account3676>, string)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_amount4167, <buy_amount3556>, decimal) => (debit_amount3599, <debit_amount3599>, decimal)
assocAST: (inlinedCallArgs4164_amount4167, <buy_amount3556>, decimal) => (debit_amount3599, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_id4165, <buy_id3552>, string) => (debit_id3597, <buy_id3552>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <sale-account3676>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <sale-account3676>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <sale-account3676>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <sale-account3676>, string)
assocAST: (inlinedCallArgs4164_account4166, <sale-account3676>, string) => (debit_account3598, <sale-account3676>, string)
assocAST: (inlinedCallArgs4164_amount4167, <buy_amount3556>, decimal) => (debit_amount3599, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4164_amount4167, <buy_amount3556>, decimal) => (debit_amount3599, <buy_amount3556>, decimal)
assocTy: (<enforce3684>, <enforce3684>) <=> <enforce-valid-account3690_c>
assocTy: (<enforce3684>, <enforce3684>) <= <enforce-valid-account3690_c>
assocTy: tracking/updating type variable <enforce3684> <= <enforce-valid-account3690_c>
trackAST: (inlinedCallArgs4168, <inlinedCallArgs4168>)
assocTy: (<inlinedCallArgs4168>, <inlinedCallArgs4168>) <=> <enforce-valid-account3690_c>
assocTy: (<inlinedCallArgs4168>, <inlinedCallArgs4168>) <= <enforce-valid-account3690_c>
assocTy: tracking/updating type variable <inlinedCallArgs4168> <= <enforce-valid-account3690_c>
trackAST: (inlinedCallArgs4168_account4169, string)
assocAST: (credit_account3680, <credit_account3680>, string) => (inlinedCallArgs4168_account4169, <inlinedCallArgs4168_account4169>, string)
assocAST: (inlinedCallArgs4168_account4169, <credit_account3680>, string) => (enforce-valid-account_account3683, <enforce-valid-account_account3683>, string)
assocTy: (<precision3700>, integer) <=> integer
assocTy: (<precision3700>, integer) <= integer
trackAST: (inlinedCallArgs4170, <inlinedCallArgs4170>)
assocTy: (<inlinedCallArgs4170>, <inlinedCallArgs4170>) <=> integer
assocTy: (<inlinedCallArgs4170>, <inlinedCallArgs4170>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4170> <= integer
trackAST: (inlinedCallArgs4170_id4171, string)
assocAST: (enforce-unit_id3691, <enforce-unit_id3691>, string) => (inlinedCallArgs4170_id4171, <inlinedCallArgs4170_id4171>, string)
assocAST: (inlinedCallArgs4170_id4171, <enforce-unit_id3691>, string) => (precision_id3695, <precision_id3695>, string)
assocTy: (<enforce-unit3706>, bool) <=> bool
assocTy: (<enforce-unit3706>, bool) <= bool
trackAST: (inlinedCallArgs4172, <inlinedCallArgs4172>)
assocTy: (<inlinedCallArgs4172>, <inlinedCallArgs4172>) <=> bool
assocTy: (<inlinedCallArgs4172>, <inlinedCallArgs4172>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4172> <= bool
trackAST: (inlinedCallArgs4172_id4173, string)
assocAST: (credit_id3679, <credit_id3679>, string) => (inlinedCallArgs4172_id4173, <inlinedCallArgs4172_id4173>, string)
trackAST: (inlinedCallArgs4172_amount4174, decimal)
assocAST: (credit_amount3682, <credit_amount3682>, decimal) => (inlinedCallArgs4172_amount4174, <inlinedCallArgs4172_amount4174>, decimal)
assocAST: (inlinedCallArgs4172_id4173, <credit_id3679>, string) => (enforce-unit_id3691, <enforce-unit_id3691>, string)
assocAST: (inlinedCallArgs4172_id4173, <credit_id3679>, string) => (enforce-unit_id3691, <credit_id3679>, string)
assocAST: (inlinedCallArgs4172_amount4174, <credit_amount3682>, decimal) => (enforce-unit_amount3692, <enforce-unit_amount3692>, decimal)
assocAST: (inlinedCallArgs4172_amount4174, <credit_amount3682>, decimal) => (enforce-unit_amount3692, <credit_amount3682>, decimal)
assocTy: (<bool3711>, bool) <=> <CREDIT3713_g>
assocTy: bool => <CREDIT3713_g>
trackAST: (inlinedCallArgs4175, <inlinedCallArgs4175>)
assocTy: (<inlinedCallArgs4175>, <inlinedCallArgs4175>) <=> <CREDIT3713_g>
assocTy: (<inlinedCallArgs4175>, <inlinedCallArgs4175>) <= <CREDIT3713_g>
assocTy: tracking/updating type variable <inlinedCallArgs4175> <= <CREDIT3713_g>
trackAST: (inlinedCallArgs4175_id4176, string)
assocAST: (credit_id3679, <credit_id3679>, string) => (inlinedCallArgs4175_id4176, <inlinedCallArgs4175_id4176>, string)
trackAST: (inlinedCallArgs4175_receiver4177, string)
assocAST: (credit_account3680, <credit_account3680>, string) => (inlinedCallArgs4175_receiver4177, <inlinedCallArgs4175_receiver4177>, string)
assocTy: (<check-reserved3755>, string) <=> string
assocTy: (<check-reserved3755>, string) <= string
trackAST: (inlinedCallArgs4178, <inlinedCallArgs4178>)
assocTy: (<inlinedCallArgs4178>, <inlinedCallArgs4178>) <=> string
assocTy: (<inlinedCallArgs4178>, <inlinedCallArgs4178>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4178> <= string
trackAST: (inlinedCallArgs4178_account4179, string)
assocAST: (enforce-reserved_account3738, <enforce-reserved_account3738>, string) => (inlinedCallArgs4178_account4179, <inlinedCallArgs4178_account4179>, string)
assocAST: (inlinedCallArgs4178_account4179, <enforce-reserved_account3738>, string) => (check-reserved_account3742, <check-reserved_account3742>, string)
assocTy: (<enforce-reserved3780>, bool) <=> bool
assocTy: (<enforce-reserved3780>, bool) <= bool
trackAST: (inlinedCallArgs4180, <inlinedCallArgs4180>)
assocTy: (<inlinedCallArgs4180>, <inlinedCallArgs4180>) <=> bool
assocTy: (<inlinedCallArgs4180>, <inlinedCallArgs4180>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4180> <= bool
trackAST: (inlinedCallArgs4180_account4181, string)
assocAST: (credit_account3680, <credit_account3680>, string) => (inlinedCallArgs4180_account4181, <inlinedCallArgs4180_account4181>, string)
trackAST: (inlinedCallArgs4180_guard4182, guard)
assocAST: (credit_guard3681, <credit_guard3681>, guard) => (inlinedCallArgs4180_guard4182, <inlinedCallArgs4180_guard4182>, guard)
assocAST: (inlinedCallArgs4180_account4181, <credit_account3680>, string) => (enforce-reserved_account3738, <enforce-reserved_account3738>, string)
assocAST: (inlinedCallArgs4180_account4181, <credit_account3680>, string) => (enforce-reserved_account3738, <credit_account3680>, string)
assocAST: (inlinedCallArgs4180_account4181, <credit_account3680>, string) => (enforce-reserved_account3738, <credit_account3680>, string)
assocAST: (inlinedCallArgs4180_guard4182, <credit_guard3681>, guard) => (enforce-reserved_guard3739, <enforce-reserved_guard3739>, guard)
assocTy: (<key3794>, string) <=> string
assocTy: (<key3794>, string) <= string
trackAST: (inlinedCallArgs4183, <inlinedCallArgs4183>)
assocTy: (<inlinedCallArgs4183>, <inlinedCallArgs4183>) <=> string
assocTy: (<inlinedCallArgs4183>, <inlinedCallArgs4183>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4183> <= string
trackAST: (inlinedCallArgs4183_id4184, string)
assocAST: (credit_id3679, <credit_id3679>, string) => (inlinedCallArgs4183_id4184, <inlinedCallArgs4183_id4184>, string)
trackAST: (inlinedCallArgs4183_account4185, string)
assocAST: (credit_account3680, <credit_account3680>, string) => (inlinedCallArgs4183_account4185, <inlinedCallArgs4183_account4185>, string)
assocAST: (inlinedCallArgs4183_id4184, <credit_id3679>, string) => (key_id3789, <key_id3789>, string)
assocAST: (inlinedCallArgs4183_account4185, <credit_account3680>, string) => (key_account3790, <key_account3790>, string)
assocTy: (<bool3802>, bool) <=> bool
assocTy: (<bool3802>, bool) <= bool
trackAST: (inlinedCallArgs4186, <inlinedCallArgs4186>)
assocTy: (<inlinedCallArgs4186>, <inlinedCallArgs4186>) <=> bool
assocTy: (<inlinedCallArgs4186>, <inlinedCallArgs4186>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4186> <= bool
trackAST: (inlinedCallArgs4186_id4187, string)
assocAST: (credit_id3679, <credit_id3679>, string) => (inlinedCallArgs4186_id4187, <inlinedCallArgs4186_id4187>, string)
trackAST: (inlinedCallArgs4186_account4188, string)
assocAST: (credit_account3680, <credit_account3680>, string) => (inlinedCallArgs4186_account4188, <inlinedCallArgs4186_account4188>, string)
trackAST: (inlinedCallArgs4186_guard4189, guard)
assocAST: (inlinedCallArgs4186_guard4189, <inlinedCallArgs4186_guard4189>, guard) => (BindSchema3725_retg3728, <BindSchema3725_retg3728_ad>, <BindSchema3725_retg3728_ad>)
assocTy: (<key3721>, string) <=> string
assocTy: (<key3721>, string) <= string
trackAST: (inlinedCallArgs4190, <inlinedCallArgs4190>)
assocTy: (<inlinedCallArgs4190>, <inlinedCallArgs4190>) <=> string
assocTy: (<inlinedCallArgs4190>, <inlinedCallArgs4190>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4190> <= string
trackAST: (inlinedCallArgs4190_id4191, string)
assocAST: (credit_id3679, <credit_id3679>, string) => (inlinedCallArgs4190_id4191, <inlinedCallArgs4190_id4191>, string)
trackAST: (inlinedCallArgs4190_account4192, string)
assocAST: (credit_account3680, <credit_account3680>, string) => (inlinedCallArgs4190_account4192, <inlinedCallArgs4190_account4192>, string)
assocAST: (inlinedCallArgs4190_id4191, <credit_id3679>, string) => (key_id3716, <key_id3716>, string)
assocAST: (inlinedCallArgs4190_account4192, <credit_account3680>, string) => (key_account3717, <key_account3717>, string)
assocTy: (<credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4193, <inlinedCallArgs4193>)
assocTy: (<inlinedCallArgs4193>, <inlinedCallArgs4193>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs4193>, <inlinedCallArgs4193>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4193> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4193_id4194, string)
assocAST: (buy_id3552, <buy_id3552>, string) => (inlinedCallArgs4193_id4194, <inlinedCallArgs4193_id4194>, string)
trackAST: (inlinedCallArgs4193_account4195, string)
assocAST: (buy_buyer3554, <buy_buyer3554>, string) => (inlinedCallArgs4193_account4195, <inlinedCallArgs4193_account4195>, string)
trackAST: (inlinedCallArgs4193_guard4196, guard)
assocAST: (buy_buyer-guard3555, <buy_buyer-guard3555>, guard) => (inlinedCallArgs4193_guard4196, <inlinedCallArgs4193_guard4196>, guard)
trackAST: (inlinedCallArgs4193_amount4197, decimal)
assocAST: (buy_amount3556, <buy_amount3556>, decimal) => (inlinedCallArgs4193_amount4197, <inlinedCallArgs4193_amount4197>, decimal)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <credit_account3680>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <credit_id3679>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_amount4197, <buy_amount3556>, decimal) => (credit_amount3682, <credit_amount3682>, decimal)
assocAST: (inlinedCallArgs4193_amount4197, <buy_amount3556>, decimal) => (credit_amount3682, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_id4194, <buy_id3552>, string) => (credit_id3679, <buy_id3552>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_account4195, <buy_buyer3554>, string) => (credit_account3680, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4193_guard4196, <buy_buyer-guard3555>, guard) => (credit_guard3681, <credit_guard3681>, guard)
assocAST: (inlinedCallArgs4193_guard4196, <buy_buyer-guard3555>, guard) => (credit_guard3681, <buy_buyer-guard3555>, guard)
assocAST: (inlinedCallArgs4193_guard4196, <buy_buyer-guard3555>, guard) => (credit_guard3681, <buy_buyer-guard3555>, guard)
assocAST: (inlinedCallArgs4193_guard4196, <buy_buyer-guard3555>, guard) => (credit_guard3681, <buy_buyer-guard3555>, guard)
assocAST: (inlinedCallArgs4193_amount4197, <buy_amount3556>, decimal) => (credit_amount3682, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4193_amount4197, <buy_amount3556>, decimal) => (credit_amount3682, <buy_amount3556>, decimal)
assocTy: (<precision3826>, integer) <=> integer
assocTy: (<precision3826>, integer) <= integer
trackAST: (inlinedCallArgs4198, <inlinedCallArgs4198>)
assocTy: (<inlinedCallArgs4198>, <inlinedCallArgs4198>) <=> integer
assocTy: (<inlinedCallArgs4198>, <inlinedCallArgs4198>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4198> <= integer
trackAST: (inlinedCallArgs4198_id4199, string)
assocAST: (enforce-unit_id3817, <enforce-unit_id3817>, string) => (inlinedCallArgs4198_id4199, <inlinedCallArgs4198_id4199>, string)
assocAST: (inlinedCallArgs4198_id4199, <enforce-unit_id3817>, string) => (precision_id3821, <precision_id3821>, string)
assocTy: (<enforce-unit3832>, bool) <=> bool
assocTy: (<enforce-unit3832>, bool) <= bool
trackAST: (inlinedCallArgs4200, <inlinedCallArgs4200>)
assocTy: (<inlinedCallArgs4200>, <inlinedCallArgs4200>) <=> bool
assocTy: (<inlinedCallArgs4200>, <inlinedCallArgs4200>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4200> <= bool
trackAST: (inlinedCallArgs4200_id4201, string)
assocAST: (TRANSFER_id3813, <TRANSFER_id3813>, string) => (inlinedCallArgs4200_id4201, <inlinedCallArgs4200_id4201>, string)
trackAST: (inlinedCallArgs4200_amount4202, decimal)
assocAST: (TRANSFER_amount3816, <TRANSFER_amount3816>, decimal) => (inlinedCallArgs4200_amount4202, <inlinedCallArgs4200_amount4202>, decimal)
assocAST: (inlinedCallArgs4200_id4201, <TRANSFER_id3813>, string) => (enforce-unit_id3817, <enforce-unit_id3817>, string)
assocAST: (inlinedCallArgs4200_id4201, <TRANSFER_id3813>, string) => (enforce-unit_id3817, <TRANSFER_id3813>, string)
assocAST: (inlinedCallArgs4200_amount4202, <TRANSFER_amount3816>, decimal) => (enforce-unit_amount3818, <enforce-unit_amount3818>, decimal)
assocAST: (inlinedCallArgs4200_amount4202, <TRANSFER_amount3816>, decimal) => (enforce-unit_amount3818, <TRANSFER_amount3816>, decimal)
assocTy: (<key3851>, string) <=> string
assocTy: (<key3851>, string) <= string
trackAST: (inlinedCallArgs4203, <inlinedCallArgs4203>)
assocTy: (<inlinedCallArgs4203>, <inlinedCallArgs4203>) <=> string
assocTy: (<inlinedCallArgs4203>, <inlinedCallArgs4203>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4203> <= string
trackAST: (inlinedCallArgs4203_id4204, string)
assocAST: (account-guard_id3842, <account-guard_id3842>, string) => (inlinedCallArgs4203_id4204, <inlinedCallArgs4203_id4204>, string)
trackAST: (inlinedCallArgs4203_account4205, string)
assocAST: (account-guard_account3843, <account-guard_account3843>, string) => (inlinedCallArgs4203_account4205, <inlinedCallArgs4203_account4205>, string)
assocAST: (inlinedCallArgs4203_id4204, <account-guard_id3842>, string) => (key_id3846, <key_id3846>, string)
assocAST: (inlinedCallArgs4203_account4205, <account-guard_account3843>, string) => (key_account3847, <key_account3847>, string)
assocTy: (<account-guard3857>, guard) <=> guard
assocTy: (<account-guard3857>, guard) <= guard
trackAST: (inlinedCallArgs4206, <inlinedCallArgs4206>)
assocTy: (<inlinedCallArgs4206>, <inlinedCallArgs4206>) <=> guard
assocTy: (<inlinedCallArgs4206>, <inlinedCallArgs4206>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4206> <= guard
trackAST: (inlinedCallArgs4206_id4207, string)
assocAST: (DEBIT_id3839, <DEBIT_id3839>, string) => (inlinedCallArgs4206_id4207, <inlinedCallArgs4206_id4207>, string)
trackAST: (inlinedCallArgs4206_account4208, string)
assocAST: (DEBIT_sender3840, <DEBIT_sender3840>, string) => (inlinedCallArgs4206_account4208, <inlinedCallArgs4206_account4208>, string)
assocAST: (inlinedCallArgs4206_id4207, <DEBIT_id3839>, string) => (account-guard_id3842, <account-guard_id3842>, string)
assocAST: (inlinedCallArgs4206_id4207, <DEBIT_id3839>, string) => (account-guard_id3842, <DEBIT_id3839>, string)
assocAST: (inlinedCallArgs4206_account4208, <DEBIT_sender3840>, string) => (account-guard_account3843, <account-guard_account3843>, string)
assocAST: (inlinedCallArgs4206_account4208, <DEBIT_sender3840>, string) => (account-guard_account3843, <DEBIT_sender3840>, string)
assocTy: (<enforce-guard3841>, <enforce-guard3841>) <=> <DEBIT3860_e>
assocTy: (<enforce-guard3841>, <enforce-guard3841>) <= <DEBIT3860_e>
assocTy: tracking/updating type variable <enforce-guard3841> <= <DEBIT3860_e>
trackAST: (inlinedCallArgs4209, <inlinedCallArgs4209>)
assocTy: (<inlinedCallArgs4209>, <inlinedCallArgs4209>) <=> <DEBIT3860_e>
assocTy: (<inlinedCallArgs4209>, <inlinedCallArgs4209>) <= <DEBIT3860_e>
assocTy: tracking/updating type variable <inlinedCallArgs4209> <= <DEBIT3860_e>
trackAST: (inlinedCallArgs4209_id4210, string)
assocAST: (TRANSFER_id3813, <TRANSFER_id3813>, string) => (inlinedCallArgs4209_id4210, <inlinedCallArgs4209_id4210>, string)
trackAST: (inlinedCallArgs4209_sender4211, string)
assocAST: (TRANSFER_sender3814, <TRANSFER_sender3814>, string) => (inlinedCallArgs4209_sender4211, <inlinedCallArgs4209_sender4211>, string)
assocAST: (inlinedCallArgs4209_id4210, <TRANSFER_id3813>, string) => (DEBIT_id3839, <DEBIT_id3839>, string)
assocAST: (inlinedCallArgs4209_id4210, <TRANSFER_id3813>, string) => (DEBIT_id3839, <TRANSFER_id3813>, string)
assocAST: (inlinedCallArgs4209_sender4211, <TRANSFER_sender3814>, string) => (DEBIT_sender3840, <DEBIT_sender3840>, string)
assocAST: (inlinedCallArgs4209_sender4211, <TRANSFER_sender3814>, string) => (DEBIT_sender3840, <TRANSFER_sender3814>, string)
assocTy: (<bool3864>, bool) <=> <CREDIT3866_g>
assocTy: bool => <CREDIT3866_g>
trackAST: (inlinedCallArgs4212, <inlinedCallArgs4212>)
assocTy: (<inlinedCallArgs4212>, <inlinedCallArgs4212>) <=> <CREDIT3866_g>
assocTy: (<inlinedCallArgs4212>, <inlinedCallArgs4212>) <= <CREDIT3866_g>
assocTy: tracking/updating type variable <inlinedCallArgs4212> <= <CREDIT3866_g>
trackAST: (inlinedCallArgs4212_id4213, string)
assocAST: (TRANSFER_id3813, <TRANSFER_id3813>, string) => (inlinedCallArgs4212_id4213, <inlinedCallArgs4212_id4213>, string)
trackAST: (inlinedCallArgs4212_receiver4214, string)
assocAST: (TRANSFER_receiver3815, <TRANSFER_receiver3815>, string) => (inlinedCallArgs4212_receiver4214, <inlinedCallArgs4212_receiver4214>, string)
assocTy: (<sale-account3873>, string) <=> string
assocTy: (<sale-account3873>, string) <= string
trackAST: (inlinedCallArgs4215, <inlinedCallArgs4215>)
assocTy: (<inlinedCallArgs4215>, <inlinedCallArgs4215>) <=> string
assocTy: (<inlinedCallArgs4215>, <inlinedCallArgs4215>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4215> <= string
assocTy: (<TRANSFER3867>, bool) <=> bool
assocTy: (<TRANSFER3867>, bool) <= bool
trackAST: (inlinedCallArgs4216, <inlinedCallArgs4216>)
assocTy: (<inlinedCallArgs4216>, <inlinedCallArgs4216>) <=> bool
assocTy: (<inlinedCallArgs4216>, <inlinedCallArgs4216>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4216> <= bool
trackAST: (inlinedCallArgs4216_id4217, string)
assocAST: (buy_id3552, <buy_id3552>, string) => (inlinedCallArgs4216_id4217, <inlinedCallArgs4216_id4217>, string)
trackAST: (inlinedCallArgs4216_sender4218, string)
assocAST: (sale-account3874, <sale-account3873>, string) => (inlinedCallArgs4216_sender4218, <inlinedCallArgs4216_sender4218>, string)
trackAST: (inlinedCallArgs4216_receiver4219, string)
assocAST: (buy_buyer3554, <buy_buyer3554>, string) => (inlinedCallArgs4216_receiver4219, <inlinedCallArgs4216_receiver4219>, string)
trackAST: (inlinedCallArgs4216_amount4220, decimal)
assocAST: (buy_amount3556, <buy_amount3556>, decimal) => (inlinedCallArgs4216_amount4220, <inlinedCallArgs4216_amount4220>, decimal)
assocAST: (inlinedCallArgs4216_id4217, <buy_id3552>, string) => (TRANSFER_id3813, <TRANSFER_id3813>, string)
assocAST: (inlinedCallArgs4216_id4217, <buy_id3552>, string) => (TRANSFER_id3813, <buy_id3552>, string)
assocAST: (inlinedCallArgs4216_amount4220, <buy_amount3556>, decimal) => (TRANSFER_amount3816, <TRANSFER_amount3816>, decimal)
assocAST: (inlinedCallArgs4216_amount4220, <buy_amount3556>, decimal) => (TRANSFER_amount3816, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4216_amount4220, <buy_amount3556>, decimal) => (TRANSFER_amount3816, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4216_id4217, <buy_id3552>, string) => (TRANSFER_id3813, <buy_id3552>, string)
assocAST: (inlinedCallArgs4216_id4217, <buy_id3552>, string) => (TRANSFER_id3813, <buy_id3552>, string)
assocAST: (inlinedCallArgs4216_sender4218, <sale-account3873>, string) => (TRANSFER_sender3814, <TRANSFER_sender3814>, string)
assocAST: (inlinedCallArgs4216_sender4218, <sale-account3873>, string) => (TRANSFER_sender3814, <sale-account3873>, string)
assocAST: (inlinedCallArgs4216_id4217, <buy_id3552>, string) => (TRANSFER_id3813, <buy_id3552>, string)
assocAST: (inlinedCallArgs4216_id4217, <buy_id3552>, string) => (TRANSFER_id3813, <buy_id3552>, string)
assocAST: (inlinedCallArgs4216_receiver4219, <buy_buyer3554>, string) => (TRANSFER_receiver3815, <TRANSFER_receiver3815>, string)
assocAST: (inlinedCallArgs4216_receiver4219, <buy_buyer3554>, string) => (TRANSFER_receiver3815, <buy_buyer3554>, string)
assocTy: (<bool3880>, bool) <=> bool
assocTy: (<bool3880>, bool) <= bool
trackAST: (inlinedCallArgs4221, <inlinedCallArgs4221>)
assocTy: (<inlinedCallArgs4221>, <inlinedCallArgs4221>) <=> bool
assocTy: (<inlinedCallArgs4221>, <inlinedCallArgs4221>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4221> <= bool
trackAST: (inlinedCallArgs4221_token-id4222, string)
assocAST: (buy_id3552, <buy_id3552>, string) => (inlinedCallArgs4221_token-id4222, <inlinedCallArgs4221_token-id4222>, string)
trackAST: (inlinedCallArgs4221_amount4223, decimal)
assocAST: (buy_amount3556, <buy_amount3556>, decimal) => (inlinedCallArgs4221_amount4223, <inlinedCallArgs4221_amount4223>, decimal)
trackAST: (inlinedCallArgs4221_sender4224, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet3595_sender3596, <debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs4221_sender4224, <inlinedCallArgs4221_sender4224>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs4221_receiver4225, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet3595_receiver3678, <credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs4221_receiver4225, <inlinedCallArgs4221_receiver4225>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<buy3883>, bool) <=> bool
assocTy: (<buy3883>, bool) <= bool
trackAST: (inlinedCallArgs4226, <inlinedCallArgs4226>)
assocTy: (<inlinedCallArgs4226>, <inlinedCallArgs4226>) <=> bool
assocTy: (<inlinedCallArgs4226>, <inlinedCallArgs4226>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4226> <= bool
trackAST: (inlinedCallArgs4226_id4227, string)
assocAST: (sale_id2696, <sale_id2696>, string) => (inlinedCallArgs4226_id4227, <inlinedCallArgs4226_id4227>, string)
trackAST: (inlinedCallArgs4226_seller4228, string)
assocAST: (sale_seller2697, <sale_seller2697>, string) => (inlinedCallArgs4226_seller4228, <inlinedCallArgs4226_seller4228>, string)
trackAST: (inlinedCallArgs4226_buyer4229, string)
assocAST: (BindLet3485_buyer3486, <BindLet3485_buyer3486>, string) => (inlinedCallArgs4226_buyer4229, <inlinedCallArgs4226_buyer4229>, string)
trackAST: (inlinedCallArgs4226_buyer-guard4230, guard)
assocAST: (BindLet3485_buyer-guard3489, <BindLet3485_buyer-guard3489>, guard) => (inlinedCallArgs4226_buyer-guard4230, <inlinedCallArgs4226_buyer-guard4230>, guard)
trackAST: (inlinedCallArgs4226_amount4231, decimal)
assocAST: (sale_amount2698, <sale_amount2698>, decimal) => (inlinedCallArgs4226_amount4231, <inlinedCallArgs4226_amount4231>, decimal)
trackAST: (inlinedCallArgs4226_sale-id4232, string)
assocAST: (inlinedCallArgs4226_sale-id4232, <inlinedCallArgs4226_sale-id4232>, string) => (pact-id3885, <pact-id3885>, <pact-id3885>)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <buy_id3552>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_seller4228, <sale_seller2697>, string) => (buy_seller3553, <buy_seller3553>, string)
assocAST: (inlinedCallArgs4226_seller4228, <sale_seller2697>, string) => (buy_seller3553, <sale_seller2697>, string)
assocAST: (inlinedCallArgs4226_buyer4229, <BindLet3485_buyer3486>, string) => (buy_buyer3554, <buy_buyer3554>, string)
assocAST: (inlinedCallArgs4226_buyer4229, <BindLet3485_buyer3486>, string) => (buy_buyer3554, <BindLet3485_buyer3486>, string)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <buy_amount3556>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_sale-id4232, <inlinedCallArgs4226_sale-id4232>, string) => (buy_sale-id3557, <buy_sale-id3557>, string)
assocAST: (inlinedCallArgs4226_sale-id4232, <inlinedCallArgs4226_sale-id4232>, string) => (buy_sale-id3557, <inlinedCallArgs4226_sale-id4232>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_id4227, <sale_id2696>, string) => (buy_id3552, <sale_id2696>, string)
assocAST: (inlinedCallArgs4226_buyer4229, <BindLet3485_buyer3486>, string) => (buy_buyer3554, <BindLet3485_buyer3486>, string)
assocAST: (inlinedCallArgs4226_buyer4229, <BindLet3485_buyer3486>, string) => (buy_buyer3554, <BindLet3485_buyer3486>, string)
assocAST: (inlinedCallArgs4226_buyer4229, <BindLet3485_buyer3486>, string) => (buy_buyer3554, <BindLet3485_buyer3486>, string)
assocAST: (inlinedCallArgs4226_buyer4229, <BindLet3485_buyer3486>, string) => (buy_buyer3554, <BindLet3485_buyer3486>, string)
assocAST: (inlinedCallArgs4226_buyer-guard4230, <BindLet3485_buyer-guard3489>, guard) => (buy_buyer-guard3555, <buy_buyer-guard3555>, guard)
assocAST: (inlinedCallArgs4226_buyer-guard4230, <BindLet3485_buyer-guard3489>, guard) => (buy_buyer-guard3555, <BindLet3485_buyer-guard3489>, guard)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocAST: (inlinedCallArgs4226_amount4231, <sale_amount2698>, decimal) => (buy_amount3556, <sale_amount2698>, decimal)
assocTy: (<sale-active3505>, bool) <=> bool
assocTy: (<sale-active3505>, bool) <= bool
trackAST: (inlinedCallArgs4233, <inlinedCallArgs4233>)
assocTy: (<inlinedCallArgs4233>, <inlinedCallArgs4233>) <=> bool
assocTy: (<inlinedCallArgs4233>, <inlinedCallArgs4233>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4233> <= bool
trackAST: (inlinedCallArgs4233_timeout4234, integer)
assocAST: (BUY_timeout3497, <BUY_timeout3497>, integer) => (inlinedCallArgs4233_timeout4234, <inlinedCallArgs4233_timeout4234>, integer)
assocAST: (inlinedCallArgs4233_timeout4234, <BUY_timeout3497>, integer) => (sale-active_timeout3500, <sale-active_timeout3500>, integer)
assocTy: (<key3521>, string) <=> string
assocTy: (<key3521>, string) <= string
trackAST: (inlinedCallArgs4235, <inlinedCallArgs4235>)
assocTy: (<inlinedCallArgs4235>, <inlinedCallArgs4235>) <=> string
assocTy: (<inlinedCallArgs4235>, <inlinedCallArgs4235>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4235> <= string
trackAST: (inlinedCallArgs4235_id4236, string)
assocAST: (account-guard_id3512, <account-guard_id3512>, string) => (inlinedCallArgs4235_id4236, <inlinedCallArgs4235_id4236>, string)
trackAST: (inlinedCallArgs4235_account4237, string)
assocAST: (account-guard_account3513, <account-guard_account3513>, string) => (inlinedCallArgs4235_account4237, <inlinedCallArgs4235_account4237>, string)
assocAST: (inlinedCallArgs4235_id4236, <account-guard_id3512>, string) => (key_id3516, <key_id3516>, string)
assocAST: (inlinedCallArgs4235_account4237, <account-guard_account3513>, string) => (key_account3517, <key_account3517>, string)
assocTy: (<account-guard3527>, guard) <=> guard
assocTy: (<account-guard3527>, guard) <= guard
trackAST: (inlinedCallArgs4238, <inlinedCallArgs4238>)
assocTy: (<inlinedCallArgs4238>, <inlinedCallArgs4238>) <=> guard
assocTy: (<inlinedCallArgs4238>, <inlinedCallArgs4238>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4238> <= guard
trackAST: (inlinedCallArgs4238_id4239, string)
assocAST: (DEBIT_id3509, <DEBIT_id3509>, string) => (inlinedCallArgs4238_id4239, <inlinedCallArgs4238_id4239>, string)
trackAST: (inlinedCallArgs4238_account4240, string)
assocAST: (DEBIT_sender3510, <DEBIT_sender3510>, string) => (inlinedCallArgs4238_account4240, <inlinedCallArgs4238_account4240>, string)
assocAST: (inlinedCallArgs4238_id4239, <DEBIT_id3509>, string) => (account-guard_id3512, <account-guard_id3512>, string)
assocAST: (inlinedCallArgs4238_id4239, <DEBIT_id3509>, string) => (account-guard_id3512, <DEBIT_id3509>, string)
assocAST: (inlinedCallArgs4238_account4240, <DEBIT_sender3510>, string) => (account-guard_account3513, <account-guard_account3513>, string)
assocAST: (inlinedCallArgs4238_account4240, <DEBIT_sender3510>, string) => (account-guard_account3513, <DEBIT_sender3510>, string)
assocTy: (<sale-account3535>, string) <=> string
assocTy: (<sale-account3535>, string) <= string
trackAST: (inlinedCallArgs4241, <inlinedCallArgs4241>)
assocTy: (<inlinedCallArgs4241>, <inlinedCallArgs4241>) <=> string
assocTy: (<inlinedCallArgs4241>, <inlinedCallArgs4241>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4241> <= string
assocTy: (<enforce-guard3511>, <enforce-guard3511>) <=> <DEBIT3530_e>
assocTy: (<enforce-guard3511>, <enforce-guard3511>) <= <DEBIT3530_e>
assocTy: tracking/updating type variable <enforce-guard3511> <= <DEBIT3530_e>
trackAST: (inlinedCallArgs4242, <inlinedCallArgs4242>)
assocTy: (<inlinedCallArgs4242>, <inlinedCallArgs4242>) <=> <DEBIT3530_e>
assocTy: (<inlinedCallArgs4242>, <inlinedCallArgs4242>) <= <DEBIT3530_e>
assocTy: tracking/updating type variable <inlinedCallArgs4242> <= <DEBIT3530_e>
trackAST: (inlinedCallArgs4242_id4243, string)
assocAST: (BUY_id3493, <BUY_id3493>, string) => (inlinedCallArgs4242_id4243, <inlinedCallArgs4242_id4243>, string)
trackAST: (inlinedCallArgs4242_sender4244, string)
assocAST: (sale-account3536, <sale-account3535>, string) => (inlinedCallArgs4242_sender4244, <inlinedCallArgs4242_sender4244>, string)
assocAST: (inlinedCallArgs4242_id4243, <BUY_id3493>, string) => (DEBIT_id3509, <DEBIT_id3509>, string)
assocAST: (inlinedCallArgs4242_id4243, <BUY_id3493>, string) => (DEBIT_id3509, <BUY_id3493>, string)
assocAST: (inlinedCallArgs4242_sender4244, <sale-account3535>, string) => (DEBIT_sender3510, <DEBIT_sender3510>, string)
assocAST: (inlinedCallArgs4242_sender4244, <sale-account3535>, string) => (DEBIT_sender3510, <sale-account3535>, string)
assocTy: (<bool3540>, bool) <=> <CREDIT3542_g>
assocTy: bool => <CREDIT3542_g>
trackAST: (inlinedCallArgs4245, <inlinedCallArgs4245>)
assocTy: (<inlinedCallArgs4245>, <inlinedCallArgs4245>) <=> <CREDIT3542_g>
assocTy: (<inlinedCallArgs4245>, <inlinedCallArgs4245>) <= <CREDIT3542_g>
assocTy: tracking/updating type variable <inlinedCallArgs4245> <= <CREDIT3542_g>
trackAST: (inlinedCallArgs4245_id4246, string)
assocAST: (BUY_id3493, <BUY_id3493>, string) => (inlinedCallArgs4245_id4246, <inlinedCallArgs4245_id4246>, string)
trackAST: (inlinedCallArgs4245_receiver4247, string)
assocAST: (BUY_buyer3495, <BUY_buyer3495>, string) => (inlinedCallArgs4245_receiver4247, <inlinedCallArgs4245_receiver4247>, string)
assocTy: (<bool3545>, bool) <=> bool
assocTy: (<bool3545>, bool) <= bool
trackAST: (inlinedCallArgs4248, <inlinedCallArgs4248>)
assocTy: (<inlinedCallArgs4248>, <inlinedCallArgs4248>) <=> bool
assocTy: (<inlinedCallArgs4248>, <inlinedCallArgs4248>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4248> <= bool
trackAST: (inlinedCallArgs4248_sale-id4249, string)
assocAST: (BUY_sale-id3498, <BUY_sale-id3498>, string) => (inlinedCallArgs4248_sale-id4249, <inlinedCallArgs4248_sale-id4249>, string)
assocTy: (<BUY3548>, bool) <=> bool
assocTy: (<BUY3548>, bool) <= bool
trackAST: (inlinedCallArgs4250, <inlinedCallArgs4250>)
assocTy: (<inlinedCallArgs4250>, <inlinedCallArgs4250>) <=> bool
assocTy: (<inlinedCallArgs4250>, <inlinedCallArgs4250>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4250> <= bool
trackAST: (inlinedCallArgs4250_id4251, string)
assocAST: (sale_id2696, <sale_id2696>, string) => (inlinedCallArgs4250_id4251, <inlinedCallArgs4250_id4251>, string)
trackAST: (inlinedCallArgs4250_seller4252, string)
assocAST: (sale_seller2697, <sale_seller2697>, string) => (inlinedCallArgs4250_seller4252, <inlinedCallArgs4250_seller4252>, string)
trackAST: (inlinedCallArgs4250_buyer4253, string)
assocAST: (BindLet3485_buyer3486, <BindLet3485_buyer3486>, string) => (inlinedCallArgs4250_buyer4253, <inlinedCallArgs4250_buyer4253>, string)
trackAST: (inlinedCallArgs4250_amount4254, decimal)
assocAST: (sale_amount2698, <sale_amount2698>, decimal) => (inlinedCallArgs4250_amount4254, <inlinedCallArgs4250_amount4254>, decimal)
trackAST: (inlinedCallArgs4250_timeout4255, integer)
assocAST: (sale_timeout2699, <sale_timeout2699>, integer) => (inlinedCallArgs4250_timeout4255, <inlinedCallArgs4250_timeout4255>, integer)
trackAST: (inlinedCallArgs4250_sale-id4256, string)
assocAST: (inlinedCallArgs4250_sale-id4256, <inlinedCallArgs4250_sale-id4256>, string) => (pact-id3550, <pact-id3550>, <pact-id3550>)
assocAST: (inlinedCallArgs4250_timeout4255, <sale_timeout2699>, integer) => (BUY_timeout3497, <BUY_timeout3497>, integer)
assocAST: (inlinedCallArgs4250_timeout4255, <sale_timeout2699>, integer) => (BUY_timeout3497, <sale_timeout2699>, integer)
assocAST: (inlinedCallArgs4250_id4251, <sale_id2696>, string) => (BUY_id3493, <BUY_id3493>, string)
assocAST: (inlinedCallArgs4250_id4251, <sale_id2696>, string) => (BUY_id3493, <sale_id2696>, string)
assocAST: (inlinedCallArgs4250_id4251, <sale_id2696>, string) => (BUY_id3493, <sale_id2696>, string)
assocAST: (inlinedCallArgs4250_id4251, <sale_id2696>, string) => (BUY_id3493, <sale_id2696>, string)
assocAST: (inlinedCallArgs4250_buyer4253, <BindLet3485_buyer3486>, string) => (BUY_buyer3495, <BUY_buyer3495>, string)
assocAST: (inlinedCallArgs4250_buyer4253, <BindLet3485_buyer3486>, string) => (BUY_buyer3495, <BindLet3485_buyer3486>, string)
assocAST: (inlinedCallArgs4250_sale-id4256, <inlinedCallArgs4250_sale-id4256>, string) => (BUY_sale-id3498, <BUY_sale-id3498>, string)
assocAST: (inlinedCallArgs4250_sale-id4256, <inlinedCallArgs4250_sale-id4256>, string) => (BUY_sale-id3498, <inlinedCallArgs4250_sale-id4256>, string)
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability2701_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<SALE2767>, bool) <=> bool
assocTy: (<SALE2767>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<with-capability2701>, <with-capability2701>) <=> <with-capability2701_a>
assocTy: (<with-capability2701>, <with-capability2701>) <= <with-capability2701_a>
assocTy: tracking/updating type variable <with-capability2701> <= <with-capability2701_a>
assocTy: (<offer3101>, bool) <=> <with-capability2701_a>
assocTy: bool => <with-capability2701_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2776>, bool) <=> bool
assocTy: (<bool2776>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2774>, <require-capability2774>) <=> bool
assocTy: (<require-capability2774>, <require-capability2774>) <= bool
assocTy: tracking/updating type variable <require-capability2774> <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs3887_sale-id3888>, string) <=> string
assocTy: (<inlinedCallArgs3887_sale-id3888>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs3887_sale-id3888>, string) <=> string
assocTy: (<inlinedCallArgs3887_sale-id3888>, string) <= string
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind2780_row}> binding:binding:<{bind2780_row}> -> <bind2780_a>
assocTy: (<get-policy-info2796>, object:{marmalade.ledger.policy-info}) <=> object:<{bind2780_row}>
assocTy: (<{bind2780_row}>, <{bind2780_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind2780_row}>, <{bind2780_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind2780_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind2780_row}>)
assocTy: (<bind2780>, <bind2780>) <=> <bind2780_a>
assocTy: (<bind2780>, <bind2780>) <= <bind2780_a>
assocTy: tracking/updating type variable <bind2780> <= <bind2780_a>
assocTy: (<enforce-offer2807>, bool) <=> <bind2780_a>
assocTy: bool => <bind2780_a>
assocTy: (<BindSchema2798schema2810>, *) <=> binding:<{bind2780_row}>
assocTy: (<BindSchema2798schema2810>, *) <= binding:<{bind2780_row}>
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs3889_sale-id3893>, string) <=> string
assocTy: (<inlinedCallArgs3889_sale-id3893>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs3889_sale-id3893>, string) <=> string
assocTy: (<inlinedCallArgs3889_sale-id3893>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2782_row}> key:string bindings:binding:<{with-read2782_row}> -> <with-read2782_a>
assocTy: (<marmalade.ledger.tokens2783>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read2782_row}>
assocTy: (<{with-read2782_row}>, <{with-read2782_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read2782_row}>, <{with-read2782_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read2782_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read2782_row}>)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<get-policy-info2796>, object:{marmalade.ledger.policy-info}) <=> <with-read2782_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read2782_a>
assocTy: (<object2793>, object:*) <=> <with-read2782_a>
assocTy: (<BindSchema2784schema2795>, *) <=> binding:<{with-read2782_row}>
assocTy: (<BindSchema2784schema2795>, *) <= binding:<{with-read2782_row}>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard2819>, <DEBIT2838_e>) <=> bool
assocTy: (<enforce-guard2819>, <DEBIT2838_e>) <= bool
assocTy: tracking/updating type variable <DEBIT2838_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2816>, <require-capability2816>) <=> bool
assocTy: (<require-capability2816>, <require-capability2816>) <= bool
assocTy: tracking/updating type variable <require-capability2816> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2822_row}> key:string bindings:binding:<{with-read2822_row}> -> <with-read2822_a>
assocTy: (<marmalade.ledger.ledger2823>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2822_row}>
assocTy: (<{with-read2822_row}>, <{with-read2822_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2822_row}>, <{with-read2822_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2822_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2822_row}>)
assocTy: (<key2829>, string) <=> string
assocTy: (<key2829>, string) <= string
assocTy: (<account-guard2835>, guard) <=> <with-read2822_a>
assocTy: guard => <with-read2822_a>
assocTy: (<BindSchema2831_guard2832_f>, <BindSchema2831_guard2832_f>) <=> <with-read2822_a>
assocTy: (<BindSchema2831_guard2832_f>, <BindSchema2831_guard2832_f>) <= <with-read2822_a>
assocTy: tracking/updating type variable <BindSchema2831_guard2832_f> <= <with-read2822_a>
assocTy: (<BindSchema2831schema2834>, *) <=> binding:<{with-read2822_row}>
assocTy: (<BindSchema2831schema2834>, *) <= binding:<{with-read2822_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2827>, string) <=> string
assocTy: (<string2827>, string) <= string
assocTy: (<list2828>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2829>, string) <=> string
assocTy: (<key2829>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2851>, <=2851>) <=> bool
assocTy: (<=2851>, <=2851>) <= bool
assocTy: tracking/updating type variable <=2851> <= bool
assocTy: (<string2853>, string) <=> string
assocTy: (<string2853>, string) <= string
assocTy: (<enforce-unit2854>, bool) <=> bool
assocTy: (<enforce-unit2854>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor2852>, <floor2852>) <=> <=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor2852>, <floor2852>) <= <=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor2852> <= <=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2851_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2851>, bool) <=> bool
assocTy: (<=2851>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2856_row}> key:string bindings:binding:<{with-read2856_row}> -> <with-read2856_a>
assocTy: (<marmalade.ledger.ledger2857>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2856_row}>
assocTy: (<{with-read2856_row}>, <{with-read2856_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2856_row}>, <{with-read2856_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2856_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2856_row}>)
assocTy: (<key2863>, string) <=> string
assocTy: (<key2863>, string) <= string
assocTy: (<debit2886>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read2856_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read2856_a>
assocTy: (<object2884>, object:*) <=> <with-read2856_a>
assocTy: (<BindSchema2865schema2885>, *) <=> binding:<{with-read2856_row}>
assocTy: (<BindSchema2865schema2885>, *) <= binding:<{with-read2856_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=2869>, <<=2869>) <=> bool
assocTy: (<<=2869>, <<=2869>) <= bool
assocTy: tracking/updating type variable <<=2869> <= bool
assocTy: (<string2870>, string) <=> string
assocTy: (<string2870>, string) <= string
assocTy: (<enforce2868>, <enforce2868>) <=> bool
assocTy: (<enforce2868>, <enforce2868>) <= bool
assocTy: tracking/updating type variable <enforce2868> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=2869_a[integer,decimal,string,time]> y:<<=2869_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <<=2869_a[integer,decimal,string,time]>
assocTy: decimal => <<=2869_a[integer,decimal,string,time]>
assocTy: (<BindSchema2865_old-bal2866_aa>, <BindSchema2865_old-bal2866_aa>) <=> <<=2869_a[integer,decimal,string,time]>
assocTy: (<BindSchema2865_old-bal2866_aa>, <BindSchema2865_old-bal2866_aa>) <= <<=2869_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema2865_old-bal2866_aa> <= <<=2869_a[integer,decimal,string,time]>
assocTy: (<<=2869>, bool) <=> bool
assocTy: (<<=2869>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update2874_row}> key:string object:object:~<{update2874_row}> -> string
assocTy: (<marmalade.ledger.ledger2875>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update2874_row}>
assocTy: (<{update2874_row}>, <{update2874_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update2874_row}>, <{update2874_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update2874_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update2874_row}>)
assocTy: (<key2881>, string) <=> string
assocTy: (<key2881>, string) <= string
assocTy: (<object2883>, object:*) <=> object:~<{update2874_row}>
assocTy: (<object2883>, object:*) <= object:~<{update2874_row}>
assocTy: (<update2874>, <update2874>) <=> string
assocTy: (<update2874>, <update2874>) <= string
assocTy: tracking/updating type variable <update2874> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2879>, string) <=> string
assocTy: (<string2879>, string) <= string
assocTy: (<list2880>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2881>, string) <=> string
assocTy: (<key2881>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2861>, string) <=> string
assocTy: (<string2861>, string) <= string
assocTy: (<list2862>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2863>, string) <=> string
assocTy: (<key2863>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3023>, string) <=> string
assocTy: (<string3023>, string) <= string
assocTy: (<list3024>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3026>, string) <=> string
assocTy: (<sale-account3026>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3025>, <pact-id3025>) <=> string
assocTy: (<pact-id3025>, <pact-id3025>) <= string
assocTy: tracking/updating type variable <pact-id3025> <= string
Mangled funtype: name:string -> guard -> name:string -> guard
assocTy: (<string3029>, string) <=> string
assocTy: (<string3029>, string) <= string
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <=> guard
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <= guard
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>2895>, <>2895>) <=> bool
assocTy: (<>2895>, <>2895>) <= bool
assocTy: tracking/updating type variable <>2895> <= bool
assocTy: (<string2898>, string) <=> string
assocTy: (<string2898>, string) <= string
assocTy: (<enforce2894>, <enforce-valid-account2900_c>) <=> bool
assocTy: (<enforce2894>, <enforce-valid-account2900_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account2900_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>2895_a[integer,decimal,string,time]> y:<>2895_a[integer,decimal,string,time]> -> bool
assocTy: (<length2896>, <length2896>) <=> <>2895_a[integer,decimal,string,time]>
assocTy: (<length2896>, <length2896>) <= <>2895_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length2896> <= <>2895_a[integer,decimal,string,time]>
assocTy: (<integer2897>, integer) <=> <>2895_a[integer,decimal,string,time]>
assocTy: integer => <>2895_a[integer,decimal,string,time]>
assocTy: (<>2895>, bool) <=> bool
assocTy: (<>2895>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length2896_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<sale-account3026>, string) <=> <length2896_a[[<l>],string,object:<{o}>]>
assocTy: string => <length2896_a[[<l>],string,object:<{o}>]>
assocTy: (<length2896>, integer) <=> integer
assocTy: (<length2896>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2913>, <=2913>) <=> bool
assocTy: (<=2913>, <=2913>) <= bool
assocTy: tracking/updating type variable <=2913> <= bool
assocTy: (<string2915>, string) <=> string
assocTy: (<string2915>, string) <= string
assocTy: (<enforce-unit2916>, bool) <=> bool
assocTy: (<enforce-unit2916>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor2914>, <floor2914>) <=> <=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor2914>, <floor2914>) <= <=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor2914> <= <=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2913_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2913>, bool) <=> bool
assocTy: (<=2913>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2921>, bool) <=> bool
assocTy: (<bool2921>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability2918>, <require-capability2918>) <=> bool
assocTy: (<require-capability2918>, <require-capability2918>) <= bool
assocTy: tracking/updating type variable <require-capability2918> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read2924_row}> key:string defaults:object:~<{with-default-read2924_row}> bindings:binding:~<{with-default-read2924_row}> -> <with-default-read2924_a>
assocTy: (<marmalade.ledger.ledger2925>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read2924_row}>
assocTy: (<{with-default-read2924_row}>, <{with-default-read2924_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read2924_row}>, <{with-default-read2924_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read2924_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read2924_row}>)
assocTy: (<key2931>, string) <=> string
assocTy: (<key2931>, string) <= string
assocTy: (<object2933>, object:*) <=> object:~<{with-default-read2924_row}>
assocTy: (<object2933>, object:*) <= object:~<{with-default-read2924_row}>
assocTy: (<credit3020>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read2924_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read2924_a>
assocTy: (<object3016>, object:*) <=> <with-default-read2924_a>
assocTy: (<BindSchema2935schema3019>, *) <=> binding:~<{with-default-read2924_row}>
assocTy: (<BindSchema2935schema3019>, *) <= binding:~<{with-default-read2924_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2941>, <=2941>) <=> bool
assocTy: (<=2941>, <=2941>) <= bool
assocTy: tracking/updating type variable <=2941> <= bool
assocTy: (<string2942>, string) <=> string
assocTy: (<string2942>, string) <= string
assocTy: (<enforce2940>, <enforce2940>) <=> bool
assocTy: (<enforce2940>, <enforce2940>) <= bool
assocTy: tracking/updating type variable <enforce2940> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2941_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2941_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs3938_guard3941>, guard) <=> <=2941_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=2941_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <=> <=2941_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2941>, bool) <=> bool
assocTy: (<=2941>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2945_a> else:<if2945_a> -> <if2945_a>
assocTy: (<=2946>, <=2946>) <=> bool
assocTy: (<=2946>, <=2946>) <= bool
assocTy: tracking/updating type variable <=2946> <= bool
assocTy: (<enforce-reserved2990>, bool) <=> <if2945_a>
assocTy: bool => <if2945_a>
assocTy: (<bool2992>, bool) <=> <if2945_a>
assocTy: (<if2945>, <if2945>) <=> <if2945_a>
assocTy: (<if2945>, <if2945>) <= <if2945_a>
assocTy: tracking/updating type variable <if2945> <= <if2945_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema2935_old-bal2936_ac>, <BindSchema2935_old-bal2936_ac>) <=> <=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema2935_old-bal2936_ac>, <BindSchema2935_old-bal2936_ac>) <= <=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema2935_old-bal2936_ac> <= <=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal2947>, decimal) <=> <=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=2946_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2946>, bool) <=> bool
assocTy: (<=2946>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2957_a> else:<if2957_a> -> <if2957_a>
assocTy: (<=2958>, <=2958>) <=> bool
assocTy: (<=2958>, <=2958>) <= bool
assocTy: tracking/updating type variable <=2958> <= bool
assocTy: (<take2962>, <take2962>) <=> <if2957_a>
assocTy: (<take2962>, <take2962>) <= <if2957_a>
assocTy: tracking/updating type variable <take2962> <= <if2957_a>
assocTy: (<string2964>, string) <=> <if2957_a>
assocTy: string => <if2957_a>
assocTy: (<check-reserved2965>, string) <=> <if2957_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2959>, string) <=> <=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take2960>, <take2960>) <=> <=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take2960>, <take2960>) <= <=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take2960> <= <=2958_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2958>, bool) <=> bool
assocTy: (<=2958>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2967_a> else:<if2967_a> -> <if2967_a>
assocTy: (<=2968>, <=2968>) <=> bool
assocTy: (<=2968>, <=2968>) <= bool
assocTy: tracking/updating type variable <=2968> <= bool
assocTy: (<bool2970>, bool) <=> <if2967_a>
assocTy: bool => <if2967_a>
assocTy: (<if2971>, <if2971>) <=> <if2967_a>
assocTy: (<if2971>, <if2971>) <= <if2967_a>
assocTy: tracking/updating type variable <if2971> <= <if2967_a>
assocTy: (<enforce-reserved2990>, bool) <=> <if2967_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2968_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2968_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2969>, string) <=> <=2968_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2968_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved2965>, string) <=> <=2968_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2968>, bool) <=> bool
assocTy: (<=2968>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2971_a> else:<if2971_a> -> <if2971_a>
assocTy: (<=2972>, <=2972>) <=> bool
assocTy: (<=2972>, <=2972>) <= bool
assocTy: tracking/updating type variable <=2972> <= bool
assocTy: (<enforce2974>, <enforce2974>) <=> <if2971_a>
assocTy: (<enforce2974>, <enforce2974>) <= <if2971_a>
assocTy: tracking/updating type variable <enforce2974> <= <if2971_a>
assocTy: (<enforce2985>, <enforce2985>) <=> <if2971_a>
assocTy: (<enforce2985>, <enforce2985>) <= <if2971_a>
assocTy: tracking/updating type variable <enforce2985> <= <if2971_a>
assocTy: (<if2971>, bool) <=> <if2971_a>
assocTy: bool => <if2971_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2972_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2972_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string2973>, string) <=> <=2972_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=2972_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved2965>, string) <=> <=2972_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2972>, bool) <=> bool
assocTy: (<=2972>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=2975>, <=2975>) <=> bool
assocTy: (<=2975>, <=2975>) <= bool
assocTy: tracking/updating type variable <=2975> <= bool
assocTy: (<string2984>, string) <=> string
assocTy: (<string2984>, string) <= string
assocTy: (<enforce2974>, bool) <=> bool
assocTy: (<enforce2974>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format2976>, <format2976>) <=> <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2976>, <format2976>) <= <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format2976> <= <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2979>, <format2979>) <=> <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format2979>, <format2979>) <= <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format2979> <= <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=2975>, bool) <=> bool
assocTy: (<=2975>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2977>, string) <=> string
assocTy: (<string2977>, string) <= string
assocTy: (<list2978>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format2976>, <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format2976>, <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=2975_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2980>, string) <=> string
assocTy: (<string2980>, string) <= string
assocTy: (<list2981>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format2979>, string) <=> string
assocTy: (<format2979>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool2986>, bool) <=> bool
assocTy: (<bool2986>, bool) <= bool
assocTy: (<format2987>, <format2987>) <=> string
assocTy: (<format2987>, <format2987>) <= string
assocTy: tracking/updating type variable <format2987> <= string
assocTy: (<enforce2985>, bool) <=> bool
assocTy: (<enforce2985>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2988>, string) <=> string
assocTy: (<string2988>, string) <= string
assocTy: (<list2989>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format2987>, string) <=> string
assocTy: (<format2987>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if2995_a> else:<if2995_a> -> <if2995_a>
assocTy: (<if2945>, bool) <=> bool
assocTy: (<if2945>, bool) <= bool
assocTy: (<sale_amount2698>, decimal) <=> <if2995_a>
assocTy: decimal => <if2995_a>
assocTy: (<+2996>, <+2996>) <=> <if2995_a>
assocTy: (<+2996>, <+2996>) <= <if2995_a>
assocTy: tracking/updating type variable <+2996> <= <if2995_a>
assocTy: (<if2995>, <if2995>) <=> <if2995_a>
assocTy: (<if2995>, <if2995>) <= <if2995_a>
assocTy: tracking/updating type variable <if2995> <= <if2995_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write2997_row}> key:string object:object:<{write2997_row}> -> string
assocTy: (<marmalade.ledger.ledger2998>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write2997_row}>
assocTy: (<{write2997_row}>, <{write2997_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write2997_row}>, <{write2997_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write2997_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write2997_row}>)
assocTy: (<key3004>, string) <=> string
assocTy: (<key3004>, string) <= string
assocTy: (<object3006>, object:*) <=> object:<{write2997_row}>
assocTy: (<object3006>, object:*) <= object:<{write2997_row}>
assocTy: (<write2997>, <write2997>) <=> string
assocTy: (<write2997>, <write2997>) <= string
assocTy: tracking/updating type variable <write2997> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3002>, string) <=> string
assocTy: (<string3002>, string) <= string
assocTy: (<list3003>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3004>, string) <=> string
assocTy: (<key3004>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3007_a> else:<if3007_a> -> <if3007_a>
assocTy: (<if2945>, bool) <=> bool
assocTy: (<if2945>, bool) <= bool
assocTy: (<emit-event3008>, <emit-event3008>) <=> <if3007_a>
assocTy: (<emit-event3008>, <emit-event3008>) <= <if3007_a>
assocTy: tracking/updating type variable <emit-event3008> <= <if3007_a>
assocTy: (<bool3015>, bool) <=> <if3007_a>
assocTy: bool => <if3007_a>
assocTy: (<if3007>, <if3007>) <=> <if3007_a>
assocTy: (<if3007>, <if3007>) <= <if3007_a>
assocTy: tracking/updating type variable <if3007> <= <if3007_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3012>, bool) <=> bool
assocTy: (<bool3012>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event3008>, bool) <=> bool
assocTy: (<emit-event3008>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3017_a> else:<if3017_a> -> <if3017_a>
assocTy: (<if2945>, bool) <=> bool
assocTy: (<if2945>, bool) <= bool
assocTy: (<decimal3018>, decimal) <=> <if3017_a>
assocTy: decimal => <if3017_a>
assocTy: (<BindSchema2935_old-bal2936_ac>, decimal) <=> <if3017_a>
assocTy: (<if3017>, <if3017>) <=> <if3017_a>
assocTy: (<if3017>, <if3017>) <= <if3017_a>
assocTy: tracking/updating type variable <if3017> <= <if3017_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2929>, string) <=> string
assocTy: (<string2929>, string) <= string
assocTy: (<list2930>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2931>, string) <=> string
assocTy: (<key2931>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3023>, string) <=> string
assocTy: (<string3023>, string) <= string
assocTy: (<list3024>, [*]) <=> [*]
assocTy: (<list3024>, [*]) <= [*]
assocTy: (<sale-account3026>, string) <=> string
assocTy: (<sale-account3026>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3025>, string) <=> string
assocTy: (<pact-id3025>, string) <= string
Mangled funtype: name:string -> guard -> name:string -> guard
assocTy: (<string3029>, string) <=> string
assocTy: (<string3029>, string) <= string
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <=> guard
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <= guard
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER3085>, bool) <=> bool
assocTy: (<TRANSFER3085>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event3030>, <emit-event3030>) <=> bool
assocTy: (<emit-event3030>, <emit-event3030>) <= bool
assocTy: tracking/updating type variable <emit-event3030> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3088>, string) <=> string
assocTy: (<string3088>, string) <= string
assocTy: (<list3089>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3091>, string) <=> string
assocTy: (<sale-account3091>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3090>, <pact-id3090>) <=> string
assocTy: (<pact-id3090>, <pact-id3090>) <= string
assocTy: tracking/updating type variable <pact-id3090> <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3047>, <=3047>) <=> bool
assocTy: (<=3047>, <=3047>) <= bool
assocTy: tracking/updating type variable <=3047> <= bool
assocTy: (<string3049>, string) <=> string
assocTy: (<string3049>, string) <= string
assocTy: (<enforce-unit3050>, bool) <=> bool
assocTy: (<enforce-unit3050>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3048>, <floor3048>) <=> <=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3048>, <floor3048>) <= <=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3048> <= <=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3047_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3047>, bool) <=> bool
assocTy: (<=3047>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>3053>, <>3053>) <=> bool
assocTy: (<>3053>, <>3053>) <= bool
assocTy: tracking/updating type variable <>3053> <= bool
assocTy: (<string3055>, string) <=> string
assocTy: (<string3055>, string) <= string
assocTy: (<enforce3052>, <enforce3052>) <=> bool
assocTy: (<enforce3052>, <enforce3052>) <= bool
assocTy: tracking/updating type variable <enforce3052> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>3053_a[integer,decimal,string,time]> y:<>3053_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <>3053_a[integer,decimal,string,time]>
assocTy: decimal => <>3053_a[integer,decimal,string,time]>
assocTy: (<decimal3054>, decimal) <=> <>3053_a[integer,decimal,string,time]>
assocTy: (<>3053>, bool) <=> bool
assocTy: (<>3053>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3059>, <DEBIT3078_e>) <=> bool
assocTy: (<enforce-guard3059>, <DEBIT3078_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3078_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3056>, <compose-capability3056>) <=> bool
assocTy: (<compose-capability3056>, <compose-capability3056>) <= bool
assocTy: tracking/updating type variable <compose-capability3056> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3062_row}> key:string bindings:binding:<{with-read3062_row}> -> <with-read3062_a>
assocTy: (<marmalade.ledger.ledger3063>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3062_row}>
assocTy: (<{with-read3062_row}>, <{with-read3062_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3062_row}>, <{with-read3062_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3062_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3062_row}>)
assocTy: (<key3069>, string) <=> string
assocTy: (<key3069>, string) <= string
assocTy: (<account-guard3075>, guard) <=> <with-read3062_a>
assocTy: guard => <with-read3062_a>
assocTy: (<BindSchema3071_guard3072_f>, <BindSchema3071_guard3072_f>) <=> <with-read3062_a>
assocTy: (<BindSchema3071_guard3072_f>, <BindSchema3071_guard3072_f>) <= <with-read3062_a>
assocTy: tracking/updating type variable <BindSchema3071_guard3072_f> <= <with-read3062_a>
assocTy: (<BindSchema3071schema3074>, *) <=> binding:<{with-read3062_row}>
assocTy: (<BindSchema3071schema3074>, *) <= binding:<{with-read3062_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3067>, string) <=> string
assocTy: (<string3067>, string) <= string
assocTy: (<list3068>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3069>, string) <=> string
assocTy: (<key3069>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3082>, bool) <=> bool
assocTy: (<bool3082>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER3085>, bool) <=> bool
assocTy: (<TRANSFER3085>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3088>, string) <=> string
assocTy: (<string3088>, string) <= string
assocTy: (<list3089>, [*]) <=> [*]
assocTy: (<list3089>, [*]) <= [*]
assocTy: (<sale-account3091>, string) <=> string
assocTy: (<sale-account3091>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3090>, string) <=> string
assocTy: (<pact-id3090>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3098>, bool) <=> bool
assocTy: (<bool3098>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<offer3101>, bool) <=> bool
assocTy: (<offer3101>, bool) <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4005_sale-id4010>, string) <=> string
assocTy: (<inlinedCallArgs4005_sale-id4010>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>2708>, <>2708>) <=> bool
assocTy: (<>2708>, <>2708>) <= bool
assocTy: tracking/updating type variable <>2708> <= bool
assocTy: (<string2710>, string) <=> string
assocTy: (<string2710>, string) <= string
assocTy: (<enforce2707>, <enforce2707>) <=> bool
assocTy: (<enforce2707>, <enforce2707>) <= bool
assocTy: tracking/updating type variable <enforce2707> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>2708_a[integer,decimal,string,time]> y:<>2708_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <>2708_a[integer,decimal,string,time]>
assocTy: decimal => <>2708_a[integer,decimal,string,time]>
assocTy: (<decimal2709>, decimal) <=> <>2708_a[integer,decimal,string,time]>
assocTy: (<>2708>, bool) <=> bool
assocTy: (<>2708>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<OFFER2760>, bool) <=> bool
assocTy: (<OFFER2760>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability2711>, <compose-capability2711>) <=> bool
assocTy: (<compose-capability2711>, <compose-capability2711>) <= bool
assocTy: tracking/updating type variable <compose-capability2711> <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<sale-active2722>, bool) <=> bool
assocTy: (<sale-active2722>, bool) <= bool
assocTy: (<string2724>, string) <=> string
assocTy: (<string2724>, string) <= string
assocTy: (<enforce2716>, <enforce2716>) <=> bool
assocTy: (<enforce2716>, <enforce2716>) <= bool
assocTy: tracking/updating type variable <enforce2716> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<2718_a[integer,decimal,string,time]> y:<<2718_a[integer,decimal,string,time]> -> bool
assocTy: (<at2719>, <at2719>) <=> <<2718_a[integer,decimal,string,time]>
assocTy: (<at2719>, <at2719>) <= <<2718_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at2719> <= <<2718_a[integer,decimal,string,time]>
assocTy: (<sale_timeout2699>, integer) <=> <<2718_a[integer,decimal,string,time]>
assocTy: integer => <<2718_a[integer,decimal,string,time]>
assocTy: (<sale-active2722>, bool) <=> bool
assocTy: (<sale-active2722>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data2721>, <chain-data2721>) <=> object:{.public-chain-data}
assocTy: (<chain-data2721>, <chain-data2721>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data2721> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard2728>, <DEBIT2747_e>) <=> bool
assocTy: (<enforce-guard2728>, <DEBIT2747_e>) <= bool
assocTy: tracking/updating type variable <DEBIT2747_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability2725>, <compose-capability2725>) <=> bool
assocTy: (<compose-capability2725>, <compose-capability2725>) <= bool
assocTy: tracking/updating type variable <compose-capability2725> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read2731_row}> key:string bindings:binding:<{with-read2731_row}> -> <with-read2731_a>
assocTy: (<marmalade.ledger.ledger2732>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read2731_row}>
assocTy: (<{with-read2731_row}>, <{with-read2731_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read2731_row}>, <{with-read2731_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read2731_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read2731_row}>)
assocTy: (<key2738>, string) <=> string
assocTy: (<key2738>, string) <= string
assocTy: (<account-guard2744>, guard) <=> <with-read2731_a>
assocTy: guard => <with-read2731_a>
assocTy: (<BindSchema2740_guard2741_f>, <BindSchema2740_guard2741_f>) <=> <with-read2731_a>
assocTy: (<BindSchema2740_guard2741_f>, <BindSchema2740_guard2741_f>) <= <with-read2731_a>
assocTy: tracking/updating type variable <BindSchema2740_guard2741_f> <= <with-read2731_a>
assocTy: (<BindSchema2740schema2743>, *) <=> binding:<{with-read2731_row}>
assocTy: (<BindSchema2740schema2743>, *) <= binding:<{with-read2731_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2736>, string) <=> string
assocTy: (<string2736>, string) <= string
assocTy: (<list2737>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key2738>, string) <=> string
assocTy: (<key2738>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2751>, bool) <=> bool
assocTy: (<bool2751>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<OFFER2760>, bool) <=> bool
assocTy: (<OFFER2760>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2755>, string) <=> string
assocTy: (<string2755>, string) <= string
assocTy: (<list2756>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account2758>, string) <=> string
assocTy: (<sale-account2758>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2757>, <pact-id2757>) <=> string
assocTy: (<pact-id2757>, <pact-id2757>) <= string
assocTy: tracking/updating type variable <pact-id2757> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string2755>, string) <=> string
assocTy: (<string2755>, string) <= string
assocTy: (<list2756>, [*]) <=> [*]
assocTy: (<list2756>, [*]) <= [*]
assocTy: (<sale-account2758>, string) <=> string
assocTy: (<sale-account2758>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id2757>, string) <=> string
assocTy: (<pact-id2757>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool2764>, bool) <=> bool
assocTy: (<bool2764>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<SALE2767>, bool) <=> bool
assocTy: (<SALE2767>, bool) <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4005_sale-id4010>, string) <=> string
assocTy: (<inlinedCallArgs4005_sale-id4010>, string) <= string
Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability3103_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<WITHDRAW3159>, bool) <=> bool
assocTy: (<WITHDRAW3159>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<with-capability3103>, <with-capability3103>) <=> <with-capability3103_a>
assocTy: (<with-capability3103>, <with-capability3103>) <= <with-capability3103_a>
assocTy: tracking/updating type variable <with-capability3103> <= <with-capability3103_a>
assocTy: (<withdraw3482>, bool) <=> <with-capability3103_a>
assocTy: bool => <with-capability3103_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3168>, bool) <=> bool
assocTy: (<bool3168>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability3166>, <require-capability3166>) <=> bool
assocTy: (<require-capability3166>, <require-capability3166>) <= bool
assocTy: tracking/updating type variable <require-capability3166> <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4011_sale-id4012>, string) <=> string
assocTy: (<inlinedCallArgs4011_sale-id4012>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4011_sale-id4012>, string) <=> string
assocTy: (<inlinedCallArgs4011_sale-id4012>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3250>, string) <=> string
assocTy: (<string3250>, string) <= string
assocTy: (<list3251>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3253>, string) <=> string
assocTy: (<sale-account3253>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3252>, <pact-id3252>) <=> string
assocTy: (<pact-id3252>, <pact-id3252>) <= string
assocTy: tracking/updating type variable <pact-id3252> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3180>, <DEBIT3199_e>) <=> bool
assocTy: (<enforce-guard3180>, <DEBIT3199_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3199_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability3177>, <require-capability3177>) <=> bool
assocTy: (<require-capability3177>, <require-capability3177>) <= bool
assocTy: tracking/updating type variable <require-capability3177> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3183_row}> key:string bindings:binding:<{with-read3183_row}> -> <with-read3183_a>
assocTy: (<marmalade.ledger.ledger3184>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3183_row}>
assocTy: (<{with-read3183_row}>, <{with-read3183_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3183_row}>, <{with-read3183_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3183_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3183_row}>)
assocTy: (<key3190>, string) <=> string
assocTy: (<key3190>, string) <= string
assocTy: (<account-guard3196>, guard) <=> <with-read3183_a>
assocTy: guard => <with-read3183_a>
assocTy: (<BindSchema3192_guard3193_f>, <BindSchema3192_guard3193_f>) <=> <with-read3183_a>
assocTy: (<BindSchema3192_guard3193_f>, <BindSchema3192_guard3193_f>) <= <with-read3183_a>
assocTy: tracking/updating type variable <BindSchema3192_guard3193_f> <= <with-read3183_a>
assocTy: (<BindSchema3192schema3195>, *) <=> binding:<{with-read3183_row}>
assocTy: (<BindSchema3192schema3195>, *) <= binding:<{with-read3183_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3188>, string) <=> string
assocTy: (<string3188>, string) <= string
assocTy: (<list3189>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3190>, string) <=> string
assocTy: (<key3190>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3212>, <=3212>) <=> bool
assocTy: (<=3212>, <=3212>) <= bool
assocTy: tracking/updating type variable <=3212> <= bool
assocTy: (<string3214>, string) <=> string
assocTy: (<string3214>, string) <= string
assocTy: (<enforce-unit3215>, bool) <=> bool
assocTy: (<enforce-unit3215>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3213>, <floor3213>) <=> <=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3213>, <floor3213>) <= <=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3213> <= <=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3212_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3212>, bool) <=> bool
assocTy: (<=3212>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3217_row}> key:string bindings:binding:<{with-read3217_row}> -> <with-read3217_a>
assocTy: (<marmalade.ledger.ledger3218>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3217_row}>
assocTy: (<{with-read3217_row}>, <{with-read3217_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3217_row}>, <{with-read3217_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3217_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3217_row}>)
assocTy: (<key3224>, string) <=> string
assocTy: (<key3224>, string) <= string
assocTy: (<debit3247>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read3217_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read3217_a>
assocTy: (<object3245>, object:*) <=> <with-read3217_a>
assocTy: (<BindSchema3226schema3246>, *) <=> binding:<{with-read3217_row}>
assocTy: (<BindSchema3226schema3246>, *) <= binding:<{with-read3217_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=3230>, <<=3230>) <=> bool
assocTy: (<<=3230>, <<=3230>) <= bool
assocTy: tracking/updating type variable <<=3230> <= bool
assocTy: (<string3231>, string) <=> string
assocTy: (<string3231>, string) <= string
assocTy: (<enforce3229>, <enforce3229>) <=> bool
assocTy: (<enforce3229>, <enforce3229>) <= bool
assocTy: tracking/updating type variable <enforce3229> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=3230_a[integer,decimal,string,time]> y:<<=3230_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <<=3230_a[integer,decimal,string,time]>
assocTy: decimal => <<=3230_a[integer,decimal,string,time]>
assocTy: (<BindSchema3226_old-bal3227_aa>, <BindSchema3226_old-bal3227_aa>) <=> <<=3230_a[integer,decimal,string,time]>
assocTy: (<BindSchema3226_old-bal3227_aa>, <BindSchema3226_old-bal3227_aa>) <= <<=3230_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema3226_old-bal3227_aa> <= <<=3230_a[integer,decimal,string,time]>
assocTy: (<<=3230>, bool) <=> bool
assocTy: (<<=3230>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update3235_row}> key:string object:object:~<{update3235_row}> -> string
assocTy: (<marmalade.ledger.ledger3236>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update3235_row}>
assocTy: (<{update3235_row}>, <{update3235_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update3235_row}>, <{update3235_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update3235_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update3235_row}>)
assocTy: (<key3242>, string) <=> string
assocTy: (<key3242>, string) <= string
assocTy: (<object3244>, object:*) <=> object:~<{update3235_row}>
assocTy: (<object3244>, object:*) <= object:~<{update3235_row}>
assocTy: (<update3235>, <update3235>) <=> string
assocTy: (<update3235>, <update3235>) <= string
assocTy: tracking/updating type variable <update3235> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3240>, string) <=> string
assocTy: (<string3240>, string) <= string
assocTy: (<list3241>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3242>, string) <=> string
assocTy: (<key3242>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3222>, string) <=> string
assocTy: (<string3222>, string) <= string
assocTy: (<list3223>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3224>, string) <=> string
assocTy: (<key3224>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3250>, string) <=> string
assocTy: (<string3250>, string) <= string
assocTy: (<list3251>, [*]) <=> [*]
assocTy: (<list3251>, [*]) <= [*]
assocTy: (<sale-account3253>, string) <=> string
assocTy: (<sale-account3253>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3252>, string) <=> string
assocTy: (<pact-id3252>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3394_row}> key:string bindings:binding:<{with-read3394_row}> -> <with-read3394_a>
assocTy: (<marmalade.ledger.ledger3395>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3394_row}>
assocTy: (<{with-read3394_row}>, <{with-read3394_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3394_row}>, <{with-read3394_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3394_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3394_row}>)
assocTy: (<key3401>, string) <=> string
assocTy: (<key3401>, string) <= string
assocTy: (<account-guard3407>, guard) <=> <with-read3394_a>
assocTy: guard => <with-read3394_a>
assocTy: (<BindSchema3403_guard3404_f>, <BindSchema3403_guard3404_f>) <=> <with-read3394_a>
assocTy: (<BindSchema3403_guard3404_f>, <BindSchema3403_guard3404_f>) <= <with-read3394_a>
assocTy: tracking/updating type variable <BindSchema3403_guard3404_f> <= <with-read3394_a>
assocTy: (<BindSchema3403schema3406>, *) <=> binding:<{with-read3394_row}>
assocTy: (<BindSchema3403schema3406>, *) <= binding:<{with-read3394_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3399>, string) <=> string
assocTy: (<string3399>, string) <= string
assocTy: (<list3400>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3401>, string) <=> string
assocTy: (<key3401>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>3265>, <>3265>) <=> bool
assocTy: (<>3265>, <>3265>) <= bool
assocTy: tracking/updating type variable <>3265> <= bool
assocTy: (<string3268>, string) <=> string
assocTy: (<string3268>, string) <= string
assocTy: (<enforce3264>, <enforce-valid-account3270_c>) <=> bool
assocTy: (<enforce3264>, <enforce-valid-account3270_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account3270_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>3265_a[integer,decimal,string,time]> y:<>3265_a[integer,decimal,string,time]> -> bool
assocTy: (<length3266>, <length3266>) <=> <>3265_a[integer,decimal,string,time]>
assocTy: (<length3266>, <length3266>) <= <>3265_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length3266> <= <>3265_a[integer,decimal,string,time]>
assocTy: (<integer3267>, integer) <=> <>3265_a[integer,decimal,string,time]>
assocTy: integer => <>3265_a[integer,decimal,string,time]>
assocTy: (<>3265>, bool) <=> bool
assocTy: (<>3265>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length3266_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<sale_seller2697>, string) <=> <length3266_a[[<l>],string,object:<{o}>]>
assocTy: string => <length3266_a[[<l>],string,object:<{o}>]>
assocTy: (<length3266>, integer) <=> integer
assocTy: (<length3266>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3283>, <=3283>) <=> bool
assocTy: (<=3283>, <=3283>) <= bool
assocTy: tracking/updating type variable <=3283> <= bool
assocTy: (<string3285>, string) <=> string
assocTy: (<string3285>, string) <= string
assocTy: (<enforce-unit3286>, bool) <=> bool
assocTy: (<enforce-unit3286>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3284>, <floor3284>) <=> <=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3284>, <floor3284>) <= <=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3284> <= <=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3283_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3283>, bool) <=> bool
assocTy: (<=3283>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3291>, bool) <=> bool
assocTy: (<bool3291>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability3288>, <require-capability3288>) <=> bool
assocTy: (<require-capability3288>, <require-capability3288>) <= bool
assocTy: tracking/updating type variable <require-capability3288> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read3294_row}> key:string defaults:object:~<{with-default-read3294_row}> bindings:binding:~<{with-default-read3294_row}> -> <with-default-read3294_a>
assocTy: (<marmalade.ledger.ledger3295>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read3294_row}>
assocTy: (<{with-default-read3294_row}>, <{with-default-read3294_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read3294_row}>, <{with-default-read3294_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read3294_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read3294_row}>)
assocTy: (<key3301>, string) <=> string
assocTy: (<key3301>, string) <= string
assocTy: (<object3303>, object:*) <=> object:~<{with-default-read3294_row}>
assocTy: (<object3303>, object:*) <= object:~<{with-default-read3294_row}>
assocTy: (<credit3390>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read3294_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read3294_a>
assocTy: (<object3386>, object:*) <=> <with-default-read3294_a>
assocTy: (<BindSchema3305schema3389>, *) <=> binding:~<{with-default-read3294_row}>
assocTy: (<BindSchema3305schema3389>, *) <= binding:~<{with-default-read3294_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3311>, <=3311>) <=> bool
assocTy: (<=3311>, <=3311>) <= bool
assocTy: tracking/updating type variable <=3311> <= bool
assocTy: (<string3312>, string) <=> string
assocTy: (<string3312>, string) <= string
assocTy: (<enforce3310>, <enforce3310>) <=> bool
assocTy: (<enforce3310>, <enforce3310>) <= bool
assocTy: tracking/updating type variable <enforce3310> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs4056_guard4059>, guard) <=> <=3311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=3311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<account-guard3407>, guard) <=> <=3311_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3311>, bool) <=> bool
assocTy: (<=3311>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3315_a> else:<if3315_a> -> <if3315_a>
assocTy: (<=3316>, <=3316>) <=> bool
assocTy: (<=3316>, <=3316>) <= bool
assocTy: tracking/updating type variable <=3316> <= bool
assocTy: (<enforce-reserved3360>, bool) <=> <if3315_a>
assocTy: bool => <if3315_a>
assocTy: (<bool3362>, bool) <=> <if3315_a>
assocTy: (<if3315>, <if3315>) <=> <if3315_a>
assocTy: (<if3315>, <if3315>) <= <if3315_a>
assocTy: tracking/updating type variable <if3315> <= <if3315_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema3305_old-bal3306_ac>, <BindSchema3305_old-bal3306_ac>) <=> <=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema3305_old-bal3306_ac>, <BindSchema3305_old-bal3306_ac>) <= <=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema3305_old-bal3306_ac> <= <=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal3317>, decimal) <=> <=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3316_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3316>, bool) <=> bool
assocTy: (<=3316>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3327_a> else:<if3327_a> -> <if3327_a>
assocTy: (<=3328>, <=3328>) <=> bool
assocTy: (<=3328>, <=3328>) <= bool
assocTy: tracking/updating type variable <=3328> <= bool
assocTy: (<take3332>, <take3332>) <=> <if3327_a>
assocTy: (<take3332>, <take3332>) <= <if3327_a>
assocTy: tracking/updating type variable <take3332> <= <if3327_a>
assocTy: (<string3334>, string) <=> <if3327_a>
assocTy: string => <if3327_a>
assocTy: (<check-reserved3335>, string) <=> <if3327_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string3329>, string) <=> <=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take3330>, <take3330>) <=> <=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take3330>, <take3330>) <= <=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take3330> <= <=3328_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3328>, bool) <=> bool
assocTy: (<=3328>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3337_a> else:<if3337_a> -> <if3337_a>
assocTy: (<=3338>, <=3338>) <=> bool
assocTy: (<=3338>, <=3338>) <= bool
assocTy: tracking/updating type variable <=3338> <= bool
assocTy: (<bool3340>, bool) <=> <if3337_a>
assocTy: bool => <if3337_a>
assocTy: (<if3341>, <if3341>) <=> <if3337_a>
assocTy: (<if3341>, <if3341>) <= <if3337_a>
assocTy: tracking/updating type variable <if3341> <= <if3337_a>
assocTy: (<enforce-reserved3360>, bool) <=> <if3337_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string3339>, string) <=> <=3338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=3338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved3335>, string) <=> <=3338_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3338>, bool) <=> bool
assocTy: (<=3338>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3341_a> else:<if3341_a> -> <if3341_a>
assocTy: (<=3342>, <=3342>) <=> bool
assocTy: (<=3342>, <=3342>) <= bool
assocTy: tracking/updating type variable <=3342> <= bool
assocTy: (<enforce3344>, <enforce3344>) <=> <if3341_a>
assocTy: (<enforce3344>, <enforce3344>) <= <if3341_a>
assocTy: tracking/updating type variable <enforce3344> <= <if3341_a>
assocTy: (<enforce3355>, <enforce3355>) <=> <if3341_a>
assocTy: (<enforce3355>, <enforce3355>) <= <if3341_a>
assocTy: tracking/updating type variable <enforce3355> <= <if3341_a>
assocTy: (<if3341>, bool) <=> <if3341_a>
assocTy: bool => <if3341_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3342_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3342_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string3343>, string) <=> <=3342_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=3342_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved3335>, string) <=> <=3342_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3342>, bool) <=> bool
assocTy: (<=3342>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3345>, <=3345>) <=> bool
assocTy: (<=3345>, <=3345>) <= bool
assocTy: tracking/updating type variable <=3345> <= bool
assocTy: (<string3354>, string) <=> string
assocTy: (<string3354>, string) <= string
assocTy: (<enforce3344>, bool) <=> bool
assocTy: (<enforce3344>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format3346>, <format3346>) <=> <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format3346>, <format3346>) <= <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format3346> <= <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format3349>, <format3349>) <=> <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format3349>, <format3349>) <= <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format3349> <= <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3345>, bool) <=> bool
assocTy: (<=3345>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3347>, string) <=> string
assocTy: (<string3347>, string) <= string
assocTy: (<list3348>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format3346>, <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format3346>, <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=3345_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3350>, string) <=> string
assocTy: (<string3350>, string) <= string
assocTy: (<list3351>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format3349>, string) <=> string
assocTy: (<format3349>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool3356>, bool) <=> bool
assocTy: (<bool3356>, bool) <= bool
assocTy: (<format3357>, <format3357>) <=> string
assocTy: (<format3357>, <format3357>) <= string
assocTy: tracking/updating type variable <format3357> <= string
assocTy: (<enforce3355>, bool) <=> bool
assocTy: (<enforce3355>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3358>, string) <=> string
assocTy: (<string3358>, string) <= string
assocTy: (<list3359>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format3357>, string) <=> string
assocTy: (<format3357>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3365_a> else:<if3365_a> -> <if3365_a>
assocTy: (<if3315>, bool) <=> bool
assocTy: (<if3315>, bool) <= bool
assocTy: (<sale_amount2698>, decimal) <=> <if3365_a>
assocTy: decimal => <if3365_a>
assocTy: (<+3366>, <+3366>) <=> <if3365_a>
assocTy: (<+3366>, <+3366>) <= <if3365_a>
assocTy: tracking/updating type variable <+3366> <= <if3365_a>
assocTy: (<if3365>, <if3365>) <=> <if3365_a>
assocTy: (<if3365>, <if3365>) <= <if3365_a>
assocTy: tracking/updating type variable <if3365> <= <if3365_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write3367_row}> key:string object:object:<{write3367_row}> -> string
assocTy: (<marmalade.ledger.ledger3368>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write3367_row}>
assocTy: (<{write3367_row}>, <{write3367_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write3367_row}>, <{write3367_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write3367_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write3367_row}>)
assocTy: (<key3374>, string) <=> string
assocTy: (<key3374>, string) <= string
assocTy: (<object3376>, object:*) <=> object:<{write3367_row}>
assocTy: (<object3376>, object:*) <= object:<{write3367_row}>
assocTy: (<write3367>, <write3367>) <=> string
assocTy: (<write3367>, <write3367>) <= string
assocTy: tracking/updating type variable <write3367> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3372>, string) <=> string
assocTy: (<string3372>, string) <= string
assocTy: (<list3373>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3374>, string) <=> string
assocTy: (<key3374>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3377_a> else:<if3377_a> -> <if3377_a>
assocTy: (<if3315>, bool) <=> bool
assocTy: (<if3315>, bool) <= bool
assocTy: (<emit-event3378>, <emit-event3378>) <=> <if3377_a>
assocTy: (<emit-event3378>, <emit-event3378>) <= <if3377_a>
assocTy: tracking/updating type variable <emit-event3378> <= <if3377_a>
assocTy: (<bool3385>, bool) <=> <if3377_a>
assocTy: bool => <if3377_a>
assocTy: (<if3377>, <if3377>) <=> <if3377_a>
assocTy: (<if3377>, <if3377>) <= <if3377_a>
assocTy: tracking/updating type variable <if3377> <= <if3377_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3382>, bool) <=> bool
assocTy: (<bool3382>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event3378>, bool) <=> bool
assocTy: (<emit-event3378>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3387_a> else:<if3387_a> -> <if3387_a>
assocTy: (<if3315>, bool) <=> bool
assocTy: (<if3315>, bool) <= bool
assocTy: (<decimal3388>, decimal) <=> <if3387_a>
assocTy: decimal => <if3387_a>
assocTy: (<BindSchema3305_old-bal3306_ac>, decimal) <=> <if3387_a>
assocTy: (<if3387>, <if3387>) <=> <if3387_a>
assocTy: (<if3387>, <if3387>) <= <if3387_a>
assocTy: tracking/updating type variable <if3387> <= <if3387_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3299>, string) <=> string
assocTy: (<string3299>, string) <= string
assocTy: (<list3300>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3301>, string) <=> string
assocTy: (<key3301>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3394_row}> key:string bindings:binding:<{with-read3394_row}> -> <with-read3394_a>
assocTy: (<marmalade.ledger.ledger3395>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3394_row}>
assocTy: (<{with-read3394_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3394_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3394_row}>)
assocTy: (<key3401>, string) <=> string
assocTy: (<key3401>, string) <= string
assocTy: (<account-guard3407>, guard) <=> <with-read3394_a>
assocTy: (<BindSchema3403_guard3404_f>, guard) <=> <with-read3394_a>
assocTy: (<BindSchema3403schema3406>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read3394_row}>
assocTy: (<{with-read3394_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3394_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read3394_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3399>, string) <=> string
assocTy: (<string3399>, string) <= string
assocTy: (<list3400>, [*]) <=> [*]
assocTy: (<list3400>, [*]) <= [*]
assocTy: (<key3401>, string) <=> string
assocTy: (<key3401>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER3466>, bool) <=> bool
assocTy: (<TRANSFER3466>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event3411>, <emit-event3411>) <=> bool
assocTy: (<emit-event3411>, <emit-event3411>) <= bool
assocTy: tracking/updating type variable <emit-event3411> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3469>, string) <=> string
assocTy: (<string3469>, string) <= string
assocTy: (<list3470>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3472>, string) <=> string
assocTy: (<sale-account3472>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3471>, <pact-id3471>) <=> string
assocTy: (<pact-id3471>, <pact-id3471>) <= string
assocTy: tracking/updating type variable <pact-id3471> <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3428>, <=3428>) <=> bool
assocTy: (<=3428>, <=3428>) <= bool
assocTy: tracking/updating type variable <=3428> <= bool
assocTy: (<string3430>, string) <=> string
assocTy: (<string3430>, string) <= string
assocTy: (<enforce-unit3431>, bool) <=> bool
assocTy: (<enforce-unit3431>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3429>, <floor3429>) <=> <=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3429>, <floor3429>) <= <=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3429> <= <=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3428_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3428>, bool) <=> bool
assocTy: (<=3428>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>3434>, <>3434>) <=> bool
assocTy: (<>3434>, <>3434>) <= bool
assocTy: tracking/updating type variable <>3434> <= bool
assocTy: (<string3436>, string) <=> string
assocTy: (<string3436>, string) <= string
assocTy: (<enforce3433>, <enforce3433>) <=> bool
assocTy: (<enforce3433>, <enforce3433>) <= bool
assocTy: tracking/updating type variable <enforce3433> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>3434_a[integer,decimal,string,time]> y:<>3434_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <>3434_a[integer,decimal,string,time]>
assocTy: decimal => <>3434_a[integer,decimal,string,time]>
assocTy: (<decimal3435>, decimal) <=> <>3434_a[integer,decimal,string,time]>
assocTy: (<>3434>, bool) <=> bool
assocTy: (<>3434>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3440>, <DEBIT3459_e>) <=> bool
assocTy: (<enforce-guard3440>, <DEBIT3459_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3459_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3437>, <compose-capability3437>) <=> bool
assocTy: (<compose-capability3437>, <compose-capability3437>) <= bool
assocTy: tracking/updating type variable <compose-capability3437> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3443_row}> key:string bindings:binding:<{with-read3443_row}> -> <with-read3443_a>
assocTy: (<marmalade.ledger.ledger3444>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3443_row}>
assocTy: (<{with-read3443_row}>, <{with-read3443_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3443_row}>, <{with-read3443_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3443_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3443_row}>)
assocTy: (<key3450>, string) <=> string
assocTy: (<key3450>, string) <= string
assocTy: (<account-guard3456>, guard) <=> <with-read3443_a>
assocTy: guard => <with-read3443_a>
assocTy: (<BindSchema3452_guard3453_f>, <BindSchema3452_guard3453_f>) <=> <with-read3443_a>
assocTy: (<BindSchema3452_guard3453_f>, <BindSchema3452_guard3453_f>) <= <with-read3443_a>
assocTy: tracking/updating type variable <BindSchema3452_guard3453_f> <= <with-read3443_a>
assocTy: (<BindSchema3452schema3455>, *) <=> binding:<{with-read3443_row}>
assocTy: (<BindSchema3452schema3455>, *) <= binding:<{with-read3443_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3448>, string) <=> string
assocTy: (<string3448>, string) <= string
assocTy: (<list3449>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3450>, string) <=> string
assocTy: (<key3450>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3463>, bool) <=> bool
assocTy: (<bool3463>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER3466>, bool) <=> bool
assocTy: (<TRANSFER3466>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3469>, string) <=> string
assocTy: (<string3469>, string) <= string
assocTy: (<list3470>, [*]) <=> [*]
assocTy: (<list3470>, [*]) <= [*]
assocTy: (<sale-account3472>, string) <=> string
assocTy: (<sale-account3472>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3471>, string) <=> string
assocTy: (<pact-id3471>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3479>, bool) <=> bool
assocTy: (<bool3479>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<withdraw3482>, bool) <=> bool
assocTy: (<withdraw3482>, bool) <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4127_sale-id4132>, string) <=> string
assocTy: (<inlinedCallArgs4127_sale-id4132>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<not3110>, <not3110>) <=> bool
assocTy: (<not3110>, <not3110>) <= bool
assocTy: tracking/updating type variable <not3110> <= bool
assocTy: (<string3118>, string) <=> string
assocTy: (<string3118>, string) <= string
assocTy: (<enforce3109>, <enforce3109>) <=> bool
assocTy: (<enforce3109>, <enforce3109>) <= bool
assocTy: tracking/updating type variable <enforce3109> <= bool
Mangled funtype: x:bool -> bool -> x:bool -> bool
assocTy: (<sale-active3116>, bool) <=> bool
assocTy: (<sale-active3116>, bool) <= bool
assocTy: (<not3110>, bool) <=> bool
assocTy: (<not3110>, bool) <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<3112_a[integer,decimal,string,time]> y:<<3112_a[integer,decimal,string,time]> -> bool
assocTy: (<at3113>, <at3113>) <=> <<3112_a[integer,decimal,string,time]>
assocTy: (<at3113>, <at3113>) <= <<3112_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at3113> <= <<3112_a[integer,decimal,string,time]>
assocTy: (<sale_timeout2699>, integer) <=> <<3112_a[integer,decimal,string,time]>
assocTy: integer => <<3112_a[integer,decimal,string,time]>
assocTy: (<sale-active3116>, bool) <=> bool
assocTy: (<sale-active3116>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data3115>, <chain-data3115>) <=> object:{.public-chain-data}
assocTy: (<chain-data3115>, <chain-data3115>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data3115> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3122>, <DEBIT3141_e>) <=> bool
assocTy: (<enforce-guard3122>, <DEBIT3141_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3141_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3119>, <compose-capability3119>) <=> bool
assocTy: (<compose-capability3119>, <compose-capability3119>) <= bool
assocTy: tracking/updating type variable <compose-capability3119> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3143>, string) <=> string
assocTy: (<string3143>, string) <= string
assocTy: (<list3144>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3146>, string) <=> string
assocTy: (<sale-account3146>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3145>, <pact-id3145>) <=> string
assocTy: (<pact-id3145>, <pact-id3145>) <= string
assocTy: tracking/updating type variable <pact-id3145> <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3125_row}> key:string bindings:binding:<{with-read3125_row}> -> <with-read3125_a>
assocTy: (<marmalade.ledger.ledger3126>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3125_row}>
assocTy: (<{with-read3125_row}>, <{with-read3125_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3125_row}>, <{with-read3125_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3125_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3125_row}>)
assocTy: (<key3132>, string) <=> string
assocTy: (<key3132>, string) <= string
assocTy: (<account-guard3138>, guard) <=> <with-read3125_a>
assocTy: guard => <with-read3125_a>
assocTy: (<BindSchema3134_guard3135_f>, <BindSchema3134_guard3135_f>) <=> <with-read3125_a>
assocTy: (<BindSchema3134_guard3135_f>, <BindSchema3134_guard3135_f>) <= <with-read3125_a>
assocTy: tracking/updating type variable <BindSchema3134_guard3135_f> <= <with-read3125_a>
assocTy: (<BindSchema3134schema3137>, *) <=> binding:<{with-read3125_row}>
assocTy: (<BindSchema3134schema3137>, *) <= binding:<{with-read3125_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3130>, string) <=> string
assocTy: (<string3130>, string) <= string
assocTy: (<list3131>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3132>, string) <=> string
assocTy: (<key3132>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3143>, string) <=> string
assocTy: (<string3143>, string) <= string
assocTy: (<list3144>, [*]) <=> [*]
assocTy: (<list3144>, [*]) <= [*]
assocTy: (<sale-account3146>, string) <=> string
assocTy: (<sale-account3146>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3145>, string) <=> string
assocTy: (<pact-id3145>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3151>, bool) <=> bool
assocTy: (<bool3151>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3148>, <compose-capability3148>) <=> bool
assocTy: (<compose-capability3148>, <compose-capability3148>) <= bool
assocTy: tracking/updating type variable <compose-capability3148> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3156>, bool) <=> bool
assocTy: (<bool3156>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<WITHDRAW3159>, bool) <=> bool
assocTy: (<WITHDRAW3159>, bool) <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4127_sale-id4132>, string) <=> string
assocTy: (<inlinedCallArgs4127_sale-id4132>, string) <= string
Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability3492_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<BUY3548>, bool) <=> bool
assocTy: (<BUY3548>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<sale3886>, bool) <=> <with-capability3492_a>
assocTy: bool => <with-capability3492_a>
assocTy: (<buy3883>, bool) <=> <with-capability3492_a>
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4226_sale-id4232>, string) <=> string
assocTy: (<inlinedCallArgs4226_sale-id4232>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3560>, bool) <=> bool
assocTy: (<bool3560>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability3558>, <require-capability3558>) <=> bool
assocTy: (<require-capability3558>, <require-capability3558>) <= bool
assocTy: tracking/updating type variable <require-capability3558> <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4133_sale-id4134>, string) <=> string
assocTy: (<inlinedCallArgs4133_sale-id4134>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4133_sale-id4134>, string) <=> string
assocTy: (<inlinedCallArgs4133_sale-id4134>, string) <= string
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind3564_row}> binding:binding:<{bind3564_row}> -> <bind3564_a>
assocTy: (<get-policy-info3580>, object:{marmalade.ledger.policy-info}) <=> object:<{bind3564_row}>
assocTy: (<{bind3564_row}>, <{bind3564_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind3564_row}>, <{bind3564_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind3564_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind3564_row}>)
assocTy: (<bind3564>, <bind3564>) <=> <bind3564_a>
assocTy: (<bind3564>, <bind3564>) <= <bind3564_a>
assocTy: tracking/updating type variable <bind3564> <= <bind3564_a>
assocTy: (<enforce-buy3592>, bool) <=> <bind3564_a>
assocTy: bool => <bind3564_a>
assocTy: (<BindSchema3582schema3594>, *) <=> binding:<{bind3564_row}>
assocTy: (<BindSchema3582schema3594>, *) <= binding:<{bind3564_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3566_row}> key:string bindings:binding:<{with-read3566_row}> -> <with-read3566_a>
assocTy: (<marmalade.ledger.tokens3567>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read3566_row}>
assocTy: (<{with-read3566_row}>, <{with-read3566_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read3566_row}>, <{with-read3566_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read3566_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read3566_row}>)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<get-policy-info3580>, object:{marmalade.ledger.policy-info}) <=> <with-read3566_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read3566_a>
assocTy: (<object3577>, object:*) <=> <with-read3566_a>
assocTy: (<BindSchema3568schema3579>, *) <=> binding:<{with-read3566_row}>
assocTy: (<BindSchema3568schema3579>, *) <= binding:<{with-read3566_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3673>, string) <=> string
assocTy: (<string3673>, string) <= string
assocTy: (<list3674>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3676>, string) <=> string
assocTy: (<sale-account3676>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3675>, <pact-id3675>) <=> string
assocTy: (<pact-id3675>, <pact-id3675>) <= string
assocTy: tracking/updating type variable <pact-id3675> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3603>, <DEBIT3622_e>) <=> bool
assocTy: (<enforce-guard3603>, <DEBIT3622_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3622_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability3600>, <require-capability3600>) <=> bool
assocTy: (<require-capability3600>, <require-capability3600>) <= bool
assocTy: tracking/updating type variable <require-capability3600> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3606_row}> key:string bindings:binding:<{with-read3606_row}> -> <with-read3606_a>
assocTy: (<marmalade.ledger.ledger3607>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3606_row}>
assocTy: (<{with-read3606_row}>, <{with-read3606_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3606_row}>, <{with-read3606_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3606_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3606_row}>)
assocTy: (<key3613>, string) <=> string
assocTy: (<key3613>, string) <= string
assocTy: (<account-guard3619>, guard) <=> <with-read3606_a>
assocTy: guard => <with-read3606_a>
assocTy: (<BindSchema3615_guard3616_f>, <BindSchema3615_guard3616_f>) <=> <with-read3606_a>
assocTy: (<BindSchema3615_guard3616_f>, <BindSchema3615_guard3616_f>) <= <with-read3606_a>
assocTy: tracking/updating type variable <BindSchema3615_guard3616_f> <= <with-read3606_a>
assocTy: (<BindSchema3615schema3618>, *) <=> binding:<{with-read3606_row}>
assocTy: (<BindSchema3615schema3618>, *) <= binding:<{with-read3606_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3611>, string) <=> string
assocTy: (<string3611>, string) <= string
assocTy: (<list3612>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3613>, string) <=> string
assocTy: (<key3613>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3635>, <=3635>) <=> bool
assocTy: (<=3635>, <=3635>) <= bool
assocTy: tracking/updating type variable <=3635> <= bool
assocTy: (<string3637>, string) <=> string
assocTy: (<string3637>, string) <= string
assocTy: (<enforce-unit3638>, bool) <=> bool
assocTy: (<enforce-unit3638>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3636>, <floor3636>) <=> <=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3636>, <floor3636>) <= <=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3636> <= <=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3635_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3635>, bool) <=> bool
assocTy: (<=3635>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3640_row}> key:string bindings:binding:<{with-read3640_row}> -> <with-read3640_a>
assocTy: (<marmalade.ledger.ledger3641>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3640_row}>
assocTy: (<{with-read3640_row}>, <{with-read3640_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3640_row}>, <{with-read3640_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3640_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3640_row}>)
assocTy: (<key3647>, string) <=> string
assocTy: (<key3647>, string) <= string
assocTy: (<debit3670>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read3640_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read3640_a>
assocTy: (<object3668>, object:*) <=> <with-read3640_a>
assocTy: (<BindSchema3649schema3669>, *) <=> binding:<{with-read3640_row}>
assocTy: (<BindSchema3649schema3669>, *) <= binding:<{with-read3640_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=3653>, <<=3653>) <=> bool
assocTy: (<<=3653>, <<=3653>) <= bool
assocTy: tracking/updating type variable <<=3653> <= bool
assocTy: (<string3654>, string) <=> string
assocTy: (<string3654>, string) <= string
assocTy: (<enforce3652>, <enforce3652>) <=> bool
assocTy: (<enforce3652>, <enforce3652>) <= bool
assocTy: tracking/updating type variable <enforce3652> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=3653_a[integer,decimal,string,time]> y:<<=3653_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <<=3653_a[integer,decimal,string,time]>
assocTy: decimal => <<=3653_a[integer,decimal,string,time]>
assocTy: (<BindSchema3649_old-bal3650_aa>, <BindSchema3649_old-bal3650_aa>) <=> <<=3653_a[integer,decimal,string,time]>
assocTy: (<BindSchema3649_old-bal3650_aa>, <BindSchema3649_old-bal3650_aa>) <= <<=3653_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema3649_old-bal3650_aa> <= <<=3653_a[integer,decimal,string,time]>
assocTy: (<<=3653>, bool) <=> bool
assocTy: (<<=3653>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update3658_row}> key:string object:object:~<{update3658_row}> -> string
assocTy: (<marmalade.ledger.ledger3659>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update3658_row}>
assocTy: (<{update3658_row}>, <{update3658_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update3658_row}>, <{update3658_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update3658_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update3658_row}>)
assocTy: (<key3665>, string) <=> string
assocTy: (<key3665>, string) <= string
assocTy: (<object3667>, object:*) <=> object:~<{update3658_row}>
assocTy: (<object3667>, object:*) <= object:~<{update3658_row}>
assocTy: (<update3658>, <update3658>) <=> string
assocTy: (<update3658>, <update3658>) <= string
assocTy: tracking/updating type variable <update3658> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3663>, string) <=> string
assocTy: (<string3663>, string) <= string
assocTy: (<list3664>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3665>, string) <=> string
assocTy: (<key3665>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3645>, string) <=> string
assocTy: (<string3645>, string) <= string
assocTy: (<list3646>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3647>, string) <=> string
assocTy: (<key3647>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3673>, string) <=> string
assocTy: (<string3673>, string) <= string
assocTy: (<list3674>, [*]) <=> [*]
assocTy: (<list3674>, [*]) <= [*]
assocTy: (<sale-account3676>, string) <=> string
assocTy: (<sale-account3676>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3675>, string) <=> string
assocTy: (<pact-id3675>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>3685>, <>3685>) <=> bool
assocTy: (<>3685>, <>3685>) <= bool
assocTy: tracking/updating type variable <>3685> <= bool
assocTy: (<string3688>, string) <=> string
assocTy: (<string3688>, string) <= string
assocTy: (<enforce3684>, <enforce-valid-account3690_c>) <=> bool
assocTy: (<enforce3684>, <enforce-valid-account3690_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account3690_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>3685_a[integer,decimal,string,time]> y:<>3685_a[integer,decimal,string,time]> -> bool
assocTy: (<length3686>, <length3686>) <=> <>3685_a[integer,decimal,string,time]>
assocTy: (<length3686>, <length3686>) <= <>3685_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length3686> <= <>3685_a[integer,decimal,string,time]>
assocTy: (<integer3687>, integer) <=> <>3685_a[integer,decimal,string,time]>
assocTy: integer => <>3685_a[integer,decimal,string,time]>
assocTy: (<>3685>, bool) <=> bool
assocTy: (<>3685>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length3686_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<BindLet3485_buyer3486>, string) <=> <length3686_a[[<l>],string,object:<{o}>]>
assocTy: string => <length3686_a[[<l>],string,object:<{o}>]>
assocTy: (<length3686>, integer) <=> integer
assocTy: (<length3686>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3703>, <=3703>) <=> bool
assocTy: (<=3703>, <=3703>) <= bool
assocTy: tracking/updating type variable <=3703> <= bool
assocTy: (<string3705>, string) <=> string
assocTy: (<string3705>, string) <= string
assocTy: (<enforce-unit3706>, bool) <=> bool
assocTy: (<enforce-unit3706>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3704>, <floor3704>) <=> <=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3704>, <floor3704>) <= <=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3704> <= <=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3703_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3703>, bool) <=> bool
assocTy: (<=3703>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3711>, bool) <=> bool
assocTy: (<bool3711>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability3708>, <require-capability3708>) <=> bool
assocTy: (<require-capability3708>, <require-capability3708>) <= bool
assocTy: tracking/updating type variable <require-capability3708> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read3714_row}> key:string defaults:object:~<{with-default-read3714_row}> bindings:binding:~<{with-default-read3714_row}> -> <with-default-read3714_a>
assocTy: (<marmalade.ledger.ledger3715>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read3714_row}>
assocTy: (<{with-default-read3714_row}>, <{with-default-read3714_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read3714_row}>, <{with-default-read3714_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read3714_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read3714_row}>)
assocTy: (<key3721>, string) <=> string
assocTy: (<key3721>, string) <= string
assocTy: (<object3723>, object:*) <=> object:~<{with-default-read3714_row}>
assocTy: (<object3723>, object:*) <= object:~<{with-default-read3714_row}>
assocTy: (<credit3810>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read3714_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read3714_a>
assocTy: (<object3806>, object:*) <=> <with-default-read3714_a>
assocTy: (<BindSchema3725schema3809>, *) <=> binding:~<{with-default-read3714_row}>
assocTy: (<BindSchema3725schema3809>, *) <= binding:~<{with-default-read3714_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3731>, <=3731>) <=> bool
assocTy: (<=3731>, <=3731>) <= bool
assocTy: tracking/updating type variable <=3731> <= bool
assocTy: (<string3732>, string) <=> string
assocTy: (<string3732>, string) <= string
assocTy: (<enforce3730>, <enforce3730>) <=> bool
assocTy: (<enforce3730>, <enforce3730>) <= bool
assocTy: tracking/updating type variable <enforce3730> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3731_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3731_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs4186_guard4189>, guard) <=> <=3731_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=3731_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindLet3485_buyer-guard3489>, guard) <=> <=3731_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3731>, bool) <=> bool
assocTy: (<=3731>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3735_a> else:<if3735_a> -> <if3735_a>
assocTy: (<=3736>, <=3736>) <=> bool
assocTy: (<=3736>, <=3736>) <= bool
assocTy: tracking/updating type variable <=3736> <= bool
assocTy: (<enforce-reserved3780>, bool) <=> <if3735_a>
assocTy: bool => <if3735_a>
assocTy: (<bool3782>, bool) <=> <if3735_a>
assocTy: (<if3735>, <if3735>) <=> <if3735_a>
assocTy: (<if3735>, <if3735>) <= <if3735_a>
assocTy: tracking/updating type variable <if3735> <= <if3735_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema3725_old-bal3726_ac>, <BindSchema3725_old-bal3726_ac>) <=> <=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema3725_old-bal3726_ac>, <BindSchema3725_old-bal3726_ac>) <= <=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema3725_old-bal3726_ac> <= <=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal3737>, decimal) <=> <=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3736_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3736>, bool) <=> bool
assocTy: (<=3736>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3747_a> else:<if3747_a> -> <if3747_a>
assocTy: (<=3748>, <=3748>) <=> bool
assocTy: (<=3748>, <=3748>) <= bool
assocTy: tracking/updating type variable <=3748> <= bool
assocTy: (<take3752>, <take3752>) <=> <if3747_a>
assocTy: (<take3752>, <take3752>) <= <if3747_a>
assocTy: tracking/updating type variable <take3752> <= <if3747_a>
assocTy: (<string3754>, string) <=> <if3747_a>
assocTy: string => <if3747_a>
assocTy: (<check-reserved3755>, string) <=> <if3747_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string3749>, string) <=> <=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take3750>, <take3750>) <=> <=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take3750>, <take3750>) <= <=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take3750> <= <=3748_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3748>, bool) <=> bool
assocTy: (<=3748>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3757_a> else:<if3757_a> -> <if3757_a>
assocTy: (<=3758>, <=3758>) <=> bool
assocTy: (<=3758>, <=3758>) <= bool
assocTy: tracking/updating type variable <=3758> <= bool
assocTy: (<bool3760>, bool) <=> <if3757_a>
assocTy: bool => <if3757_a>
assocTy: (<if3761>, <if3761>) <=> <if3757_a>
assocTy: (<if3761>, <if3761>) <= <if3757_a>
assocTy: tracking/updating type variable <if3761> <= <if3757_a>
assocTy: (<enforce-reserved3780>, bool) <=> <if3757_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3758_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3758_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string3759>, string) <=> <=3758_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=3758_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved3755>, string) <=> <=3758_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3758>, bool) <=> bool
assocTy: (<=3758>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3761_a> else:<if3761_a> -> <if3761_a>
assocTy: (<=3762>, <=3762>) <=> bool
assocTy: (<=3762>, <=3762>) <= bool
assocTy: tracking/updating type variable <=3762> <= bool
assocTy: (<enforce3764>, <enforce3764>) <=> <if3761_a>
assocTy: (<enforce3764>, <enforce3764>) <= <if3761_a>
assocTy: tracking/updating type variable <enforce3764> <= <if3761_a>
assocTy: (<enforce3775>, <enforce3775>) <=> <if3761_a>
assocTy: (<enforce3775>, <enforce3775>) <= <if3761_a>
assocTy: tracking/updating type variable <enforce3775> <= <if3761_a>
assocTy: (<if3761>, bool) <=> <if3761_a>
assocTy: bool => <if3761_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string3763>, string) <=> <=3762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=3762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved3755>, string) <=> <=3762_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3762>, bool) <=> bool
assocTy: (<=3762>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3765>, <=3765>) <=> bool
assocTy: (<=3765>, <=3765>) <= bool
assocTy: tracking/updating type variable <=3765> <= bool
assocTy: (<string3774>, string) <=> string
assocTy: (<string3774>, string) <= string
assocTy: (<enforce3764>, bool) <=> bool
assocTy: (<enforce3764>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format3766>, <format3766>) <=> <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format3766>, <format3766>) <= <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format3766> <= <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format3769>, <format3769>) <=> <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format3769>, <format3769>) <= <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format3769> <= <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3765>, bool) <=> bool
assocTy: (<=3765>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3767>, string) <=> string
assocTy: (<string3767>, string) <= string
assocTy: (<list3768>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format3766>, <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format3766>, <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=3765_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3770>, string) <=> string
assocTy: (<string3770>, string) <= string
assocTy: (<list3771>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format3769>, string) <=> string
assocTy: (<format3769>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool3776>, bool) <=> bool
assocTy: (<bool3776>, bool) <= bool
assocTy: (<format3777>, <format3777>) <=> string
assocTy: (<format3777>, <format3777>) <= string
assocTy: tracking/updating type variable <format3777> <= string
assocTy: (<enforce3775>, bool) <=> bool
assocTy: (<enforce3775>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3778>, string) <=> string
assocTy: (<string3778>, string) <= string
assocTy: (<list3779>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format3777>, string) <=> string
assocTy: (<format3777>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3785_a> else:<if3785_a> -> <if3785_a>
assocTy: (<if3735>, bool) <=> bool
assocTy: (<if3735>, bool) <= bool
assocTy: (<sale_amount2698>, decimal) <=> <if3785_a>
assocTy: decimal => <if3785_a>
assocTy: (<+3786>, <+3786>) <=> <if3785_a>
assocTy: (<+3786>, <+3786>) <= <if3785_a>
assocTy: tracking/updating type variable <+3786> <= <if3785_a>
assocTy: (<if3785>, <if3785>) <=> <if3785_a>
assocTy: (<if3785>, <if3785>) <= <if3785_a>
assocTy: tracking/updating type variable <if3785> <= <if3785_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write3787_row}> key:string object:object:<{write3787_row}> -> string
assocTy: (<marmalade.ledger.ledger3788>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write3787_row}>
assocTy: (<{write3787_row}>, <{write3787_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write3787_row}>, <{write3787_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write3787_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write3787_row}>)
assocTy: (<key3794>, string) <=> string
assocTy: (<key3794>, string) <= string
assocTy: (<object3796>, object:*) <=> object:<{write3787_row}>
assocTy: (<object3796>, object:*) <= object:<{write3787_row}>
assocTy: (<write3787>, <write3787>) <=> string
assocTy: (<write3787>, <write3787>) <= string
assocTy: tracking/updating type variable <write3787> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3792>, string) <=> string
assocTy: (<string3792>, string) <= string
assocTy: (<list3793>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3794>, string) <=> string
assocTy: (<key3794>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3797_a> else:<if3797_a> -> <if3797_a>
assocTy: (<if3735>, bool) <=> bool
assocTy: (<if3735>, bool) <= bool
assocTy: (<emit-event3798>, <emit-event3798>) <=> <if3797_a>
assocTy: (<emit-event3798>, <emit-event3798>) <= <if3797_a>
assocTy: tracking/updating type variable <emit-event3798> <= <if3797_a>
assocTy: (<bool3805>, bool) <=> <if3797_a>
assocTy: bool => <if3797_a>
assocTy: (<if3797>, <if3797>) <=> <if3797_a>
assocTy: (<if3797>, <if3797>) <= <if3797_a>
assocTy: tracking/updating type variable <if3797> <= <if3797_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3802>, bool) <=> bool
assocTy: (<bool3802>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event3798>, bool) <=> bool
assocTy: (<emit-event3798>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if3807_a> else:<if3807_a> -> <if3807_a>
assocTy: (<if3735>, bool) <=> bool
assocTy: (<if3735>, bool) <= bool
assocTy: (<decimal3808>, decimal) <=> <if3807_a>
assocTy: decimal => <if3807_a>
assocTy: (<BindSchema3725_old-bal3726_ac>, decimal) <=> <if3807_a>
assocTy: (<if3807>, <if3807>) <=> <if3807_a>
assocTy: (<if3807>, <if3807>) <= <if3807_a>
assocTy: tracking/updating type variable <if3807> <= <if3807_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3719>, string) <=> string
assocTy: (<string3719>, string) <= string
assocTy: (<list3720>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3721>, string) <=> string
assocTy: (<key3721>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER3867>, bool) <=> bool
assocTy: (<TRANSFER3867>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event3812>, <emit-event3812>) <=> bool
assocTy: (<emit-event3812>, <emit-event3812>) <= bool
assocTy: tracking/updating type variable <emit-event3812> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3870>, string) <=> string
assocTy: (<string3870>, string) <= string
assocTy: (<list3871>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3873>, string) <=> string
assocTy: (<sale-account3873>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3872>, <pact-id3872>) <=> string
assocTy: (<pact-id3872>, <pact-id3872>) <= string
assocTy: tracking/updating type variable <pact-id3872> <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=3829>, <=3829>) <=> bool
assocTy: (<=3829>, <=3829>) <= bool
assocTy: tracking/updating type variable <=3829> <= bool
assocTy: (<string3831>, string) <=> string
assocTy: (<string3831>, string) <= string
assocTy: (<enforce-unit3832>, bool) <=> bool
assocTy: (<enforce-unit3832>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor3830>, <floor3830>) <=> <=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor3830>, <floor3830>) <= <=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor3830> <= <=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<sale_amount2698>, decimal) <=> <=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=3829_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=3829>, bool) <=> bool
assocTy: (<=3829>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>3835>, <>3835>) <=> bool
assocTy: (<>3835>, <>3835>) <= bool
assocTy: tracking/updating type variable <>3835> <= bool
assocTy: (<string3837>, string) <=> string
assocTy: (<string3837>, string) <= string
assocTy: (<enforce3834>, <enforce3834>) <=> bool
assocTy: (<enforce3834>, <enforce3834>) <= bool
assocTy: tracking/updating type variable <enforce3834> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>3835_a[integer,decimal,string,time]> y:<>3835_a[integer,decimal,string,time]> -> bool
assocTy: (<sale_amount2698>, decimal) <=> <>3835_a[integer,decimal,string,time]>
assocTy: decimal => <>3835_a[integer,decimal,string,time]>
assocTy: (<decimal3836>, decimal) <=> <>3835_a[integer,decimal,string,time]>
assocTy: (<>3835>, bool) <=> bool
assocTy: (<>3835>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3841>, <DEBIT3860_e>) <=> bool
assocTy: (<enforce-guard3841>, <DEBIT3860_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3860_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3838>, <compose-capability3838>) <=> bool
assocTy: (<compose-capability3838>, <compose-capability3838>) <= bool
assocTy: tracking/updating type variable <compose-capability3838> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3844_row}> key:string bindings:binding:<{with-read3844_row}> -> <with-read3844_a>
assocTy: (<marmalade.ledger.ledger3845>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3844_row}>
assocTy: (<{with-read3844_row}>, <{with-read3844_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3844_row}>, <{with-read3844_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3844_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3844_row}>)
assocTy: (<key3851>, string) <=> string
assocTy: (<key3851>, string) <= string
assocTy: (<account-guard3857>, guard) <=> <with-read3844_a>
assocTy: guard => <with-read3844_a>
assocTy: (<BindSchema3853_guard3854_f>, <BindSchema3853_guard3854_f>) <=> <with-read3844_a>
assocTy: (<BindSchema3853_guard3854_f>, <BindSchema3853_guard3854_f>) <= <with-read3844_a>
assocTy: tracking/updating type variable <BindSchema3853_guard3854_f> <= <with-read3844_a>
assocTy: (<BindSchema3853schema3856>, *) <=> binding:<{with-read3844_row}>
assocTy: (<BindSchema3853schema3856>, *) <= binding:<{with-read3844_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3849>, string) <=> string
assocTy: (<string3849>, string) <= string
assocTy: (<list3850>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3851>, string) <=> string
assocTy: (<key3851>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3864>, bool) <=> bool
assocTy: (<bool3864>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER3867>, bool) <=> bool
assocTy: (<TRANSFER3867>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3870>, string) <=> string
assocTy: (<string3870>, string) <= string
assocTy: (<list3871>, [*]) <=> [*]
assocTy: (<list3871>, [*]) <= [*]
assocTy: (<sale-account3873>, string) <=> string
assocTy: (<sale-account3873>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3872>, string) <=> string
assocTy: (<pact-id3872>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3880>, bool) <=> bool
assocTy: (<bool3880>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<buy3883>, bool) <=> bool
assocTy: (<buy3883>, bool) <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4226_sale-id4232>, string) <=> string
assocTy: (<inlinedCallArgs4226_sale-id4232>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4250_sale-id4256>, string) <=> string
assocTy: (<inlinedCallArgs4250_sale-id4256>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<sale-active3505>, bool) <=> bool
assocTy: (<sale-active3505>, bool) <= bool
assocTy: (<string3507>, string) <=> string
assocTy: (<string3507>, string) <= string
assocTy: (<enforce3499>, <enforce3499>) <=> bool
assocTy: (<enforce3499>, <enforce3499>) <= bool
assocTy: tracking/updating type variable <enforce3499> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<3501_a[integer,decimal,string,time]> y:<<3501_a[integer,decimal,string,time]> -> bool
assocTy: (<at3502>, <at3502>) <=> <<3501_a[integer,decimal,string,time]>
assocTy: (<at3502>, <at3502>) <= <<3501_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at3502> <= <<3501_a[integer,decimal,string,time]>
assocTy: (<sale_timeout2699>, integer) <=> <<3501_a[integer,decimal,string,time]>
assocTy: integer => <<3501_a[integer,decimal,string,time]>
assocTy: (<sale-active3505>, bool) <=> bool
assocTy: (<sale-active3505>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data3504>, <chain-data3504>) <=> object:{.public-chain-data}
assocTy: (<chain-data3504>, <chain-data3504>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data3504> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard3511>, <DEBIT3530_e>) <=> bool
assocTy: (<enforce-guard3511>, <DEBIT3530_e>) <= bool
assocTy: tracking/updating type variable <DEBIT3530_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3508>, <compose-capability3508>) <=> bool
assocTy: (<compose-capability3508>, <compose-capability3508>) <= bool
assocTy: tracking/updating type variable <compose-capability3508> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3532>, string) <=> string
assocTy: (<string3532>, string) <= string
assocTy: (<list3533>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account3535>, string) <=> string
assocTy: (<sale-account3535>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3534>, <pact-id3534>) <=> string
assocTy: (<pact-id3534>, <pact-id3534>) <= string
assocTy: tracking/updating type variable <pact-id3534> <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read3514_row}> key:string bindings:binding:<{with-read3514_row}> -> <with-read3514_a>
assocTy: (<marmalade.ledger.ledger3515>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read3514_row}>
assocTy: (<{with-read3514_row}>, <{with-read3514_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read3514_row}>, <{with-read3514_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read3514_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read3514_row}>)
assocTy: (<key3521>, string) <=> string
assocTy: (<key3521>, string) <= string
assocTy: (<account-guard3527>, guard) <=> <with-read3514_a>
assocTy: guard => <with-read3514_a>
assocTy: (<BindSchema3523_guard3524_f>, <BindSchema3523_guard3524_f>) <=> <with-read3514_a>
assocTy: (<BindSchema3523_guard3524_f>, <BindSchema3523_guard3524_f>) <= <with-read3514_a>
assocTy: tracking/updating type variable <BindSchema3523_guard3524_f> <= <with-read3514_a>
assocTy: (<BindSchema3523schema3526>, *) <=> binding:<{with-read3514_row}>
assocTy: (<BindSchema3523schema3526>, *) <= binding:<{with-read3514_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3519>, string) <=> string
assocTy: (<string3519>, string) <= string
assocTy: (<list3520>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key3521>, string) <=> string
assocTy: (<key3521>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string3532>, string) <=> string
assocTy: (<string3532>, string) <= string
assocTy: (<list3533>, [*]) <=> [*]
assocTy: (<list3533>, [*]) <= [*]
assocTy: (<sale-account3535>, string) <=> string
assocTy: (<sale-account3535>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id3534>, string) <=> string
assocTy: (<pact-id3534>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3540>, bool) <=> bool
assocTy: (<bool3540>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability3537>, <compose-capability3537>) <=> bool
assocTy: (<compose-capability3537>, <compose-capability3537>) <= bool
assocTy: tracking/updating type variable <compose-capability3537> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool3545>, bool) <=> bool
assocTy: (<bool3545>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<BUY3548>, bool) <=> bool
assocTy: (<BUY3548>, bool) <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs4250_sale-id4256>, string) <=> string
assocTy: (<inlinedCallArgs4250_sale-id4256>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list2770::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema2798schema2810::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema2798_policy2799>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema2798_policy2799>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs3889_token3890>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs3889_token3890>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema2784schema2795::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema2784_manifest2791_m>, <BindSchema2784_manifest2791_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema2784_manifest2791_m>, <BindSchema2784_manifest2791_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema2784_manifest2791_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema2784_policy2785>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema2784_policy2785>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema2784_precision2789_l>, <BindSchema2784_precision2789_l>) <=> integer
assocTy: (<BindSchema2784_precision2789_l>, <BindSchema2784_precision2789_l>) <= integer
assocTy: tracking/updating type variable <BindSchema2784_precision2789_l> <= integer
assocTy: (<BindSchema2784_supply2787_k>, <BindSchema2784_supply2787_k>) <=> decimal
assocTy: (<BindSchema2784_supply2787_k>, <BindSchema2784_supply2787_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema2784_supply2787_k> <= decimal
applySchemas [binding]: (BindSchema2831schema2834::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2831_guard2832_f>, guard) <=> guard
assocTy: (<BindSchema2831_guard2832_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2828::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2865schema2885::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2865_old-bal2866_aa>, decimal) <=> decimal
assocTy: (<BindSchema2865_old-bal2866_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list2880::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2883::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-2873>, <-2873>) <=> decimal
assocTy: (<-2873>, <-2873>) <= decimal
assocTy: tracking/updating type variable <-2873> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object2883>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object2883>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list2862::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3024::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2935schema3019::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2935_old-bal2936_ac>, decimal) <=> decimal
assocTy: (<BindSchema2935_old-bal2936_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs3938_guard3941>, guard) <=> guard
assocTy: (<inlinedCallArgs3938_guard3941>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2978::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2981::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2989::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3003::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3006::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<sale-account3026>, string) <=> string
assocTy: (<sale-account3026>, string) <= string
assocTy: (<if2995>, decimal) <=> decimal
assocTy: (<if2995>, decimal) <= decimal
assocTy: (<inlinedCallArgs3938_guard3941>, guard) <=> guard
assocTy: (<inlinedCallArgs3938_guard3941>, guard) <= guard
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Skipping TC on specified heterogenous list for node: list2930::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object2933::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal2934>, decimal) <=> decimal
assocTy: (<decimal2934>, decimal) <= decimal
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <=> guard
assocTy: (<inlinedCallArgs3946_guard3949>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object2933>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object2933>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list3024::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3089::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3071schema3074::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3071_guard3072_f>, guard) <=> guard
assocTy: (<BindSchema3071_guard3072_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3068::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3089::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema2740schema2743::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema2740_guard2741_f>, guard) <=> guard
assocTy: (<BindSchema2740_guard2741_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list2737::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2756::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list2756::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3162::TyList {_tyListType = TyAny}
Skipping TC on specified heterogenous list for node: list3251::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3192schema3195::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3192_guard3193_f>, guard) <=> guard
assocTy: (<BindSchema3192_guard3193_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3189::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3226schema3246::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3226_old-bal3227_aa>, decimal) <=> decimal
assocTy: (<BindSchema3226_old-bal3227_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list3241::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3244::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-3234>, <-3234>) <=> decimal
assocTy: (<-3234>, <-3234>) <= decimal
assocTy: tracking/updating type variable <-3234> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object3244>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object3244>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list3223::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3251::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3403schema3406::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3403_guard3404_f>, guard) <=> guard
assocTy: (<BindSchema3403_guard3404_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3400::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3305schema3389::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3305_old-bal3306_ac>, decimal) <=> decimal
assocTy: (<BindSchema3305_old-bal3306_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs4056_guard4059>, guard) <=> guard
assocTy: (<inlinedCallArgs4056_guard4059>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3348::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3351::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3359::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3373::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3376::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<sale_seller2697>, string) <=> string
assocTy: (<sale_seller2697>, string) <= string
assocTy: (<if3365>, decimal) <=> decimal
assocTy: (<if3365>, decimal) <= decimal
assocTy: (<inlinedCallArgs4056_guard4059>, guard) <=> guard
assocTy: (<inlinedCallArgs4056_guard4059>, guard) <= guard
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Skipping TC on specified heterogenous list for node: list3300::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3303::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal3304>, decimal) <=> decimal
assocTy: (<decimal3304>, decimal) <= decimal
assocTy: (<account-guard3407>, guard) <=> guard
assocTy: (<account-guard3407>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object3303>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object3303>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
applySchemas [binding]: (BindSchema3403schema3406::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3403_guard3404_f>, guard) <=> guard
assocTy: (<BindSchema3403_guard3404_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3400::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3470::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3452schema3455::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3452_guard3453_f>, guard) <=> guard
assocTy: (<BindSchema3452_guard3453_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3449::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3470::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3144::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3134schema3137::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3134_guard3135_f>, guard) <=> guard
assocTy: (<BindSchema3134_guard3135_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3131::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3144::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3551::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema3582schema3594::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema3582_policy3583>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema3582_policy3583>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs4135_token4136>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs4135_token4136>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema3568schema3579::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema3568_manifest3575_m>, <BindSchema3568_manifest3575_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema3568_manifest3575_m>, <BindSchema3568_manifest3575_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema3568_manifest3575_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema3568_policy3569>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema3568_policy3569>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema3568_precision3573_l>, <BindSchema3568_precision3573_l>) <=> integer
assocTy: (<BindSchema3568_precision3573_l>, <BindSchema3568_precision3573_l>) <= integer
assocTy: tracking/updating type variable <BindSchema3568_precision3573_l> <= integer
assocTy: (<BindSchema3568_supply3571_k>, <BindSchema3568_supply3571_k>) <=> decimal
assocTy: (<BindSchema3568_supply3571_k>, <BindSchema3568_supply3571_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema3568_supply3571_k> <= decimal
Skipping TC on specified heterogenous list for node: list3674::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3615schema3618::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3615_guard3616_f>, guard) <=> guard
assocTy: (<BindSchema3615_guard3616_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3612::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3649schema3669::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3649_old-bal3650_aa>, decimal) <=> decimal
assocTy: (<BindSchema3649_old-bal3650_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list3664::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3667::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-3657>, <-3657>) <=> decimal
assocTy: (<-3657>, <-3657>) <= decimal
assocTy: tracking/updating type variable <-3657> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object3667>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object3667>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list3646::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3674::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3725schema3809::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3725_old-bal3726_ac>, decimal) <=> decimal
assocTy: (<BindSchema3725_old-bal3726_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs4186_guard4189>, guard) <=> guard
assocTy: (<inlinedCallArgs4186_guard4189>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3768::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3771::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3779::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3793::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3796::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<BindLet3485_buyer3486>, string) <=> string
assocTy: (<BindLet3485_buyer3486>, string) <= string
assocTy: (<if3785>, decimal) <=> decimal
assocTy: (<if3785>, decimal) <= decimal
assocTy: (<inlinedCallArgs4186_guard4189>, guard) <=> guard
assocTy: (<inlinedCallArgs4186_guard4189>, guard) <= guard
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Skipping TC on specified heterogenous list for node: list3720::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object3723::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal3724>, decimal) <=> decimal
assocTy: (<decimal3724>, decimal) <= decimal
assocTy: (<BindLet3485_buyer-guard3489>, guard) <=> guard
assocTy: (<BindLet3485_buyer-guard3489>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object3723>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object3723>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list3871::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3853schema3856::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3853_guard3854_f>, guard) <=> guard
assocTy: (<BindSchema3853_guard3854_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3850::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3871::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3533::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema3523schema3526::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema3523_guard3524_f>, guard) <=> guard
assocTy: (<BindSchema3523_guard3524_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list3520::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list3533::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3511::<enforce-guard3511>, tyVar=<enforce-guard3511>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3528::<account-guard3528>, tyVar=<account-guard3527>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3511, <enforce-guard3511>, bool)]), (guard, [(account-guard3528, <account-guard3527>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3511, <enforce-guard3511>)])), (guard, (guard, [(account-guard3528, <account-guard3527>)]))]
Adjusting type for solution: ((enforce-guard3511, <enforce-guard3511>), bool, bool)
assocTy: (<enforce-guard3511>, bool) <=> bool
assocTy: (<enforce-guard3511>, bool) <= bool
assocTy: (<enforce-guard3511>, bool) <=> bool
assocTy: (<enforce-guard3511>, bool) <= bool
Adjusting type for solution: ((account-guard3528, <account-guard3527>), guard, guard)
assocTy: (<account-guard3527>, guard) <=> guard
assocTy: (<account-guard3527>, guard) <= guard
assocTy: (<account-guard3527>, guard) <=> guard
assocTy: (<account-guard3527>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3502_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at3502_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3502_l>] -> <at3502_a>: roles=[(RetVar, RoleTys { candArgTy=<at3502_a>, AST=at3502::<at3502>, tyVar=<at3502>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3502_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at3502_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3502_o}> -> <at3502_a>, roles=[(RetVar, RoleTys { candArgTy=<at3502_a>, AST=at3502::<at3502>, tyVar=<at3502>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3503::string, tyVar=<string3503>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3502_o}>, AST=chain-data3504::<chain-data3504>, tyVar=<chain-data3504>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at3502_o}> -> <at3502_a> with [(<at3502_a>, [(at3502, <at3502>, integer)]), (string, [(string3503, <string3503>, string)]), (object:<{at3502_o}>, [(chain-data3504, <chain-data3504>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at3502_o}> -> <at3502_a>: [(<at3502_a>, (integer, [(at3502, <at3502>)])), (string, (string, [(string3503, <string3503>)])), (object:<{at3502_o}>, (object:{.public-chain-data}, [(chain-data3504, <chain-data3504>)]))]
Adjusting type for solution: ((at3502, <at3502>), <at3502_a>, integer)
assocTy: (<at3502>, integer) <=> <at3502_a>
assocTy: integer => <at3502_a>
assocTy: (<at3502>, integer) <=> integer
assocTy: (<at3502>, integer) <= integer
Adjusting type for solution: ((string3503, <string3503>), string, string)
assocTy: (<string3503>, string) <=> string
assocTy: (<string3503>, string) <= string
assocTy: (<string3503>, string) <=> string
assocTy: (<string3503>, string) <= string
Adjusting type for solution: ((chain-data3504, <chain-data3504>), object:<{at3502_o}>, object:{.public-chain-data})
assocTy: (<chain-data3504>, object:{.public-chain-data}) <=> object:<{at3502_o}>
assocTy: (<{at3502_o}>, <{at3502_o}>) <=> {.public-chain-data}
assocTy: (<{at3502_o}>, <{at3502_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at3502_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at3502_o}>)
assocTy: (<chain-data3504>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data3504>, object:{.public-chain-data}) <= object:{.public-chain-data}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3841::<enforce-guard3841>, tyVar=<enforce-guard3841>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3858::<account-guard3858>, tyVar=<account-guard3857>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3841, <enforce-guard3841>, bool)]), (guard, [(account-guard3858, <account-guard3857>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3841, <enforce-guard3841>)])), (guard, (guard, [(account-guard3858, <account-guard3857>)]))]
Adjusting type for solution: ((enforce-guard3841, <enforce-guard3841>), bool, bool)
assocTy: (<enforce-guard3841>, bool) <=> bool
assocTy: (<enforce-guard3841>, bool) <= bool
assocTy: (<enforce-guard3841>, bool) <=> bool
assocTy: (<enforce-guard3841>, bool) <= bool
Adjusting type for solution: ((account-guard3858, <account-guard3857>), guard, guard)
assocTy: (<account-guard3857>, guard) <=> guard
assocTy: (<account-guard3857>, guard) <= guard
assocTy: (<account-guard3857>, guard) <=> guard
assocTy: (<account-guard3857>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3830::<floor3830>, tyVar=<floor3830>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4200_amount4202::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3819_p3820::<BindLet3819_p3820_ai>, tyVar=<precision3826>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3819_p3820, <precision3826>, integer)]), (decimal, [(floor3830, <floor3830>, decimal), (inlinedCallArgs4200_amount4202, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3819_p3820, <precision3826>)])), (decimal, (decimal, [(floor3830, <floor3830>), (inlinedCallArgs4200_amount4202, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3819_p3820, <precision3826>), integer, integer)
assocTy: (<precision3826>, integer) <=> integer
assocTy: (<precision3826>, integer) <= integer
assocTy: (<precision3826>, integer) <=> integer
assocTy: (<precision3826>, integer) <= integer
Adjusting type for solution: ((floor3830, <floor3830>), decimal, decimal)
assocTy: (<floor3830>, decimal) <=> decimal
assocTy: (<floor3830>, decimal) <= decimal
assocTy: (<floor3830>, decimal) <=> decimal
assocTy: (<floor3830>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4200_amount4202, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3824_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3824_row}>, roleTy=<read3824>
tryFunType: cand: table:table:<{read3824_row}> key:string -> object:<{read3824_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3824_row}>, AST=read3824::<read3824>, tyVar=<read3824>, resolvedTy=<read3824>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3824_row}>, AST=marmalade.ledger.tokens3825::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3825>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4198_id4199::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3824_row}> key:string -> object:<{read3824_row}> with [(string, [(inlinedCallArgs4198_id4199, <sale_id2696>, string)]), (table:<{read3824_row}>, [(marmalade.ledger.tokens3825, <marmalade.ledger.tokens3825>, table:{marmalade.ledger.token-schema})]), (object:<{read3824_row}>, [(read3824, <read3824>, <read3824>)])]
Solved overload with table:table:<{read3824_row}> key:string -> object:<{read3824_row}>: [(string, (string, [(inlinedCallArgs4198_id4199, <sale_id2696>)])), (table:<{read3824_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3825, <marmalade.ledger.tokens3825>)])), (object:<{read3824_row}>, (object:<{read3824_row}>, [(read3824, <read3824>)]))]
Adjusting type for solution: ((inlinedCallArgs4198_id4199, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3825, <marmalade.ledger.tokens3825>), table:<{read3824_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3825>, table:{marmalade.ledger.token-schema}) <=> table:<{read3824_row}>
assocTy: (<{read3824_row}>, <{read3824_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3824_row}>, <{read3824_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3824_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3824_row}>)
assocTy: (<marmalade.ledger.tokens3825>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3825>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3824, <read3824>), object:<{read3824_row}>, object:<{read3824_row}>)
assocTy: (<read3824>, <read3824>) <=> object:<{read3824_row}>
assocTy: (<read3824>, <read3824>) <= object:<{read3824_row}>
assocTy: tracking/updating type variable <read3824> <= object:<{read3824_row}>
assocTy: (<read3824>, object:{marmalade.ledger.token-schema}) <=> object:<{read3824_row}>
assocTy: (<{read3824_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3824_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3824_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3822_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3822_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3822_l>] -> <at3822_a>: roles=[(RetVar, RoleTys { candArgTy=<at3822_a>, AST=at3822::<at3822>, tyVar=<precision3826>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3822_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3822_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3822_o}> -> <at3822_a>, roles=[(RetVar, RoleTys { candArgTy=<at3822_a>, AST=at3822::<at3822>, tyVar=<precision3826>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3823::string, tyVar=<string3823>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3822_o}>, AST=read3824::<read3824>, tyVar=<read3824>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3822_o}> -> <at3822_a> with [(<at3822_a>, [(at3822, <precision3826>, integer)]), (string, [(string3823, <string3823>, string)]), (object:<{at3822_o}>, [(read3824, <read3824>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3822_o}> -> <at3822_a>: [(<at3822_a>, (integer, [(at3822, <precision3826>)])), (string, (string, [(string3823, <string3823>)])), (object:<{at3822_o}>, (object:{marmalade.ledger.token-schema}, [(read3824, <read3824>)]))]
Adjusting type for solution: ((at3822, <precision3826>), <at3822_a>, integer)
assocTy: (<precision3826>, integer) <=> <at3822_a>
assocTy: integer => <at3822_a>
assocTy: (<precision3826>, integer) <=> integer
assocTy: (<precision3826>, integer) <= integer
Adjusting type for solution: ((string3823, <string3823>), string, string)
assocTy: (<string3823>, string) <=> string
assocTy: (<string3823>, string) <= string
assocTy: (<string3823>, string) <=> string
assocTy: (<string3823>, string) <= string
Adjusting type for solution: ((read3824, <read3824>), object:<{at3822_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3824>, object:{marmalade.ledger.token-schema}) <=> object:<{at3822_o}>
assocTy: (<{at3822_o}>, <{at3822_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3822_o}>, <{at3822_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3822_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3822_o}>)
assocTy: (<read3824>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3824>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+3786_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+3786_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+3786_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+3786_a[integer,decimal]> y:<+3786_a[integer,decimal]> -> <+3786_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+3786_a[integer,decimal]>, AST=+3786::<+3786>, tyVar=<+3786>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+3786_a[integer,decimal]>, AST=BindSchema3725_old-bal3726::<BindSchema3725_old-bal3726_ac>, tyVar=<BindSchema3725_old-bal3726_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+3786_a[integer,decimal]>, AST=inlinedCallArgs4193_amount4197::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal})]
tryFunType: trying x:<+3786_a[integer,decimal]> y:<+3786_a[integer,decimal]> -> <+3786_a[integer,decimal]> with [(<+3786_a[integer,decimal]>, [(+3786, <+3786>, decimal), (inlinedCallArgs4193_amount4197, <sale_amount2698>, decimal), (BindSchema3725_old-bal3726, <BindSchema3725_old-bal3726_ac>, decimal)])]
Solved overload with x:<+3786_a[integer,decimal]> y:<+3786_a[integer,decimal]> -> <+3786_a[integer,decimal]>: [(<+3786_a[integer,decimal]>, (decimal, [(+3786, <+3786>), (inlinedCallArgs4193_amount4197, <sale_amount2698>), (BindSchema3725_old-bal3726, <BindSchema3725_old-bal3726_ac>)]))]
Adjusting type for solution: ((+3786, <+3786>), <+3786_a[integer,decimal]>, decimal)
assocTy: (<+3786>, decimal) <=> <+3786_a[integer,decimal]>
assocTy: decimal => <+3786_a[integer,decimal]>
assocTy: (<+3786>, decimal) <=> decimal
assocTy: (<+3786>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4193_amount4197, <sale_amount2698>), <+3786_a[integer,decimal]>, decimal)
assocTy: (<sale_amount2698>, decimal) <=> <+3786_a[integer,decimal]>
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
Adjusting type for solution: ((BindSchema3725_old-bal3726, <BindSchema3725_old-bal3726_ac>), <+3786_a[integer,decimal]>, decimal)
assocTy: (<BindSchema3725_old-bal3726_ac>, decimal) <=> <+3786_a[integer,decimal]>
assocTy: (<BindSchema3725_old-bal3726_ac>, decimal) <=> decimal
assocTy: (<BindSchema3725_old-bal3726_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop3772_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop3772_a[[<l>],string]>, roleTy=<drop3772>
tryFunType: cand: count:integer list:<drop3772_a[[<l>],string]> -> <drop3772_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop3772_a[[<l>],string]>, AST=drop3772::<drop3772>, tyVar=<drop3772>, resolvedTy=<drop3772>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3773::integer, tyVar=<integer3773>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop3772_a[[<l>],string]>, AST=inlinedCallArgs4180_account4181::string, tyVar=<BindLet3485_buyer3486>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop3772_a[[<l>],string]> -> <drop3772_a[[<l>],string]> with [(<drop3772_a[[<l>],string]>, [(drop3772, <drop3772>, <drop3772>), (inlinedCallArgs4180_account4181, <BindLet3485_buyer3486>, string)]), (integer, [(integer3773, <integer3773>, integer)])]
Solved overload with count:integer list:<drop3772_a[[<l>],string]> -> <drop3772_a[[<l>],string]>: [(<drop3772_a[[<l>],string]>, (string, [(drop3772, <drop3772>), (inlinedCallArgs4180_account4181, <BindLet3485_buyer3486>)])), (integer, (integer, [(integer3773, <integer3773>)]))]
Adjusting type for solution: ((drop3772, <drop3772>), <drop3772_a[[<l>],string]>, string)
assocTy: (<drop3772>, <drop3772>) <=> <drop3772_a[[<l>],string]>
assocTy: (<drop3772>, <drop3772>) <= <drop3772_a[[<l>],string]>
assocTy: tracking/updating type variable <drop3772> <= <drop3772_a[[<l>],string]>
assocTy: (<drop3772>, <drop3772_a[[<l>],string]>) <=> string
assocTy: (<drop3772>, <drop3772_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop3772_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs4180_account4181, <BindLet3485_buyer3486>), <drop3772_a[[<l>],string]>, string)
assocTy: (<BindLet3485_buyer3486>, string) <=> <drop3772_a[[<l>],string]>
assocTy: (<BindLet3485_buyer3486>, string) <=> string
assocTy: (<BindLet3485_buyer3486>, string) <= string
Adjusting type for solution: ((integer3773, <integer3773>), integer, integer)
assocTy: (<integer3773>, integer) <=> integer
assocTy: (<integer3773>, integer) <= integer
assocTy: (<integer3773>, integer) <=> integer
assocTy: (<integer3773>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take3752_a[[<l>],string]>, roleTy=<take3745>
tryFunType: unify role: role=RetVar, candTy=<take3752_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take3752_a[[<l>],string]> -> <take3752_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take3752_a[[<l>],string]>, AST=take3752::<take3752>, tyVar=<take3752>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3753::integer, tyVar=<integer3753>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take3752_a[[<l>],string]>, AST=BindLet3743_pfx3744::<BindLet3743_pfx3744_f>, tyVar=<take3745>, resolvedTy=<take3745>})]
tryFunType: trying count:integer list:<take3752_a[[<l>],string]> -> <take3752_a[[<l>],string]> with [(<take3752_a[[<l>],string]>, [(take3752, <take3752>, string), (BindLet3743_pfx3744, <take3745>, <take3745>)]), (integer, [(integer3753, <integer3753>, integer)])]
Solved overload with count:integer list:<take3752_a[[<l>],string]> -> <take3752_a[[<l>],string]>: [(<take3752_a[[<l>],string]>, (string, [(take3752, <take3752>), (BindLet3743_pfx3744, <take3745>)])), (integer, (integer, [(integer3753, <integer3753>)]))]
Adjusting type for solution: ((take3752, <take3752>), <take3752_a[[<l>],string]>, string)
assocTy: (<take3752>, string) <=> <take3752_a[[<l>],string]>
assocTy: string => <take3752_a[[<l>],string]>
assocTy: (<take3752>, string) <=> string
assocTy: (<take3752>, string) <= string
Adjusting type for solution: ((BindLet3743_pfx3744, <take3745>), <take3752_a[[<l>],string]>, string)
assocTy: (<take3745>, <take3745>) <=> <take3752_a[[<l>],string]>
assocTy: (<take3745>, <take3745>) <= <take3752_a[[<l>],string]>
assocTy: tracking/updating type variable <take3745> <= <take3752_a[[<l>],string]>
assocTy: (<take3745>, string) <=> string
assocTy: (<take3745>, string) <= string
Adjusting type for solution: ((integer3753, <integer3753>), integer, integer)
assocTy: (<integer3753>, integer) <=> integer
assocTy: (<integer3753>, integer) <= integer
assocTy: (<integer3753>, integer) <=> integer
assocTy: (<integer3753>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take3750_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take3750_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take3750_a[[<l>],string]> -> <take3750_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take3750_a[[<l>],string]>, AST=take3750::<take3750>, tyVar=<take3750>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3751::integer, tyVar=<integer3751>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take3750_a[[<l>],string]>, AST=BindLet3743_pfx3744::<BindLet3743_pfx3744_f>, tyVar=<take3745>, resolvedTy=string})]
tryFunType: trying count:integer list:<take3750_a[[<l>],string]> -> <take3750_a[[<l>],string]> with [(<take3750_a[[<l>],string]>, [(take3750, <take3750>, string), (BindLet3743_pfx3744, <take3745>, string)]), (integer, [(integer3751, <integer3751>, integer)])]
Solved overload with count:integer list:<take3750_a[[<l>],string]> -> <take3750_a[[<l>],string]>: [(<take3750_a[[<l>],string]>, (string, [(take3750, <take3750>), (BindLet3743_pfx3744, <take3745>)])), (integer, (integer, [(integer3751, <integer3751>)]))]
Adjusting type for solution: ((take3750, <take3750>), <take3750_a[[<l>],string]>, string)
assocTy: (<take3750>, string) <=> <take3750_a[[<l>],string]>
assocTy: string => <take3750_a[[<l>],string]>
assocTy: (<take3750>, string) <=> string
assocTy: (<take3750>, string) <= string
Adjusting type for solution: ((BindLet3743_pfx3744, <take3745>), <take3750_a[[<l>],string]>, string)
assocTy: (<take3745>, string) <=> <take3750_a[[<l>],string]>
assocTy: (<take3745>, string) <=> string
assocTy: (<take3745>, string) <= string
Adjusting type for solution: ((integer3751, <integer3751>), integer, integer)
assocTy: (<integer3751>, integer) <=> integer
assocTy: (<integer3751>, integer) <= integer
assocTy: (<integer3751>, integer) <=> integer
assocTy: (<integer3751>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take3745_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take3745_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take3745_a[[<l>],string]> -> <take3745_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take3745_a[[<l>],string]>, AST=take3745::<take3745>, tyVar=<take3745>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3746::integer, tyVar=<integer3746>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take3745_a[[<l>],string]>, AST=inlinedCallArgs4178_account4179::string, tyVar=<BindLet3485_buyer3486>, resolvedTy=string})]
tryFunType: trying count:integer list:<take3745_a[[<l>],string]> -> <take3745_a[[<l>],string]> with [(<take3745_a[[<l>],string]>, [(take3745, <take3745>, string), (inlinedCallArgs4178_account4179, <BindLet3485_buyer3486>, string)]), (integer, [(integer3746, <integer3746>, integer)])]
Solved overload with count:integer list:<take3745_a[[<l>],string]> -> <take3745_a[[<l>],string]>: [(<take3745_a[[<l>],string]>, (string, [(take3745, <take3745>), (inlinedCallArgs4178_account4179, <BindLet3485_buyer3486>)])), (integer, (integer, [(integer3746, <integer3746>)]))]
Adjusting type for solution: ((take3745, <take3745>), <take3745_a[[<l>],string]>, string)
assocTy: (<take3745>, string) <=> <take3745_a[[<l>],string]>
assocTy: string => <take3745_a[[<l>],string]>
assocTy: (<take3745>, string) <=> string
assocTy: (<take3745>, string) <= string
Adjusting type for solution: ((inlinedCallArgs4178_account4179, <BindLet3485_buyer3486>), <take3745_a[[<l>],string]>, string)
assocTy: (<BindLet3485_buyer3486>, string) <=> <take3745_a[[<l>],string]>
assocTy: (<BindLet3485_buyer3486>, string) <=> string
assocTy: (<BindLet3485_buyer3486>, string) <= string
Adjusting type for solution: ((integer3746, <integer3746>), integer, integer)
assocTy: (<integer3746>, integer) <=> integer
assocTy: (<integer3746>, integer) <= integer
assocTy: (<integer3746>, integer) <=> integer
assocTy: (<integer3746>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3704::<floor3704>, tyVar=<floor3704>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4172_amount4174::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3693_p3694::<BindLet3693_p3694_ai>, tyVar=<precision3700>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3693_p3694, <precision3700>, integer)]), (decimal, [(floor3704, <floor3704>, decimal), (inlinedCallArgs4172_amount4174, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3693_p3694, <precision3700>)])), (decimal, (decimal, [(floor3704, <floor3704>), (inlinedCallArgs4172_amount4174, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3693_p3694, <precision3700>), integer, integer)
assocTy: (<precision3700>, integer) <=> integer
assocTy: (<precision3700>, integer) <= integer
assocTy: (<precision3700>, integer) <=> integer
assocTy: (<precision3700>, integer) <= integer
Adjusting type for solution: ((floor3704, <floor3704>), decimal, decimal)
assocTy: (<floor3704>, decimal) <=> decimal
assocTy: (<floor3704>, decimal) <= decimal
assocTy: (<floor3704>, decimal) <=> decimal
assocTy: (<floor3704>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4172_amount4174, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3698_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3698_row}>, roleTy=<read3698>
tryFunType: cand: table:table:<{read3698_row}> key:string -> object:<{read3698_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3698_row}>, AST=read3698::<read3698>, tyVar=<read3698>, resolvedTy=<read3698>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3698_row}>, AST=marmalade.ledger.tokens3699::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3699>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4170_id4171::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3698_row}> key:string -> object:<{read3698_row}> with [(string, [(inlinedCallArgs4170_id4171, <sale_id2696>, string)]), (table:<{read3698_row}>, [(marmalade.ledger.tokens3699, <marmalade.ledger.tokens3699>, table:{marmalade.ledger.token-schema})]), (object:<{read3698_row}>, [(read3698, <read3698>, <read3698>)])]
Solved overload with table:table:<{read3698_row}> key:string -> object:<{read3698_row}>: [(string, (string, [(inlinedCallArgs4170_id4171, <sale_id2696>)])), (table:<{read3698_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3699, <marmalade.ledger.tokens3699>)])), (object:<{read3698_row}>, (object:<{read3698_row}>, [(read3698, <read3698>)]))]
Adjusting type for solution: ((inlinedCallArgs4170_id4171, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3699, <marmalade.ledger.tokens3699>), table:<{read3698_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3699>, table:{marmalade.ledger.token-schema}) <=> table:<{read3698_row}>
assocTy: (<{read3698_row}>, <{read3698_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3698_row}>, <{read3698_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3698_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3698_row}>)
assocTy: (<marmalade.ledger.tokens3699>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3699>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3698, <read3698>), object:<{read3698_row}>, object:<{read3698_row}>)
assocTy: (<read3698>, <read3698>) <=> object:<{read3698_row}>
assocTy: (<read3698>, <read3698>) <= object:<{read3698_row}>
assocTy: tracking/updating type variable <read3698> <= object:<{read3698_row}>
assocTy: (<read3698>, object:{marmalade.ledger.token-schema}) <=> object:<{read3698_row}>
assocTy: (<{read3698_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3698_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3698_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3696_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3696_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3696_l>] -> <at3696_a>: roles=[(RetVar, RoleTys { candArgTy=<at3696_a>, AST=at3696::<at3696>, tyVar=<precision3700>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3696_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3696_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3696_o}> -> <at3696_a>, roles=[(RetVar, RoleTys { candArgTy=<at3696_a>, AST=at3696::<at3696>, tyVar=<precision3700>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3697::string, tyVar=<string3697>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3696_o}>, AST=read3698::<read3698>, tyVar=<read3698>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3696_o}> -> <at3696_a> with [(<at3696_a>, [(at3696, <precision3700>, integer)]), (string, [(string3697, <string3697>, string)]), (object:<{at3696_o}>, [(read3698, <read3698>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3696_o}> -> <at3696_a>: [(<at3696_a>, (integer, [(at3696, <precision3700>)])), (string, (string, [(string3697, <string3697>)])), (object:<{at3696_o}>, (object:{marmalade.ledger.token-schema}, [(read3698, <read3698>)]))]
Adjusting type for solution: ((at3696, <precision3700>), <at3696_a>, integer)
assocTy: (<precision3700>, integer) <=> <at3696_a>
assocTy: integer => <at3696_a>
assocTy: (<precision3700>, integer) <=> integer
assocTy: (<precision3700>, integer) <= integer
Adjusting type for solution: ((string3697, <string3697>), string, string)
assocTy: (<string3697>, string) <=> string
assocTy: (<string3697>, string) <= string
assocTy: (<string3697>, string) <=> string
assocTy: (<string3697>, string) <= string
Adjusting type for solution: ((read3698, <read3698>), object:<{at3696_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3698>, object:{marmalade.ledger.token-schema}) <=> object:<{at3696_o}>
assocTy: (<{at3696_o}>, <{at3696_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3696_o}>, <{at3696_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3696_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3696_o}>)
assocTy: (<read3698>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3698>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-3657_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-3657_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-3657_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-3657_a[integer,decimal]> y:<-3657_a[integer,decimal]> -> <-3657_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-3657_a[integer,decimal]>, AST=-3657::<-3657>, tyVar=<-3657>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-3657_a[integer,decimal]>, AST=BindSchema3649_old-bal3650::<BindSchema3649_old-bal3650_aa>, tyVar=<BindSchema3649_old-bal3650_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-3657_a[integer,decimal]>, AST=inlinedCallArgs4164_amount4167::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal})]
tryFunType: trying x:<-3657_a[integer,decimal]> y:<-3657_a[integer,decimal]> -> <-3657_a[integer,decimal]> with [(<-3657_a[integer,decimal]>, [(-3657, <-3657>, decimal), (inlinedCallArgs4164_amount4167, <sale_amount2698>, decimal), (BindSchema3649_old-bal3650, <BindSchema3649_old-bal3650_aa>, decimal)])]
Solved overload with x:<-3657_a[integer,decimal]> y:<-3657_a[integer,decimal]> -> <-3657_a[integer,decimal]>: [(<-3657_a[integer,decimal]>, (decimal, [(-3657, <-3657>), (inlinedCallArgs4164_amount4167, <sale_amount2698>), (BindSchema3649_old-bal3650, <BindSchema3649_old-bal3650_aa>)]))]
Adjusting type for solution: ((-3657, <-3657>), <-3657_a[integer,decimal]>, decimal)
assocTy: (<-3657>, decimal) <=> <-3657_a[integer,decimal]>
assocTy: decimal => <-3657_a[integer,decimal]>
assocTy: (<-3657>, decimal) <=> decimal
assocTy: (<-3657>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4164_amount4167, <sale_amount2698>), <-3657_a[integer,decimal]>, decimal)
assocTy: (<sale_amount2698>, decimal) <=> <-3657_a[integer,decimal]>
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
Adjusting type for solution: ((BindSchema3649_old-bal3650, <BindSchema3649_old-bal3650_aa>), <-3657_a[integer,decimal]>, decimal)
assocTy: (<BindSchema3649_old-bal3650_aa>, decimal) <=> <-3657_a[integer,decimal]>
assocTy: (<BindSchema3649_old-bal3650_aa>, decimal) <=> decimal
assocTy: (<BindSchema3649_old-bal3650_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3636::<floor3636>, tyVar=<floor3636>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4154_amount4156::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3625_p3626::<BindLet3625_p3626_ai>, tyVar=<precision3632>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3625_p3626, <precision3632>, integer)]), (decimal, [(floor3636, <floor3636>, decimal), (inlinedCallArgs4154_amount4156, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3625_p3626, <precision3632>)])), (decimal, (decimal, [(floor3636, <floor3636>), (inlinedCallArgs4154_amount4156, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3625_p3626, <precision3632>), integer, integer)
assocTy: (<precision3632>, integer) <=> integer
assocTy: (<precision3632>, integer) <= integer
assocTy: (<precision3632>, integer) <=> integer
assocTy: (<precision3632>, integer) <= integer
Adjusting type for solution: ((floor3636, <floor3636>), decimal, decimal)
assocTy: (<floor3636>, decimal) <=> decimal
assocTy: (<floor3636>, decimal) <= decimal
assocTy: (<floor3636>, decimal) <=> decimal
assocTy: (<floor3636>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4154_amount4156, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3630_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3630_row}>, roleTy=<read3630>
tryFunType: cand: table:table:<{read3630_row}> key:string -> object:<{read3630_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3630_row}>, AST=read3630::<read3630>, tyVar=<read3630>, resolvedTy=<read3630>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3630_row}>, AST=marmalade.ledger.tokens3631::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3631>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4152_id4153::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3630_row}> key:string -> object:<{read3630_row}> with [(string, [(inlinedCallArgs4152_id4153, <sale_id2696>, string)]), (table:<{read3630_row}>, [(marmalade.ledger.tokens3631, <marmalade.ledger.tokens3631>, table:{marmalade.ledger.token-schema})]), (object:<{read3630_row}>, [(read3630, <read3630>, <read3630>)])]
Solved overload with table:table:<{read3630_row}> key:string -> object:<{read3630_row}>: [(string, (string, [(inlinedCallArgs4152_id4153, <sale_id2696>)])), (table:<{read3630_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3631, <marmalade.ledger.tokens3631>)])), (object:<{read3630_row}>, (object:<{read3630_row}>, [(read3630, <read3630>)]))]
Adjusting type for solution: ((inlinedCallArgs4152_id4153, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3631, <marmalade.ledger.tokens3631>), table:<{read3630_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3631>, table:{marmalade.ledger.token-schema}) <=> table:<{read3630_row}>
assocTy: (<{read3630_row}>, <{read3630_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3630_row}>, <{read3630_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3630_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3630_row}>)
assocTy: (<marmalade.ledger.tokens3631>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3631>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3630, <read3630>), object:<{read3630_row}>, object:<{read3630_row}>)
assocTy: (<read3630>, <read3630>) <=> object:<{read3630_row}>
assocTy: (<read3630>, <read3630>) <= object:<{read3630_row}>
assocTy: tracking/updating type variable <read3630> <= object:<{read3630_row}>
assocTy: (<read3630>, object:{marmalade.ledger.token-schema}) <=> object:<{read3630_row}>
assocTy: (<{read3630_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3630_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3630_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3628_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3628_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3628_l>] -> <at3628_a>: roles=[(RetVar, RoleTys { candArgTy=<at3628_a>, AST=at3628::<at3628>, tyVar=<precision3632>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3628_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3628_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3628_o}> -> <at3628_a>, roles=[(RetVar, RoleTys { candArgTy=<at3628_a>, AST=at3628::<at3628>, tyVar=<precision3632>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3629::string, tyVar=<string3629>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3628_o}>, AST=read3630::<read3630>, tyVar=<read3630>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3628_o}> -> <at3628_a> with [(<at3628_a>, [(at3628, <precision3632>, integer)]), (string, [(string3629, <string3629>, string)]), (object:<{at3628_o}>, [(read3630, <read3630>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3628_o}> -> <at3628_a>: [(<at3628_a>, (integer, [(at3628, <precision3632>)])), (string, (string, [(string3629, <string3629>)])), (object:<{at3628_o}>, (object:{marmalade.ledger.token-schema}, [(read3630, <read3630>)]))]
Adjusting type for solution: ((at3628, <precision3632>), <at3628_a>, integer)
assocTy: (<precision3632>, integer) <=> <at3628_a>
assocTy: integer => <at3628_a>
assocTy: (<precision3632>, integer) <=> integer
assocTy: (<precision3632>, integer) <= integer
Adjusting type for solution: ((string3629, <string3629>), string, string)
assocTy: (<string3629>, string) <=> string
assocTy: (<string3629>, string) <= string
assocTy: (<string3629>, string) <=> string
assocTy: (<string3629>, string) <= string
Adjusting type for solution: ((read3630, <read3630>), object:<{at3628_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3630>, object:{marmalade.ledger.token-schema}) <=> object:<{at3628_o}>
assocTy: (<{at3628_o}>, <{at3628_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3628_o}>, <{at3628_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3628_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3628_o}>)
assocTy: (<read3630>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3630>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3603::<enforce-guard3603>, tyVar=<enforce-guard3603>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3620::<account-guard3620>, tyVar=<account-guard3619>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3603, <enforce-guard3603>, bool)]), (guard, [(account-guard3620, <account-guard3619>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3603, <enforce-guard3603>)])), (guard, (guard, [(account-guard3620, <account-guard3619>)]))]
Adjusting type for solution: ((enforce-guard3603, <enforce-guard3603>), bool, bool)
assocTy: (<enforce-guard3603>, bool) <=> bool
assocTy: (<enforce-guard3603>, bool) <= bool
assocTy: (<enforce-guard3603>, bool) <=> bool
assocTy: (<enforce-guard3603>, bool) <= bool
Adjusting type for solution: ((account-guard3620, <account-guard3619>), guard, guard)
assocTy: (<account-guard3619>, guard) <=> guard
assocTy: (<account-guard3619>, guard) <= guard
assocTy: (<account-guard3619>, guard) <=> guard
assocTy: (<account-guard3619>, guard) <= guard
tryFunType: unify role: role=RetVar, candTy=<read-msg3490_a>, roleTy=guard
tryFunType: cand:  -> <read-msg3490_a>, roles=[(RetVar, RoleTys { candArgTy=<read-msg3490_a>, AST=read-msg3490::<read-msg3490>, tyVar=<BindLet3485_buyer-guard3489>, resolvedTy=guard})]
tryFunType: trying  -> <read-msg3490_a> with [(<read-msg3490_a>, [(read-msg3490, <BindLet3485_buyer-guard3489>, guard)])]
Solved overload with  -> <read-msg3490_a>: [(<read-msg3490_a>, (guard, [(read-msg3490, <BindLet3485_buyer-guard3489>)]))]
Adjusting type for solution: ((read-msg3490, <BindLet3485_buyer-guard3489>), <read-msg3490_a>, guard)
assocTy: (<BindLet3485_buyer-guard3489>, guard) <=> <read-msg3490_a>
assocTy: guard => <read-msg3490_a>
assocTy: (<BindLet3485_buyer-guard3489>, guard) <=> guard
assocTy: (<BindLet3485_buyer-guard3489>, guard) <= guard
tryFunType: unify role: role=RetVar, candTy=<read-msg3487_a>, roleTy=string
tryFunType: cand:  -> <read-msg3487_a>, roles=[(RetVar, RoleTys { candArgTy=<read-msg3487_a>, AST=read-msg3487::<read-msg3487>, tyVar=<BindLet3485_buyer3486>, resolvedTy=string})]
tryFunType: trying  -> <read-msg3487_a> with [(<read-msg3487_a>, [(read-msg3487, <BindLet3485_buyer3486>, string)])]
Solved overload with  -> <read-msg3487_a>: [(<read-msg3487_a>, (string, [(read-msg3487, <BindLet3485_buyer3486>)]))]
Adjusting type for solution: ((read-msg3487, <BindLet3485_buyer3486>), <read-msg3487_a>, string)
assocTy: (<BindLet3485_buyer3486>, string) <=> <read-msg3487_a>
assocTy: string => <read-msg3487_a>
assocTy: (<BindLet3485_buyer3486>, string) <=> string
assocTy: (<BindLet3485_buyer3486>, string) <= string
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3122::<enforce-guard3122>, tyVar=<enforce-guard3122>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3139::<account-guard3139>, tyVar=<account-guard3138>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3122, <enforce-guard3122>, bool)]), (guard, [(account-guard3139, <account-guard3138>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3122, <enforce-guard3122>)])), (guard, (guard, [(account-guard3139, <account-guard3138>)]))]
Adjusting type for solution: ((enforce-guard3122, <enforce-guard3122>), bool, bool)
assocTy: (<enforce-guard3122>, bool) <=> bool
assocTy: (<enforce-guard3122>, bool) <= bool
assocTy: (<enforce-guard3122>, bool) <=> bool
assocTy: (<enforce-guard3122>, bool) <= bool
Adjusting type for solution: ((account-guard3139, <account-guard3138>), guard, guard)
assocTy: (<account-guard3138>, guard) <=> guard
assocTy: (<account-guard3138>, guard) <= guard
assocTy: (<account-guard3138>, guard) <=> guard
assocTy: (<account-guard3138>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3113_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at3113_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3113_l>] -> <at3113_a>: roles=[(RetVar, RoleTys { candArgTy=<at3113_a>, AST=at3113::<at3113>, tyVar=<at3113>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3113_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at3113_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3113_o}> -> <at3113_a>, roles=[(RetVar, RoleTys { candArgTy=<at3113_a>, AST=at3113::<at3113>, tyVar=<at3113>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3114::string, tyVar=<string3114>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3113_o}>, AST=chain-data3115::<chain-data3115>, tyVar=<chain-data3115>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at3113_o}> -> <at3113_a> with [(<at3113_a>, [(at3113, <at3113>, integer)]), (string, [(string3114, <string3114>, string)]), (object:<{at3113_o}>, [(chain-data3115, <chain-data3115>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at3113_o}> -> <at3113_a>: [(<at3113_a>, (integer, [(at3113, <at3113>)])), (string, (string, [(string3114, <string3114>)])), (object:<{at3113_o}>, (object:{.public-chain-data}, [(chain-data3115, <chain-data3115>)]))]
Adjusting type for solution: ((at3113, <at3113>), <at3113_a>, integer)
assocTy: (<at3113>, integer) <=> <at3113_a>
assocTy: integer => <at3113_a>
assocTy: (<at3113>, integer) <=> integer
assocTy: (<at3113>, integer) <= integer
Adjusting type for solution: ((string3114, <string3114>), string, string)
assocTy: (<string3114>, string) <=> string
assocTy: (<string3114>, string) <= string
assocTy: (<string3114>, string) <=> string
assocTy: (<string3114>, string) <= string
Adjusting type for solution: ((chain-data3115, <chain-data3115>), object:<{at3113_o}>, object:{.public-chain-data})
assocTy: (<chain-data3115>, object:{.public-chain-data}) <=> object:<{at3113_o}>
assocTy: (<{at3113_o}>, <{at3113_o}>) <=> {.public-chain-data}
assocTy: (<{at3113_o}>, <{at3113_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at3113_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at3113_o}>)
assocTy: (<chain-data3115>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data3115>, object:{.public-chain-data}) <= object:{.public-chain-data}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3440::<enforce-guard3440>, tyVar=<enforce-guard3440>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3457::<account-guard3457>, tyVar=<account-guard3456>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3440, <enforce-guard3440>, bool)]), (guard, [(account-guard3457, <account-guard3456>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3440, <enforce-guard3440>)])), (guard, (guard, [(account-guard3457, <account-guard3456>)]))]
Adjusting type for solution: ((enforce-guard3440, <enforce-guard3440>), bool, bool)
assocTy: (<enforce-guard3440>, bool) <=> bool
assocTy: (<enforce-guard3440>, bool) <= bool
assocTy: (<enforce-guard3440>, bool) <=> bool
assocTy: (<enforce-guard3440>, bool) <= bool
Adjusting type for solution: ((account-guard3457, <account-guard3456>), guard, guard)
assocTy: (<account-guard3456>, guard) <=> guard
assocTy: (<account-guard3456>, guard) <= guard
assocTy: (<account-guard3456>, guard) <=> guard
assocTy: (<account-guard3456>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3429::<floor3429>, tyVar=<floor3429>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4080_amount4082::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3418_p3419::<BindLet3418_p3419_ai>, tyVar=<precision3425>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3418_p3419, <precision3425>, integer)]), (decimal, [(floor3429, <floor3429>, decimal), (inlinedCallArgs4080_amount4082, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3418_p3419, <precision3425>)])), (decimal, (decimal, [(floor3429, <floor3429>), (inlinedCallArgs4080_amount4082, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3418_p3419, <precision3425>), integer, integer)
assocTy: (<precision3425>, integer) <=> integer
assocTy: (<precision3425>, integer) <= integer
assocTy: (<precision3425>, integer) <=> integer
assocTy: (<precision3425>, integer) <= integer
Adjusting type for solution: ((floor3429, <floor3429>), decimal, decimal)
assocTy: (<floor3429>, decimal) <=> decimal
assocTy: (<floor3429>, decimal) <= decimal
assocTy: (<floor3429>, decimal) <=> decimal
assocTy: (<floor3429>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4080_amount4082, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3423_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3423_row}>, roleTy=<read3423>
tryFunType: cand: table:table:<{read3423_row}> key:string -> object:<{read3423_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3423_row}>, AST=read3423::<read3423>, tyVar=<read3423>, resolvedTy=<read3423>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3423_row}>, AST=marmalade.ledger.tokens3424::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3424>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4078_id4079::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3423_row}> key:string -> object:<{read3423_row}> with [(string, [(inlinedCallArgs4078_id4079, <sale_id2696>, string)]), (table:<{read3423_row}>, [(marmalade.ledger.tokens3424, <marmalade.ledger.tokens3424>, table:{marmalade.ledger.token-schema})]), (object:<{read3423_row}>, [(read3423, <read3423>, <read3423>)])]
Solved overload with table:table:<{read3423_row}> key:string -> object:<{read3423_row}>: [(string, (string, [(inlinedCallArgs4078_id4079, <sale_id2696>)])), (table:<{read3423_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3424, <marmalade.ledger.tokens3424>)])), (object:<{read3423_row}>, (object:<{read3423_row}>, [(read3423, <read3423>)]))]
Adjusting type for solution: ((inlinedCallArgs4078_id4079, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3424, <marmalade.ledger.tokens3424>), table:<{read3423_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3424>, table:{marmalade.ledger.token-schema}) <=> table:<{read3423_row}>
assocTy: (<{read3423_row}>, <{read3423_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3423_row}>, <{read3423_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3423_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3423_row}>)
assocTy: (<marmalade.ledger.tokens3424>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3424>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3423, <read3423>), object:<{read3423_row}>, object:<{read3423_row}>)
assocTy: (<read3423>, <read3423>) <=> object:<{read3423_row}>
assocTy: (<read3423>, <read3423>) <= object:<{read3423_row}>
assocTy: tracking/updating type variable <read3423> <= object:<{read3423_row}>
assocTy: (<read3423>, object:{marmalade.ledger.token-schema}) <=> object:<{read3423_row}>
assocTy: (<{read3423_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3423_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3423_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3421_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3421_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3421_l>] -> <at3421_a>: roles=[(RetVar, RoleTys { candArgTy=<at3421_a>, AST=at3421::<at3421>, tyVar=<precision3425>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3421_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3421_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3421_o}> -> <at3421_a>, roles=[(RetVar, RoleTys { candArgTy=<at3421_a>, AST=at3421::<at3421>, tyVar=<precision3425>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3422::string, tyVar=<string3422>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3421_o}>, AST=read3423::<read3423>, tyVar=<read3423>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3421_o}> -> <at3421_a> with [(<at3421_a>, [(at3421, <precision3425>, integer)]), (string, [(string3422, <string3422>, string)]), (object:<{at3421_o}>, [(read3423, <read3423>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3421_o}> -> <at3421_a>: [(<at3421_a>, (integer, [(at3421, <precision3425>)])), (string, (string, [(string3422, <string3422>)])), (object:<{at3421_o}>, (object:{marmalade.ledger.token-schema}, [(read3423, <read3423>)]))]
Adjusting type for solution: ((at3421, <precision3425>), <at3421_a>, integer)
assocTy: (<precision3425>, integer) <=> <at3421_a>
assocTy: integer => <at3421_a>
assocTy: (<precision3425>, integer) <=> integer
assocTy: (<precision3425>, integer) <= integer
Adjusting type for solution: ((string3422, <string3422>), string, string)
assocTy: (<string3422>, string) <=> string
assocTy: (<string3422>, string) <= string
assocTy: (<string3422>, string) <=> string
assocTy: (<string3422>, string) <= string
Adjusting type for solution: ((read3423, <read3423>), object:<{at3421_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3423>, object:{marmalade.ledger.token-schema}) <=> object:<{at3421_o}>
assocTy: (<{at3421_o}>, <{at3421_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3421_o}>, <{at3421_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3421_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3421_o}>)
assocTy: (<read3423>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3423>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+3366_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+3366_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+3366_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+3366_a[integer,decimal]> y:<+3366_a[integer,decimal]> -> <+3366_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+3366_a[integer,decimal]>, AST=+3366::<+3366>, tyVar=<+3366>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+3366_a[integer,decimal]>, AST=BindSchema3305_old-bal3306::<BindSchema3305_old-bal3306_ac>, tyVar=<BindSchema3305_old-bal3306_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+3366_a[integer,decimal]>, AST=inlinedCallArgs4069_amount4073::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal})]
tryFunType: trying x:<+3366_a[integer,decimal]> y:<+3366_a[integer,decimal]> -> <+3366_a[integer,decimal]> with [(<+3366_a[integer,decimal]>, [(+3366, <+3366>, decimal), (inlinedCallArgs4069_amount4073, <sale_amount2698>, decimal), (BindSchema3305_old-bal3306, <BindSchema3305_old-bal3306_ac>, decimal)])]
Solved overload with x:<+3366_a[integer,decimal]> y:<+3366_a[integer,decimal]> -> <+3366_a[integer,decimal]>: [(<+3366_a[integer,decimal]>, (decimal, [(+3366, <+3366>), (inlinedCallArgs4069_amount4073, <sale_amount2698>), (BindSchema3305_old-bal3306, <BindSchema3305_old-bal3306_ac>)]))]
Adjusting type for solution: ((+3366, <+3366>), <+3366_a[integer,decimal]>, decimal)
assocTy: (<+3366>, decimal) <=> <+3366_a[integer,decimal]>
assocTy: decimal => <+3366_a[integer,decimal]>
assocTy: (<+3366>, decimal) <=> decimal
assocTy: (<+3366>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4069_amount4073, <sale_amount2698>), <+3366_a[integer,decimal]>, decimal)
assocTy: (<sale_amount2698>, decimal) <=> <+3366_a[integer,decimal]>
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
Adjusting type for solution: ((BindSchema3305_old-bal3306, <BindSchema3305_old-bal3306_ac>), <+3366_a[integer,decimal]>, decimal)
assocTy: (<BindSchema3305_old-bal3306_ac>, decimal) <=> <+3366_a[integer,decimal]>
assocTy: (<BindSchema3305_old-bal3306_ac>, decimal) <=> decimal
assocTy: (<BindSchema3305_old-bal3306_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop3352_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop3352_a[[<l>],string]>, roleTy=<drop3352>
tryFunType: cand: count:integer list:<drop3352_a[[<l>],string]> -> <drop3352_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop3352_a[[<l>],string]>, AST=drop3352::<drop3352>, tyVar=<drop3352>, resolvedTy=<drop3352>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3353::integer, tyVar=<integer3353>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop3352_a[[<l>],string]>, AST=inlinedCallArgs4050_account4051::string, tyVar=<sale_seller2697>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop3352_a[[<l>],string]> -> <drop3352_a[[<l>],string]> with [(<drop3352_a[[<l>],string]>, [(drop3352, <drop3352>, <drop3352>), (inlinedCallArgs4050_account4051, <sale_seller2697>, string)]), (integer, [(integer3353, <integer3353>, integer)])]
Solved overload with count:integer list:<drop3352_a[[<l>],string]> -> <drop3352_a[[<l>],string]>: [(<drop3352_a[[<l>],string]>, (string, [(drop3352, <drop3352>), (inlinedCallArgs4050_account4051, <sale_seller2697>)])), (integer, (integer, [(integer3353, <integer3353>)]))]
Adjusting type for solution: ((drop3352, <drop3352>), <drop3352_a[[<l>],string]>, string)
assocTy: (<drop3352>, <drop3352>) <=> <drop3352_a[[<l>],string]>
assocTy: (<drop3352>, <drop3352>) <= <drop3352_a[[<l>],string]>
assocTy: tracking/updating type variable <drop3352> <= <drop3352_a[[<l>],string]>
assocTy: (<drop3352>, <drop3352_a[[<l>],string]>) <=> string
assocTy: (<drop3352>, <drop3352_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop3352_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs4050_account4051, <sale_seller2697>), <drop3352_a[[<l>],string]>, string)
assocTy: (<sale_seller2697>, string) <=> <drop3352_a[[<l>],string]>
assocTy: (<sale_seller2697>, string) <=> string
assocTy: (<sale_seller2697>, string) <= string
Adjusting type for solution: ((integer3353, <integer3353>), integer, integer)
assocTy: (<integer3353>, integer) <=> integer
assocTy: (<integer3353>, integer) <= integer
assocTy: (<integer3353>, integer) <=> integer
assocTy: (<integer3353>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take3332_a[[<l>],string]>, roleTy=<take3325>
tryFunType: unify role: role=RetVar, candTy=<take3332_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take3332_a[[<l>],string]> -> <take3332_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take3332_a[[<l>],string]>, AST=take3332::<take3332>, tyVar=<take3332>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3333::integer, tyVar=<integer3333>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take3332_a[[<l>],string]>, AST=BindLet3323_pfx3324::<BindLet3323_pfx3324_f>, tyVar=<take3325>, resolvedTy=<take3325>})]
tryFunType: trying count:integer list:<take3332_a[[<l>],string]> -> <take3332_a[[<l>],string]> with [(<take3332_a[[<l>],string]>, [(take3332, <take3332>, string), (BindLet3323_pfx3324, <take3325>, <take3325>)]), (integer, [(integer3333, <integer3333>, integer)])]
Solved overload with count:integer list:<take3332_a[[<l>],string]> -> <take3332_a[[<l>],string]>: [(<take3332_a[[<l>],string]>, (string, [(take3332, <take3332>), (BindLet3323_pfx3324, <take3325>)])), (integer, (integer, [(integer3333, <integer3333>)]))]
Adjusting type for solution: ((take3332, <take3332>), <take3332_a[[<l>],string]>, string)
assocTy: (<take3332>, string) <=> <take3332_a[[<l>],string]>
assocTy: string => <take3332_a[[<l>],string]>
assocTy: (<take3332>, string) <=> string
assocTy: (<take3332>, string) <= string
Adjusting type for solution: ((BindLet3323_pfx3324, <take3325>), <take3332_a[[<l>],string]>, string)
assocTy: (<take3325>, <take3325>) <=> <take3332_a[[<l>],string]>
assocTy: (<take3325>, <take3325>) <= <take3332_a[[<l>],string]>
assocTy: tracking/updating type variable <take3325> <= <take3332_a[[<l>],string]>
assocTy: (<take3325>, string) <=> string
assocTy: (<take3325>, string) <= string
Adjusting type for solution: ((integer3333, <integer3333>), integer, integer)
assocTy: (<integer3333>, integer) <=> integer
assocTy: (<integer3333>, integer) <= integer
assocTy: (<integer3333>, integer) <=> integer
assocTy: (<integer3333>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take3330_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take3330_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take3330_a[[<l>],string]> -> <take3330_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take3330_a[[<l>],string]>, AST=take3330::<take3330>, tyVar=<take3330>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3331::integer, tyVar=<integer3331>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take3330_a[[<l>],string]>, AST=BindLet3323_pfx3324::<BindLet3323_pfx3324_f>, tyVar=<take3325>, resolvedTy=string})]
tryFunType: trying count:integer list:<take3330_a[[<l>],string]> -> <take3330_a[[<l>],string]> with [(<take3330_a[[<l>],string]>, [(take3330, <take3330>, string), (BindLet3323_pfx3324, <take3325>, string)]), (integer, [(integer3331, <integer3331>, integer)])]
Solved overload with count:integer list:<take3330_a[[<l>],string]> -> <take3330_a[[<l>],string]>: [(<take3330_a[[<l>],string]>, (string, [(take3330, <take3330>), (BindLet3323_pfx3324, <take3325>)])), (integer, (integer, [(integer3331, <integer3331>)]))]
Adjusting type for solution: ((take3330, <take3330>), <take3330_a[[<l>],string]>, string)
assocTy: (<take3330>, string) <=> <take3330_a[[<l>],string]>
assocTy: string => <take3330_a[[<l>],string]>
assocTy: (<take3330>, string) <=> string
assocTy: (<take3330>, string) <= string
Adjusting type for solution: ((BindLet3323_pfx3324, <take3325>), <take3330_a[[<l>],string]>, string)
assocTy: (<take3325>, string) <=> <take3330_a[[<l>],string]>
assocTy: (<take3325>, string) <=> string
assocTy: (<take3325>, string) <= string
Adjusting type for solution: ((integer3331, <integer3331>), integer, integer)
assocTy: (<integer3331>, integer) <=> integer
assocTy: (<integer3331>, integer) <= integer
assocTy: (<integer3331>, integer) <=> integer
assocTy: (<integer3331>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take3325_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take3325_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take3325_a[[<l>],string]> -> <take3325_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take3325_a[[<l>],string]>, AST=take3325::<take3325>, tyVar=<take3325>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer3326::integer, tyVar=<integer3326>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take3325_a[[<l>],string]>, AST=inlinedCallArgs4048_account4049::string, tyVar=<sale_seller2697>, resolvedTy=string})]
tryFunType: trying count:integer list:<take3325_a[[<l>],string]> -> <take3325_a[[<l>],string]> with [(<take3325_a[[<l>],string]>, [(take3325, <take3325>, string), (inlinedCallArgs4048_account4049, <sale_seller2697>, string)]), (integer, [(integer3326, <integer3326>, integer)])]
Solved overload with count:integer list:<take3325_a[[<l>],string]> -> <take3325_a[[<l>],string]>: [(<take3325_a[[<l>],string]>, (string, [(take3325, <take3325>), (inlinedCallArgs4048_account4049, <sale_seller2697>)])), (integer, (integer, [(integer3326, <integer3326>)]))]
Adjusting type for solution: ((take3325, <take3325>), <take3325_a[[<l>],string]>, string)
assocTy: (<take3325>, string) <=> <take3325_a[[<l>],string]>
assocTy: string => <take3325_a[[<l>],string]>
assocTy: (<take3325>, string) <=> string
assocTy: (<take3325>, string) <= string
Adjusting type for solution: ((inlinedCallArgs4048_account4049, <sale_seller2697>), <take3325_a[[<l>],string]>, string)
assocTy: (<sale_seller2697>, string) <=> <take3325_a[[<l>],string]>
assocTy: (<sale_seller2697>, string) <=> string
assocTy: (<sale_seller2697>, string) <= string
Adjusting type for solution: ((integer3326, <integer3326>), integer, integer)
assocTy: (<integer3326>, integer) <=> integer
assocTy: (<integer3326>, integer) <= integer
assocTy: (<integer3326>, integer) <=> integer
assocTy: (<integer3326>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3284::<floor3284>, tyVar=<floor3284>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4042_amount4044::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3273_p3274::<BindLet3273_p3274_ai>, tyVar=<precision3280>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3273_p3274, <precision3280>, integer)]), (decimal, [(floor3284, <floor3284>, decimal), (inlinedCallArgs4042_amount4044, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3273_p3274, <precision3280>)])), (decimal, (decimal, [(floor3284, <floor3284>), (inlinedCallArgs4042_amount4044, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3273_p3274, <precision3280>), integer, integer)
assocTy: (<precision3280>, integer) <=> integer
assocTy: (<precision3280>, integer) <= integer
assocTy: (<precision3280>, integer) <=> integer
assocTy: (<precision3280>, integer) <= integer
Adjusting type for solution: ((floor3284, <floor3284>), decimal, decimal)
assocTy: (<floor3284>, decimal) <=> decimal
assocTy: (<floor3284>, decimal) <= decimal
assocTy: (<floor3284>, decimal) <=> decimal
assocTy: (<floor3284>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4042_amount4044, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3278_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3278_row}>, roleTy=<read3278>
tryFunType: cand: table:table:<{read3278_row}> key:string -> object:<{read3278_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3278_row}>, AST=read3278::<read3278>, tyVar=<read3278>, resolvedTy=<read3278>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3278_row}>, AST=marmalade.ledger.tokens3279::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3279>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4040_id4041::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3278_row}> key:string -> object:<{read3278_row}> with [(string, [(inlinedCallArgs4040_id4041, <sale_id2696>, string)]), (table:<{read3278_row}>, [(marmalade.ledger.tokens3279, <marmalade.ledger.tokens3279>, table:{marmalade.ledger.token-schema})]), (object:<{read3278_row}>, [(read3278, <read3278>, <read3278>)])]
Solved overload with table:table:<{read3278_row}> key:string -> object:<{read3278_row}>: [(string, (string, [(inlinedCallArgs4040_id4041, <sale_id2696>)])), (table:<{read3278_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3279, <marmalade.ledger.tokens3279>)])), (object:<{read3278_row}>, (object:<{read3278_row}>, [(read3278, <read3278>)]))]
Adjusting type for solution: ((inlinedCallArgs4040_id4041, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3279, <marmalade.ledger.tokens3279>), table:<{read3278_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3279>, table:{marmalade.ledger.token-schema}) <=> table:<{read3278_row}>
assocTy: (<{read3278_row}>, <{read3278_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3278_row}>, <{read3278_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3278_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3278_row}>)
assocTy: (<marmalade.ledger.tokens3279>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3279>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3278, <read3278>), object:<{read3278_row}>, object:<{read3278_row}>)
assocTy: (<read3278>, <read3278>) <=> object:<{read3278_row}>
assocTy: (<read3278>, <read3278>) <= object:<{read3278_row}>
assocTy: tracking/updating type variable <read3278> <= object:<{read3278_row}>
assocTy: (<read3278>, object:{marmalade.ledger.token-schema}) <=> object:<{read3278_row}>
assocTy: (<{read3278_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3278_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3278_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3276_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3276_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3276_l>] -> <at3276_a>: roles=[(RetVar, RoleTys { candArgTy=<at3276_a>, AST=at3276::<at3276>, tyVar=<precision3280>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3276_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3276_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3276_o}> -> <at3276_a>, roles=[(RetVar, RoleTys { candArgTy=<at3276_a>, AST=at3276::<at3276>, tyVar=<precision3280>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3277::string, tyVar=<string3277>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3276_o}>, AST=read3278::<read3278>, tyVar=<read3278>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3276_o}> -> <at3276_a> with [(<at3276_a>, [(at3276, <precision3280>, integer)]), (string, [(string3277, <string3277>, string)]), (object:<{at3276_o}>, [(read3278, <read3278>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3276_o}> -> <at3276_a>: [(<at3276_a>, (integer, [(at3276, <precision3280>)])), (string, (string, [(string3277, <string3277>)])), (object:<{at3276_o}>, (object:{marmalade.ledger.token-schema}, [(read3278, <read3278>)]))]
Adjusting type for solution: ((at3276, <precision3280>), <at3276_a>, integer)
assocTy: (<precision3280>, integer) <=> <at3276_a>
assocTy: integer => <at3276_a>
assocTy: (<precision3280>, integer) <=> integer
assocTy: (<precision3280>, integer) <= integer
Adjusting type for solution: ((string3277, <string3277>), string, string)
assocTy: (<string3277>, string) <=> string
assocTy: (<string3277>, string) <= string
assocTy: (<string3277>, string) <=> string
assocTy: (<string3277>, string) <= string
Adjusting type for solution: ((read3278, <read3278>), object:<{at3276_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3278>, object:{marmalade.ledger.token-schema}) <=> object:<{at3276_o}>
assocTy: (<{at3276_o}>, <{at3276_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3276_o}>, <{at3276_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3276_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3276_o}>)
assocTy: (<read3278>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3278>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-3234_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-3234_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-3234_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-3234_a[integer,decimal]> y:<-3234_a[integer,decimal]> -> <-3234_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-3234_a[integer,decimal]>, AST=-3234::<-3234>, tyVar=<-3234>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-3234_a[integer,decimal]>, AST=BindSchema3226_old-bal3227::<BindSchema3226_old-bal3227_aa>, tyVar=<BindSchema3226_old-bal3227_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-3234_a[integer,decimal]>, AST=inlinedCallArgs4034_amount4037::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal})]
tryFunType: trying x:<-3234_a[integer,decimal]> y:<-3234_a[integer,decimal]> -> <-3234_a[integer,decimal]> with [(<-3234_a[integer,decimal]>, [(-3234, <-3234>, decimal), (inlinedCallArgs4034_amount4037, <sale_amount2698>, decimal), (BindSchema3226_old-bal3227, <BindSchema3226_old-bal3227_aa>, decimal)])]
Solved overload with x:<-3234_a[integer,decimal]> y:<-3234_a[integer,decimal]> -> <-3234_a[integer,decimal]>: [(<-3234_a[integer,decimal]>, (decimal, [(-3234, <-3234>), (inlinedCallArgs4034_amount4037, <sale_amount2698>), (BindSchema3226_old-bal3227, <BindSchema3226_old-bal3227_aa>)]))]
Adjusting type for solution: ((-3234, <-3234>), <-3234_a[integer,decimal]>, decimal)
assocTy: (<-3234>, decimal) <=> <-3234_a[integer,decimal]>
assocTy: decimal => <-3234_a[integer,decimal]>
assocTy: (<-3234>, decimal) <=> decimal
assocTy: (<-3234>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4034_amount4037, <sale_amount2698>), <-3234_a[integer,decimal]>, decimal)
assocTy: (<sale_amount2698>, decimal) <=> <-3234_a[integer,decimal]>
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
Adjusting type for solution: ((BindSchema3226_old-bal3227, <BindSchema3226_old-bal3227_aa>), <-3234_a[integer,decimal]>, decimal)
assocTy: (<BindSchema3226_old-bal3227_aa>, decimal) <=> <-3234_a[integer,decimal]>
assocTy: (<BindSchema3226_old-bal3227_aa>, decimal) <=> decimal
assocTy: (<BindSchema3226_old-bal3227_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3213::<floor3213>, tyVar=<floor3213>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4024_amount4026::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3202_p3203::<BindLet3202_p3203_ai>, tyVar=<precision3209>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3202_p3203, <precision3209>, integer)]), (decimal, [(floor3213, <floor3213>, decimal), (inlinedCallArgs4024_amount4026, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3202_p3203, <precision3209>)])), (decimal, (decimal, [(floor3213, <floor3213>), (inlinedCallArgs4024_amount4026, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3202_p3203, <precision3209>), integer, integer)
assocTy: (<precision3209>, integer) <=> integer
assocTy: (<precision3209>, integer) <= integer
assocTy: (<precision3209>, integer) <=> integer
assocTy: (<precision3209>, integer) <= integer
Adjusting type for solution: ((floor3213, <floor3213>), decimal, decimal)
assocTy: (<floor3213>, decimal) <=> decimal
assocTy: (<floor3213>, decimal) <= decimal
assocTy: (<floor3213>, decimal) <=> decimal
assocTy: (<floor3213>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4024_amount4026, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3207_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3207_row}>, roleTy=<read3207>
tryFunType: cand: table:table:<{read3207_row}> key:string -> object:<{read3207_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3207_row}>, AST=read3207::<read3207>, tyVar=<read3207>, resolvedTy=<read3207>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3207_row}>, AST=marmalade.ledger.tokens3208::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3208>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4022_id4023::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3207_row}> key:string -> object:<{read3207_row}> with [(string, [(inlinedCallArgs4022_id4023, <sale_id2696>, string)]), (table:<{read3207_row}>, [(marmalade.ledger.tokens3208, <marmalade.ledger.tokens3208>, table:{marmalade.ledger.token-schema})]), (object:<{read3207_row}>, [(read3207, <read3207>, <read3207>)])]
Solved overload with table:table:<{read3207_row}> key:string -> object:<{read3207_row}>: [(string, (string, [(inlinedCallArgs4022_id4023, <sale_id2696>)])), (table:<{read3207_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3208, <marmalade.ledger.tokens3208>)])), (object:<{read3207_row}>, (object:<{read3207_row}>, [(read3207, <read3207>)]))]
Adjusting type for solution: ((inlinedCallArgs4022_id4023, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3208, <marmalade.ledger.tokens3208>), table:<{read3207_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3208>, table:{marmalade.ledger.token-schema}) <=> table:<{read3207_row}>
assocTy: (<{read3207_row}>, <{read3207_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3207_row}>, <{read3207_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3207_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3207_row}>)
assocTy: (<marmalade.ledger.tokens3208>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3208>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3207, <read3207>), object:<{read3207_row}>, object:<{read3207_row}>)
assocTy: (<read3207>, <read3207>) <=> object:<{read3207_row}>
assocTy: (<read3207>, <read3207>) <= object:<{read3207_row}>
assocTy: tracking/updating type variable <read3207> <= object:<{read3207_row}>
assocTy: (<read3207>, object:{marmalade.ledger.token-schema}) <=> object:<{read3207_row}>
assocTy: (<{read3207_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3207_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3207_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3205_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3205_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3205_l>] -> <at3205_a>: roles=[(RetVar, RoleTys { candArgTy=<at3205_a>, AST=at3205::<at3205>, tyVar=<precision3209>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3205_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3205_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3205_o}> -> <at3205_a>, roles=[(RetVar, RoleTys { candArgTy=<at3205_a>, AST=at3205::<at3205>, tyVar=<precision3209>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3206::string, tyVar=<string3206>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3205_o}>, AST=read3207::<read3207>, tyVar=<read3207>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3205_o}> -> <at3205_a> with [(<at3205_a>, [(at3205, <precision3209>, integer)]), (string, [(string3206, <string3206>, string)]), (object:<{at3205_o}>, [(read3207, <read3207>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3205_o}> -> <at3205_a>: [(<at3205_a>, (integer, [(at3205, <precision3209>)])), (string, (string, [(string3206, <string3206>)])), (object:<{at3205_o}>, (object:{marmalade.ledger.token-schema}, [(read3207, <read3207>)]))]
Adjusting type for solution: ((at3205, <precision3209>), <at3205_a>, integer)
assocTy: (<precision3209>, integer) <=> <at3205_a>
assocTy: integer => <at3205_a>
assocTy: (<precision3209>, integer) <=> integer
assocTy: (<precision3209>, integer) <= integer
Adjusting type for solution: ((string3206, <string3206>), string, string)
assocTy: (<string3206>, string) <=> string
assocTy: (<string3206>, string) <= string
assocTy: (<string3206>, string) <=> string
assocTy: (<string3206>, string) <= string
Adjusting type for solution: ((read3207, <read3207>), object:<{at3205_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3207>, object:{marmalade.ledger.token-schema}) <=> object:<{at3205_o}>
assocTy: (<{at3205_o}>, <{at3205_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3205_o}>, <{at3205_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3205_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3205_o}>)
assocTy: (<read3207>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3207>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3180::<enforce-guard3180>, tyVar=<enforce-guard3180>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3197::<account-guard3197>, tyVar=<account-guard3196>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3180, <enforce-guard3180>, bool)]), (guard, [(account-guard3197, <account-guard3196>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3180, <enforce-guard3180>)])), (guard, (guard, [(account-guard3197, <account-guard3196>)]))]
Adjusting type for solution: ((enforce-guard3180, <enforce-guard3180>), bool, bool)
assocTy: (<enforce-guard3180>, bool) <=> bool
assocTy: (<enforce-guard3180>, bool) <= bool
assocTy: (<enforce-guard3180>, bool) <=> bool
assocTy: (<enforce-guard3180>, bool) <= bool
Adjusting type for solution: ((account-guard3197, <account-guard3196>), guard, guard)
assocTy: (<account-guard3196>, guard) <=> guard
assocTy: (<account-guard3196>, guard) <= guard
assocTy: (<account-guard3196>, guard) <=> guard
assocTy: (<account-guard3196>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard2728::<enforce-guard2728>, tyVar=<enforce-guard2728>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard2745::<account-guard2745>, tyVar=<account-guard2744>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard2728, <enforce-guard2728>, bool)]), (guard, [(account-guard2745, <account-guard2744>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard2728, <enforce-guard2728>)])), (guard, (guard, [(account-guard2745, <account-guard2744>)]))]
Adjusting type for solution: ((enforce-guard2728, <enforce-guard2728>), bool, bool)
assocTy: (<enforce-guard2728>, bool) <=> bool
assocTy: (<enforce-guard2728>, bool) <= bool
assocTy: (<enforce-guard2728>, bool) <=> bool
assocTy: (<enforce-guard2728>, bool) <= bool
Adjusting type for solution: ((account-guard2745, <account-guard2744>), guard, guard)
assocTy: (<account-guard2744>, guard) <=> guard
assocTy: (<account-guard2744>, guard) <= guard
assocTy: (<account-guard2744>, guard) <=> guard
assocTy: (<account-guard2744>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2719_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at2719_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2719_l>] -> <at2719_a>: roles=[(RetVar, RoleTys { candArgTy=<at2719_a>, AST=at2719::<at2719>, tyVar=<at2719>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2719_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at2719_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2719_o}> -> <at2719_a>, roles=[(RetVar, RoleTys { candArgTy=<at2719_a>, AST=at2719::<at2719>, tyVar=<at2719>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2720::string, tyVar=<string2720>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2719_o}>, AST=chain-data2721::<chain-data2721>, tyVar=<chain-data2721>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at2719_o}> -> <at2719_a> with [(<at2719_a>, [(at2719, <at2719>, integer)]), (string, [(string2720, <string2720>, string)]), (object:<{at2719_o}>, [(chain-data2721, <chain-data2721>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at2719_o}> -> <at2719_a>: [(<at2719_a>, (integer, [(at2719, <at2719>)])), (string, (string, [(string2720, <string2720>)])), (object:<{at2719_o}>, (object:{.public-chain-data}, [(chain-data2721, <chain-data2721>)]))]
Adjusting type for solution: ((at2719, <at2719>), <at2719_a>, integer)
assocTy: (<at2719>, integer) <=> <at2719_a>
assocTy: integer => <at2719_a>
assocTy: (<at2719>, integer) <=> integer
assocTy: (<at2719>, integer) <= integer
Adjusting type for solution: ((string2720, <string2720>), string, string)
assocTy: (<string2720>, string) <=> string
assocTy: (<string2720>, string) <= string
assocTy: (<string2720>, string) <=> string
assocTy: (<string2720>, string) <= string
Adjusting type for solution: ((chain-data2721, <chain-data2721>), object:<{at2719_o}>, object:{.public-chain-data})
assocTy: (<chain-data2721>, object:{.public-chain-data}) <=> object:<{at2719_o}>
assocTy: (<{at2719_o}>, <{at2719_o}>) <=> {.public-chain-data}
assocTy: (<{at2719_o}>, <{at2719_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at2719_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at2719_o}>)
assocTy: (<chain-data2721>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data2721>, object:{.public-chain-data}) <= object:{.public-chain-data}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard3059::<enforce-guard3059>, tyVar=<enforce-guard3059>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard3076::<account-guard3076>, tyVar=<account-guard3075>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard3059, <enforce-guard3059>, bool)]), (guard, [(account-guard3076, <account-guard3075>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard3059, <enforce-guard3059>)])), (guard, (guard, [(account-guard3076, <account-guard3075>)]))]
Adjusting type for solution: ((enforce-guard3059, <enforce-guard3059>), bool, bool)
assocTy: (<enforce-guard3059>, bool) <=> bool
assocTy: (<enforce-guard3059>, bool) <= bool
assocTy: (<enforce-guard3059>, bool) <=> bool
assocTy: (<enforce-guard3059>, bool) <= bool
Adjusting type for solution: ((account-guard3076, <account-guard3075>), guard, guard)
assocTy: (<account-guard3075>, guard) <=> guard
assocTy: (<account-guard3075>, guard) <= guard
assocTy: (<account-guard3075>, guard) <=> guard
assocTy: (<account-guard3075>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor3048::<floor3048>, tyVar=<floor3048>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs3953_amount3955::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet3037_p3038::<BindLet3037_p3038_ai>, tyVar=<precision3044>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet3037_p3038, <precision3044>, integer)]), (decimal, [(floor3048, <floor3048>, decimal), (inlinedCallArgs3953_amount3955, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet3037_p3038, <precision3044>)])), (decimal, (decimal, [(floor3048, <floor3048>), (inlinedCallArgs3953_amount3955, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet3037_p3038, <precision3044>), integer, integer)
assocTy: (<precision3044>, integer) <=> integer
assocTy: (<precision3044>, integer) <= integer
assocTy: (<precision3044>, integer) <=> integer
assocTy: (<precision3044>, integer) <= integer
Adjusting type for solution: ((floor3048, <floor3048>), decimal, decimal)
assocTy: (<floor3048>, decimal) <=> decimal
assocTy: (<floor3048>, decimal) <= decimal
assocTy: (<floor3048>, decimal) <=> decimal
assocTy: (<floor3048>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs3953_amount3955, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read3042_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read3042_row}>, roleTy=<read3042>
tryFunType: cand: table:table:<{read3042_row}> key:string -> object:<{read3042_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read3042_row}>, AST=read3042::<read3042>, tyVar=<read3042>, resolvedTy=<read3042>}), (ArgVar 0, RoleTys { candArgTy=table:<{read3042_row}>, AST=marmalade.ledger.tokens3043::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens3043>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs3951_id3952::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read3042_row}> key:string -> object:<{read3042_row}> with [(string, [(inlinedCallArgs3951_id3952, <sale_id2696>, string)]), (table:<{read3042_row}>, [(marmalade.ledger.tokens3043, <marmalade.ledger.tokens3043>, table:{marmalade.ledger.token-schema})]), (object:<{read3042_row}>, [(read3042, <read3042>, <read3042>)])]
Solved overload with table:table:<{read3042_row}> key:string -> object:<{read3042_row}>: [(string, (string, [(inlinedCallArgs3951_id3952, <sale_id2696>)])), (table:<{read3042_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens3043, <marmalade.ledger.tokens3043>)])), (object:<{read3042_row}>, (object:<{read3042_row}>, [(read3042, <read3042>)]))]
Adjusting type for solution: ((inlinedCallArgs3951_id3952, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens3043, <marmalade.ledger.tokens3043>), table:<{read3042_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens3043>, table:{marmalade.ledger.token-schema}) <=> table:<{read3042_row}>
assocTy: (<{read3042_row}>, <{read3042_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3042_row}>, <{read3042_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read3042_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read3042_row}>)
assocTy: (<marmalade.ledger.tokens3043>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens3043>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read3042, <read3042>), object:<{read3042_row}>, object:<{read3042_row}>)
assocTy: (<read3042>, <read3042>) <=> object:<{read3042_row}>
assocTy: (<read3042>, <read3042>) <= object:<{read3042_row}>
assocTy: tracking/updating type variable <read3042> <= object:<{read3042_row}>
assocTy: (<read3042>, object:{marmalade.ledger.token-schema}) <=> object:<{read3042_row}>
assocTy: (<{read3042_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read3042_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read3042_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at3040_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3040_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at3040_l>] -> <at3040_a>: roles=[(RetVar, RoleTys { candArgTy=<at3040_a>, AST=at3040::<at3040>, tyVar=<precision3044>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at3040_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at3040_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at3040_o}> -> <at3040_a>, roles=[(RetVar, RoleTys { candArgTy=<at3040_a>, AST=at3040::<at3040>, tyVar=<precision3044>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string3041::string, tyVar=<string3041>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at3040_o}>, AST=read3042::<read3042>, tyVar=<read3042>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at3040_o}> -> <at3040_a> with [(<at3040_a>, [(at3040, <precision3044>, integer)]), (string, [(string3041, <string3041>, string)]), (object:<{at3040_o}>, [(read3042, <read3042>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at3040_o}> -> <at3040_a>: [(<at3040_a>, (integer, [(at3040, <precision3044>)])), (string, (string, [(string3041, <string3041>)])), (object:<{at3040_o}>, (object:{marmalade.ledger.token-schema}, [(read3042, <read3042>)]))]
Adjusting type for solution: ((at3040, <precision3044>), <at3040_a>, integer)
assocTy: (<precision3044>, integer) <=> <at3040_a>
assocTy: integer => <at3040_a>
assocTy: (<precision3044>, integer) <=> integer
assocTy: (<precision3044>, integer) <= integer
Adjusting type for solution: ((string3041, <string3041>), string, string)
assocTy: (<string3041>, string) <=> string
assocTy: (<string3041>, string) <= string
assocTy: (<string3041>, string) <=> string
assocTy: (<string3041>, string) <= string
Adjusting type for solution: ((read3042, <read3042>), object:<{at3040_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read3042>, object:{marmalade.ledger.token-schema}) <=> object:<{at3040_o}>
assocTy: (<{at3040_o}>, <{at3040_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at3040_o}>, <{at3040_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at3040_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at3040_o}>)
assocTy: (<read3042>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read3042>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+2996_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+2996_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+2996_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+2996_a[integer,decimal]> y:<+2996_a[integer,decimal]> -> <+2996_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+2996_a[integer,decimal]>, AST=+2996::<+2996>, tyVar=<+2996>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+2996_a[integer,decimal]>, AST=BindSchema2935_old-bal2936::<BindSchema2935_old-bal2936_ac>, tyVar=<BindSchema2935_old-bal2936_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+2996_a[integer,decimal]>, AST=inlinedCallArgs3946_amount3950::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal})]
tryFunType: trying x:<+2996_a[integer,decimal]> y:<+2996_a[integer,decimal]> -> <+2996_a[integer,decimal]> with [(<+2996_a[integer,decimal]>, [(+2996, <+2996>, decimal), (inlinedCallArgs3946_amount3950, <sale_amount2698>, decimal), (BindSchema2935_old-bal2936, <BindSchema2935_old-bal2936_ac>, decimal)])]
Solved overload with x:<+2996_a[integer,decimal]> y:<+2996_a[integer,decimal]> -> <+2996_a[integer,decimal]>: [(<+2996_a[integer,decimal]>, (decimal, [(+2996, <+2996>), (inlinedCallArgs3946_amount3950, <sale_amount2698>), (BindSchema2935_old-bal2936, <BindSchema2935_old-bal2936_ac>)]))]
Adjusting type for solution: ((+2996, <+2996>), <+2996_a[integer,decimal]>, decimal)
assocTy: (<+2996>, decimal) <=> <+2996_a[integer,decimal]>
assocTy: decimal => <+2996_a[integer,decimal]>
assocTy: (<+2996>, decimal) <=> decimal
assocTy: (<+2996>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs3946_amount3950, <sale_amount2698>), <+2996_a[integer,decimal]>, decimal)
assocTy: (<sale_amount2698>, decimal) <=> <+2996_a[integer,decimal]>
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
Adjusting type for solution: ((BindSchema2935_old-bal2936, <BindSchema2935_old-bal2936_ac>), <+2996_a[integer,decimal]>, decimal)
assocTy: (<BindSchema2935_old-bal2936_ac>, decimal) <=> <+2996_a[integer,decimal]>
assocTy: (<BindSchema2935_old-bal2936_ac>, decimal) <=> decimal
assocTy: (<BindSchema2935_old-bal2936_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop2982_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop2982_a[[<l>],string]>, roleTy=<drop2982>
tryFunType: cand: count:integer list:<drop2982_a[[<l>],string]> -> <drop2982_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop2982_a[[<l>],string]>, AST=drop2982::<drop2982>, tyVar=<drop2982>, resolvedTy=<drop2982>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2983::integer, tyVar=<integer2983>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop2982_a[[<l>],string]>, AST=inlinedCallArgs3932_account3933::string, tyVar=<sale-account3026>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop2982_a[[<l>],string]> -> <drop2982_a[[<l>],string]> with [(<drop2982_a[[<l>],string]>, [(drop2982, <drop2982>, <drop2982>), (inlinedCallArgs3932_account3933, <sale-account3026>, string)]), (integer, [(integer2983, <integer2983>, integer)])]
Solved overload with count:integer list:<drop2982_a[[<l>],string]> -> <drop2982_a[[<l>],string]>: [(<drop2982_a[[<l>],string]>, (string, [(drop2982, <drop2982>), (inlinedCallArgs3932_account3933, <sale-account3026>)])), (integer, (integer, [(integer2983, <integer2983>)]))]
Adjusting type for solution: ((drop2982, <drop2982>), <drop2982_a[[<l>],string]>, string)
assocTy: (<drop2982>, <drop2982>) <=> <drop2982_a[[<l>],string]>
assocTy: (<drop2982>, <drop2982>) <= <drop2982_a[[<l>],string]>
assocTy: tracking/updating type variable <drop2982> <= <drop2982_a[[<l>],string]>
assocTy: (<drop2982>, <drop2982_a[[<l>],string]>) <=> string
assocTy: (<drop2982>, <drop2982_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop2982_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs3932_account3933, <sale-account3026>), <drop2982_a[[<l>],string]>, string)
assocTy: (<sale-account3026>, string) <=> <drop2982_a[[<l>],string]>
assocTy: (<sale-account3026>, string) <=> string
assocTy: (<sale-account3026>, string) <= string
Adjusting type for solution: ((integer2983, <integer2983>), integer, integer)
assocTy: (<integer2983>, integer) <=> integer
assocTy: (<integer2983>, integer) <= integer
assocTy: (<integer2983>, integer) <=> integer
assocTy: (<integer2983>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2962_a[[<l>],string]>, roleTy=<take2955>
tryFunType: unify role: role=RetVar, candTy=<take2962_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2962_a[[<l>],string]> -> <take2962_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2962_a[[<l>],string]>, AST=take2962::<take2962>, tyVar=<take2962>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2963::integer, tyVar=<integer2963>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2962_a[[<l>],string]>, AST=BindLet2953_pfx2954::<BindLet2953_pfx2954_f>, tyVar=<take2955>, resolvedTy=<take2955>})]
tryFunType: trying count:integer list:<take2962_a[[<l>],string]> -> <take2962_a[[<l>],string]> with [(<take2962_a[[<l>],string]>, [(take2962, <take2962>, string), (BindLet2953_pfx2954, <take2955>, <take2955>)]), (integer, [(integer2963, <integer2963>, integer)])]
Solved overload with count:integer list:<take2962_a[[<l>],string]> -> <take2962_a[[<l>],string]>: [(<take2962_a[[<l>],string]>, (string, [(take2962, <take2962>), (BindLet2953_pfx2954, <take2955>)])), (integer, (integer, [(integer2963, <integer2963>)]))]
Adjusting type for solution: ((take2962, <take2962>), <take2962_a[[<l>],string]>, string)
assocTy: (<take2962>, string) <=> <take2962_a[[<l>],string]>
assocTy: string => <take2962_a[[<l>],string]>
assocTy: (<take2962>, string) <=> string
assocTy: (<take2962>, string) <= string
Adjusting type for solution: ((BindLet2953_pfx2954, <take2955>), <take2962_a[[<l>],string]>, string)
assocTy: (<take2955>, <take2955>) <=> <take2962_a[[<l>],string]>
assocTy: (<take2955>, <take2955>) <= <take2962_a[[<l>],string]>
assocTy: tracking/updating type variable <take2955> <= <take2962_a[[<l>],string]>
assocTy: (<take2955>, string) <=> string
assocTy: (<take2955>, string) <= string
Adjusting type for solution: ((integer2963, <integer2963>), integer, integer)
assocTy: (<integer2963>, integer) <=> integer
assocTy: (<integer2963>, integer) <= integer
assocTy: (<integer2963>, integer) <=> integer
assocTy: (<integer2963>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2960_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take2960_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2960_a[[<l>],string]> -> <take2960_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2960_a[[<l>],string]>, AST=take2960::<take2960>, tyVar=<take2960>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2961::integer, tyVar=<integer2961>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2960_a[[<l>],string]>, AST=BindLet2953_pfx2954::<BindLet2953_pfx2954_f>, tyVar=<take2955>, resolvedTy=string})]
tryFunType: trying count:integer list:<take2960_a[[<l>],string]> -> <take2960_a[[<l>],string]> with [(<take2960_a[[<l>],string]>, [(take2960, <take2960>, string), (BindLet2953_pfx2954, <take2955>, string)]), (integer, [(integer2961, <integer2961>, integer)])]
Solved overload with count:integer list:<take2960_a[[<l>],string]> -> <take2960_a[[<l>],string]>: [(<take2960_a[[<l>],string]>, (string, [(take2960, <take2960>), (BindLet2953_pfx2954, <take2955>)])), (integer, (integer, [(integer2961, <integer2961>)]))]
Adjusting type for solution: ((take2960, <take2960>), <take2960_a[[<l>],string]>, string)
assocTy: (<take2960>, string) <=> <take2960_a[[<l>],string]>
assocTy: string => <take2960_a[[<l>],string]>
assocTy: (<take2960>, string) <=> string
assocTy: (<take2960>, string) <= string
Adjusting type for solution: ((BindLet2953_pfx2954, <take2955>), <take2960_a[[<l>],string]>, string)
assocTy: (<take2955>, string) <=> <take2960_a[[<l>],string]>
assocTy: (<take2955>, string) <=> string
assocTy: (<take2955>, string) <= string
Adjusting type for solution: ((integer2961, <integer2961>), integer, integer)
assocTy: (<integer2961>, integer) <=> integer
assocTy: (<integer2961>, integer) <= integer
assocTy: (<integer2961>, integer) <=> integer
assocTy: (<integer2961>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take2955_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take2955_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take2955_a[[<l>],string]> -> <take2955_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take2955_a[[<l>],string]>, AST=take2955::<take2955>, tyVar=<take2955>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer2956::integer, tyVar=<integer2956>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take2955_a[[<l>],string]>, AST=inlinedCallArgs3930_account3931::string, tyVar=<sale-account3026>, resolvedTy=string})]
tryFunType: trying count:integer list:<take2955_a[[<l>],string]> -> <take2955_a[[<l>],string]> with [(<take2955_a[[<l>],string]>, [(take2955, <take2955>, string), (inlinedCallArgs3930_account3931, <sale-account3026>, string)]), (integer, [(integer2956, <integer2956>, integer)])]
Solved overload with count:integer list:<take2955_a[[<l>],string]> -> <take2955_a[[<l>],string]>: [(<take2955_a[[<l>],string]>, (string, [(take2955, <take2955>), (inlinedCallArgs3930_account3931, <sale-account3026>)])), (integer, (integer, [(integer2956, <integer2956>)]))]
Adjusting type for solution: ((take2955, <take2955>), <take2955_a[[<l>],string]>, string)
assocTy: (<take2955>, string) <=> <take2955_a[[<l>],string]>
assocTy: string => <take2955_a[[<l>],string]>
assocTy: (<take2955>, string) <=> string
assocTy: (<take2955>, string) <= string
Adjusting type for solution: ((inlinedCallArgs3930_account3931, <sale-account3026>), <take2955_a[[<l>],string]>, string)
assocTy: (<sale-account3026>, string) <=> <take2955_a[[<l>],string]>
assocTy: (<sale-account3026>, string) <=> string
assocTy: (<sale-account3026>, string) <= string
Adjusting type for solution: ((integer2956, <integer2956>), integer, integer)
assocTy: (<integer2956>, integer) <=> integer
assocTy: (<integer2956>, integer) <= integer
assocTy: (<integer2956>, integer) <=> integer
assocTy: (<integer2956>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor2914::<floor2914>, tyVar=<floor2914>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs3924_amount3926::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet2903_p2904::<BindLet2903_p2904_ai>, tyVar=<precision2910>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet2903_p2904, <precision2910>, integer)]), (decimal, [(floor2914, <floor2914>, decimal), (inlinedCallArgs3924_amount3926, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet2903_p2904, <precision2910>)])), (decimal, (decimal, [(floor2914, <floor2914>), (inlinedCallArgs3924_amount3926, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet2903_p2904, <precision2910>), integer, integer)
assocTy: (<precision2910>, integer) <=> integer
assocTy: (<precision2910>, integer) <= integer
assocTy: (<precision2910>, integer) <=> integer
assocTy: (<precision2910>, integer) <= integer
Adjusting type for solution: ((floor2914, <floor2914>), decimal, decimal)
assocTy: (<floor2914>, decimal) <=> decimal
assocTy: (<floor2914>, decimal) <= decimal
assocTy: (<floor2914>, decimal) <=> decimal
assocTy: (<floor2914>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs3924_amount3926, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2908_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2908_row}>, roleTy=<read2908>
tryFunType: cand: table:table:<{read2908_row}> key:string -> object:<{read2908_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2908_row}>, AST=read2908::<read2908>, tyVar=<read2908>, resolvedTy=<read2908>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2908_row}>, AST=marmalade.ledger.tokens2909::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens2909>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs3922_id3923::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read2908_row}> key:string -> object:<{read2908_row}> with [(string, [(inlinedCallArgs3922_id3923, <sale_id2696>, string)]), (table:<{read2908_row}>, [(marmalade.ledger.tokens2909, <marmalade.ledger.tokens2909>, table:{marmalade.ledger.token-schema})]), (object:<{read2908_row}>, [(read2908, <read2908>, <read2908>)])]
Solved overload with table:table:<{read2908_row}> key:string -> object:<{read2908_row}>: [(string, (string, [(inlinedCallArgs3922_id3923, <sale_id2696>)])), (table:<{read2908_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens2909, <marmalade.ledger.tokens2909>)])), (object:<{read2908_row}>, (object:<{read2908_row}>, [(read2908, <read2908>)]))]
Adjusting type for solution: ((inlinedCallArgs3922_id3923, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens2909, <marmalade.ledger.tokens2909>), table:<{read2908_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens2909>, table:{marmalade.ledger.token-schema}) <=> table:<{read2908_row}>
assocTy: (<{read2908_row}>, <{read2908_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2908_row}>, <{read2908_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read2908_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read2908_row}>)
assocTy: (<marmalade.ledger.tokens2909>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens2909>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read2908, <read2908>), object:<{read2908_row}>, object:<{read2908_row}>)
assocTy: (<read2908>, <read2908>) <=> object:<{read2908_row}>
assocTy: (<read2908>, <read2908>) <= object:<{read2908_row}>
assocTy: tracking/updating type variable <read2908> <= object:<{read2908_row}>
assocTy: (<read2908>, object:{marmalade.ledger.token-schema}) <=> object:<{read2908_row}>
assocTy: (<{read2908_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2908_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read2908_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2906_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2906_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2906_l>] -> <at2906_a>: roles=[(RetVar, RoleTys { candArgTy=<at2906_a>, AST=at2906::<at2906>, tyVar=<precision2910>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2906_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2906_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2906_o}> -> <at2906_a>, roles=[(RetVar, RoleTys { candArgTy=<at2906_a>, AST=at2906::<at2906>, tyVar=<precision2910>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2907::string, tyVar=<string2907>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2906_o}>, AST=read2908::<read2908>, tyVar=<read2908>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at2906_o}> -> <at2906_a> with [(<at2906_a>, [(at2906, <precision2910>, integer)]), (string, [(string2907, <string2907>, string)]), (object:<{at2906_o}>, [(read2908, <read2908>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at2906_o}> -> <at2906_a>: [(<at2906_a>, (integer, [(at2906, <precision2910>)])), (string, (string, [(string2907, <string2907>)])), (object:<{at2906_o}>, (object:{marmalade.ledger.token-schema}, [(read2908, <read2908>)]))]
Adjusting type for solution: ((at2906, <precision2910>), <at2906_a>, integer)
assocTy: (<precision2910>, integer) <=> <at2906_a>
assocTy: integer => <at2906_a>
assocTy: (<precision2910>, integer) <=> integer
assocTy: (<precision2910>, integer) <= integer
Adjusting type for solution: ((string2907, <string2907>), string, string)
assocTy: (<string2907>, string) <=> string
assocTy: (<string2907>, string) <= string
assocTy: (<string2907>, string) <=> string
assocTy: (<string2907>, string) <= string
Adjusting type for solution: ((read2908, <read2908>), object:<{at2906_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read2908>, object:{marmalade.ledger.token-schema}) <=> object:<{at2906_o}>
assocTy: (<{at2906_o}>, <{at2906_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at2906_o}>, <{at2906_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at2906_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at2906_o}>)
assocTy: (<read2908>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read2908>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-2873_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-2873_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-2873_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-2873_a[integer,decimal]> y:<-2873_a[integer,decimal]> -> <-2873_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-2873_a[integer,decimal]>, AST=-2873::<-2873>, tyVar=<-2873>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-2873_a[integer,decimal]>, AST=BindSchema2865_old-bal2866::<BindSchema2865_old-bal2866_aa>, tyVar=<BindSchema2865_old-bal2866_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-2873_a[integer,decimal]>, AST=inlinedCallArgs3916_amount3919::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal})]
tryFunType: trying x:<-2873_a[integer,decimal]> y:<-2873_a[integer,decimal]> -> <-2873_a[integer,decimal]> with [(<-2873_a[integer,decimal]>, [(-2873, <-2873>, decimal), (inlinedCallArgs3916_amount3919, <sale_amount2698>, decimal), (BindSchema2865_old-bal2866, <BindSchema2865_old-bal2866_aa>, decimal)])]
Solved overload with x:<-2873_a[integer,decimal]> y:<-2873_a[integer,decimal]> -> <-2873_a[integer,decimal]>: [(<-2873_a[integer,decimal]>, (decimal, [(-2873, <-2873>), (inlinedCallArgs3916_amount3919, <sale_amount2698>), (BindSchema2865_old-bal2866, <BindSchema2865_old-bal2866_aa>)]))]
Adjusting type for solution: ((-2873, <-2873>), <-2873_a[integer,decimal]>, decimal)
assocTy: (<-2873>, decimal) <=> <-2873_a[integer,decimal]>
assocTy: decimal => <-2873_a[integer,decimal]>
assocTy: (<-2873>, decimal) <=> decimal
assocTy: (<-2873>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs3916_amount3919, <sale_amount2698>), <-2873_a[integer,decimal]>, decimal)
assocTy: (<sale_amount2698>, decimal) <=> <-2873_a[integer,decimal]>
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
Adjusting type for solution: ((BindSchema2865_old-bal2866, <BindSchema2865_old-bal2866_aa>), <-2873_a[integer,decimal]>, decimal)
assocTy: (<BindSchema2865_old-bal2866_aa>, decimal) <=> <-2873_a[integer,decimal]>
assocTy: (<BindSchema2865_old-bal2866_aa>, decimal) <=> decimal
assocTy: (<BindSchema2865_old-bal2866_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor2852::<floor2852>, tyVar=<floor2852>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs3907_amount3909::decimal, tyVar=<sale_amount2698>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet2841_p2842::<BindLet2841_p2842_ai>, tyVar=<precision2848>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet2841_p2842, <precision2848>, integer)]), (decimal, [(floor2852, <floor2852>, decimal), (inlinedCallArgs3907_amount3909, <sale_amount2698>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet2841_p2842, <precision2848>)])), (decimal, (decimal, [(floor2852, <floor2852>), (inlinedCallArgs3907_amount3909, <sale_amount2698>)]))]
Adjusting type for solution: ((BindLet2841_p2842, <precision2848>), integer, integer)
assocTy: (<precision2848>, integer) <=> integer
assocTy: (<precision2848>, integer) <= integer
assocTy: (<precision2848>, integer) <=> integer
assocTy: (<precision2848>, integer) <= integer
Adjusting type for solution: ((floor2852, <floor2852>), decimal, decimal)
assocTy: (<floor2852>, decimal) <=> decimal
assocTy: (<floor2852>, decimal) <= decimal
assocTy: (<floor2852>, decimal) <=> decimal
assocTy: (<floor2852>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs3907_amount3909, <sale_amount2698>), decimal, decimal)
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
assocTy: (<sale_amount2698>, decimal) <=> decimal
assocTy: (<sale_amount2698>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read2846_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read2846_row}>, roleTy=<read2846>
tryFunType: cand: table:table:<{read2846_row}> key:string -> object:<{read2846_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read2846_row}>, AST=read2846::<read2846>, tyVar=<read2846>, resolvedTy=<read2846>}), (ArgVar 0, RoleTys { candArgTy=table:<{read2846_row}>, AST=marmalade.ledger.tokens2847::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens2847>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs3905_id3906::string, tyVar=<sale_id2696>, resolvedTy=string})]
tryFunType: trying table:table:<{read2846_row}> key:string -> object:<{read2846_row}> with [(string, [(inlinedCallArgs3905_id3906, <sale_id2696>, string)]), (table:<{read2846_row}>, [(marmalade.ledger.tokens2847, <marmalade.ledger.tokens2847>, table:{marmalade.ledger.token-schema})]), (object:<{read2846_row}>, [(read2846, <read2846>, <read2846>)])]
Solved overload with table:table:<{read2846_row}> key:string -> object:<{read2846_row}>: [(string, (string, [(inlinedCallArgs3905_id3906, <sale_id2696>)])), (table:<{read2846_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens2847, <marmalade.ledger.tokens2847>)])), (object:<{read2846_row}>, (object:<{read2846_row}>, [(read2846, <read2846>)]))]
Adjusting type for solution: ((inlinedCallArgs3905_id3906, <sale_id2696>), string, string)
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
assocTy: (<sale_id2696>, string) <=> string
assocTy: (<sale_id2696>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens2847, <marmalade.ledger.tokens2847>), table:<{read2846_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens2847>, table:{marmalade.ledger.token-schema}) <=> table:<{read2846_row}>
assocTy: (<{read2846_row}>, <{read2846_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2846_row}>, <{read2846_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read2846_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read2846_row}>)
assocTy: (<marmalade.ledger.tokens2847>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens2847>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read2846, <read2846>), object:<{read2846_row}>, object:<{read2846_row}>)
assocTy: (<read2846>, <read2846>) <=> object:<{read2846_row}>
assocTy: (<read2846>, <read2846>) <= object:<{read2846_row}>
assocTy: tracking/updating type variable <read2846> <= object:<{read2846_row}>
assocTy: (<read2846>, object:{marmalade.ledger.token-schema}) <=> object:<{read2846_row}>
assocTy: (<{read2846_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read2846_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read2846_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at2844_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2844_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at2844_l>] -> <at2844_a>: roles=[(RetVar, RoleTys { candArgTy=<at2844_a>, AST=at2844::<at2844>, tyVar=<precision2848>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at2844_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at2844_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at2844_o}> -> <at2844_a>, roles=[(RetVar, RoleTys { candArgTy=<at2844_a>, AST=at2844::<at2844>, tyVar=<precision2848>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string2845::string, tyVar=<string2845>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at2844_o}>, AST=read2846::<read2846>, tyVar=<read2846>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at2844_o}> -> <at2844_a> with [(<at2844_a>, [(at2844, <precision2848>, integer)]), (string, [(string2845, <string2845>, string)]), (object:<{at2844_o}>, [(read2846, <read2846>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at2844_o}> -> <at2844_a>: [(<at2844_a>, (integer, [(at2844, <precision2848>)])), (string, (string, [(string2845, <string2845>)])), (object:<{at2844_o}>, (object:{marmalade.ledger.token-schema}, [(read2846, <read2846>)]))]
Adjusting type for solution: ((at2844, <precision2848>), <at2844_a>, integer)
assocTy: (<precision2848>, integer) <=> <at2844_a>
assocTy: integer => <at2844_a>
assocTy: (<precision2848>, integer) <=> integer
assocTy: (<precision2848>, integer) <= integer
Adjusting type for solution: ((string2845, <string2845>), string, string)
assocTy: (<string2845>, string) <=> string
assocTy: (<string2845>, string) <= string
assocTy: (<string2845>, string) <=> string
assocTy: (<string2845>, string) <= string
Adjusting type for solution: ((read2846, <read2846>), object:<{at2844_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read2846>, object:{marmalade.ledger.token-schema}) <=> object:<{at2844_o}>
assocTy: (<{at2844_o}>, <{at2844_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at2844_o}>, <{at2844_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at2844_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at2844_o}>)
assocTy: (<read2846>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read2846>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard2819::<enforce-guard2819>, tyVar=<enforce-guard2819>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard2836::<account-guard2836>, tyVar=<account-guard2835>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard2819, <enforce-guard2819>, bool)]), (guard, [(account-guard2836, <account-guard2835>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard2819, <enforce-guard2819>)])), (guard, (guard, [(account-guard2836, <account-guard2835>)]))]
Adjusting type for solution: ((enforce-guard2819, <enforce-guard2819>), bool, bool)
assocTy: (<enforce-guard2819>, bool) <=> bool
assocTy: (<enforce-guard2819>, bool) <= bool
assocTy: (<enforce-guard2819>, bool) <=> bool
assocTy: (<enforce-guard2819>, bool) <= bool
Adjusting type for solution: ((account-guard2836, <account-guard2835>), guard, guard)
assocTy: (<account-guard2835>, guard) <=> guard
assocTy: (<account-guard2835>, guard) <= guard
assocTy: (<account-guard2835>, guard) <=> guard
assocTy: (<account-guard2835>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defpact marmalade.ledger.sale:bool (id:string sel...
===== Fun: (defcap marmalade.ledger.TRANSFER:bool (id:string ...
trackAST: (TRANSFER_id4258, string)
trackAST: (TRANSFER_sender4259, string)
trackAST: (TRANSFER_receiver4260, string)
trackAST: (TRANSFER_amount4261, decimal)
trackAST: (enforce-unit_id4262, string)
trackAST: (enforce-unit_amount4263, decimal)
trackAST: (BindLet4264, <BindLet4264>)
trackAST: (BindLet4264_p4265, <BindLet4264_p4265_ai>)
trackAST: (precision_id4266, string)
trackAST: (at4267, <at4267>)
trackAST: (string4268, string)
trackAST: (read4269, <read4269>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4270, table:{marmalade.ledger.token-schema})
trackAST: (precision4271, integer)
assocAST: (precision4271, <precision4271>, integer) => (at4267, <at4267>, <at4267>)
trackAST: (precision4272, <precision4272>)
assocAST: (at4267, <precision4271>, integer) => (precision4272, <precision4272>, <precision4272>)
assocAST: (precision4272, <precision4271>, integer) => (BindLet4264_p4265, <BindLet4264_p4265_ai>, <BindLet4264_p4265_ai>)
trackAST: (enforce4273, <enforce4273>)
trackAST: (=4274, <=4274>)
trackAST: (floor4275, <floor4275>)
trackAST: (string4276, string)
assocAST: (enforce4273, <enforce4273>, <enforce4273>) => (BindLet4264, <BindLet4264>, <BindLet4264>)
trackAST: (enforce-unit4277, bool)
assocAST: (enforce-unit4277, <enforce-unit4277>, bool) => (BindLet4264, <enforce4273>, <enforce4273>)
trackAST: (enforce-unit4278, <enforce-unit4278>)
assocAST: (BindLet4264, <enforce-unit4277>, bool) => (enforce-unit4278, <enforce-unit4278>, <enforce-unit4278>)
trackAST: (enforce4279, <enforce4279>)
trackAST: (>4280, <>4280>)
trackAST: (decimal4281, decimal)
trackAST: (string4282, string)
trackAST: (compose-capability4283, <compose-capability4283>)
trackAST: (DEBIT_id4284, string)
trackAST: (DEBIT_sender4285, string)
trackAST: (enforce-guard4286, <enforce-guard4286>)
trackAST: (account-guard_id4287, string)
trackAST: (account-guard_account4288, string)
trackAST: (with-read4289, <with-read4289>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4290, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4291, string)
trackAST: (key_account4292, string)
trackAST: (format4293, <format4293>)
trackAST: (string4294, string)
trackAST: (list4295, [<ak>])
trackAST: (key4296, string)
assocAST: (key4296, <key4296>, string) => (format4293, <format4293>, <format4293>)
trackAST: (key4297, <key4297>)
assocAST: (format4293, <key4296>, string) => (key4297, <key4297>, <key4297>)
trackAST: (BindSchema4298, <BindSchema4298>)
trackAST: (BindSchema4298_guard4299, <BindSchema4298_guard4299_f>)
trackAST: (string4300, string)
assocAST: (BindSchema4298_guard4299, <BindSchema4298_guard4299_f>, <BindSchema4298_guard4299_f>) => (BindSchema4298, <BindSchema4298>, <BindSchema4298>)
trackAST: (BindSchema4298schema4301, *)
trackAST: (account-guard4302, guard)
assocAST: (account-guard4302, <account-guard4302>, guard) => (with-read4289, <with-read4289>, <with-read4289>)
trackAST: (account-guard4303, <account-guard4303>)
assocAST: (with-read4289, <account-guard4302>, guard) => (account-guard4303, <account-guard4303>, <account-guard4303>)
trackAST: (DEBIT4304, <e>)
assocAST: (enforce-guard4286, <enforce-guard4286>, <enforce-guard4286>) => (DEBIT4304, <e>, <e>)
trackAST: (DEBIT4305, <DEBIT4305>)
assocAST: (enforce-guard4286, <enforce-guard4286>, <enforce-guard4286>) => (DEBIT4305, <DEBIT4305>, <DEBIT4305>)
trackAST: (compose-capability4306, <compose-capability4306>)
trackAST: (CREDIT_id4307, string)
trackAST: (CREDIT_receiver4308, string)
trackAST: (bool4309, bool)
trackAST: (CREDIT4310, <g>)
assocAST: (bool4309, <bool4309>, bool) => (CREDIT4310, <g>, <g>)
trackAST: (CREDIT4311, <CREDIT4311>)
assocAST: (bool4309, <bool4309>, bool) => (CREDIT4311, <CREDIT4311>, <CREDIT4311>)
trackAST: (TRANSFER4312, bool)
assocAST: (TRANSFER4312, <TRANSFER4312>, bool) => (compose-capability4306, <compose-capability4306>, <compose-capability4306>)
--------------------------------
 Substitute defuns:

assocTy: (<precision4271>, integer) <=> integer
assocTy: (<precision4271>, integer) <= integer
trackAST: (inlinedCallArgs4313, <inlinedCallArgs4313>)
assocTy: (<inlinedCallArgs4313>, <inlinedCallArgs4313>) <=> integer
assocTy: (<inlinedCallArgs4313>, <inlinedCallArgs4313>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4313> <= integer
trackAST: (inlinedCallArgs4313_id4314, string)
assocAST: (enforce-unit_id4262, <enforce-unit_id4262>, string) => (inlinedCallArgs4313_id4314, <inlinedCallArgs4313_id4314>, string)
assocAST: (inlinedCallArgs4313_id4314, <enforce-unit_id4262>, string) => (precision_id4266, <precision_id4266>, string)
assocTy: (<enforce-unit4277>, bool) <=> bool
assocTy: (<enforce-unit4277>, bool) <= bool
trackAST: (inlinedCallArgs4315, <inlinedCallArgs4315>)
assocTy: (<inlinedCallArgs4315>, <inlinedCallArgs4315>) <=> bool
assocTy: (<inlinedCallArgs4315>, <inlinedCallArgs4315>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4315> <= bool
trackAST: (inlinedCallArgs4315_id4316, string)
assocAST: (TRANSFER_id4258, <TRANSFER_id4258>, string) => (inlinedCallArgs4315_id4316, <inlinedCallArgs4315_id4316>, string)
trackAST: (inlinedCallArgs4315_amount4317, decimal)
assocAST: (TRANSFER_amount4261, <TRANSFER_amount4261>, decimal) => (inlinedCallArgs4315_amount4317, <inlinedCallArgs4315_amount4317>, decimal)
assocAST: (inlinedCallArgs4315_id4316, <TRANSFER_id4258>, string) => (enforce-unit_id4262, <enforce-unit_id4262>, string)
assocAST: (inlinedCallArgs4315_id4316, <TRANSFER_id4258>, string) => (enforce-unit_id4262, <TRANSFER_id4258>, string)
assocAST: (inlinedCallArgs4315_amount4317, <TRANSFER_amount4261>, decimal) => (enforce-unit_amount4263, <enforce-unit_amount4263>, decimal)
assocAST: (inlinedCallArgs4315_amount4317, <TRANSFER_amount4261>, decimal) => (enforce-unit_amount4263, <TRANSFER_amount4261>, decimal)
assocTy: (<key4296>, string) <=> string
assocTy: (<key4296>, string) <= string
trackAST: (inlinedCallArgs4318, <inlinedCallArgs4318>)
assocTy: (<inlinedCallArgs4318>, <inlinedCallArgs4318>) <=> string
assocTy: (<inlinedCallArgs4318>, <inlinedCallArgs4318>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4318> <= string
trackAST: (inlinedCallArgs4318_id4319, string)
assocAST: (account-guard_id4287, <account-guard_id4287>, string) => (inlinedCallArgs4318_id4319, <inlinedCallArgs4318_id4319>, string)
trackAST: (inlinedCallArgs4318_account4320, string)
assocAST: (account-guard_account4288, <account-guard_account4288>, string) => (inlinedCallArgs4318_account4320, <inlinedCallArgs4318_account4320>, string)
assocAST: (inlinedCallArgs4318_id4319, <account-guard_id4287>, string) => (key_id4291, <key_id4291>, string)
assocAST: (inlinedCallArgs4318_account4320, <account-guard_account4288>, string) => (key_account4292, <key_account4292>, string)
assocTy: (<account-guard4302>, guard) <=> guard
assocTy: (<account-guard4302>, guard) <= guard
trackAST: (inlinedCallArgs4321, <inlinedCallArgs4321>)
assocTy: (<inlinedCallArgs4321>, <inlinedCallArgs4321>) <=> guard
assocTy: (<inlinedCallArgs4321>, <inlinedCallArgs4321>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4321> <= guard
trackAST: (inlinedCallArgs4321_id4322, string)
assocAST: (DEBIT_id4284, <DEBIT_id4284>, string) => (inlinedCallArgs4321_id4322, <inlinedCallArgs4321_id4322>, string)
trackAST: (inlinedCallArgs4321_account4323, string)
assocAST: (DEBIT_sender4285, <DEBIT_sender4285>, string) => (inlinedCallArgs4321_account4323, <inlinedCallArgs4321_account4323>, string)
assocAST: (inlinedCallArgs4321_id4322, <DEBIT_id4284>, string) => (account-guard_id4287, <account-guard_id4287>, string)
assocAST: (inlinedCallArgs4321_id4322, <DEBIT_id4284>, string) => (account-guard_id4287, <DEBIT_id4284>, string)
assocAST: (inlinedCallArgs4321_account4323, <DEBIT_sender4285>, string) => (account-guard_account4288, <account-guard_account4288>, string)
assocAST: (inlinedCallArgs4321_account4323, <DEBIT_sender4285>, string) => (account-guard_account4288, <DEBIT_sender4285>, string)
assocTy: (<enforce-guard4286>, <enforce-guard4286>) <=> <DEBIT4305_e>
assocTy: (<enforce-guard4286>, <enforce-guard4286>) <= <DEBIT4305_e>
assocTy: tracking/updating type variable <enforce-guard4286> <= <DEBIT4305_e>
trackAST: (inlinedCallArgs4324, <inlinedCallArgs4324>)
assocTy: (<inlinedCallArgs4324>, <inlinedCallArgs4324>) <=> <DEBIT4305_e>
assocTy: (<inlinedCallArgs4324>, <inlinedCallArgs4324>) <= <DEBIT4305_e>
assocTy: tracking/updating type variable <inlinedCallArgs4324> <= <DEBIT4305_e>
trackAST: (inlinedCallArgs4324_id4325, string)
assocAST: (TRANSFER_id4258, <TRANSFER_id4258>, string) => (inlinedCallArgs4324_id4325, <inlinedCallArgs4324_id4325>, string)
trackAST: (inlinedCallArgs4324_sender4326, string)
assocAST: (TRANSFER_sender4259, <TRANSFER_sender4259>, string) => (inlinedCallArgs4324_sender4326, <inlinedCallArgs4324_sender4326>, string)
assocAST: (inlinedCallArgs4324_id4325, <TRANSFER_id4258>, string) => (DEBIT_id4284, <DEBIT_id4284>, string)
assocAST: (inlinedCallArgs4324_id4325, <TRANSFER_id4258>, string) => (DEBIT_id4284, <TRANSFER_id4258>, string)
assocAST: (inlinedCallArgs4324_sender4326, <TRANSFER_sender4259>, string) => (DEBIT_sender4285, <DEBIT_sender4285>, string)
assocAST: (inlinedCallArgs4324_sender4326, <TRANSFER_sender4259>, string) => (DEBIT_sender4285, <TRANSFER_sender4259>, string)
assocTy: (<bool4309>, bool) <=> <CREDIT4311_g>
assocTy: bool => <CREDIT4311_g>
trackAST: (inlinedCallArgs4327, <inlinedCallArgs4327>)
assocTy: (<inlinedCallArgs4327>, <inlinedCallArgs4327>) <=> <CREDIT4311_g>
assocTy: (<inlinedCallArgs4327>, <inlinedCallArgs4327>) <= <CREDIT4311_g>
assocTy: tracking/updating type variable <inlinedCallArgs4327> <= <CREDIT4311_g>
trackAST: (inlinedCallArgs4327_id4328, string)
assocAST: (TRANSFER_id4258, <TRANSFER_id4258>, string) => (inlinedCallArgs4327_id4328, <inlinedCallArgs4327_id4328>, string)
trackAST: (inlinedCallArgs4327_receiver4329, string)
assocAST: (TRANSFER_receiver4260, <TRANSFER_receiver4260>, string) => (inlinedCallArgs4327_receiver4329, <inlinedCallArgs4327_receiver4329>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4274>, <=4274>) <=> bool
assocTy: (<=4274>, <=4274>) <= bool
assocTy: tracking/updating type variable <=4274> <= bool
assocTy: (<string4276>, string) <=> string
assocTy: (<string4276>, string) <= string
assocTy: (<enforce-unit4277>, bool) <=> bool
assocTy: (<enforce-unit4277>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor4275>, <floor4275>) <=> <=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor4275>, <floor4275>) <= <=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor4275> <= <=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<TRANSFER_amount4261>, decimal) <=> <=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=4274_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4274>, bool) <=> bool
assocTy: (<=4274>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4280>, <>4280>) <=> bool
assocTy: (<>4280>, <>4280>) <= bool
assocTy: tracking/updating type variable <>4280> <= bool
assocTy: (<string4282>, string) <=> string
assocTy: (<string4282>, string) <= string
assocTy: (<enforce4279>, <enforce4279>) <=> bool
assocTy: (<enforce4279>, <enforce4279>) <= bool
assocTy: tracking/updating type variable <enforce4279> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4280_a[integer,decimal,string,time]> y:<>4280_a[integer,decimal,string,time]> -> bool
assocTy: (<TRANSFER_amount4261>, decimal) <=> <>4280_a[integer,decimal,string,time]>
assocTy: decimal => <>4280_a[integer,decimal,string,time]>
assocTy: (<decimal4281>, decimal) <=> <>4280_a[integer,decimal,string,time]>
assocTy: (<>4280>, bool) <=> bool
assocTy: (<>4280>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard4286>, <DEBIT4305_e>) <=> bool
assocTy: (<enforce-guard4286>, <DEBIT4305_e>) <= bool
assocTy: tracking/updating type variable <DEBIT4305_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability4283>, <compose-capability4283>) <=> bool
assocTy: (<compose-capability4283>, <compose-capability4283>) <= bool
assocTy: tracking/updating type variable <compose-capability4283> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4289_row}> key:string bindings:binding:<{with-read4289_row}> -> <with-read4289_a>
assocTy: (<marmalade.ledger.ledger4290>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4289_row}>
assocTy: (<{with-read4289_row}>, <{with-read4289_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4289_row}>, <{with-read4289_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4289_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4289_row}>)
assocTy: (<key4296>, string) <=> string
assocTy: (<key4296>, string) <= string
assocTy: (<account-guard4302>, guard) <=> <with-read4289_a>
assocTy: guard => <with-read4289_a>
assocTy: (<BindSchema4298_guard4299_f>, <BindSchema4298_guard4299_f>) <=> <with-read4289_a>
assocTy: (<BindSchema4298_guard4299_f>, <BindSchema4298_guard4299_f>) <= <with-read4289_a>
assocTy: tracking/updating type variable <BindSchema4298_guard4299_f> <= <with-read4289_a>
assocTy: (<BindSchema4298schema4301>, *) <=> binding:<{with-read4289_row}>
assocTy: (<BindSchema4298schema4301>, *) <= binding:<{with-read4289_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4294>, string) <=> string
assocTy: (<string4294>, string) <= string
assocTy: (<list4295>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4296>, string) <=> string
assocTy: (<key4296>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4309>, bool) <=> bool
assocTy: (<bool4309>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER4312>, bool) <=> bool
assocTy: (<TRANSFER4312>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema4298schema4301::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4298_guard4299_f>, guard) <=> guard
assocTy: (<BindSchema4298_guard4299_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4295::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard4286::<enforce-guard4286>, tyVar=<enforce-guard4286>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard4303::<account-guard4303>, tyVar=<account-guard4302>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard4286, <enforce-guard4286>, bool)]), (guard, [(account-guard4303, <account-guard4302>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard4286, <enforce-guard4286>)])), (guard, (guard, [(account-guard4303, <account-guard4302>)]))]
Adjusting type for solution: ((enforce-guard4286, <enforce-guard4286>), bool, bool)
assocTy: (<enforce-guard4286>, bool) <=> bool
assocTy: (<enforce-guard4286>, bool) <= bool
assocTy: (<enforce-guard4286>, bool) <=> bool
assocTy: (<enforce-guard4286>, bool) <= bool
Adjusting type for solution: ((account-guard4303, <account-guard4302>), guard, guard)
assocTy: (<account-guard4302>, guard) <=> guard
assocTy: (<account-guard4302>, guard) <= guard
assocTy: (<account-guard4302>, guard) <=> guard
assocTy: (<account-guard4302>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor4275::<floor4275>, tyVar=<floor4275>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4315_amount4317::decimal, tyVar=<TRANSFER_amount4261>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet4264_p4265::<BindLet4264_p4265_ai>, tyVar=<precision4271>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet4264_p4265, <precision4271>, integer)]), (decimal, [(floor4275, <floor4275>, decimal), (inlinedCallArgs4315_amount4317, <TRANSFER_amount4261>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet4264_p4265, <precision4271>)])), (decimal, (decimal, [(floor4275, <floor4275>), (inlinedCallArgs4315_amount4317, <TRANSFER_amount4261>)]))]
Adjusting type for solution: ((BindLet4264_p4265, <precision4271>), integer, integer)
assocTy: (<precision4271>, integer) <=> integer
assocTy: (<precision4271>, integer) <= integer
assocTy: (<precision4271>, integer) <=> integer
assocTy: (<precision4271>, integer) <= integer
Adjusting type for solution: ((floor4275, <floor4275>), decimal, decimal)
assocTy: (<floor4275>, decimal) <=> decimal
assocTy: (<floor4275>, decimal) <= decimal
assocTy: (<floor4275>, decimal) <=> decimal
assocTy: (<floor4275>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4315_amount4317, <TRANSFER_amount4261>), decimal, decimal)
assocTy: (<TRANSFER_amount4261>, decimal) <=> decimal
assocTy: (<TRANSFER_amount4261>, decimal) <= decimal
assocTy: (<TRANSFER_amount4261>, decimal) <=> decimal
assocTy: (<TRANSFER_amount4261>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read4269_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read4269_row}>, roleTy=<read4269>
tryFunType: cand: table:table:<{read4269_row}> key:string -> object:<{read4269_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read4269_row}>, AST=read4269::<read4269>, tyVar=<read4269>, resolvedTy=<read4269>}), (ArgVar 0, RoleTys { candArgTy=table:<{read4269_row}>, AST=marmalade.ledger.tokens4270::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4270>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4313_id4314::string, tyVar=<TRANSFER_id4258>, resolvedTy=string})]
tryFunType: trying table:table:<{read4269_row}> key:string -> object:<{read4269_row}> with [(string, [(inlinedCallArgs4313_id4314, <TRANSFER_id4258>, string)]), (table:<{read4269_row}>, [(marmalade.ledger.tokens4270, <marmalade.ledger.tokens4270>, table:{marmalade.ledger.token-schema})]), (object:<{read4269_row}>, [(read4269, <read4269>, <read4269>)])]
Solved overload with table:table:<{read4269_row}> key:string -> object:<{read4269_row}>: [(string, (string, [(inlinedCallArgs4313_id4314, <TRANSFER_id4258>)])), (table:<{read4269_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4270, <marmalade.ledger.tokens4270>)])), (object:<{read4269_row}>, (object:<{read4269_row}>, [(read4269, <read4269>)]))]
Adjusting type for solution: ((inlinedCallArgs4313_id4314, <TRANSFER_id4258>), string, string)
assocTy: (<TRANSFER_id4258>, string) <=> string
assocTy: (<TRANSFER_id4258>, string) <= string
assocTy: (<TRANSFER_id4258>, string) <=> string
assocTy: (<TRANSFER_id4258>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4270, <marmalade.ledger.tokens4270>), table:<{read4269_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4270>, table:{marmalade.ledger.token-schema}) <=> table:<{read4269_row}>
assocTy: (<{read4269_row}>, <{read4269_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4269_row}>, <{read4269_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read4269_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read4269_row}>)
assocTy: (<marmalade.ledger.tokens4270>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4270>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read4269, <read4269>), object:<{read4269_row}>, object:<{read4269_row}>)
assocTy: (<read4269>, <read4269>) <=> object:<{read4269_row}>
assocTy: (<read4269>, <read4269>) <= object:<{read4269_row}>
assocTy: tracking/updating type variable <read4269> <= object:<{read4269_row}>
assocTy: (<read4269>, object:{marmalade.ledger.token-schema}) <=> object:<{read4269_row}>
assocTy: (<{read4269_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4269_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read4269_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4267_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4267_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4267_l>] -> <at4267_a>: roles=[(RetVar, RoleTys { candArgTy=<at4267_a>, AST=at4267::<at4267>, tyVar=<precision4271>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4267_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4267_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4267_o}> -> <at4267_a>, roles=[(RetVar, RoleTys { candArgTy=<at4267_a>, AST=at4267::<at4267>, tyVar=<precision4271>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4268::string, tyVar=<string4268>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4267_o}>, AST=read4269::<read4269>, tyVar=<read4269>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at4267_o}> -> <at4267_a> with [(<at4267_a>, [(at4267, <precision4271>, integer)]), (string, [(string4268, <string4268>, string)]), (object:<{at4267_o}>, [(read4269, <read4269>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at4267_o}> -> <at4267_a>: [(<at4267_a>, (integer, [(at4267, <precision4271>)])), (string, (string, [(string4268, <string4268>)])), (object:<{at4267_o}>, (object:{marmalade.ledger.token-schema}, [(read4269, <read4269>)]))]
Adjusting type for solution: ((at4267, <precision4271>), <at4267_a>, integer)
assocTy: (<precision4271>, integer) <=> <at4267_a>
assocTy: integer => <at4267_a>
assocTy: (<precision4271>, integer) <=> integer
assocTy: (<precision4271>, integer) <= integer
Adjusting type for solution: ((string4268, <string4268>), string, string)
assocTy: (<string4268>, string) <=> string
assocTy: (<string4268>, string) <= string
assocTy: (<string4268>, string) <=> string
assocTy: (<string4268>, string) <= string
Adjusting type for solution: ((read4269, <read4269>), object:<{at4267_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4269>, object:{marmalade.ledger.token-schema}) <=> object:<{at4267_o}>
assocTy: (<{at4267_o}>, <{at4267_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at4267_o}>, <{at4267_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at4267_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at4267_o}>)
assocTy: (<read4269>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4269>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.TRANSFER:bool (id:string ...
===== Fun: (defun marmalade.ledger.transfer:bool (id:string s...
trackAST: (transfer_id4331, string)
trackAST: (transfer_sender4332, string)
trackAST: (transfer_receiver4333, string)
trackAST: (transfer_amount4334, decimal)
trackAST: (enforce4335, <enforce4335>)
trackAST: (!=4336, <!=4336>)
trackAST: (string4337, string)
trackAST: (enforce-valid-transfer_sender4338, string)
trackAST: (enforce-valid-transfer_receiver4339, string)
trackAST: (enforce-valid-transfer_precision4340, integer)
trackAST: (enforce-valid-transfer_amount4341, decimal)
trackAST: (enforce4342, <enforce4342>)
trackAST: (!=4343, <!=4343>)
trackAST: (string4344, string)
trackAST: (enforce-valid-amount_precision4345, integer)
trackAST: (enforce-valid-amount_amount4346, decimal)
trackAST: (enforce4347, <enforce4347>)
trackAST: (>4348, <>4348>)
trackAST: (decimal4349, decimal)
trackAST: (string4350, string)
trackAST: (enforce-precision_precision4351, integer)
trackAST: (enforce-precision_amount4352, decimal)
trackAST: (enforce4353, <enforce4353>)
trackAST: (=4354, <=4354>)
trackAST: (floor4355, <floor4355>)
trackAST: (string4356, string)
trackAST: (enforce-precision4357, <d>)
assocAST: (enforce4353, <enforce4353>, <enforce4353>) => (enforce-precision4357, <d>, <d>)
trackAST: (enforce-precision4358, <enforce-precision4358>)
assocAST: (enforce4353, <enforce4353>, <enforce4353>) => (enforce-precision4358, <enforce-precision4358>, <enforce-precision4358>)
trackAST: (enforce-valid-amount4359, <b>)
assocAST: (enforce-precision4358, <enforce4353>, <enforce4353>) => (enforce-valid-amount4359, <b>, <b>)
trackAST: (enforce-valid-amount4360, <enforce-valid-amount4360>)
assocAST: (enforce-precision4358, <enforce4353>, <enforce4353>) => (enforce-valid-amount4360, <enforce-valid-amount4360>, <enforce-valid-amount4360>)
trackAST: (enforce-valid-account_account4361, string)
trackAST: (enforce4362, <enforce4362>)
trackAST: (>4363, <>4363>)
trackAST: (length4364, <length4364>)
trackAST: (integer4365, integer)
trackAST: (string4366, string)
trackAST: (enforce-valid-account4367, <c>)
assocAST: (enforce4362, <enforce4362>, <enforce4362>) => (enforce-valid-account4367, <c>, <c>)
trackAST: (enforce-valid-account4368, <enforce-valid-account4368>)
assocAST: (enforce4362, <enforce4362>, <enforce4362>) => (enforce-valid-account4368, <enforce-valid-account4368>, <enforce-valid-account4368>)
trackAST: (enforce-valid-account_account4369, string)
trackAST: (enforce4370, <enforce4370>)
trackAST: (>4371, <>4371>)
trackAST: (length4372, <length4372>)
trackAST: (integer4373, integer)
trackAST: (string4374, string)
trackAST: (enforce-valid-account4375, <c>)
assocAST: (enforce4370, <enforce4370>, <enforce4370>) => (enforce-valid-account4375, <c>, <c>)
trackAST: (enforce-valid-account4376, <enforce-valid-account4376>)
assocAST: (enforce4370, <enforce4370>, <enforce4370>) => (enforce-valid-account4376, <enforce-valid-account4376>, <enforce-valid-account4376>)
trackAST: (enforce-valid-transfer4377, <e>)
assocAST: (enforce-valid-account4376, <enforce4370>, <enforce4370>) => (enforce-valid-transfer4377, <e>, <e>)
trackAST: (enforce-valid-transfer4378, <enforce-valid-transfer4378>)
trackAST: (precision_id4379, string)
trackAST: (at4380, <at4380>)
trackAST: (string4381, string)
trackAST: (read4382, <read4382>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4383, table:{marmalade.ledger.token-schema})
trackAST: (precision4384, integer)
assocAST: (precision4384, <precision4384>, integer) => (at4380, <at4380>, <at4380>)
trackAST: (precision4385, <precision4385>)
assocAST: (at4380, <precision4384>, integer) => (precision4385, <precision4385>, <precision4385>)
assocAST: (enforce-valid-account4376, <enforce4370>, <enforce4370>) => (enforce-valid-transfer4378, <enforce-valid-transfer4378>, <enforce-valid-transfer4378>)
trackAST: (with-capability4386, <with-capability4386>)
trackAST: (TRANSFER_id4387, string)
trackAST: (TRANSFER_sender4388, string)
trackAST: (TRANSFER_receiver4389, string)
trackAST: (TRANSFER_amount4390, decimal)
trackAST: (enforce-unit_id4391, string)
trackAST: (enforce-unit_amount4392, decimal)
trackAST: (BindLet4393, <BindLet4393>)
trackAST: (BindLet4393_p4394, <BindLet4393_p4394_ai>)
trackAST: (precision_id4395, string)
trackAST: (at4396, <at4396>)
trackAST: (string4397, string)
trackAST: (read4398, <read4398>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4399, table:{marmalade.ledger.token-schema})
trackAST: (precision4400, integer)
assocAST: (precision4400, <precision4400>, integer) => (at4396, <at4396>, <at4396>)
trackAST: (precision4401, <precision4401>)
assocAST: (at4396, <precision4400>, integer) => (precision4401, <precision4401>, <precision4401>)
assocAST: (precision4401, <precision4400>, integer) => (BindLet4393_p4394, <BindLet4393_p4394_ai>, <BindLet4393_p4394_ai>)
trackAST: (enforce4402, <enforce4402>)
trackAST: (=4403, <=4403>)
trackAST: (floor4404, <floor4404>)
trackAST: (string4405, string)
assocAST: (enforce4402, <enforce4402>, <enforce4402>) => (BindLet4393, <BindLet4393>, <BindLet4393>)
trackAST: (enforce-unit4406, bool)
assocAST: (enforce-unit4406, <enforce-unit4406>, bool) => (BindLet4393, <enforce4402>, <enforce4402>)
trackAST: (enforce-unit4407, <enforce-unit4407>)
assocAST: (BindLet4393, <enforce-unit4406>, bool) => (enforce-unit4407, <enforce-unit4407>, <enforce-unit4407>)
trackAST: (enforce4408, <enforce4408>)
trackAST: (>4409, <>4409>)
trackAST: (decimal4410, decimal)
trackAST: (string4411, string)
trackAST: (compose-capability4412, <compose-capability4412>)
trackAST: (DEBIT_id4413, string)
trackAST: (DEBIT_sender4414, string)
trackAST: (enforce-guard4415, <enforce-guard4415>)
trackAST: (account-guard_id4416, string)
trackAST: (account-guard_account4417, string)
trackAST: (with-read4418, <with-read4418>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4419, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4420, string)
trackAST: (key_account4421, string)
trackAST: (format4422, <format4422>)
trackAST: (string4423, string)
trackAST: (list4424, [<ak>])
trackAST: (key4425, string)
assocAST: (key4425, <key4425>, string) => (format4422, <format4422>, <format4422>)
trackAST: (key4426, <key4426>)
assocAST: (format4422, <key4425>, string) => (key4426, <key4426>, <key4426>)
trackAST: (BindSchema4427, <BindSchema4427>)
trackAST: (BindSchema4427_guard4428, <BindSchema4427_guard4428_f>)
trackAST: (string4429, string)
assocAST: (BindSchema4427_guard4428, <BindSchema4427_guard4428_f>, <BindSchema4427_guard4428_f>) => (BindSchema4427, <BindSchema4427>, <BindSchema4427>)
trackAST: (BindSchema4427schema4430, *)
trackAST: (account-guard4431, guard)
assocAST: (account-guard4431, <account-guard4431>, guard) => (with-read4418, <with-read4418>, <with-read4418>)
trackAST: (account-guard4432, <account-guard4432>)
assocAST: (with-read4418, <account-guard4431>, guard) => (account-guard4432, <account-guard4432>, <account-guard4432>)
trackAST: (DEBIT4433, <e>)
assocAST: (enforce-guard4415, <enforce-guard4415>, <enforce-guard4415>) => (DEBIT4433, <e>, <e>)
trackAST: (DEBIT4434, <DEBIT4434>)
assocAST: (enforce-guard4415, <enforce-guard4415>, <enforce-guard4415>) => (DEBIT4434, <DEBIT4434>, <DEBIT4434>)
trackAST: (compose-capability4435, <compose-capability4435>)
trackAST: (CREDIT_id4436, string)
trackAST: (CREDIT_receiver4437, string)
trackAST: (bool4438, bool)
trackAST: (CREDIT4439, <g>)
assocAST: (bool4438, <bool4438>, bool) => (CREDIT4439, <g>, <g>)
trackAST: (CREDIT4440, <CREDIT4440>)
assocAST: (bool4438, <bool4438>, bool) => (CREDIT4440, <CREDIT4440>, <CREDIT4440>)
trackAST: (TRANSFER4441, bool)
assocAST: (TRANSFER4441, <TRANSFER4441>, bool) => (compose-capability4435, <compose-capability4435>, <compose-capability4435>)
trackAST: (TRANSFER4442, <TRANSFER4442>)
assocAST: (compose-capability4435, <TRANSFER4441>, bool) => (TRANSFER4442, <TRANSFER4442>, <TRANSFER4442>)
trackAST: (list4443, [*])
trackAST: (enforce-transfer-policy_id4444, string)
trackAST: (enforce-transfer-policy_sender4445, string)
trackAST: (enforce-transfer-policy_receiver4446, string)
trackAST: (enforce-transfer-policy_amount4447, decimal)
trackAST: (bind4448, <bind4448>)
trackAST: (get-policy-info_id4449, string)
trackAST: (with-read4450, <with-read4450>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4451, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema4452, <BindSchema4452>)
trackAST: (BindSchema4452_policy4453, module{kip.token-policy-v1})
trackAST: (string4454, string)
trackAST: (BindSchema4452_supply4455, <BindSchema4452_supply4455_k>)
trackAST: (string4456, string)
trackAST: (BindSchema4452_precision4457, <BindSchema4452_precision4457_l>)
trackAST: (string4458, string)
trackAST: (BindSchema4452_manifest4459, <BindSchema4452_manifest4459_m>)
trackAST: (string4460, string)
TObject: TyAny
trackAST: (object4461, object:*)
TObject: TyAny
trackAST: (object4462, object:*)
assocAST: (object4461, <object4461>, object:*) => (BindSchema4452, <BindSchema4452>, <BindSchema4452>)
trackAST: (BindSchema4452schema4463, *)
trackAST: (get-policy-info4464, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info4464, <get-policy-info4464>, object:{marmalade.ledger.policy-info}) => (with-read4450, <with-read4450>, <with-read4450>)
trackAST: (get-policy-info4465, <get-policy-info4465>)
assocAST: (with-read4450, <get-policy-info4464>, object:{marmalade.ledger.policy-info}) => (get-policy-info4465, <get-policy-info4465>, <get-policy-info4465>)
trackAST: (BindSchema4466, <BindSchema4466>)
trackAST: (BindSchema4466_policy4467, module{kip.token-policy-v1})
trackAST: (string4468, string)
trackAST: (BindSchema4466_token4469, <BindSchema4466_token4469_t>)
trackAST: (string4470, string)
trackAST: (enforce-transfer_token4471, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-transfer_sender4472, string)
trackAST: (enforce-transfer_guard4473, guard)
trackAST: (enforce-transfer_receiver4474, string)
trackAST: (enforce-transfer_amount4475, decimal)
trackAST: (enforce-transfer4476, bool)
trackAST: (enforce-transfer4477, <enforce-transfer4477>)
trackAST: (account-guard_id4478, string)
trackAST: (account-guard_account4479, string)
trackAST: (with-read4480, <with-read4480>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4481, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4482, string)
trackAST: (key_account4483, string)
trackAST: (format4484, <format4484>)
trackAST: (string4485, string)
trackAST: (list4486, [<ak>])
trackAST: (key4487, string)
assocAST: (key4487, <key4487>, string) => (format4484, <format4484>, <format4484>)
trackAST: (key4488, <key4488>)
assocAST: (format4484, <key4487>, string) => (key4488, <key4488>, <key4488>)
trackAST: (BindSchema4489, <BindSchema4489>)
trackAST: (BindSchema4489_guard4490, <BindSchema4489_guard4490_f>)
trackAST: (string4491, string)
assocAST: (BindSchema4489_guard4490, <BindSchema4489_guard4490_f>, <BindSchema4489_guard4490_f>) => (BindSchema4489, <BindSchema4489>, <BindSchema4489>)
trackAST: (BindSchema4489schema4492, *)
trackAST: (account-guard4493, guard)
assocAST: (account-guard4493, <account-guard4493>, guard) => (with-read4480, <with-read4480>, <with-read4480>)
trackAST: (account-guard4494, <account-guard4494>)
assocAST: (with-read4480, <account-guard4493>, guard) => (account-guard4494, <account-guard4494>, <account-guard4494>)
assocAST: (enforce-transfer4476, <enforce-transfer4476>, bool) => (enforce-transfer4477, <enforce-transfer4477>, <enforce-transfer4477>)
assocAST: (enforce-transfer4477, <enforce-transfer4476>, bool) => (BindSchema4466, <BindSchema4466>, <BindSchema4466>)
trackAST: (BindSchema4466schema4495, *)
trackAST: (enforce-transfer-policy4496, <s>)
assocAST: (bind4448, <bind4448>, <bind4448>) => (enforce-transfer-policy4496, <s>, <s>)
trackAST: (enforce-transfer-policy4497, <enforce-transfer-policy4497>)
assocAST: (bind4448, <bind4448>, <bind4448>) => (enforce-transfer-policy4497, <enforce-transfer-policy4497>, <enforce-transfer-policy4497>)
trackAST: (with-read4498, <with-read4498>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4499, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4500, string)
trackAST: (key_account4501, string)
trackAST: (format4502, <format4502>)
trackAST: (string4503, string)
trackAST: (list4504, [<ak>])
trackAST: (key4505, string)
assocAST: (key4505, <key4505>, string) => (format4502, <format4502>, <format4502>)
trackAST: (key4506, <key4506>)
assocAST: (format4502, <key4505>, string) => (key4506, <key4506>, <key4506>)
trackAST: (BindSchema4507, <BindSchema4507>)
trackAST: (BindSchema4507_g4508, <BindSchema4507_g4508_p>)
trackAST: (string4509, string)
trackAST: (BindLet4510, <BindLet4510>)
trackAST: (BindLet4510_sender4511, <BindLet4510_sender4511_q>)
trackAST: (debit_id4512, string)
trackAST: (debit_account4513, string)
trackAST: (debit_amount4514, decimal)
trackAST: (require-capability4515, <require-capability4515>)
trackAST: (DEBIT_id4516, string)
trackAST: (DEBIT_sender4517, string)
trackAST: (enforce-guard4518, <enforce-guard4518>)
trackAST: (account-guard_id4519, string)
trackAST: (account-guard_account4520, string)
trackAST: (with-read4521, <with-read4521>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4522, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4523, string)
trackAST: (key_account4524, string)
trackAST: (format4525, <format4525>)
trackAST: (string4526, string)
trackAST: (list4527, [<ak>])
trackAST: (key4528, string)
assocAST: (key4528, <key4528>, string) => (format4525, <format4525>, <format4525>)
trackAST: (key4529, <key4529>)
assocAST: (format4525, <key4528>, string) => (key4529, <key4529>, <key4529>)
trackAST: (BindSchema4530, <BindSchema4530>)
trackAST: (BindSchema4530_guard4531, <BindSchema4530_guard4531_f>)
trackAST: (string4532, string)
assocAST: (BindSchema4530_guard4531, <BindSchema4530_guard4531_f>, <BindSchema4530_guard4531_f>) => (BindSchema4530, <BindSchema4530>, <BindSchema4530>)
trackAST: (BindSchema4530schema4533, *)
trackAST: (account-guard4534, guard)
assocAST: (account-guard4534, <account-guard4534>, guard) => (with-read4521, <with-read4521>, <with-read4521>)
trackAST: (account-guard4535, <account-guard4535>)
assocAST: (with-read4521, <account-guard4534>, guard) => (account-guard4535, <account-guard4535>, <account-guard4535>)
trackAST: (DEBIT4536, <e>)
assocAST: (enforce-guard4518, <enforce-guard4518>, <enforce-guard4518>) => (DEBIT4536, <e>, <e>)
trackAST: (DEBIT4537, <DEBIT4537>)
assocAST: (enforce-guard4518, <enforce-guard4518>, <enforce-guard4518>) => (DEBIT4537, <DEBIT4537>, <DEBIT4537>)
trackAST: (enforce-unit_id4538, string)
trackAST: (enforce-unit_amount4539, decimal)
trackAST: (BindLet4540, <BindLet4540>)
trackAST: (BindLet4540_p4541, <BindLet4540_p4541_ai>)
trackAST: (precision_id4542, string)
trackAST: (at4543, <at4543>)
trackAST: (string4544, string)
trackAST: (read4545, <read4545>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4546, table:{marmalade.ledger.token-schema})
trackAST: (precision4547, integer)
assocAST: (precision4547, <precision4547>, integer) => (at4543, <at4543>, <at4543>)
trackAST: (precision4548, <precision4548>)
assocAST: (at4543, <precision4547>, integer) => (precision4548, <precision4548>, <precision4548>)
assocAST: (precision4548, <precision4547>, integer) => (BindLet4540_p4541, <BindLet4540_p4541_ai>, <BindLet4540_p4541_ai>)
trackAST: (enforce4549, <enforce4549>)
trackAST: (=4550, <=4550>)
trackAST: (floor4551, <floor4551>)
trackAST: (string4552, string)
assocAST: (enforce4549, <enforce4549>, <enforce4549>) => (BindLet4540, <BindLet4540>, <BindLet4540>)
trackAST: (enforce-unit4553, bool)
assocAST: (enforce-unit4553, <enforce-unit4553>, bool) => (BindLet4540, <enforce4549>, <enforce4549>)
trackAST: (enforce-unit4554, <enforce-unit4554>)
assocAST: (BindLet4540, <enforce-unit4553>, bool) => (enforce-unit4554, <enforce-unit4554>, <enforce-unit4554>)
trackAST: (with-read4555, <with-read4555>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4556, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4557, string)
trackAST: (key_account4558, string)
trackAST: (format4559, <format4559>)
trackAST: (string4560, string)
trackAST: (list4561, [<ak>])
trackAST: (key4562, string)
assocAST: (key4562, <key4562>, string) => (format4559, <format4559>, <format4559>)
trackAST: (key4563, <key4563>)
assocAST: (format4559, <key4562>, string) => (key4563, <key4563>, <key4563>)
trackAST: (BindSchema4564, <BindSchema4564>)
trackAST: (BindSchema4564_old-bal4565, <BindSchema4564_old-bal4565_aa>)
trackAST: (string4566, string)
trackAST: (enforce4567, <enforce4567>)
trackAST: (<=4568, <<=4568>)
trackAST: (string4569, string)
trackAST: (BindLet4570, <BindLet4570>)
trackAST: (BindLet4570_new-bal4571, <BindLet4570_new-bal4571_ab>)
trackAST: (-4572, <-4572>)
assocAST: (-4572, <-4572>, <-4572>) => (BindLet4570_new-bal4571, <BindLet4570_new-bal4571_ab>, <BindLet4570_new-bal4571_ab>)
trackAST: (update4573, <update4573>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4574, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4575, string)
trackAST: (key_account4576, string)
trackAST: (format4577, <format4577>)
trackAST: (string4578, string)
trackAST: (list4579, [<ak>])
trackAST: (key4580, string)
assocAST: (key4580, <key4580>, string) => (format4577, <format4577>, <format4577>)
trackAST: (key4581, <key4581>)
assocAST: (format4577, <key4580>, string) => (key4581, <key4581>, <key4581>)
TObject: TyAny
trackAST: (object4582, object:*)
TObject: TyAny
trackAST: (object4583, object:*)
assocAST: (object4583, <object4583>, object:*) => (BindLet4570, <BindLet4570>, <BindLet4570>)
assocAST: (BindLet4570, <object4583>, object:*) => (BindSchema4564, <BindSchema4564>, <BindSchema4564>)
trackAST: (BindSchema4564schema4584, *)
trackAST: (debit4585, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit4585, <debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read4555, <with-read4555>, <with-read4555>)
trackAST: (debit4586, <debit4586>)
assocAST: (with-read4555, <debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit4586, <debit4586>, <debit4586>)
assocAST: (debit4586, <debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet4510_sender4511, <BindLet4510_sender4511_q>, <BindLet4510_sender4511_q>)
trackAST: (BindLet4510_receiver4587, <BindLet4510_receiver4587_r>)
trackAST: (credit_id4588, string)
trackAST: (credit_account4589, string)
trackAST: (credit_guard4590, guard)
trackAST: (credit_amount4591, decimal)
trackAST: (enforce-valid-account_account4592, string)
trackAST: (enforce4593, <enforce4593>)
trackAST: (>4594, <>4594>)
trackAST: (length4595, <length4595>)
trackAST: (integer4596, integer)
trackAST: (string4597, string)
trackAST: (enforce-valid-account4598, <c>)
assocAST: (enforce4593, <enforce4593>, <enforce4593>) => (enforce-valid-account4598, <c>, <c>)
trackAST: (enforce-valid-account4599, <enforce-valid-account4599>)
assocAST: (enforce4593, <enforce4593>, <enforce4593>) => (enforce-valid-account4599, <enforce-valid-account4599>, <enforce-valid-account4599>)
trackAST: (enforce-unit_id4600, string)
trackAST: (enforce-unit_amount4601, decimal)
trackAST: (BindLet4602, <BindLet4602>)
trackAST: (BindLet4602_p4603, <BindLet4602_p4603_ai>)
trackAST: (precision_id4604, string)
trackAST: (at4605, <at4605>)
trackAST: (string4606, string)
trackAST: (read4607, <read4607>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4608, table:{marmalade.ledger.token-schema})
trackAST: (precision4609, integer)
assocAST: (precision4609, <precision4609>, integer) => (at4605, <at4605>, <at4605>)
trackAST: (precision4610, <precision4610>)
assocAST: (at4605, <precision4609>, integer) => (precision4610, <precision4610>, <precision4610>)
assocAST: (precision4610, <precision4609>, integer) => (BindLet4602_p4603, <BindLet4602_p4603_ai>, <BindLet4602_p4603_ai>)
trackAST: (enforce4611, <enforce4611>)
trackAST: (=4612, <=4612>)
trackAST: (floor4613, <floor4613>)
trackAST: (string4614, string)
assocAST: (enforce4611, <enforce4611>, <enforce4611>) => (BindLet4602, <BindLet4602>, <BindLet4602>)
trackAST: (enforce-unit4615, bool)
assocAST: (enforce-unit4615, <enforce-unit4615>, bool) => (BindLet4602, <enforce4611>, <enforce4611>)
trackAST: (enforce-unit4616, <enforce-unit4616>)
assocAST: (BindLet4602, <enforce-unit4615>, bool) => (enforce-unit4616, <enforce-unit4616>, <enforce-unit4616>)
trackAST: (require-capability4617, <require-capability4617>)
trackAST: (CREDIT_id4618, string)
trackAST: (CREDIT_receiver4619, string)
trackAST: (bool4620, bool)
trackAST: (CREDIT4621, <g>)
assocAST: (bool4620, <bool4620>, bool) => (CREDIT4621, <g>, <g>)
trackAST: (CREDIT4622, <CREDIT4622>)
assocAST: (bool4620, <bool4620>, bool) => (CREDIT4622, <CREDIT4622>, <CREDIT4622>)
trackAST: (with-default-read4623, <with-default-read4623>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4624, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4625, string)
trackAST: (key_account4626, string)
trackAST: (format4627, <format4627>)
trackAST: (string4628, string)
trackAST: (list4629, [<ak>])
trackAST: (key4630, string)
assocAST: (key4630, <key4630>, string) => (format4627, <format4627>, <format4627>)
trackAST: (key4631, <key4631>)
assocAST: (format4627, <key4630>, string) => (key4631, <key4631>, <key4631>)
TObject: TyAny
trackAST: (object4632, object:*)
trackAST: (decimal4633, decimal)
trackAST: (BindSchema4634, <BindSchema4634>)
trackAST: (BindSchema4634_old-bal4635, <BindSchema4634_old-bal4635_ac>)
trackAST: (string4636, string)
trackAST: (BindSchema4634_retg4637, <BindSchema4634_retg4637_ad>)
trackAST: (string4638, string)
trackAST: (enforce4639, <enforce4639>)
trackAST: (=4640, <=4640>)
trackAST: (string4641, string)
trackAST: (BindLet4642, <BindLet4642>)
trackAST: (BindLet4642_is-new4643, <BindLet4642_is-new4643_ae>)
trackAST: (if4644, <if4644>)
trackAST: (=4645, <=4645>)
trackAST: (decimal4646, decimal)
trackAST: (enforce-reserved_account4647, string)
trackAST: (enforce-reserved_guard4648, guard)
trackAST: (BindLet4649, <BindLet4649>)
trackAST: (BindLet4649_r4650, <BindLet4649_r4650_g>)
trackAST: (check-reserved_account4651, string)
trackAST: (BindLet4652, <BindLet4652>)
trackAST: (BindLet4652_pfx4653, <BindLet4652_pfx4653_f>)
trackAST: (take4654, <take4654>)
trackAST: (integer4655, integer)
assocAST: (take4654, <take4654>, <take4654>) => (BindLet4652_pfx4653, <BindLet4652_pfx4653_f>, <BindLet4652_pfx4653_f>)
trackAST: (if4656, <if4656>)
trackAST: (=4657, <=4657>)
trackAST: (string4658, string)
trackAST: (take4659, <take4659>)
trackAST: (integer4660, integer)
trackAST: (take4661, <take4661>)
trackAST: (integer4662, integer)
trackAST: (string4663, string)
assocAST: (if4656, <if4656>, <if4656>) => (BindLet4652, <BindLet4652>, <BindLet4652>)
trackAST: (check-reserved4664, string)
assocAST: (check-reserved4664, <check-reserved4664>, string) => (BindLet4652, <if4656>, <if4656>)
trackAST: (check-reserved4665, <check-reserved4665>)
assocAST: (BindLet4652, <check-reserved4664>, string) => (check-reserved4665, <check-reserved4665>, <check-reserved4665>)
assocAST: (check-reserved4665, <check-reserved4664>, string) => (BindLet4649_r4650, <BindLet4649_r4650_g>, <BindLet4649_r4650_g>)
trackAST: (if4666, <if4666>)
trackAST: (=4667, <=4667>)
trackAST: (string4668, string)
trackAST: (bool4669, bool)
trackAST: (if4670, <if4670>)
trackAST: (=4671, <=4671>)
trackAST: (string4672, string)
trackAST: (enforce4673, <enforce4673>)
trackAST: (=4674, <=4674>)
trackAST: (format4675, <format4675>)
trackAST: (string4676, string)
trackAST: (list4677, [<h>])
trackAST: (format4678, <format4678>)
trackAST: (string4679, string)
trackAST: (list4680, [<i>])
trackAST: (drop4681, <drop4681>)
trackAST: (integer4682, integer)
trackAST: (string4683, string)
trackAST: (enforce4684, <enforce4684>)
trackAST: (bool4685, bool)
trackAST: (format4686, <format4686>)
trackAST: (string4687, string)
trackAST: (list4688, [<j>])
assocAST: (if4666, <if4666>, <if4666>) => (BindLet4649, <BindLet4649>, <BindLet4649>)
trackAST: (enforce-reserved4689, bool)
assocAST: (enforce-reserved4689, <enforce-reserved4689>, bool) => (BindLet4649, <if4666>, <if4666>)
trackAST: (enforce-reserved4690, <enforce-reserved4690>)
assocAST: (BindLet4649, <enforce-reserved4689>, bool) => (enforce-reserved4690, <enforce-reserved4690>, <enforce-reserved4690>)
trackAST: (bool4691, bool)
assocAST: (if4644, <if4644>, <if4644>) => (BindLet4642_is-new4643, <BindLet4642_is-new4643_ae>, <BindLet4642_is-new4643_ae>)
trackAST: (BindLet4692, <BindLet4692>)
trackAST: (BindLet4692_new-bal4693, <BindLet4692_new-bal4693_af>)
trackAST: (if4694, <if4694>)
trackAST: (+4695, <+4695>)
assocAST: (if4694, <if4694>, <if4694>) => (BindLet4692_new-bal4693, <BindLet4692_new-bal4693_af>, <BindLet4692_new-bal4693_af>)
trackAST: (write4696, <write4696>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4697, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4698, string)
trackAST: (key_account4699, string)
trackAST: (format4700, <format4700>)
trackAST: (string4701, string)
trackAST: (list4702, [<ak>])
trackAST: (key4703, string)
assocAST: (key4703, <key4703>, string) => (format4700, <format4700>, <format4700>)
trackAST: (key4704, <key4704>)
assocAST: (format4700, <key4703>, string) => (key4704, <key4704>, <key4704>)
TObject: TyAny
trackAST: (object4705, object:*)
trackAST: (if4706, <if4706>)
trackAST: (emit-event4707, <emit-event4707>)
trackAST: (ACCOUNT_GUARD_id4708, string)
trackAST: (ACCOUNT_GUARD_account4709, string)
trackAST: (ACCOUNT_GUARD_guard4710, guard)
trackAST: (bool4711, bool)
trackAST: (ACCOUNT_GUARD4712, bool)
assocAST: (bool4711, <bool4711>, bool) => (ACCOUNT_GUARD4712, <ACCOUNT_GUARD4712>, bool)
trackAST: (ACCOUNT_GUARD4713, <ACCOUNT_GUARD4713>)
assocAST: (bool4711, <bool4711>, bool) => (ACCOUNT_GUARD4713, <ACCOUNT_GUARD4713>, <ACCOUNT_GUARD4713>)
trackAST: (bool4714, bool)
TObject: TyAny
trackAST: (object4715, object:*)
trackAST: (if4716, <if4716>)
trackAST: (decimal4717, decimal)
assocAST: (object4715, <object4715>, object:*) => (BindLet4692, <BindLet4692>, <BindLet4692>)
assocAST: (BindLet4692, <object4715>, object:*) => (BindLet4642, <BindLet4642>, <BindLet4642>)
assocAST: (BindLet4642, <object4715>, object:*) => (BindSchema4634, <BindSchema4634>, <BindSchema4634>)
trackAST: (BindSchema4634schema4718, *)
trackAST: (credit4719, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit4719, <credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read4623, <with-default-read4623>, <with-default-read4623>)
trackAST: (credit4720, <credit4720>)
assocAST: (with-default-read4623, <credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit4720, <credit4720>, <credit4720>)
assocAST: (credit4720, <credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet4510_receiver4587, <BindLet4510_receiver4587_r>, <BindLet4510_receiver4587_r>)
trackAST: (emit-event4721, <emit-event4721>)
trackAST: (RECONCILE_token-id4722, string)
trackAST: (RECONCILE_amount4723, decimal)
trackAST: (RECONCILE_sender4724, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver4725, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool4726, bool)
trackAST: (RECONCILE4727, bool)
assocAST: (bool4726, <bool4726>, bool) => (RECONCILE4727, <RECONCILE4727>, bool)
trackAST: (RECONCILE4728, <RECONCILE4728>)
assocAST: (bool4726, <bool4726>, bool) => (RECONCILE4728, <RECONCILE4728>, <RECONCILE4728>)
assocAST: (emit-event4721, <emit-event4721>, <emit-event4721>) => (BindLet4510, <BindLet4510>, <BindLet4510>)
assocAST: (BindLet4510, <emit-event4721>, <emit-event4721>) => (BindSchema4507, <BindSchema4507>, <BindSchema4507>)
trackAST: (BindSchema4507schema4729, *)
trackAST: (transfer4730, bool)
assocAST: (transfer4730, <transfer4730>, bool) => (with-capability4386, <with-capability4386>, <with-capability4386>)
--------------------------------
 Substitute defuns:

assocTy: (<enforce4353>, <enforce4353>) <=> <enforce-precision4358_d>
assocTy: (<enforce4353>, <enforce4353>) <= <enforce-precision4358_d>
assocTy: tracking/updating type variable <enforce4353> <= <enforce-precision4358_d>
trackAST: (inlinedCallArgs4731, <inlinedCallArgs4731>)
assocTy: (<inlinedCallArgs4731>, <inlinedCallArgs4731>) <=> <enforce-precision4358_d>
assocTy: (<inlinedCallArgs4731>, <inlinedCallArgs4731>) <= <enforce-precision4358_d>
assocTy: tracking/updating type variable <inlinedCallArgs4731> <= <enforce-precision4358_d>
trackAST: (inlinedCallArgs4731_precision4732, integer)
assocAST: (enforce-valid-amount_precision4345, <enforce-valid-amount_precision4345>, integer) => (inlinedCallArgs4731_precision4732, <inlinedCallArgs4731_precision4732>, integer)
trackAST: (inlinedCallArgs4731_amount4733, decimal)
assocAST: (enforce-valid-amount_amount4346, <enforce-valid-amount_amount4346>, decimal) => (inlinedCallArgs4731_amount4733, <inlinedCallArgs4731_amount4733>, decimal)
assocAST: (inlinedCallArgs4731_precision4732, <enforce-valid-amount_precision4345>, integer) => (enforce-precision_precision4351, <enforce-precision_precision4351>, integer)
assocAST: (inlinedCallArgs4731_amount4733, <enforce-valid-amount_amount4346>, decimal) => (enforce-precision_amount4352, <enforce-precision_amount4352>, decimal)
assocAST: (inlinedCallArgs4731_amount4733, <enforce-valid-amount_amount4346>, decimal) => (enforce-precision_amount4352, <enforce-valid-amount_amount4346>, decimal)
assocTy: (<enforce4353>, <enforce-precision4358_d>) <=> <enforce-valid-amount4360_b>
assocTy: (<enforce4353>, <enforce-precision4358_d>) <= <enforce-valid-amount4360_b>
assocTy: tracking/updating type variable <enforce-precision4358_d> <= <enforce-valid-amount4360_b>
trackAST: (inlinedCallArgs4734, <inlinedCallArgs4734>)
assocTy: (<inlinedCallArgs4734>, <inlinedCallArgs4734>) <=> <enforce-valid-amount4360_b>
assocTy: (<inlinedCallArgs4734>, <inlinedCallArgs4734>) <= <enforce-valid-amount4360_b>
assocTy: tracking/updating type variable <inlinedCallArgs4734> <= <enforce-valid-amount4360_b>
trackAST: (inlinedCallArgs4734_precision4735, integer)
assocAST: (enforce-valid-transfer_precision4340, <enforce-valid-transfer_precision4340>, integer) => (inlinedCallArgs4734_precision4735, <inlinedCallArgs4734_precision4735>, integer)
trackAST: (inlinedCallArgs4734_amount4736, decimal)
assocAST: (enforce-valid-transfer_amount4341, <enforce-valid-transfer_amount4341>, decimal) => (inlinedCallArgs4734_amount4736, <inlinedCallArgs4734_amount4736>, decimal)
assocAST: (inlinedCallArgs4734_amount4736, <enforce-valid-transfer_amount4341>, decimal) => (enforce-valid-amount_amount4346, <enforce-valid-amount_amount4346>, decimal)
assocAST: (inlinedCallArgs4734_precision4735, <enforce-valid-transfer_precision4340>, integer) => (enforce-valid-amount_precision4345, <enforce-valid-amount_precision4345>, integer)
assocAST: (inlinedCallArgs4734_precision4735, <enforce-valid-transfer_precision4340>, integer) => (enforce-valid-amount_precision4345, <enforce-valid-transfer_precision4340>, integer)
assocAST: (inlinedCallArgs4734_amount4736, <enforce-valid-transfer_amount4341>, decimal) => (enforce-valid-amount_amount4346, <enforce-valid-transfer_amount4341>, decimal)
assocAST: (inlinedCallArgs4734_amount4736, <enforce-valid-transfer_amount4341>, decimal) => (enforce-valid-amount_amount4346, <enforce-valid-transfer_amount4341>, decimal)
assocTy: (<enforce4362>, <enforce4362>) <=> <enforce-valid-account4368_c>
assocTy: (<enforce4362>, <enforce4362>) <= <enforce-valid-account4368_c>
assocTy: tracking/updating type variable <enforce4362> <= <enforce-valid-account4368_c>
trackAST: (inlinedCallArgs4737, <inlinedCallArgs4737>)
assocTy: (<inlinedCallArgs4737>, <inlinedCallArgs4737>) <=> <enforce-valid-account4368_c>
assocTy: (<inlinedCallArgs4737>, <inlinedCallArgs4737>) <= <enforce-valid-account4368_c>
assocTy: tracking/updating type variable <inlinedCallArgs4737> <= <enforce-valid-account4368_c>
trackAST: (inlinedCallArgs4737_account4738, string)
assocAST: (enforce-valid-transfer_sender4338, <enforce-valid-transfer_sender4338>, string) => (inlinedCallArgs4737_account4738, <inlinedCallArgs4737_account4738>, string)
assocAST: (inlinedCallArgs4737_account4738, <enforce-valid-transfer_sender4338>, string) => (enforce-valid-account_account4361, <enforce-valid-account_account4361>, string)
assocTy: (<enforce4370>, <enforce4370>) <=> <enforce-valid-account4376_c>
assocTy: (<enforce4370>, <enforce4370>) <= <enforce-valid-account4376_c>
assocTy: tracking/updating type variable <enforce4370> <= <enforce-valid-account4376_c>
trackAST: (inlinedCallArgs4739, <inlinedCallArgs4739>)
assocTy: (<inlinedCallArgs4739>, <inlinedCallArgs4739>) <=> <enforce-valid-account4376_c>
assocTy: (<inlinedCallArgs4739>, <inlinedCallArgs4739>) <= <enforce-valid-account4376_c>
assocTy: tracking/updating type variable <inlinedCallArgs4739> <= <enforce-valid-account4376_c>
trackAST: (inlinedCallArgs4739_account4740, string)
assocAST: (enforce-valid-transfer_receiver4339, <enforce-valid-transfer_receiver4339>, string) => (inlinedCallArgs4739_account4740, <inlinedCallArgs4739_account4740>, string)
assocAST: (inlinedCallArgs4739_account4740, <enforce-valid-transfer_receiver4339>, string) => (enforce-valid-account_account4369, <enforce-valid-account_account4369>, string)
assocTy: (<precision4384>, integer) <=> integer
assocTy: (<precision4384>, integer) <= integer
trackAST: (inlinedCallArgs4741, <inlinedCallArgs4741>)
assocTy: (<inlinedCallArgs4741>, <inlinedCallArgs4741>) <=> integer
assocTy: (<inlinedCallArgs4741>, <inlinedCallArgs4741>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4741> <= integer
trackAST: (inlinedCallArgs4741_id4742, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4741_id4742, <inlinedCallArgs4741_id4742>, string)
assocAST: (inlinedCallArgs4741_id4742, <transfer_id4331>, string) => (precision_id4379, <precision_id4379>, string)
assocTy: (<enforce4370>, <enforce-valid-account4376_c>) <=> <enforce-valid-transfer4378_e>
assocTy: (<enforce4370>, <enforce-valid-account4376_c>) <= <enforce-valid-transfer4378_e>
assocTy: tracking/updating type variable <enforce-valid-account4376_c> <= <enforce-valid-transfer4378_e>
trackAST: (inlinedCallArgs4743, <inlinedCallArgs4743>)
assocTy: (<inlinedCallArgs4743>, <inlinedCallArgs4743>) <=> <enforce-valid-transfer4378_e>
assocTy: (<inlinedCallArgs4743>, <inlinedCallArgs4743>) <= <enforce-valid-transfer4378_e>
assocTy: tracking/updating type variable <inlinedCallArgs4743> <= <enforce-valid-transfer4378_e>
trackAST: (inlinedCallArgs4743_sender4744, string)
assocAST: (transfer_sender4332, <transfer_sender4332>, string) => (inlinedCallArgs4743_sender4744, <inlinedCallArgs4743_sender4744>, string)
trackAST: (inlinedCallArgs4743_receiver4745, string)
assocAST: (transfer_receiver4333, <transfer_receiver4333>, string) => (inlinedCallArgs4743_receiver4745, <inlinedCallArgs4743_receiver4745>, string)
trackAST: (inlinedCallArgs4743_precision4746, integer)
assocAST: (precision4385, <precision4384>, integer) => (inlinedCallArgs4743_precision4746, <inlinedCallArgs4743_precision4746>, integer)
trackAST: (inlinedCallArgs4743_amount4747, decimal)
assocAST: (transfer_amount4334, <transfer_amount4334>, decimal) => (inlinedCallArgs4743_amount4747, <inlinedCallArgs4743_amount4747>, decimal)
assocAST: (inlinedCallArgs4743_sender4744, <transfer_sender4332>, string) => (enforce-valid-transfer_sender4338, <enforce-valid-transfer_sender4338>, string)
assocAST: (inlinedCallArgs4743_receiver4745, <transfer_receiver4333>, string) => (enforce-valid-transfer_receiver4339, <enforce-valid-transfer_receiver4339>, string)
assocAST: (inlinedCallArgs4743_precision4746, <precision4384>, integer) => (enforce-valid-transfer_precision4340, <enforce-valid-transfer_precision4340>, integer)
assocAST: (inlinedCallArgs4743_precision4746, <precision4384>, integer) => (enforce-valid-transfer_precision4340, <precision4384>, integer)
assocAST: (inlinedCallArgs4743_amount4747, <transfer_amount4334>, decimal) => (enforce-valid-transfer_amount4341, <enforce-valid-transfer_amount4341>, decimal)
assocAST: (inlinedCallArgs4743_amount4747, <transfer_amount4334>, decimal) => (enforce-valid-transfer_amount4341, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4743_sender4744, <transfer_sender4332>, string) => (enforce-valid-transfer_sender4338, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4743_sender4744, <transfer_sender4332>, string) => (enforce-valid-transfer_sender4338, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4743_receiver4745, <transfer_receiver4333>, string) => (enforce-valid-transfer_receiver4339, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4743_receiver4745, <transfer_receiver4333>, string) => (enforce-valid-transfer_receiver4339, <transfer_receiver4333>, string)
assocTy: (<key4487>, string) <=> string
assocTy: (<key4487>, string) <= string
trackAST: (inlinedCallArgs4748, <inlinedCallArgs4748>)
assocTy: (<inlinedCallArgs4748>, <inlinedCallArgs4748>) <=> string
assocTy: (<inlinedCallArgs4748>, <inlinedCallArgs4748>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4748> <= string
trackAST: (inlinedCallArgs4748_id4749, string)
assocAST: (account-guard_id4478, <account-guard_id4478>, string) => (inlinedCallArgs4748_id4749, <inlinedCallArgs4748_id4749>, string)
trackAST: (inlinedCallArgs4748_account4750, string)
assocAST: (account-guard_account4479, <account-guard_account4479>, string) => (inlinedCallArgs4748_account4750, <inlinedCallArgs4748_account4750>, string)
assocAST: (inlinedCallArgs4748_id4749, <account-guard_id4478>, string) => (key_id4482, <key_id4482>, string)
assocAST: (inlinedCallArgs4748_account4750, <account-guard_account4479>, string) => (key_account4483, <key_account4483>, string)
assocTy: (<account-guard4493>, guard) <=> guard
assocTy: (<account-guard4493>, guard) <= guard
trackAST: (inlinedCallArgs4751, <inlinedCallArgs4751>)
assocTy: (<inlinedCallArgs4751>, <inlinedCallArgs4751>) <=> guard
assocTy: (<inlinedCallArgs4751>, <inlinedCallArgs4751>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4751> <= guard
trackAST: (inlinedCallArgs4751_id4752, string)
assocAST: (enforce-transfer-policy_id4444, <enforce-transfer-policy_id4444>, string) => (inlinedCallArgs4751_id4752, <inlinedCallArgs4751_id4752>, string)
trackAST: (inlinedCallArgs4751_account4753, string)
assocAST: (enforce-transfer-policy_sender4445, <enforce-transfer-policy_sender4445>, string) => (inlinedCallArgs4751_account4753, <inlinedCallArgs4751_account4753>, string)
assocAST: (inlinedCallArgs4751_id4752, <enforce-transfer-policy_id4444>, string) => (account-guard_id4478, <account-guard_id4478>, string)
assocAST: (inlinedCallArgs4751_id4752, <enforce-transfer-policy_id4444>, string) => (account-guard_id4478, <enforce-transfer-policy_id4444>, string)
assocAST: (inlinedCallArgs4751_account4753, <enforce-transfer-policy_sender4445>, string) => (account-guard_account4479, <account-guard_account4479>, string)
assocAST: (inlinedCallArgs4751_account4753, <enforce-transfer-policy_sender4445>, string) => (account-guard_account4479, <enforce-transfer-policy_sender4445>, string)
assocTy: (<enforce-transfer4476>, bool) <=> bool
assocTy: (<enforce-transfer4476>, bool) <= bool
trackAST: (inlinedCallArgs4754, <inlinedCallArgs4754>)
assocTy: (<inlinedCallArgs4754>, <inlinedCallArgs4754>) <=> bool
assocTy: (<inlinedCallArgs4754>, <inlinedCallArgs4754>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4754> <= bool
trackAST: (inlinedCallArgs4754_token4755, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs4754_token4755, <inlinedCallArgs4754_token4755>, object:{kip.token-policy-v1.token-info}) => (BindSchema4466_token4469, <BindSchema4466_token4469_t>, <BindSchema4466_token4469_t>)
trackAST: (inlinedCallArgs4754_sender4756, string)
assocAST: (enforce-transfer-policy_sender4445, <enforce-transfer-policy_sender4445>, string) => (inlinedCallArgs4754_sender4756, <inlinedCallArgs4754_sender4756>, string)
trackAST: (inlinedCallArgs4754_guard4757, guard)
assocAST: (account-guard4494, <account-guard4493>, guard) => (inlinedCallArgs4754_guard4757, <inlinedCallArgs4754_guard4757>, guard)
trackAST: (inlinedCallArgs4754_receiver4758, string)
assocAST: (enforce-transfer-policy_receiver4446, <enforce-transfer-policy_receiver4446>, string) => (inlinedCallArgs4754_receiver4758, <inlinedCallArgs4754_receiver4758>, string)
trackAST: (inlinedCallArgs4754_amount4759, decimal)
assocAST: (enforce-transfer-policy_amount4447, <enforce-transfer-policy_amount4447>, decimal) => (inlinedCallArgs4754_amount4759, <inlinedCallArgs4754_amount4759>, decimal)
assocTy: (<get-policy-info4464>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info4464>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs4760, <inlinedCallArgs4760>)
assocTy: (<inlinedCallArgs4760>, <inlinedCallArgs4760>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs4760>, <inlinedCallArgs4760>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs4760> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs4760_id4761, string)
assocAST: (enforce-transfer-policy_id4444, <enforce-transfer-policy_id4444>, string) => (inlinedCallArgs4760_id4761, <inlinedCallArgs4760_id4761>, string)
assocAST: (inlinedCallArgs4760_id4761, <enforce-transfer-policy_id4444>, string) => (get-policy-info_id4449, <get-policy-info_id4449>, string)
assocAST: (inlinedCallArgs4760_id4761, <enforce-transfer-policy_id4444>, string) => (get-policy-info_id4449, <enforce-transfer-policy_id4444>, string)
assocTy: (<bind4448>, <bind4448>) <=> <enforce-transfer-policy4497_s>
assocTy: (<bind4448>, <bind4448>) <= <enforce-transfer-policy4497_s>
assocTy: tracking/updating type variable <bind4448> <= <enforce-transfer-policy4497_s>
trackAST: (inlinedCallArgs4762, <inlinedCallArgs4762>)
assocTy: (<inlinedCallArgs4762>, <inlinedCallArgs4762>) <=> <enforce-transfer-policy4497_s>
assocTy: (<inlinedCallArgs4762>, <inlinedCallArgs4762>) <= <enforce-transfer-policy4497_s>
assocTy: tracking/updating type variable <inlinedCallArgs4762> <= <enforce-transfer-policy4497_s>
trackAST: (inlinedCallArgs4762_id4763, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4762_id4763, <inlinedCallArgs4762_id4763>, string)
trackAST: (inlinedCallArgs4762_sender4764, string)
assocAST: (transfer_sender4332, <transfer_sender4332>, string) => (inlinedCallArgs4762_sender4764, <inlinedCallArgs4762_sender4764>, string)
trackAST: (inlinedCallArgs4762_receiver4765, string)
assocAST: (transfer_receiver4333, <transfer_receiver4333>, string) => (inlinedCallArgs4762_receiver4765, <inlinedCallArgs4762_receiver4765>, string)
trackAST: (inlinedCallArgs4762_amount4766, decimal)
assocAST: (transfer_amount4334, <transfer_amount4334>, decimal) => (inlinedCallArgs4762_amount4766, <inlinedCallArgs4762_amount4766>, decimal)
assocAST: (inlinedCallArgs4762_id4763, <transfer_id4331>, string) => (enforce-transfer-policy_id4444, <enforce-transfer-policy_id4444>, string)
assocAST: (inlinedCallArgs4762_id4763, <transfer_id4331>, string) => (enforce-transfer-policy_id4444, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4762_id4763, <transfer_id4331>, string) => (enforce-transfer-policy_id4444, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4762_id4763, <transfer_id4331>, string) => (enforce-transfer-policy_id4444, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4762_id4763, <transfer_id4331>, string) => (enforce-transfer-policy_id4444, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4762_id4763, <transfer_id4331>, string) => (enforce-transfer-policy_id4444, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4762_sender4764, <transfer_sender4332>, string) => (enforce-transfer-policy_sender4445, <enforce-transfer-policy_sender4445>, string)
assocAST: (inlinedCallArgs4762_sender4764, <transfer_sender4332>, string) => (enforce-transfer-policy_sender4445, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4762_sender4764, <transfer_sender4332>, string) => (enforce-transfer-policy_sender4445, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4762_sender4764, <transfer_sender4332>, string) => (enforce-transfer-policy_sender4445, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4762_sender4764, <transfer_sender4332>, string) => (enforce-transfer-policy_sender4445, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4762_sender4764, <transfer_sender4332>, string) => (enforce-transfer-policy_sender4445, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4762_receiver4765, <transfer_receiver4333>, string) => (enforce-transfer-policy_receiver4446, <enforce-transfer-policy_receiver4446>, string)
assocAST: (inlinedCallArgs4762_receiver4765, <transfer_receiver4333>, string) => (enforce-transfer-policy_receiver4446, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4762_amount4766, <transfer_amount4334>, decimal) => (enforce-transfer-policy_amount4447, <enforce-transfer-policy_amount4447>, decimal)
assocAST: (inlinedCallArgs4762_amount4766, <transfer_amount4334>, decimal) => (enforce-transfer-policy_amount4447, <transfer_amount4334>, decimal)
assocTy: (<key4528>, string) <=> string
assocTy: (<key4528>, string) <= string
trackAST: (inlinedCallArgs4767, <inlinedCallArgs4767>)
assocTy: (<inlinedCallArgs4767>, <inlinedCallArgs4767>) <=> string
assocTy: (<inlinedCallArgs4767>, <inlinedCallArgs4767>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4767> <= string
trackAST: (inlinedCallArgs4767_id4768, string)
assocAST: (account-guard_id4519, <account-guard_id4519>, string) => (inlinedCallArgs4767_id4768, <inlinedCallArgs4767_id4768>, string)
trackAST: (inlinedCallArgs4767_account4769, string)
assocAST: (account-guard_account4520, <account-guard_account4520>, string) => (inlinedCallArgs4767_account4769, <inlinedCallArgs4767_account4769>, string)
assocAST: (inlinedCallArgs4767_id4768, <account-guard_id4519>, string) => (key_id4523, <key_id4523>, string)
assocAST: (inlinedCallArgs4767_account4769, <account-guard_account4520>, string) => (key_account4524, <key_account4524>, string)
assocTy: (<account-guard4534>, guard) <=> guard
assocTy: (<account-guard4534>, guard) <= guard
trackAST: (inlinedCallArgs4770, <inlinedCallArgs4770>)
assocTy: (<inlinedCallArgs4770>, <inlinedCallArgs4770>) <=> guard
assocTy: (<inlinedCallArgs4770>, <inlinedCallArgs4770>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4770> <= guard
trackAST: (inlinedCallArgs4770_id4771, string)
assocAST: (DEBIT_id4516, <DEBIT_id4516>, string) => (inlinedCallArgs4770_id4771, <inlinedCallArgs4770_id4771>, string)
trackAST: (inlinedCallArgs4770_account4772, string)
assocAST: (DEBIT_sender4517, <DEBIT_sender4517>, string) => (inlinedCallArgs4770_account4772, <inlinedCallArgs4770_account4772>, string)
assocAST: (inlinedCallArgs4770_id4771, <DEBIT_id4516>, string) => (account-guard_id4519, <account-guard_id4519>, string)
assocAST: (inlinedCallArgs4770_id4771, <DEBIT_id4516>, string) => (account-guard_id4519, <DEBIT_id4516>, string)
assocAST: (inlinedCallArgs4770_account4772, <DEBIT_sender4517>, string) => (account-guard_account4520, <account-guard_account4520>, string)
assocAST: (inlinedCallArgs4770_account4772, <DEBIT_sender4517>, string) => (account-guard_account4520, <DEBIT_sender4517>, string)
assocTy: (<enforce-guard4518>, <enforce-guard4518>) <=> <DEBIT4537_e>
assocTy: (<enforce-guard4518>, <enforce-guard4518>) <= <DEBIT4537_e>
assocTy: tracking/updating type variable <enforce-guard4518> <= <DEBIT4537_e>
trackAST: (inlinedCallArgs4773, <inlinedCallArgs4773>)
assocTy: (<inlinedCallArgs4773>, <inlinedCallArgs4773>) <=> <DEBIT4537_e>
assocTy: (<inlinedCallArgs4773>, <inlinedCallArgs4773>) <= <DEBIT4537_e>
assocTy: tracking/updating type variable <inlinedCallArgs4773> <= <DEBIT4537_e>
trackAST: (inlinedCallArgs4773_id4774, string)
assocAST: (debit_id4512, <debit_id4512>, string) => (inlinedCallArgs4773_id4774, <inlinedCallArgs4773_id4774>, string)
trackAST: (inlinedCallArgs4773_sender4775, string)
assocAST: (debit_account4513, <debit_account4513>, string) => (inlinedCallArgs4773_sender4775, <inlinedCallArgs4773_sender4775>, string)
assocAST: (inlinedCallArgs4773_id4774, <debit_id4512>, string) => (DEBIT_id4516, <DEBIT_id4516>, string)
assocAST: (inlinedCallArgs4773_id4774, <debit_id4512>, string) => (DEBIT_id4516, <debit_id4512>, string)
assocAST: (inlinedCallArgs4773_sender4775, <debit_account4513>, string) => (DEBIT_sender4517, <DEBIT_sender4517>, string)
assocAST: (inlinedCallArgs4773_sender4775, <debit_account4513>, string) => (DEBIT_sender4517, <debit_account4513>, string)
assocTy: (<precision4547>, integer) <=> integer
assocTy: (<precision4547>, integer) <= integer
trackAST: (inlinedCallArgs4776, <inlinedCallArgs4776>)
assocTy: (<inlinedCallArgs4776>, <inlinedCallArgs4776>) <=> integer
assocTy: (<inlinedCallArgs4776>, <inlinedCallArgs4776>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4776> <= integer
trackAST: (inlinedCallArgs4776_id4777, string)
assocAST: (enforce-unit_id4538, <enforce-unit_id4538>, string) => (inlinedCallArgs4776_id4777, <inlinedCallArgs4776_id4777>, string)
assocAST: (inlinedCallArgs4776_id4777, <enforce-unit_id4538>, string) => (precision_id4542, <precision_id4542>, string)
assocTy: (<enforce-unit4553>, bool) <=> bool
assocTy: (<enforce-unit4553>, bool) <= bool
trackAST: (inlinedCallArgs4778, <inlinedCallArgs4778>)
assocTy: (<inlinedCallArgs4778>, <inlinedCallArgs4778>) <=> bool
assocTy: (<inlinedCallArgs4778>, <inlinedCallArgs4778>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4778> <= bool
trackAST: (inlinedCallArgs4778_id4779, string)
assocAST: (debit_id4512, <debit_id4512>, string) => (inlinedCallArgs4778_id4779, <inlinedCallArgs4778_id4779>, string)
trackAST: (inlinedCallArgs4778_amount4780, decimal)
assocAST: (debit_amount4514, <debit_amount4514>, decimal) => (inlinedCallArgs4778_amount4780, <inlinedCallArgs4778_amount4780>, decimal)
assocAST: (inlinedCallArgs4778_id4779, <debit_id4512>, string) => (enforce-unit_id4538, <enforce-unit_id4538>, string)
assocAST: (inlinedCallArgs4778_id4779, <debit_id4512>, string) => (enforce-unit_id4538, <debit_id4512>, string)
assocAST: (inlinedCallArgs4778_amount4780, <debit_amount4514>, decimal) => (enforce-unit_amount4539, <enforce-unit_amount4539>, decimal)
assocAST: (inlinedCallArgs4778_amount4780, <debit_amount4514>, decimal) => (enforce-unit_amount4539, <debit_amount4514>, decimal)
assocTy: (<key4580>, string) <=> string
assocTy: (<key4580>, string) <= string
trackAST: (inlinedCallArgs4781, <inlinedCallArgs4781>)
assocTy: (<inlinedCallArgs4781>, <inlinedCallArgs4781>) <=> string
assocTy: (<inlinedCallArgs4781>, <inlinedCallArgs4781>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4781> <= string
trackAST: (inlinedCallArgs4781_id4782, string)
assocAST: (debit_id4512, <debit_id4512>, string) => (inlinedCallArgs4781_id4782, <inlinedCallArgs4781_id4782>, string)
trackAST: (inlinedCallArgs4781_account4783, string)
assocAST: (debit_account4513, <debit_account4513>, string) => (inlinedCallArgs4781_account4783, <inlinedCallArgs4781_account4783>, string)
assocAST: (inlinedCallArgs4781_id4782, <debit_id4512>, string) => (key_id4575, <key_id4575>, string)
assocAST: (inlinedCallArgs4781_account4783, <debit_account4513>, string) => (key_account4576, <key_account4576>, string)
assocTy: (<key4562>, string) <=> string
assocTy: (<key4562>, string) <= string
trackAST: (inlinedCallArgs4784, <inlinedCallArgs4784>)
assocTy: (<inlinedCallArgs4784>, <inlinedCallArgs4784>) <=> string
assocTy: (<inlinedCallArgs4784>, <inlinedCallArgs4784>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4784> <= string
trackAST: (inlinedCallArgs4784_id4785, string)
assocAST: (debit_id4512, <debit_id4512>, string) => (inlinedCallArgs4784_id4785, <inlinedCallArgs4784_id4785>, string)
trackAST: (inlinedCallArgs4784_account4786, string)
assocAST: (debit_account4513, <debit_account4513>, string) => (inlinedCallArgs4784_account4786, <inlinedCallArgs4784_account4786>, string)
assocAST: (inlinedCallArgs4784_id4785, <debit_id4512>, string) => (key_id4557, <key_id4557>, string)
assocAST: (inlinedCallArgs4784_account4786, <debit_account4513>, string) => (key_account4558, <key_account4558>, string)
assocTy: (<debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs4787, <inlinedCallArgs4787>)
assocTy: (<inlinedCallArgs4787>, <inlinedCallArgs4787>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs4787>, <inlinedCallArgs4787>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4787> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs4787_id4788, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4787_id4788, <inlinedCallArgs4787_id4788>, string)
trackAST: (inlinedCallArgs4787_account4789, string)
assocAST: (transfer_sender4332, <transfer_sender4332>, string) => (inlinedCallArgs4787_account4789, <inlinedCallArgs4787_account4789>, string)
trackAST: (inlinedCallArgs4787_amount4790, decimal)
assocAST: (transfer_amount4334, <transfer_amount4334>, decimal) => (inlinedCallArgs4787_amount4790, <inlinedCallArgs4787_amount4790>, decimal)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <debit_id4512>, string)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <debit_account4513>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_amount4790, <transfer_amount4334>, decimal) => (debit_amount4514, <debit_amount4514>, decimal)
assocAST: (inlinedCallArgs4787_amount4790, <transfer_amount4334>, decimal) => (debit_amount4514, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_id4788, <transfer_id4331>, string) => (debit_id4512, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4787_account4789, <transfer_sender4332>, string) => (debit_account4513, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4787_amount4790, <transfer_amount4334>, decimal) => (debit_amount4514, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4787_amount4790, <transfer_amount4334>, decimal) => (debit_amount4514, <transfer_amount4334>, decimal)
assocTy: (<enforce4593>, <enforce4593>) <=> <enforce-valid-account4599_c>
assocTy: (<enforce4593>, <enforce4593>) <= <enforce-valid-account4599_c>
assocTy: tracking/updating type variable <enforce4593> <= <enforce-valid-account4599_c>
trackAST: (inlinedCallArgs4791, <inlinedCallArgs4791>)
assocTy: (<inlinedCallArgs4791>, <inlinedCallArgs4791>) <=> <enforce-valid-account4599_c>
assocTy: (<inlinedCallArgs4791>, <inlinedCallArgs4791>) <= <enforce-valid-account4599_c>
assocTy: tracking/updating type variable <inlinedCallArgs4791> <= <enforce-valid-account4599_c>
trackAST: (inlinedCallArgs4791_account4792, string)
assocAST: (credit_account4589, <credit_account4589>, string) => (inlinedCallArgs4791_account4792, <inlinedCallArgs4791_account4792>, string)
assocAST: (inlinedCallArgs4791_account4792, <credit_account4589>, string) => (enforce-valid-account_account4592, <enforce-valid-account_account4592>, string)
assocTy: (<precision4609>, integer) <=> integer
assocTy: (<precision4609>, integer) <= integer
trackAST: (inlinedCallArgs4793, <inlinedCallArgs4793>)
assocTy: (<inlinedCallArgs4793>, <inlinedCallArgs4793>) <=> integer
assocTy: (<inlinedCallArgs4793>, <inlinedCallArgs4793>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4793> <= integer
trackAST: (inlinedCallArgs4793_id4794, string)
assocAST: (enforce-unit_id4600, <enforce-unit_id4600>, string) => (inlinedCallArgs4793_id4794, <inlinedCallArgs4793_id4794>, string)
assocAST: (inlinedCallArgs4793_id4794, <enforce-unit_id4600>, string) => (precision_id4604, <precision_id4604>, string)
assocTy: (<enforce-unit4615>, bool) <=> bool
assocTy: (<enforce-unit4615>, bool) <= bool
trackAST: (inlinedCallArgs4795, <inlinedCallArgs4795>)
assocTy: (<inlinedCallArgs4795>, <inlinedCallArgs4795>) <=> bool
assocTy: (<inlinedCallArgs4795>, <inlinedCallArgs4795>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4795> <= bool
trackAST: (inlinedCallArgs4795_id4796, string)
assocAST: (credit_id4588, <credit_id4588>, string) => (inlinedCallArgs4795_id4796, <inlinedCallArgs4795_id4796>, string)
trackAST: (inlinedCallArgs4795_amount4797, decimal)
assocAST: (credit_amount4591, <credit_amount4591>, decimal) => (inlinedCallArgs4795_amount4797, <inlinedCallArgs4795_amount4797>, decimal)
assocAST: (inlinedCallArgs4795_id4796, <credit_id4588>, string) => (enforce-unit_id4600, <enforce-unit_id4600>, string)
assocAST: (inlinedCallArgs4795_id4796, <credit_id4588>, string) => (enforce-unit_id4600, <credit_id4588>, string)
assocAST: (inlinedCallArgs4795_amount4797, <credit_amount4591>, decimal) => (enforce-unit_amount4601, <enforce-unit_amount4601>, decimal)
assocAST: (inlinedCallArgs4795_amount4797, <credit_amount4591>, decimal) => (enforce-unit_amount4601, <credit_amount4591>, decimal)
assocTy: (<bool4620>, bool) <=> <CREDIT4622_g>
assocTy: bool => <CREDIT4622_g>
trackAST: (inlinedCallArgs4798, <inlinedCallArgs4798>)
assocTy: (<inlinedCallArgs4798>, <inlinedCallArgs4798>) <=> <CREDIT4622_g>
assocTy: (<inlinedCallArgs4798>, <inlinedCallArgs4798>) <= <CREDIT4622_g>
assocTy: tracking/updating type variable <inlinedCallArgs4798> <= <CREDIT4622_g>
trackAST: (inlinedCallArgs4798_id4799, string)
assocAST: (credit_id4588, <credit_id4588>, string) => (inlinedCallArgs4798_id4799, <inlinedCallArgs4798_id4799>, string)
trackAST: (inlinedCallArgs4798_receiver4800, string)
assocAST: (credit_account4589, <credit_account4589>, string) => (inlinedCallArgs4798_receiver4800, <inlinedCallArgs4798_receiver4800>, string)
assocTy: (<check-reserved4664>, string) <=> string
assocTy: (<check-reserved4664>, string) <= string
trackAST: (inlinedCallArgs4801, <inlinedCallArgs4801>)
assocTy: (<inlinedCallArgs4801>, <inlinedCallArgs4801>) <=> string
assocTy: (<inlinedCallArgs4801>, <inlinedCallArgs4801>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4801> <= string
trackAST: (inlinedCallArgs4801_account4802, string)
assocAST: (enforce-reserved_account4647, <enforce-reserved_account4647>, string) => (inlinedCallArgs4801_account4802, <inlinedCallArgs4801_account4802>, string)
assocAST: (inlinedCallArgs4801_account4802, <enforce-reserved_account4647>, string) => (check-reserved_account4651, <check-reserved_account4651>, string)
assocTy: (<enforce-reserved4689>, bool) <=> bool
assocTy: (<enforce-reserved4689>, bool) <= bool
trackAST: (inlinedCallArgs4803, <inlinedCallArgs4803>)
assocTy: (<inlinedCallArgs4803>, <inlinedCallArgs4803>) <=> bool
assocTy: (<inlinedCallArgs4803>, <inlinedCallArgs4803>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4803> <= bool
trackAST: (inlinedCallArgs4803_account4804, string)
assocAST: (credit_account4589, <credit_account4589>, string) => (inlinedCallArgs4803_account4804, <inlinedCallArgs4803_account4804>, string)
trackAST: (inlinedCallArgs4803_guard4805, guard)
assocAST: (credit_guard4590, <credit_guard4590>, guard) => (inlinedCallArgs4803_guard4805, <inlinedCallArgs4803_guard4805>, guard)
assocAST: (inlinedCallArgs4803_account4804, <credit_account4589>, string) => (enforce-reserved_account4647, <enforce-reserved_account4647>, string)
assocAST: (inlinedCallArgs4803_account4804, <credit_account4589>, string) => (enforce-reserved_account4647, <credit_account4589>, string)
assocAST: (inlinedCallArgs4803_account4804, <credit_account4589>, string) => (enforce-reserved_account4647, <credit_account4589>, string)
assocAST: (inlinedCallArgs4803_guard4805, <credit_guard4590>, guard) => (enforce-reserved_guard4648, <enforce-reserved_guard4648>, guard)
assocTy: (<key4703>, string) <=> string
assocTy: (<key4703>, string) <= string
trackAST: (inlinedCallArgs4806, <inlinedCallArgs4806>)
assocTy: (<inlinedCallArgs4806>, <inlinedCallArgs4806>) <=> string
assocTy: (<inlinedCallArgs4806>, <inlinedCallArgs4806>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4806> <= string
trackAST: (inlinedCallArgs4806_id4807, string)
assocAST: (credit_id4588, <credit_id4588>, string) => (inlinedCallArgs4806_id4807, <inlinedCallArgs4806_id4807>, string)
trackAST: (inlinedCallArgs4806_account4808, string)
assocAST: (credit_account4589, <credit_account4589>, string) => (inlinedCallArgs4806_account4808, <inlinedCallArgs4806_account4808>, string)
assocAST: (inlinedCallArgs4806_id4807, <credit_id4588>, string) => (key_id4698, <key_id4698>, string)
assocAST: (inlinedCallArgs4806_account4808, <credit_account4589>, string) => (key_account4699, <key_account4699>, string)
assocTy: (<bool4711>, bool) <=> bool
assocTy: (<bool4711>, bool) <= bool
trackAST: (inlinedCallArgs4809, <inlinedCallArgs4809>)
assocTy: (<inlinedCallArgs4809>, <inlinedCallArgs4809>) <=> bool
assocTy: (<inlinedCallArgs4809>, <inlinedCallArgs4809>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4809> <= bool
trackAST: (inlinedCallArgs4809_id4810, string)
assocAST: (credit_id4588, <credit_id4588>, string) => (inlinedCallArgs4809_id4810, <inlinedCallArgs4809_id4810>, string)
trackAST: (inlinedCallArgs4809_account4811, string)
assocAST: (credit_account4589, <credit_account4589>, string) => (inlinedCallArgs4809_account4811, <inlinedCallArgs4809_account4811>, string)
trackAST: (inlinedCallArgs4809_guard4812, guard)
assocAST: (inlinedCallArgs4809_guard4812, <inlinedCallArgs4809_guard4812>, guard) => (BindSchema4634_retg4637, <BindSchema4634_retg4637_ad>, <BindSchema4634_retg4637_ad>)
assocTy: (<key4630>, string) <=> string
assocTy: (<key4630>, string) <= string
trackAST: (inlinedCallArgs4813, <inlinedCallArgs4813>)
assocTy: (<inlinedCallArgs4813>, <inlinedCallArgs4813>) <=> string
assocTy: (<inlinedCallArgs4813>, <inlinedCallArgs4813>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4813> <= string
trackAST: (inlinedCallArgs4813_id4814, string)
assocAST: (credit_id4588, <credit_id4588>, string) => (inlinedCallArgs4813_id4814, <inlinedCallArgs4813_id4814>, string)
trackAST: (inlinedCallArgs4813_account4815, string)
assocAST: (credit_account4589, <credit_account4589>, string) => (inlinedCallArgs4813_account4815, <inlinedCallArgs4813_account4815>, string)
assocAST: (inlinedCallArgs4813_id4814, <credit_id4588>, string) => (key_id4625, <key_id4625>, string)
assocAST: (inlinedCallArgs4813_account4815, <credit_account4589>, string) => (key_account4626, <key_account4626>, string)
assocTy: (<credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4816, <inlinedCallArgs4816>)
assocTy: (<inlinedCallArgs4816>, <inlinedCallArgs4816>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs4816>, <inlinedCallArgs4816>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs4816> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs4816_id4817, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4816_id4817, <inlinedCallArgs4816_id4817>, string)
trackAST: (inlinedCallArgs4816_account4818, string)
assocAST: (transfer_receiver4333, <transfer_receiver4333>, string) => (inlinedCallArgs4816_account4818, <inlinedCallArgs4816_account4818>, string)
trackAST: (inlinedCallArgs4816_guard4819, guard)
assocAST: (inlinedCallArgs4816_guard4819, <inlinedCallArgs4816_guard4819>, guard) => (BindSchema4507_g4508, <BindSchema4507_g4508_p>, <BindSchema4507_g4508_p>)
trackAST: (inlinedCallArgs4816_amount4820, decimal)
assocAST: (transfer_amount4334, <transfer_amount4334>, decimal) => (inlinedCallArgs4816_amount4820, <inlinedCallArgs4816_amount4820>, decimal)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <credit_account4589>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <credit_id4588>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_amount4820, <transfer_amount4334>, decimal) => (credit_amount4591, <credit_amount4591>, decimal)
assocAST: (inlinedCallArgs4816_amount4820, <transfer_amount4334>, decimal) => (credit_amount4591, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_id4817, <transfer_id4331>, string) => (credit_id4588, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_account4818, <transfer_receiver4333>, string) => (credit_account4589, <transfer_receiver4333>, string)
assocAST: (inlinedCallArgs4816_guard4819, <inlinedCallArgs4816_guard4819>, guard) => (credit_guard4590, <credit_guard4590>, guard)
assocAST: (inlinedCallArgs4816_guard4819, <inlinedCallArgs4816_guard4819>, guard) => (credit_guard4590, <inlinedCallArgs4816_guard4819>, guard)
assocAST: (inlinedCallArgs4816_guard4819, <inlinedCallArgs4816_guard4819>, guard) => (credit_guard4590, <inlinedCallArgs4816_guard4819>, guard)
assocAST: (inlinedCallArgs4816_guard4819, <inlinedCallArgs4816_guard4819>, guard) => (credit_guard4590, <inlinedCallArgs4816_guard4819>, guard)
assocAST: (inlinedCallArgs4816_amount4820, <transfer_amount4334>, decimal) => (credit_amount4591, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4816_amount4820, <transfer_amount4334>, decimal) => (credit_amount4591, <transfer_amount4334>, decimal)
assocTy: (<bool4726>, bool) <=> bool
assocTy: (<bool4726>, bool) <= bool
trackAST: (inlinedCallArgs4821, <inlinedCallArgs4821>)
assocTy: (<inlinedCallArgs4821>, <inlinedCallArgs4821>) <=> bool
assocTy: (<inlinedCallArgs4821>, <inlinedCallArgs4821>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4821> <= bool
trackAST: (inlinedCallArgs4821_token-id4822, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4821_token-id4822, <inlinedCallArgs4821_token-id4822>, string)
trackAST: (inlinedCallArgs4821_amount4823, decimal)
assocAST: (transfer_amount4334, <transfer_amount4334>, decimal) => (inlinedCallArgs4821_amount4823, <inlinedCallArgs4821_amount4823>, decimal)
trackAST: (inlinedCallArgs4821_sender4824, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet4510_sender4511, <debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs4821_sender4824, <inlinedCallArgs4821_sender4824>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs4821_receiver4825, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet4510_receiver4587, <credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs4821_receiver4825, <inlinedCallArgs4821_receiver4825>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<key4505>, string) <=> string
assocTy: (<key4505>, string) <= string
trackAST: (inlinedCallArgs4826, <inlinedCallArgs4826>)
assocTy: (<inlinedCallArgs4826>, <inlinedCallArgs4826>) <=> string
assocTy: (<inlinedCallArgs4826>, <inlinedCallArgs4826>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4826> <= string
trackAST: (inlinedCallArgs4826_id4827, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4826_id4827, <inlinedCallArgs4826_id4827>, string)
trackAST: (inlinedCallArgs4826_account4828, string)
assocAST: (transfer_receiver4333, <transfer_receiver4333>, string) => (inlinedCallArgs4826_account4828, <inlinedCallArgs4826_account4828>, string)
assocAST: (inlinedCallArgs4826_id4827, <transfer_id4331>, string) => (key_id4500, <key_id4500>, string)
assocAST: (inlinedCallArgs4826_account4828, <transfer_receiver4333>, string) => (key_account4501, <key_account4501>, string)
assocTy: (<precision4400>, integer) <=> integer
assocTy: (<precision4400>, integer) <= integer
trackAST: (inlinedCallArgs4829, <inlinedCallArgs4829>)
assocTy: (<inlinedCallArgs4829>, <inlinedCallArgs4829>) <=> integer
assocTy: (<inlinedCallArgs4829>, <inlinedCallArgs4829>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs4829> <= integer
trackAST: (inlinedCallArgs4829_id4830, string)
assocAST: (enforce-unit_id4391, <enforce-unit_id4391>, string) => (inlinedCallArgs4829_id4830, <inlinedCallArgs4829_id4830>, string)
assocAST: (inlinedCallArgs4829_id4830, <enforce-unit_id4391>, string) => (precision_id4395, <precision_id4395>, string)
assocTy: (<enforce-unit4406>, bool) <=> bool
assocTy: (<enforce-unit4406>, bool) <= bool
trackAST: (inlinedCallArgs4831, <inlinedCallArgs4831>)
assocTy: (<inlinedCallArgs4831>, <inlinedCallArgs4831>) <=> bool
assocTy: (<inlinedCallArgs4831>, <inlinedCallArgs4831>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4831> <= bool
trackAST: (inlinedCallArgs4831_id4832, string)
assocAST: (TRANSFER_id4387, <TRANSFER_id4387>, string) => (inlinedCallArgs4831_id4832, <inlinedCallArgs4831_id4832>, string)
trackAST: (inlinedCallArgs4831_amount4833, decimal)
assocAST: (TRANSFER_amount4390, <TRANSFER_amount4390>, decimal) => (inlinedCallArgs4831_amount4833, <inlinedCallArgs4831_amount4833>, decimal)
assocAST: (inlinedCallArgs4831_id4832, <TRANSFER_id4387>, string) => (enforce-unit_id4391, <enforce-unit_id4391>, string)
assocAST: (inlinedCallArgs4831_id4832, <TRANSFER_id4387>, string) => (enforce-unit_id4391, <TRANSFER_id4387>, string)
assocAST: (inlinedCallArgs4831_amount4833, <TRANSFER_amount4390>, decimal) => (enforce-unit_amount4392, <enforce-unit_amount4392>, decimal)
assocAST: (inlinedCallArgs4831_amount4833, <TRANSFER_amount4390>, decimal) => (enforce-unit_amount4392, <TRANSFER_amount4390>, decimal)
assocTy: (<key4425>, string) <=> string
assocTy: (<key4425>, string) <= string
trackAST: (inlinedCallArgs4834, <inlinedCallArgs4834>)
assocTy: (<inlinedCallArgs4834>, <inlinedCallArgs4834>) <=> string
assocTy: (<inlinedCallArgs4834>, <inlinedCallArgs4834>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4834> <= string
trackAST: (inlinedCallArgs4834_id4835, string)
assocAST: (account-guard_id4416, <account-guard_id4416>, string) => (inlinedCallArgs4834_id4835, <inlinedCallArgs4834_id4835>, string)
trackAST: (inlinedCallArgs4834_account4836, string)
assocAST: (account-guard_account4417, <account-guard_account4417>, string) => (inlinedCallArgs4834_account4836, <inlinedCallArgs4834_account4836>, string)
assocAST: (inlinedCallArgs4834_id4835, <account-guard_id4416>, string) => (key_id4420, <key_id4420>, string)
assocAST: (inlinedCallArgs4834_account4836, <account-guard_account4417>, string) => (key_account4421, <key_account4421>, string)
assocTy: (<account-guard4431>, guard) <=> guard
assocTy: (<account-guard4431>, guard) <= guard
trackAST: (inlinedCallArgs4837, <inlinedCallArgs4837>)
assocTy: (<inlinedCallArgs4837>, <inlinedCallArgs4837>) <=> guard
assocTy: (<inlinedCallArgs4837>, <inlinedCallArgs4837>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4837> <= guard
trackAST: (inlinedCallArgs4837_id4838, string)
assocAST: (DEBIT_id4413, <DEBIT_id4413>, string) => (inlinedCallArgs4837_id4838, <inlinedCallArgs4837_id4838>, string)
trackAST: (inlinedCallArgs4837_account4839, string)
assocAST: (DEBIT_sender4414, <DEBIT_sender4414>, string) => (inlinedCallArgs4837_account4839, <inlinedCallArgs4837_account4839>, string)
assocAST: (inlinedCallArgs4837_id4838, <DEBIT_id4413>, string) => (account-guard_id4416, <account-guard_id4416>, string)
assocAST: (inlinedCallArgs4837_id4838, <DEBIT_id4413>, string) => (account-guard_id4416, <DEBIT_id4413>, string)
assocAST: (inlinedCallArgs4837_account4839, <DEBIT_sender4414>, string) => (account-guard_account4417, <account-guard_account4417>, string)
assocAST: (inlinedCallArgs4837_account4839, <DEBIT_sender4414>, string) => (account-guard_account4417, <DEBIT_sender4414>, string)
assocTy: (<enforce-guard4415>, <enforce-guard4415>) <=> <DEBIT4434_e>
assocTy: (<enforce-guard4415>, <enforce-guard4415>) <= <DEBIT4434_e>
assocTy: tracking/updating type variable <enforce-guard4415> <= <DEBIT4434_e>
trackAST: (inlinedCallArgs4840, <inlinedCallArgs4840>)
assocTy: (<inlinedCallArgs4840>, <inlinedCallArgs4840>) <=> <DEBIT4434_e>
assocTy: (<inlinedCallArgs4840>, <inlinedCallArgs4840>) <= <DEBIT4434_e>
assocTy: tracking/updating type variable <inlinedCallArgs4840> <= <DEBIT4434_e>
trackAST: (inlinedCallArgs4840_id4841, string)
assocAST: (TRANSFER_id4387, <TRANSFER_id4387>, string) => (inlinedCallArgs4840_id4841, <inlinedCallArgs4840_id4841>, string)
trackAST: (inlinedCallArgs4840_sender4842, string)
assocAST: (TRANSFER_sender4388, <TRANSFER_sender4388>, string) => (inlinedCallArgs4840_sender4842, <inlinedCallArgs4840_sender4842>, string)
assocAST: (inlinedCallArgs4840_id4841, <TRANSFER_id4387>, string) => (DEBIT_id4413, <DEBIT_id4413>, string)
assocAST: (inlinedCallArgs4840_id4841, <TRANSFER_id4387>, string) => (DEBIT_id4413, <TRANSFER_id4387>, string)
assocAST: (inlinedCallArgs4840_sender4842, <TRANSFER_sender4388>, string) => (DEBIT_sender4414, <DEBIT_sender4414>, string)
assocAST: (inlinedCallArgs4840_sender4842, <TRANSFER_sender4388>, string) => (DEBIT_sender4414, <TRANSFER_sender4388>, string)
assocTy: (<bool4438>, bool) <=> <CREDIT4440_g>
assocTy: bool => <CREDIT4440_g>
trackAST: (inlinedCallArgs4843, <inlinedCallArgs4843>)
assocTy: (<inlinedCallArgs4843>, <inlinedCallArgs4843>) <=> <CREDIT4440_g>
assocTy: (<inlinedCallArgs4843>, <inlinedCallArgs4843>) <= <CREDIT4440_g>
assocTy: tracking/updating type variable <inlinedCallArgs4843> <= <CREDIT4440_g>
trackAST: (inlinedCallArgs4843_id4844, string)
assocAST: (TRANSFER_id4387, <TRANSFER_id4387>, string) => (inlinedCallArgs4843_id4844, <inlinedCallArgs4843_id4844>, string)
trackAST: (inlinedCallArgs4843_receiver4845, string)
assocAST: (TRANSFER_receiver4389, <TRANSFER_receiver4389>, string) => (inlinedCallArgs4843_receiver4845, <inlinedCallArgs4843_receiver4845>, string)
assocTy: (<TRANSFER4441>, bool) <=> bool
assocTy: (<TRANSFER4441>, bool) <= bool
trackAST: (inlinedCallArgs4846, <inlinedCallArgs4846>)
assocTy: (<inlinedCallArgs4846>, <inlinedCallArgs4846>) <=> bool
assocTy: (<inlinedCallArgs4846>, <inlinedCallArgs4846>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4846> <= bool
trackAST: (inlinedCallArgs4846_id4847, string)
assocAST: (transfer_id4331, <transfer_id4331>, string) => (inlinedCallArgs4846_id4847, <inlinedCallArgs4846_id4847>, string)
trackAST: (inlinedCallArgs4846_sender4848, string)
assocAST: (transfer_sender4332, <transfer_sender4332>, string) => (inlinedCallArgs4846_sender4848, <inlinedCallArgs4846_sender4848>, string)
trackAST: (inlinedCallArgs4846_receiver4849, string)
assocAST: (transfer_receiver4333, <transfer_receiver4333>, string) => (inlinedCallArgs4846_receiver4849, <inlinedCallArgs4846_receiver4849>, string)
trackAST: (inlinedCallArgs4846_amount4850, decimal)
assocAST: (transfer_amount4334, <transfer_amount4334>, decimal) => (inlinedCallArgs4846_amount4850, <inlinedCallArgs4846_amount4850>, decimal)
assocAST: (inlinedCallArgs4846_id4847, <transfer_id4331>, string) => (TRANSFER_id4387, <TRANSFER_id4387>, string)
assocAST: (inlinedCallArgs4846_id4847, <transfer_id4331>, string) => (TRANSFER_id4387, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4846_amount4850, <transfer_amount4334>, decimal) => (TRANSFER_amount4390, <TRANSFER_amount4390>, decimal)
assocAST: (inlinedCallArgs4846_amount4850, <transfer_amount4334>, decimal) => (TRANSFER_amount4390, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4846_amount4850, <transfer_amount4334>, decimal) => (TRANSFER_amount4390, <transfer_amount4334>, decimal)
assocAST: (inlinedCallArgs4846_id4847, <transfer_id4331>, string) => (TRANSFER_id4387, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4846_id4847, <transfer_id4331>, string) => (TRANSFER_id4387, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4846_sender4848, <transfer_sender4332>, string) => (TRANSFER_sender4388, <TRANSFER_sender4388>, string)
assocAST: (inlinedCallArgs4846_sender4848, <transfer_sender4332>, string) => (TRANSFER_sender4388, <transfer_sender4332>, string)
assocAST: (inlinedCallArgs4846_id4847, <transfer_id4331>, string) => (TRANSFER_id4387, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4846_id4847, <transfer_id4331>, string) => (TRANSFER_id4387, <transfer_id4331>, string)
assocAST: (inlinedCallArgs4846_receiver4849, <transfer_receiver4333>, string) => (TRANSFER_receiver4389, <TRANSFER_receiver4389>, string)
assocAST: (inlinedCallArgs4846_receiver4849, <transfer_receiver4333>, string) => (TRANSFER_receiver4389, <transfer_receiver4333>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<!=4336>, <!=4336>) <=> bool
assocTy: (<!=4336>, <!=4336>) <= bool
assocTy: tracking/updating type variable <!=4336> <= bool
assocTy: (<string4337>, string) <=> string
assocTy: (<string4337>, string) <= string
assocTy: (<enforce4335>, <enforce4335>) <=> bool
assocTy: (<enforce4335>, <enforce4335>) <= bool
assocTy: tracking/updating type variable <enforce4335> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<!=4336_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<!=4336_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<transfer_sender4332>, string) <=> <!=4336_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <!=4336_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer_receiver4333>, string) <=> <!=4336_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<!=4336>, bool) <=> bool
assocTy: (<!=4336>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<!=4343>, <!=4343>) <=> bool
assocTy: (<!=4343>, <!=4343>) <= bool
assocTy: tracking/updating type variable <!=4343> <= bool
assocTy: (<string4344>, string) <=> string
assocTy: (<string4344>, string) <= string
assocTy: (<enforce4342>, <enforce4342>) <=> bool
assocTy: (<enforce4342>, <enforce4342>) <= bool
assocTy: tracking/updating type variable <enforce4342> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<!=4343_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<!=4343_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<transfer_sender4332>, string) <=> <!=4343_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <!=4343_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer_receiver4333>, string) <=> <!=4343_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<!=4343>, bool) <=> bool
assocTy: (<!=4343>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4348>, <>4348>) <=> bool
assocTy: (<>4348>, <>4348>) <= bool
assocTy: tracking/updating type variable <>4348> <= bool
assocTy: (<string4350>, string) <=> string
assocTy: (<string4350>, string) <= string
assocTy: (<enforce4347>, <enforce4347>) <=> bool
assocTy: (<enforce4347>, <enforce4347>) <= bool
assocTy: tracking/updating type variable <enforce4347> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4348_a[integer,decimal,string,time]> y:<>4348_a[integer,decimal,string,time]> -> bool
assocTy: (<transfer_amount4334>, decimal) <=> <>4348_a[integer,decimal,string,time]>
assocTy: decimal => <>4348_a[integer,decimal,string,time]>
assocTy: (<decimal4349>, decimal) <=> <>4348_a[integer,decimal,string,time]>
assocTy: (<>4348>, bool) <=> bool
assocTy: (<>4348>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4354>, <=4354>) <=> bool
assocTy: (<=4354>, <=4354>) <= bool
assocTy: tracking/updating type variable <=4354> <= bool
assocTy: (<string4356>, string) <=> string
assocTy: (<string4356>, string) <= string
assocTy: (<enforce4353>, <enforce-valid-amount4360_b>) <=> bool
assocTy: (<enforce4353>, <enforce-valid-amount4360_b>) <= bool
assocTy: tracking/updating type variable <enforce-valid-amount4360_b> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor4355>, <floor4355>) <=> <=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor4355>, <floor4355>) <= <=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor4355> <= <=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer_amount4334>, decimal) <=> <=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=4354_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4354>, bool) <=> bool
assocTy: (<=4354>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4363>, <>4363>) <=> bool
assocTy: (<>4363>, <>4363>) <= bool
assocTy: tracking/updating type variable <>4363> <= bool
assocTy: (<string4366>, string) <=> string
assocTy: (<string4366>, string) <= string
assocTy: (<enforce4362>, <enforce-valid-account4368_c>) <=> bool
assocTy: (<enforce4362>, <enforce-valid-account4368_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account4368_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4363_a[integer,decimal,string,time]> y:<>4363_a[integer,decimal,string,time]> -> bool
assocTy: (<length4364>, <length4364>) <=> <>4363_a[integer,decimal,string,time]>
assocTy: (<length4364>, <length4364>) <= <>4363_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length4364> <= <>4363_a[integer,decimal,string,time]>
assocTy: (<integer4365>, integer) <=> <>4363_a[integer,decimal,string,time]>
assocTy: integer => <>4363_a[integer,decimal,string,time]>
assocTy: (<>4363>, bool) <=> bool
assocTy: (<>4363>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length4364_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<transfer_sender4332>, string) <=> <length4364_a[[<l>],string,object:<{o}>]>
assocTy: string => <length4364_a[[<l>],string,object:<{o}>]>
assocTy: (<length4364>, integer) <=> integer
assocTy: (<length4364>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4371>, <>4371>) <=> bool
assocTy: (<>4371>, <>4371>) <= bool
assocTy: tracking/updating type variable <>4371> <= bool
assocTy: (<string4374>, string) <=> string
assocTy: (<string4374>, string) <= string
assocTy: (<enforce4370>, <enforce-valid-transfer4378_e>) <=> bool
assocTy: (<enforce4370>, <enforce-valid-transfer4378_e>) <= bool
assocTy: tracking/updating type variable <enforce-valid-transfer4378_e> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4371_a[integer,decimal,string,time]> y:<>4371_a[integer,decimal,string,time]> -> bool
assocTy: (<length4372>, <length4372>) <=> <>4371_a[integer,decimal,string,time]>
assocTy: (<length4372>, <length4372>) <= <>4371_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length4372> <= <>4371_a[integer,decimal,string,time]>
assocTy: (<integer4373>, integer) <=> <>4371_a[integer,decimal,string,time]>
assocTy: integer => <>4371_a[integer,decimal,string,time]>
assocTy: (<>4371>, bool) <=> bool
assocTy: (<>4371>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length4372_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<transfer_receiver4333>, string) <=> <length4372_a[[<l>],string,object:<{o}>]>
assocTy: string => <length4372_a[[<l>],string,object:<{o}>]>
assocTy: (<length4372>, integer) <=> integer
assocTy: (<length4372>, integer) <= integer
Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability4386_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER4441>, bool) <=> bool
assocTy: (<TRANSFER4441>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<transfer4730>, bool) <=> <with-capability4386_a>
assocTy: bool => <with-capability4386_a>
assocTy: (<with-read4498>, <with-read4498>) <=> <with-capability4386_a>
assocTy: (<with-read4498>, <with-read4498>) <= <with-capability4386_a>
assocTy: tracking/updating type variable <with-read4498> <= <with-capability4386_a>
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind4448_row}> binding:binding:<{bind4448_row}> -> <bind4448_a>
assocTy: (<get-policy-info4464>, object:{marmalade.ledger.policy-info}) <=> object:<{bind4448_row}>
assocTy: (<{bind4448_row}>, <{bind4448_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind4448_row}>, <{bind4448_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind4448_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind4448_row}>)
assocTy: (<bind4448>, <enforce-transfer-policy4497_s>) <=> <bind4448_a>
assocTy: (<bind4448>, <enforce-transfer-policy4497_s>) <= <bind4448_a>
assocTy: tracking/updating type variable <enforce-transfer-policy4497_s> <= <bind4448_a>
assocTy: (<enforce-transfer4476>, bool) <=> <bind4448_a>
assocTy: bool => <bind4448_a>
assocTy: (<BindSchema4466schema4495>, *) <=> binding:<{bind4448_row}>
assocTy: (<BindSchema4466schema4495>, *) <= binding:<{bind4448_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4480_row}> key:string bindings:binding:<{with-read4480_row}> -> <with-read4480_a>
assocTy: (<marmalade.ledger.ledger4481>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4480_row}>
assocTy: (<{with-read4480_row}>, <{with-read4480_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4480_row}>, <{with-read4480_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4480_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4480_row}>)
assocTy: (<key4487>, string) <=> string
assocTy: (<key4487>, string) <= string
assocTy: (<account-guard4493>, guard) <=> <with-read4480_a>
assocTy: guard => <with-read4480_a>
assocTy: (<BindSchema4489_guard4490_f>, <BindSchema4489_guard4490_f>) <=> <with-read4480_a>
assocTy: (<BindSchema4489_guard4490_f>, <BindSchema4489_guard4490_f>) <= <with-read4480_a>
assocTy: tracking/updating type variable <BindSchema4489_guard4490_f> <= <with-read4480_a>
assocTy: (<BindSchema4489schema4492>, *) <=> binding:<{with-read4480_row}>
assocTy: (<BindSchema4489schema4492>, *) <= binding:<{with-read4480_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4485>, string) <=> string
assocTy: (<string4485>, string) <= string
assocTy: (<list4486>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4487>, string) <=> string
assocTy: (<key4487>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4480_row}> key:string bindings:binding:<{with-read4480_row}> -> <with-read4480_a>
assocTy: (<marmalade.ledger.ledger4481>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4480_row}>
assocTy: (<{with-read4480_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4480_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4480_row}>)
assocTy: (<key4487>, string) <=> string
assocTy: (<key4487>, string) <= string
assocTy: (<account-guard4493>, guard) <=> <with-read4480_a>
assocTy: (<BindSchema4489_guard4490_f>, guard) <=> <with-read4480_a>
assocTy: (<BindSchema4489schema4492>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read4480_row}>
assocTy: (<{with-read4480_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4480_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read4480_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4485>, string) <=> string
assocTy: (<string4485>, string) <= string
assocTy: (<list4486>, [*]) <=> [*]
assocTy: (<list4486>, [*]) <= [*]
assocTy: (<key4487>, string) <=> string
assocTy: (<key4487>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4450_row}> key:string bindings:binding:<{with-read4450_row}> -> <with-read4450_a>
assocTy: (<marmalade.ledger.tokens4451>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read4450_row}>
assocTy: (<{with-read4450_row}>, <{with-read4450_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read4450_row}>, <{with-read4450_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read4450_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read4450_row}>)
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
assocTy: (<get-policy-info4464>, object:{marmalade.ledger.policy-info}) <=> <with-read4450_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read4450_a>
assocTy: (<object4461>, object:*) <=> <with-read4450_a>
assocTy: (<BindSchema4452schema4463>, *) <=> binding:<{with-read4450_row}>
assocTy: (<BindSchema4452schema4463>, *) <= binding:<{with-read4450_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4498_row}> key:string bindings:binding:<{with-read4498_row}> -> <with-read4498_a>
assocTy: (<marmalade.ledger.ledger4499>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4498_row}>
assocTy: (<{with-read4498_row}>, <{with-read4498_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4498_row}>, <{with-read4498_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4498_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4498_row}>)
assocTy: (<key4505>, string) <=> string
assocTy: (<key4505>, string) <= string
assocTy: (<with-read4498>, bool) <=> <with-read4498_a>
assocTy: bool => <with-read4498_a>
assocTy: (<emit-event4721>, <emit-event4721>) <=> <with-read4498_a>
assocTy: (<emit-event4721>, <emit-event4721>) <= <with-read4498_a>
assocTy: tracking/updating type variable <emit-event4721> <= <with-read4498_a>
assocTy: (<BindSchema4507schema4729>, *) <=> binding:<{with-read4498_row}>
assocTy: (<BindSchema4507schema4729>, *) <= binding:<{with-read4498_row}>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard4518>, <DEBIT4537_e>) <=> bool
assocTy: (<enforce-guard4518>, <DEBIT4537_e>) <= bool
assocTy: tracking/updating type variable <DEBIT4537_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability4515>, <require-capability4515>) <=> bool
assocTy: (<require-capability4515>, <require-capability4515>) <= bool
assocTy: tracking/updating type variable <require-capability4515> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4521_row}> key:string bindings:binding:<{with-read4521_row}> -> <with-read4521_a>
assocTy: (<marmalade.ledger.ledger4522>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4521_row}>
assocTy: (<{with-read4521_row}>, <{with-read4521_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4521_row}>, <{with-read4521_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4521_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4521_row}>)
assocTy: (<key4528>, string) <=> string
assocTy: (<key4528>, string) <= string
assocTy: (<account-guard4534>, guard) <=> <with-read4521_a>
assocTy: guard => <with-read4521_a>
assocTy: (<BindSchema4530_guard4531_f>, <BindSchema4530_guard4531_f>) <=> <with-read4521_a>
assocTy: (<BindSchema4530_guard4531_f>, <BindSchema4530_guard4531_f>) <= <with-read4521_a>
assocTy: tracking/updating type variable <BindSchema4530_guard4531_f> <= <with-read4521_a>
assocTy: (<BindSchema4530schema4533>, *) <=> binding:<{with-read4521_row}>
assocTy: (<BindSchema4530schema4533>, *) <= binding:<{with-read4521_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4526>, string) <=> string
assocTy: (<string4526>, string) <= string
assocTy: (<list4527>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4528>, string) <=> string
assocTy: (<key4528>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4550>, <=4550>) <=> bool
assocTy: (<=4550>, <=4550>) <= bool
assocTy: tracking/updating type variable <=4550> <= bool
assocTy: (<string4552>, string) <=> string
assocTy: (<string4552>, string) <= string
assocTy: (<enforce-unit4553>, bool) <=> bool
assocTy: (<enforce-unit4553>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor4551>, <floor4551>) <=> <=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor4551>, <floor4551>) <= <=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor4551> <= <=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer_amount4334>, decimal) <=> <=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=4550_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4550>, bool) <=> bool
assocTy: (<=4550>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4555_row}> key:string bindings:binding:<{with-read4555_row}> -> <with-read4555_a>
assocTy: (<marmalade.ledger.ledger4556>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4555_row}>
assocTy: (<{with-read4555_row}>, <{with-read4555_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4555_row}>, <{with-read4555_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4555_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4555_row}>)
assocTy: (<key4562>, string) <=> string
assocTy: (<key4562>, string) <= string
assocTy: (<debit4585>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read4555_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read4555_a>
assocTy: (<object4583>, object:*) <=> <with-read4555_a>
assocTy: (<BindSchema4564schema4584>, *) <=> binding:<{with-read4555_row}>
assocTy: (<BindSchema4564schema4584>, *) <= binding:<{with-read4555_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=4568>, <<=4568>) <=> bool
assocTy: (<<=4568>, <<=4568>) <= bool
assocTy: tracking/updating type variable <<=4568> <= bool
assocTy: (<string4569>, string) <=> string
assocTy: (<string4569>, string) <= string
assocTy: (<enforce4567>, <enforce4567>) <=> bool
assocTy: (<enforce4567>, <enforce4567>) <= bool
assocTy: tracking/updating type variable <enforce4567> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=4568_a[integer,decimal,string,time]> y:<<=4568_a[integer,decimal,string,time]> -> bool
assocTy: (<transfer_amount4334>, decimal) <=> <<=4568_a[integer,decimal,string,time]>
assocTy: decimal => <<=4568_a[integer,decimal,string,time]>
assocTy: (<BindSchema4564_old-bal4565_aa>, <BindSchema4564_old-bal4565_aa>) <=> <<=4568_a[integer,decimal,string,time]>
assocTy: (<BindSchema4564_old-bal4565_aa>, <BindSchema4564_old-bal4565_aa>) <= <<=4568_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema4564_old-bal4565_aa> <= <<=4568_a[integer,decimal,string,time]>
assocTy: (<<=4568>, bool) <=> bool
assocTy: (<<=4568>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update4573_row}> key:string object:object:~<{update4573_row}> -> string
assocTy: (<marmalade.ledger.ledger4574>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update4573_row}>
assocTy: (<{update4573_row}>, <{update4573_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update4573_row}>, <{update4573_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update4573_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update4573_row}>)
assocTy: (<key4580>, string) <=> string
assocTy: (<key4580>, string) <= string
assocTy: (<object4582>, object:*) <=> object:~<{update4573_row}>
assocTy: (<object4582>, object:*) <= object:~<{update4573_row}>
assocTy: (<update4573>, <update4573>) <=> string
assocTy: (<update4573>, <update4573>) <= string
assocTy: tracking/updating type variable <update4573> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4578>, string) <=> string
assocTy: (<string4578>, string) <= string
assocTy: (<list4579>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4580>, string) <=> string
assocTy: (<key4580>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4560>, string) <=> string
assocTy: (<string4560>, string) <= string
assocTy: (<list4561>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4562>, string) <=> string
assocTy: (<key4562>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4594>, <>4594>) <=> bool
assocTy: (<>4594>, <>4594>) <= bool
assocTy: tracking/updating type variable <>4594> <= bool
assocTy: (<string4597>, string) <=> string
assocTy: (<string4597>, string) <= string
assocTy: (<enforce4593>, <enforce-valid-account4599_c>) <=> bool
assocTy: (<enforce4593>, <enforce-valid-account4599_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account4599_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4594_a[integer,decimal,string,time]> y:<>4594_a[integer,decimal,string,time]> -> bool
assocTy: (<length4595>, <length4595>) <=> <>4594_a[integer,decimal,string,time]>
assocTy: (<length4595>, <length4595>) <= <>4594_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length4595> <= <>4594_a[integer,decimal,string,time]>
assocTy: (<integer4596>, integer) <=> <>4594_a[integer,decimal,string,time]>
assocTy: integer => <>4594_a[integer,decimal,string,time]>
assocTy: (<>4594>, bool) <=> bool
assocTy: (<>4594>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length4595_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<transfer_receiver4333>, string) <=> <length4595_a[[<l>],string,object:<{o}>]>
assocTy: string => <length4595_a[[<l>],string,object:<{o}>]>
assocTy: (<length4595>, integer) <=> integer
assocTy: (<length4595>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4612>, <=4612>) <=> bool
assocTy: (<=4612>, <=4612>) <= bool
assocTy: tracking/updating type variable <=4612> <= bool
assocTy: (<string4614>, string) <=> string
assocTy: (<string4614>, string) <= string
assocTy: (<enforce-unit4615>, bool) <=> bool
assocTy: (<enforce-unit4615>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor4613>, <floor4613>) <=> <=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor4613>, <floor4613>) <= <=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor4613> <= <=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer_amount4334>, decimal) <=> <=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=4612_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4612>, bool) <=> bool
assocTy: (<=4612>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4620>, bool) <=> bool
assocTy: (<bool4620>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability4617>, <require-capability4617>) <=> bool
assocTy: (<require-capability4617>, <require-capability4617>) <= bool
assocTy: tracking/updating type variable <require-capability4617> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read4623_row}> key:string defaults:object:~<{with-default-read4623_row}> bindings:binding:~<{with-default-read4623_row}> -> <with-default-read4623_a>
assocTy: (<marmalade.ledger.ledger4624>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read4623_row}>
assocTy: (<{with-default-read4623_row}>, <{with-default-read4623_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read4623_row}>, <{with-default-read4623_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read4623_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read4623_row}>)
assocTy: (<key4630>, string) <=> string
assocTy: (<key4630>, string) <= string
assocTy: (<object4632>, object:*) <=> object:~<{with-default-read4623_row}>
assocTy: (<object4632>, object:*) <= object:~<{with-default-read4623_row}>
assocTy: (<credit4719>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read4623_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read4623_a>
assocTy: (<object4715>, object:*) <=> <with-default-read4623_a>
assocTy: (<BindSchema4634schema4718>, *) <=> binding:~<{with-default-read4623_row}>
assocTy: (<BindSchema4634schema4718>, *) <= binding:~<{with-default-read4623_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4640>, <=4640>) <=> bool
assocTy: (<=4640>, <=4640>) <= bool
assocTy: tracking/updating type variable <=4640> <= bool
assocTy: (<string4641>, string) <=> string
assocTy: (<string4641>, string) <= string
assocTy: (<enforce4639>, <enforce4639>) <=> bool
assocTy: (<enforce4639>, <enforce4639>) <= bool
assocTy: tracking/updating type variable <enforce4639> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4640_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4640_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs4809_guard4812>, guard) <=> <=4640_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=4640_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<inlinedCallArgs4816_guard4819>, guard) <=> <=4640_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4640>, bool) <=> bool
assocTy: (<=4640>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4644_a> else:<if4644_a> -> <if4644_a>
assocTy: (<=4645>, <=4645>) <=> bool
assocTy: (<=4645>, <=4645>) <= bool
assocTy: tracking/updating type variable <=4645> <= bool
assocTy: (<enforce-reserved4689>, bool) <=> <if4644_a>
assocTy: bool => <if4644_a>
assocTy: (<bool4691>, bool) <=> <if4644_a>
assocTy: (<if4644>, <if4644>) <=> <if4644_a>
assocTy: (<if4644>, <if4644>) <= <if4644_a>
assocTy: tracking/updating type variable <if4644> <= <if4644_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema4634_old-bal4635_ac>, <BindSchema4634_old-bal4635_ac>) <=> <=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema4634_old-bal4635_ac>, <BindSchema4634_old-bal4635_ac>) <= <=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema4634_old-bal4635_ac> <= <=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal4646>, decimal) <=> <=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=4645_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4645>, bool) <=> bool
assocTy: (<=4645>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4656_a> else:<if4656_a> -> <if4656_a>
assocTy: (<=4657>, <=4657>) <=> bool
assocTy: (<=4657>, <=4657>) <= bool
assocTy: tracking/updating type variable <=4657> <= bool
assocTy: (<take4661>, <take4661>) <=> <if4656_a>
assocTy: (<take4661>, <take4661>) <= <if4656_a>
assocTy: tracking/updating type variable <take4661> <= <if4656_a>
assocTy: (<string4663>, string) <=> <if4656_a>
assocTy: string => <if4656_a>
assocTy: (<check-reserved4664>, string) <=> <if4656_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string4658>, string) <=> <=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take4659>, <take4659>) <=> <=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take4659>, <take4659>) <= <=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take4659> <= <=4657_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4657>, bool) <=> bool
assocTy: (<=4657>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4666_a> else:<if4666_a> -> <if4666_a>
assocTy: (<=4667>, <=4667>) <=> bool
assocTy: (<=4667>, <=4667>) <= bool
assocTy: tracking/updating type variable <=4667> <= bool
assocTy: (<bool4669>, bool) <=> <if4666_a>
assocTy: bool => <if4666_a>
assocTy: (<if4670>, <if4670>) <=> <if4666_a>
assocTy: (<if4670>, <if4670>) <= <if4666_a>
assocTy: tracking/updating type variable <if4670> <= <if4666_a>
assocTy: (<enforce-reserved4689>, bool) <=> <if4666_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string4668>, string) <=> <=4667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=4667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved4664>, string) <=> <=4667_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4667>, bool) <=> bool
assocTy: (<=4667>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4670_a> else:<if4670_a> -> <if4670_a>
assocTy: (<=4671>, <=4671>) <=> bool
assocTy: (<=4671>, <=4671>) <= bool
assocTy: tracking/updating type variable <=4671> <= bool
assocTy: (<enforce4673>, <enforce4673>) <=> <if4670_a>
assocTy: (<enforce4673>, <enforce4673>) <= <if4670_a>
assocTy: tracking/updating type variable <enforce4673> <= <if4670_a>
assocTy: (<enforce4684>, <enforce4684>) <=> <if4670_a>
assocTy: (<enforce4684>, <enforce4684>) <= <if4670_a>
assocTy: tracking/updating type variable <enforce4684> <= <if4670_a>
assocTy: (<if4670>, bool) <=> <if4670_a>
assocTy: bool => <if4670_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4671_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4671_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string4672>, string) <=> <=4671_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=4671_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved4664>, string) <=> <=4671_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4671>, bool) <=> bool
assocTy: (<=4671>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4674>, <=4674>) <=> bool
assocTy: (<=4674>, <=4674>) <= bool
assocTy: tracking/updating type variable <=4674> <= bool
assocTy: (<string4683>, string) <=> string
assocTy: (<string4683>, string) <= string
assocTy: (<enforce4673>, bool) <=> bool
assocTy: (<enforce4673>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format4675>, <format4675>) <=> <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format4675>, <format4675>) <= <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format4675> <= <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format4678>, <format4678>) <=> <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format4678>, <format4678>) <= <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format4678> <= <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4674>, bool) <=> bool
assocTy: (<=4674>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4676>, string) <=> string
assocTy: (<string4676>, string) <= string
assocTy: (<list4677>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format4675>, <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format4675>, <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=4674_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4679>, string) <=> string
assocTy: (<string4679>, string) <= string
assocTy: (<list4680>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format4678>, string) <=> string
assocTy: (<format4678>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool4685>, bool) <=> bool
assocTy: (<bool4685>, bool) <= bool
assocTy: (<format4686>, <format4686>) <=> string
assocTy: (<format4686>, <format4686>) <= string
assocTy: tracking/updating type variable <format4686> <= string
assocTy: (<enforce4684>, bool) <=> bool
assocTy: (<enforce4684>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4687>, string) <=> string
assocTy: (<string4687>, string) <= string
assocTy: (<list4688>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format4686>, string) <=> string
assocTy: (<format4686>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4694_a> else:<if4694_a> -> <if4694_a>
assocTy: (<if4644>, bool) <=> bool
assocTy: (<if4644>, bool) <= bool
assocTy: (<transfer_amount4334>, decimal) <=> <if4694_a>
assocTy: decimal => <if4694_a>
assocTy: (<+4695>, <+4695>) <=> <if4694_a>
assocTy: (<+4695>, <+4695>) <= <if4694_a>
assocTy: tracking/updating type variable <+4695> <= <if4694_a>
assocTy: (<if4694>, <if4694>) <=> <if4694_a>
assocTy: (<if4694>, <if4694>) <= <if4694_a>
assocTy: tracking/updating type variable <if4694> <= <if4694_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write4696_row}> key:string object:object:<{write4696_row}> -> string
assocTy: (<marmalade.ledger.ledger4697>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write4696_row}>
assocTy: (<{write4696_row}>, <{write4696_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write4696_row}>, <{write4696_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write4696_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write4696_row}>)
assocTy: (<key4703>, string) <=> string
assocTy: (<key4703>, string) <= string
assocTy: (<object4705>, object:*) <=> object:<{write4696_row}>
assocTy: (<object4705>, object:*) <= object:<{write4696_row}>
assocTy: (<write4696>, <write4696>) <=> string
assocTy: (<write4696>, <write4696>) <= string
assocTy: tracking/updating type variable <write4696> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4701>, string) <=> string
assocTy: (<string4701>, string) <= string
assocTy: (<list4702>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4703>, string) <=> string
assocTy: (<key4703>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4706_a> else:<if4706_a> -> <if4706_a>
assocTy: (<if4644>, bool) <=> bool
assocTy: (<if4644>, bool) <= bool
assocTy: (<emit-event4707>, <emit-event4707>) <=> <if4706_a>
assocTy: (<emit-event4707>, <emit-event4707>) <= <if4706_a>
assocTy: tracking/updating type variable <emit-event4707> <= <if4706_a>
assocTy: (<bool4714>, bool) <=> <if4706_a>
assocTy: bool => <if4706_a>
assocTy: (<if4706>, <if4706>) <=> <if4706_a>
assocTy: (<if4706>, <if4706>) <= <if4706_a>
assocTy: tracking/updating type variable <if4706> <= <if4706_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4711>, bool) <=> bool
assocTy: (<bool4711>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event4707>, bool) <=> bool
assocTy: (<emit-event4707>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if4716_a> else:<if4716_a> -> <if4716_a>
assocTy: (<if4644>, bool) <=> bool
assocTy: (<if4644>, bool) <= bool
assocTy: (<decimal4717>, decimal) <=> <if4716_a>
assocTy: decimal => <if4716_a>
assocTy: (<BindSchema4634_old-bal4635_ac>, decimal) <=> <if4716_a>
assocTy: (<if4716>, <if4716>) <=> <if4716_a>
assocTy: (<if4716>, <if4716>) <= <if4716_a>
assocTy: tracking/updating type variable <if4716> <= <if4716_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4628>, string) <=> string
assocTy: (<string4628>, string) <= string
assocTy: (<list4629>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4630>, string) <=> string
assocTy: (<key4630>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4726>, bool) <=> bool
assocTy: (<bool4726>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event4721>, bool) <=> bool
assocTy: (<emit-event4721>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4503>, string) <=> string
assocTy: (<string4503>, string) <= string
assocTy: (<list4504>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4505>, string) <=> string
assocTy: (<key4505>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=4403>, <=4403>) <=> bool
assocTy: (<=4403>, <=4403>) <= bool
assocTy: tracking/updating type variable <=4403> <= bool
assocTy: (<string4405>, string) <=> string
assocTy: (<string4405>, string) <= string
assocTy: (<enforce-unit4406>, bool) <=> bool
assocTy: (<enforce-unit4406>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor4404>, <floor4404>) <=> <=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor4404>, <floor4404>) <= <=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor4404> <= <=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<transfer_amount4334>, decimal) <=> <=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=4403_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=4403>, bool) <=> bool
assocTy: (<=4403>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4409>, <>4409>) <=> bool
assocTy: (<>4409>, <>4409>) <= bool
assocTy: tracking/updating type variable <>4409> <= bool
assocTy: (<string4411>, string) <=> string
assocTy: (<string4411>, string) <= string
assocTy: (<enforce4408>, <enforce4408>) <=> bool
assocTy: (<enforce4408>, <enforce4408>) <= bool
assocTy: tracking/updating type variable <enforce4408> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4409_a[integer,decimal,string,time]> y:<>4409_a[integer,decimal,string,time]> -> bool
assocTy: (<transfer_amount4334>, decimal) <=> <>4409_a[integer,decimal,string,time]>
assocTy: decimal => <>4409_a[integer,decimal,string,time]>
assocTy: (<decimal4410>, decimal) <=> <>4409_a[integer,decimal,string,time]>
assocTy: (<>4409>, bool) <=> bool
assocTy: (<>4409>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard4415>, <DEBIT4434_e>) <=> bool
assocTy: (<enforce-guard4415>, <DEBIT4434_e>) <= bool
assocTy: tracking/updating type variable <DEBIT4434_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability4412>, <compose-capability4412>) <=> bool
assocTy: (<compose-capability4412>, <compose-capability4412>) <= bool
assocTy: tracking/updating type variable <compose-capability4412> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4418_row}> key:string bindings:binding:<{with-read4418_row}> -> <with-read4418_a>
assocTy: (<marmalade.ledger.ledger4419>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4418_row}>
assocTy: (<{with-read4418_row}>, <{with-read4418_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4418_row}>, <{with-read4418_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4418_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4418_row}>)
assocTy: (<key4425>, string) <=> string
assocTy: (<key4425>, string) <= string
assocTy: (<account-guard4431>, guard) <=> <with-read4418_a>
assocTy: guard => <with-read4418_a>
assocTy: (<BindSchema4427_guard4428_f>, <BindSchema4427_guard4428_f>) <=> <with-read4418_a>
assocTy: (<BindSchema4427_guard4428_f>, <BindSchema4427_guard4428_f>) <= <with-read4418_a>
assocTy: tracking/updating type variable <BindSchema4427_guard4428_f> <= <with-read4418_a>
assocTy: (<BindSchema4427schema4430>, *) <=> binding:<{with-read4418_row}>
assocTy: (<BindSchema4427schema4430>, *) <= binding:<{with-read4418_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4423>, string) <=> string
assocTy: (<string4423>, string) <= string
assocTy: (<list4424>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4425>, string) <=> string
assocTy: (<key4425>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4438>, bool) <=> bool
assocTy: (<bool4438>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER4441>, bool) <=> bool
assocTy: (<TRANSFER4441>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list4443::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema4466schema4495::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema4466_policy4467>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema4466_policy4467>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs4754_token4755>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs4754_token4755>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema4489schema4492::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4489_guard4490_f>, guard) <=> guard
assocTy: (<BindSchema4489_guard4490_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4486::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema4489schema4492::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4489_guard4490_f>, guard) <=> guard
assocTy: (<BindSchema4489_guard4490_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4486::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema4452schema4463::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema4452_manifest4459_m>, <BindSchema4452_manifest4459_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema4452_manifest4459_m>, <BindSchema4452_manifest4459_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema4452_manifest4459_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema4452_policy4453>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema4452_policy4453>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema4452_precision4457_l>, <BindSchema4452_precision4457_l>) <=> integer
assocTy: (<BindSchema4452_precision4457_l>, <BindSchema4452_precision4457_l>) <= integer
assocTy: tracking/updating type variable <BindSchema4452_precision4457_l> <= integer
assocTy: (<BindSchema4452_supply4455_k>, <BindSchema4452_supply4455_k>) <=> decimal
assocTy: (<BindSchema4452_supply4455_k>, <BindSchema4452_supply4455_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema4452_supply4455_k> <= decimal
applySchemas [binding]: (BindSchema4507schema4729::*, {kip.poly-fungible-v3.account-details})
assocTy: (<inlinedCallArgs4816_guard4819>, guard) <=> guard
assocTy: (<inlinedCallArgs4816_guard4819>, guard) <= guard
applySchemas [binding]: (BindSchema4530schema4533::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4530_guard4531_f>, guard) <=> guard
assocTy: (<BindSchema4530_guard4531_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4527::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema4564schema4584::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4564_old-bal4565_aa>, decimal) <=> decimal
assocTy: (<BindSchema4564_old-bal4565_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list4579::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object4582::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-4572>, <-4572>) <=> decimal
assocTy: (<-4572>, <-4572>) <= decimal
assocTy: tracking/updating type variable <-4572> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object4582>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object4582>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list4561::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema4634schema4718::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4634_old-bal4635_ac>, decimal) <=> decimal
assocTy: (<BindSchema4634_old-bal4635_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs4809_guard4812>, guard) <=> guard
assocTy: (<inlinedCallArgs4809_guard4812>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4677::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list4680::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list4688::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list4702::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object4705::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<transfer_receiver4333>, string) <=> string
assocTy: (<transfer_receiver4333>, string) <= string
assocTy: (<if4694>, decimal) <=> decimal
assocTy: (<if4694>, decimal) <= decimal
assocTy: (<inlinedCallArgs4809_guard4812>, guard) <=> guard
assocTy: (<inlinedCallArgs4809_guard4812>, guard) <= guard
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
Skipping TC on specified heterogenous list for node: list4629::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object4632::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal4633>, decimal) <=> decimal
assocTy: (<decimal4633>, decimal) <= decimal
assocTy: (<inlinedCallArgs4816_guard4819>, guard) <=> guard
assocTy: (<inlinedCallArgs4816_guard4819>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object4632>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object4632>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list4504::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema4427schema4430::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4427_guard4428_f>, guard) <=> guard
assocTy: (<BindSchema4427_guard4428_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4424::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard4415::<enforce-guard4415>, tyVar=<enforce-guard4415>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard4432::<account-guard4432>, tyVar=<account-guard4431>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard4415, <enforce-guard4415>, bool)]), (guard, [(account-guard4432, <account-guard4431>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard4415, <enforce-guard4415>)])), (guard, (guard, [(account-guard4432, <account-guard4431>)]))]
Adjusting type for solution: ((enforce-guard4415, <enforce-guard4415>), bool, bool)
assocTy: (<enforce-guard4415>, bool) <=> bool
assocTy: (<enforce-guard4415>, bool) <= bool
assocTy: (<enforce-guard4415>, bool) <=> bool
assocTy: (<enforce-guard4415>, bool) <= bool
Adjusting type for solution: ((account-guard4432, <account-guard4431>), guard, guard)
assocTy: (<account-guard4431>, guard) <=> guard
assocTy: (<account-guard4431>, guard) <= guard
assocTy: (<account-guard4431>, guard) <=> guard
assocTy: (<account-guard4431>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor4404::<floor4404>, tyVar=<floor4404>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4831_amount4833::decimal, tyVar=<transfer_amount4334>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet4393_p4394::<BindLet4393_p4394_ai>, tyVar=<precision4400>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet4393_p4394, <precision4400>, integer)]), (decimal, [(floor4404, <floor4404>, decimal), (inlinedCallArgs4831_amount4833, <transfer_amount4334>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet4393_p4394, <precision4400>)])), (decimal, (decimal, [(floor4404, <floor4404>), (inlinedCallArgs4831_amount4833, <transfer_amount4334>)]))]
Adjusting type for solution: ((BindLet4393_p4394, <precision4400>), integer, integer)
assocTy: (<precision4400>, integer) <=> integer
assocTy: (<precision4400>, integer) <= integer
assocTy: (<precision4400>, integer) <=> integer
assocTy: (<precision4400>, integer) <= integer
Adjusting type for solution: ((floor4404, <floor4404>), decimal, decimal)
assocTy: (<floor4404>, decimal) <=> decimal
assocTy: (<floor4404>, decimal) <= decimal
assocTy: (<floor4404>, decimal) <=> decimal
assocTy: (<floor4404>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4831_amount4833, <transfer_amount4334>), decimal, decimal)
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read4398_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read4398_row}>, roleTy=<read4398>
tryFunType: cand: table:table:<{read4398_row}> key:string -> object:<{read4398_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read4398_row}>, AST=read4398::<read4398>, tyVar=<read4398>, resolvedTy=<read4398>}), (ArgVar 0, RoleTys { candArgTy=table:<{read4398_row}>, AST=marmalade.ledger.tokens4399::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4399>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4829_id4830::string, tyVar=<transfer_id4331>, resolvedTy=string})]
tryFunType: trying table:table:<{read4398_row}> key:string -> object:<{read4398_row}> with [(string, [(inlinedCallArgs4829_id4830, <transfer_id4331>, string)]), (table:<{read4398_row}>, [(marmalade.ledger.tokens4399, <marmalade.ledger.tokens4399>, table:{marmalade.ledger.token-schema})]), (object:<{read4398_row}>, [(read4398, <read4398>, <read4398>)])]
Solved overload with table:table:<{read4398_row}> key:string -> object:<{read4398_row}>: [(string, (string, [(inlinedCallArgs4829_id4830, <transfer_id4331>)])), (table:<{read4398_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4399, <marmalade.ledger.tokens4399>)])), (object:<{read4398_row}>, (object:<{read4398_row}>, [(read4398, <read4398>)]))]
Adjusting type for solution: ((inlinedCallArgs4829_id4830, <transfer_id4331>), string, string)
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4399, <marmalade.ledger.tokens4399>), table:<{read4398_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4399>, table:{marmalade.ledger.token-schema}) <=> table:<{read4398_row}>
assocTy: (<{read4398_row}>, <{read4398_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4398_row}>, <{read4398_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read4398_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read4398_row}>)
assocTy: (<marmalade.ledger.tokens4399>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4399>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read4398, <read4398>), object:<{read4398_row}>, object:<{read4398_row}>)
assocTy: (<read4398>, <read4398>) <=> object:<{read4398_row}>
assocTy: (<read4398>, <read4398>) <= object:<{read4398_row}>
assocTy: tracking/updating type variable <read4398> <= object:<{read4398_row}>
assocTy: (<read4398>, object:{marmalade.ledger.token-schema}) <=> object:<{read4398_row}>
assocTy: (<{read4398_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4398_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read4398_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4396_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4396_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4396_l>] -> <at4396_a>: roles=[(RetVar, RoleTys { candArgTy=<at4396_a>, AST=at4396::<at4396>, tyVar=<precision4400>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4396_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4396_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4396_o}> -> <at4396_a>, roles=[(RetVar, RoleTys { candArgTy=<at4396_a>, AST=at4396::<at4396>, tyVar=<precision4400>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4397::string, tyVar=<string4397>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4396_o}>, AST=read4398::<read4398>, tyVar=<read4398>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at4396_o}> -> <at4396_a> with [(<at4396_a>, [(at4396, <precision4400>, integer)]), (string, [(string4397, <string4397>, string)]), (object:<{at4396_o}>, [(read4398, <read4398>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at4396_o}> -> <at4396_a>: [(<at4396_a>, (integer, [(at4396, <precision4400>)])), (string, (string, [(string4397, <string4397>)])), (object:<{at4396_o}>, (object:{marmalade.ledger.token-schema}, [(read4398, <read4398>)]))]
Adjusting type for solution: ((at4396, <precision4400>), <at4396_a>, integer)
assocTy: (<precision4400>, integer) <=> <at4396_a>
assocTy: integer => <at4396_a>
assocTy: (<precision4400>, integer) <=> integer
assocTy: (<precision4400>, integer) <= integer
Adjusting type for solution: ((string4397, <string4397>), string, string)
assocTy: (<string4397>, string) <=> string
assocTy: (<string4397>, string) <= string
assocTy: (<string4397>, string) <=> string
assocTy: (<string4397>, string) <= string
Adjusting type for solution: ((read4398, <read4398>), object:<{at4396_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4398>, object:{marmalade.ledger.token-schema}) <=> object:<{at4396_o}>
assocTy: (<{at4396_o}>, <{at4396_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at4396_o}>, <{at4396_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at4396_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at4396_o}>)
assocTy: (<read4398>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4398>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+4695_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+4695_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+4695_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+4695_a[integer,decimal]> y:<+4695_a[integer,decimal]> -> <+4695_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+4695_a[integer,decimal]>, AST=+4695::<+4695>, tyVar=<+4695>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+4695_a[integer,decimal]>, AST=BindSchema4634_old-bal4635::<BindSchema4634_old-bal4635_ac>, tyVar=<BindSchema4634_old-bal4635_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+4695_a[integer,decimal]>, AST=inlinedCallArgs4816_amount4820::decimal, tyVar=<transfer_amount4334>, resolvedTy=decimal})]
tryFunType: trying x:<+4695_a[integer,decimal]> y:<+4695_a[integer,decimal]> -> <+4695_a[integer,decimal]> with [(<+4695_a[integer,decimal]>, [(+4695, <+4695>, decimal), (inlinedCallArgs4816_amount4820, <transfer_amount4334>, decimal), (BindSchema4634_old-bal4635, <BindSchema4634_old-bal4635_ac>, decimal)])]
Solved overload with x:<+4695_a[integer,decimal]> y:<+4695_a[integer,decimal]> -> <+4695_a[integer,decimal]>: [(<+4695_a[integer,decimal]>, (decimal, [(+4695, <+4695>), (inlinedCallArgs4816_amount4820, <transfer_amount4334>), (BindSchema4634_old-bal4635, <BindSchema4634_old-bal4635_ac>)]))]
Adjusting type for solution: ((+4695, <+4695>), <+4695_a[integer,decimal]>, decimal)
assocTy: (<+4695>, decimal) <=> <+4695_a[integer,decimal]>
assocTy: decimal => <+4695_a[integer,decimal]>
assocTy: (<+4695>, decimal) <=> decimal
assocTy: (<+4695>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4816_amount4820, <transfer_amount4334>), <+4695_a[integer,decimal]>, decimal)
assocTy: (<transfer_amount4334>, decimal) <=> <+4695_a[integer,decimal]>
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
Adjusting type for solution: ((BindSchema4634_old-bal4635, <BindSchema4634_old-bal4635_ac>), <+4695_a[integer,decimal]>, decimal)
assocTy: (<BindSchema4634_old-bal4635_ac>, decimal) <=> <+4695_a[integer,decimal]>
assocTy: (<BindSchema4634_old-bal4635_ac>, decimal) <=> decimal
assocTy: (<BindSchema4634_old-bal4635_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop4681_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop4681_a[[<l>],string]>, roleTy=<drop4681>
tryFunType: cand: count:integer list:<drop4681_a[[<l>],string]> -> <drop4681_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop4681_a[[<l>],string]>, AST=drop4681::<drop4681>, tyVar=<drop4681>, resolvedTy=<drop4681>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer4682::integer, tyVar=<integer4682>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop4681_a[[<l>],string]>, AST=inlinedCallArgs4803_account4804::string, tyVar=<transfer_receiver4333>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop4681_a[[<l>],string]> -> <drop4681_a[[<l>],string]> with [(<drop4681_a[[<l>],string]>, [(drop4681, <drop4681>, <drop4681>), (inlinedCallArgs4803_account4804, <transfer_receiver4333>, string)]), (integer, [(integer4682, <integer4682>, integer)])]
Solved overload with count:integer list:<drop4681_a[[<l>],string]> -> <drop4681_a[[<l>],string]>: [(<drop4681_a[[<l>],string]>, (string, [(drop4681, <drop4681>), (inlinedCallArgs4803_account4804, <transfer_receiver4333>)])), (integer, (integer, [(integer4682, <integer4682>)]))]
Adjusting type for solution: ((drop4681, <drop4681>), <drop4681_a[[<l>],string]>, string)
assocTy: (<drop4681>, <drop4681>) <=> <drop4681_a[[<l>],string]>
assocTy: (<drop4681>, <drop4681>) <= <drop4681_a[[<l>],string]>
assocTy: tracking/updating type variable <drop4681> <= <drop4681_a[[<l>],string]>
assocTy: (<drop4681>, <drop4681_a[[<l>],string]>) <=> string
assocTy: (<drop4681>, <drop4681_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop4681_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs4803_account4804, <transfer_receiver4333>), <drop4681_a[[<l>],string]>, string)
assocTy: (<transfer_receiver4333>, string) <=> <drop4681_a[[<l>],string]>
assocTy: (<transfer_receiver4333>, string) <=> string
assocTy: (<transfer_receiver4333>, string) <= string
Adjusting type for solution: ((integer4682, <integer4682>), integer, integer)
assocTy: (<integer4682>, integer) <=> integer
assocTy: (<integer4682>, integer) <= integer
assocTy: (<integer4682>, integer) <=> integer
assocTy: (<integer4682>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take4661_a[[<l>],string]>, roleTy=<take4654>
tryFunType: unify role: role=RetVar, candTy=<take4661_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take4661_a[[<l>],string]> -> <take4661_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take4661_a[[<l>],string]>, AST=take4661::<take4661>, tyVar=<take4661>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer4662::integer, tyVar=<integer4662>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take4661_a[[<l>],string]>, AST=BindLet4652_pfx4653::<BindLet4652_pfx4653_f>, tyVar=<take4654>, resolvedTy=<take4654>})]
tryFunType: trying count:integer list:<take4661_a[[<l>],string]> -> <take4661_a[[<l>],string]> with [(<take4661_a[[<l>],string]>, [(take4661, <take4661>, string), (BindLet4652_pfx4653, <take4654>, <take4654>)]), (integer, [(integer4662, <integer4662>, integer)])]
Solved overload with count:integer list:<take4661_a[[<l>],string]> -> <take4661_a[[<l>],string]>: [(<take4661_a[[<l>],string]>, (string, [(take4661, <take4661>), (BindLet4652_pfx4653, <take4654>)])), (integer, (integer, [(integer4662, <integer4662>)]))]
Adjusting type for solution: ((take4661, <take4661>), <take4661_a[[<l>],string]>, string)
assocTy: (<take4661>, string) <=> <take4661_a[[<l>],string]>
assocTy: string => <take4661_a[[<l>],string]>
assocTy: (<take4661>, string) <=> string
assocTy: (<take4661>, string) <= string
Adjusting type for solution: ((BindLet4652_pfx4653, <take4654>), <take4661_a[[<l>],string]>, string)
assocTy: (<take4654>, <take4654>) <=> <take4661_a[[<l>],string]>
assocTy: (<take4654>, <take4654>) <= <take4661_a[[<l>],string]>
assocTy: tracking/updating type variable <take4654> <= <take4661_a[[<l>],string]>
assocTy: (<take4654>, string) <=> string
assocTy: (<take4654>, string) <= string
Adjusting type for solution: ((integer4662, <integer4662>), integer, integer)
assocTy: (<integer4662>, integer) <=> integer
assocTy: (<integer4662>, integer) <= integer
assocTy: (<integer4662>, integer) <=> integer
assocTy: (<integer4662>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take4659_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take4659_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take4659_a[[<l>],string]> -> <take4659_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take4659_a[[<l>],string]>, AST=take4659::<take4659>, tyVar=<take4659>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer4660::integer, tyVar=<integer4660>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take4659_a[[<l>],string]>, AST=BindLet4652_pfx4653::<BindLet4652_pfx4653_f>, tyVar=<take4654>, resolvedTy=string})]
tryFunType: trying count:integer list:<take4659_a[[<l>],string]> -> <take4659_a[[<l>],string]> with [(<take4659_a[[<l>],string]>, [(take4659, <take4659>, string), (BindLet4652_pfx4653, <take4654>, string)]), (integer, [(integer4660, <integer4660>, integer)])]
Solved overload with count:integer list:<take4659_a[[<l>],string]> -> <take4659_a[[<l>],string]>: [(<take4659_a[[<l>],string]>, (string, [(take4659, <take4659>), (BindLet4652_pfx4653, <take4654>)])), (integer, (integer, [(integer4660, <integer4660>)]))]
Adjusting type for solution: ((take4659, <take4659>), <take4659_a[[<l>],string]>, string)
assocTy: (<take4659>, string) <=> <take4659_a[[<l>],string]>
assocTy: string => <take4659_a[[<l>],string]>
assocTy: (<take4659>, string) <=> string
assocTy: (<take4659>, string) <= string
Adjusting type for solution: ((BindLet4652_pfx4653, <take4654>), <take4659_a[[<l>],string]>, string)
assocTy: (<take4654>, string) <=> <take4659_a[[<l>],string]>
assocTy: (<take4654>, string) <=> string
assocTy: (<take4654>, string) <= string
Adjusting type for solution: ((integer4660, <integer4660>), integer, integer)
assocTy: (<integer4660>, integer) <=> integer
assocTy: (<integer4660>, integer) <= integer
assocTy: (<integer4660>, integer) <=> integer
assocTy: (<integer4660>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take4654_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take4654_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take4654_a[[<l>],string]> -> <take4654_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take4654_a[[<l>],string]>, AST=take4654::<take4654>, tyVar=<take4654>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer4655::integer, tyVar=<integer4655>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take4654_a[[<l>],string]>, AST=inlinedCallArgs4801_account4802::string, tyVar=<transfer_receiver4333>, resolvedTy=string})]
tryFunType: trying count:integer list:<take4654_a[[<l>],string]> -> <take4654_a[[<l>],string]> with [(<take4654_a[[<l>],string]>, [(take4654, <take4654>, string), (inlinedCallArgs4801_account4802, <transfer_receiver4333>, string)]), (integer, [(integer4655, <integer4655>, integer)])]
Solved overload with count:integer list:<take4654_a[[<l>],string]> -> <take4654_a[[<l>],string]>: [(<take4654_a[[<l>],string]>, (string, [(take4654, <take4654>), (inlinedCallArgs4801_account4802, <transfer_receiver4333>)])), (integer, (integer, [(integer4655, <integer4655>)]))]
Adjusting type for solution: ((take4654, <take4654>), <take4654_a[[<l>],string]>, string)
assocTy: (<take4654>, string) <=> <take4654_a[[<l>],string]>
assocTy: string => <take4654_a[[<l>],string]>
assocTy: (<take4654>, string) <=> string
assocTy: (<take4654>, string) <= string
Adjusting type for solution: ((inlinedCallArgs4801_account4802, <transfer_receiver4333>), <take4654_a[[<l>],string]>, string)
assocTy: (<transfer_receiver4333>, string) <=> <take4654_a[[<l>],string]>
assocTy: (<transfer_receiver4333>, string) <=> string
assocTy: (<transfer_receiver4333>, string) <= string
Adjusting type for solution: ((integer4655, <integer4655>), integer, integer)
assocTy: (<integer4655>, integer) <=> integer
assocTy: (<integer4655>, integer) <= integer
assocTy: (<integer4655>, integer) <=> integer
assocTy: (<integer4655>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor4613::<floor4613>, tyVar=<floor4613>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4795_amount4797::decimal, tyVar=<transfer_amount4334>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet4602_p4603::<BindLet4602_p4603_ai>, tyVar=<precision4609>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet4602_p4603, <precision4609>, integer)]), (decimal, [(floor4613, <floor4613>, decimal), (inlinedCallArgs4795_amount4797, <transfer_amount4334>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet4602_p4603, <precision4609>)])), (decimal, (decimal, [(floor4613, <floor4613>), (inlinedCallArgs4795_amount4797, <transfer_amount4334>)]))]
Adjusting type for solution: ((BindLet4602_p4603, <precision4609>), integer, integer)
assocTy: (<precision4609>, integer) <=> integer
assocTy: (<precision4609>, integer) <= integer
assocTy: (<precision4609>, integer) <=> integer
assocTy: (<precision4609>, integer) <= integer
Adjusting type for solution: ((floor4613, <floor4613>), decimal, decimal)
assocTy: (<floor4613>, decimal) <=> decimal
assocTy: (<floor4613>, decimal) <= decimal
assocTy: (<floor4613>, decimal) <=> decimal
assocTy: (<floor4613>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4795_amount4797, <transfer_amount4334>), decimal, decimal)
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read4607_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read4607_row}>, roleTy=<read4607>
tryFunType: cand: table:table:<{read4607_row}> key:string -> object:<{read4607_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read4607_row}>, AST=read4607::<read4607>, tyVar=<read4607>, resolvedTy=<read4607>}), (ArgVar 0, RoleTys { candArgTy=table:<{read4607_row}>, AST=marmalade.ledger.tokens4608::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4608>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4793_id4794::string, tyVar=<transfer_id4331>, resolvedTy=string})]
tryFunType: trying table:table:<{read4607_row}> key:string -> object:<{read4607_row}> with [(string, [(inlinedCallArgs4793_id4794, <transfer_id4331>, string)]), (table:<{read4607_row}>, [(marmalade.ledger.tokens4608, <marmalade.ledger.tokens4608>, table:{marmalade.ledger.token-schema})]), (object:<{read4607_row}>, [(read4607, <read4607>, <read4607>)])]
Solved overload with table:table:<{read4607_row}> key:string -> object:<{read4607_row}>: [(string, (string, [(inlinedCallArgs4793_id4794, <transfer_id4331>)])), (table:<{read4607_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4608, <marmalade.ledger.tokens4608>)])), (object:<{read4607_row}>, (object:<{read4607_row}>, [(read4607, <read4607>)]))]
Adjusting type for solution: ((inlinedCallArgs4793_id4794, <transfer_id4331>), string, string)
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4608, <marmalade.ledger.tokens4608>), table:<{read4607_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4608>, table:{marmalade.ledger.token-schema}) <=> table:<{read4607_row}>
assocTy: (<{read4607_row}>, <{read4607_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4607_row}>, <{read4607_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read4607_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read4607_row}>)
assocTy: (<marmalade.ledger.tokens4608>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4608>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read4607, <read4607>), object:<{read4607_row}>, object:<{read4607_row}>)
assocTy: (<read4607>, <read4607>) <=> object:<{read4607_row}>
assocTy: (<read4607>, <read4607>) <= object:<{read4607_row}>
assocTy: tracking/updating type variable <read4607> <= object:<{read4607_row}>
assocTy: (<read4607>, object:{marmalade.ledger.token-schema}) <=> object:<{read4607_row}>
assocTy: (<{read4607_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4607_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read4607_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4605_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4605_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4605_l>] -> <at4605_a>: roles=[(RetVar, RoleTys { candArgTy=<at4605_a>, AST=at4605::<at4605>, tyVar=<precision4609>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4605_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4605_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4605_o}> -> <at4605_a>, roles=[(RetVar, RoleTys { candArgTy=<at4605_a>, AST=at4605::<at4605>, tyVar=<precision4609>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4606::string, tyVar=<string4606>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4605_o}>, AST=read4607::<read4607>, tyVar=<read4607>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at4605_o}> -> <at4605_a> with [(<at4605_a>, [(at4605, <precision4609>, integer)]), (string, [(string4606, <string4606>, string)]), (object:<{at4605_o}>, [(read4607, <read4607>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at4605_o}> -> <at4605_a>: [(<at4605_a>, (integer, [(at4605, <precision4609>)])), (string, (string, [(string4606, <string4606>)])), (object:<{at4605_o}>, (object:{marmalade.ledger.token-schema}, [(read4607, <read4607>)]))]
Adjusting type for solution: ((at4605, <precision4609>), <at4605_a>, integer)
assocTy: (<precision4609>, integer) <=> <at4605_a>
assocTy: integer => <at4605_a>
assocTy: (<precision4609>, integer) <=> integer
assocTy: (<precision4609>, integer) <= integer
Adjusting type for solution: ((string4606, <string4606>), string, string)
assocTy: (<string4606>, string) <=> string
assocTy: (<string4606>, string) <= string
assocTy: (<string4606>, string) <=> string
assocTy: (<string4606>, string) <= string
Adjusting type for solution: ((read4607, <read4607>), object:<{at4605_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4607>, object:{marmalade.ledger.token-schema}) <=> object:<{at4605_o}>
assocTy: (<{at4605_o}>, <{at4605_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at4605_o}>, <{at4605_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at4605_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at4605_o}>)
assocTy: (<read4607>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4607>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-4572_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-4572_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-4572_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-4572_a[integer,decimal]> y:<-4572_a[integer,decimal]> -> <-4572_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-4572_a[integer,decimal]>, AST=-4572::<-4572>, tyVar=<-4572>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-4572_a[integer,decimal]>, AST=BindSchema4564_old-bal4565::<BindSchema4564_old-bal4565_aa>, tyVar=<BindSchema4564_old-bal4565_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-4572_a[integer,decimal]>, AST=inlinedCallArgs4787_amount4790::decimal, tyVar=<transfer_amount4334>, resolvedTy=decimal})]
tryFunType: trying x:<-4572_a[integer,decimal]> y:<-4572_a[integer,decimal]> -> <-4572_a[integer,decimal]> with [(<-4572_a[integer,decimal]>, [(-4572, <-4572>, decimal), (inlinedCallArgs4787_amount4790, <transfer_amount4334>, decimal), (BindSchema4564_old-bal4565, <BindSchema4564_old-bal4565_aa>, decimal)])]
Solved overload with x:<-4572_a[integer,decimal]> y:<-4572_a[integer,decimal]> -> <-4572_a[integer,decimal]>: [(<-4572_a[integer,decimal]>, (decimal, [(-4572, <-4572>), (inlinedCallArgs4787_amount4790, <transfer_amount4334>), (BindSchema4564_old-bal4565, <BindSchema4564_old-bal4565_aa>)]))]
Adjusting type for solution: ((-4572, <-4572>), <-4572_a[integer,decimal]>, decimal)
assocTy: (<-4572>, decimal) <=> <-4572_a[integer,decimal]>
assocTy: decimal => <-4572_a[integer,decimal]>
assocTy: (<-4572>, decimal) <=> decimal
assocTy: (<-4572>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4787_amount4790, <transfer_amount4334>), <-4572_a[integer,decimal]>, decimal)
assocTy: (<transfer_amount4334>, decimal) <=> <-4572_a[integer,decimal]>
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
Adjusting type for solution: ((BindSchema4564_old-bal4565, <BindSchema4564_old-bal4565_aa>), <-4572_a[integer,decimal]>, decimal)
assocTy: (<BindSchema4564_old-bal4565_aa>, decimal) <=> <-4572_a[integer,decimal]>
assocTy: (<BindSchema4564_old-bal4565_aa>, decimal) <=> decimal
assocTy: (<BindSchema4564_old-bal4565_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor4551::<floor4551>, tyVar=<floor4551>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4778_amount4780::decimal, tyVar=<transfer_amount4334>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet4540_p4541::<BindLet4540_p4541_ai>, tyVar=<precision4547>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet4540_p4541, <precision4547>, integer)]), (decimal, [(floor4551, <floor4551>, decimal), (inlinedCallArgs4778_amount4780, <transfer_amount4334>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet4540_p4541, <precision4547>)])), (decimal, (decimal, [(floor4551, <floor4551>), (inlinedCallArgs4778_amount4780, <transfer_amount4334>)]))]
Adjusting type for solution: ((BindLet4540_p4541, <precision4547>), integer, integer)
assocTy: (<precision4547>, integer) <=> integer
assocTy: (<precision4547>, integer) <= integer
assocTy: (<precision4547>, integer) <=> integer
assocTy: (<precision4547>, integer) <= integer
Adjusting type for solution: ((floor4551, <floor4551>), decimal, decimal)
assocTy: (<floor4551>, decimal) <=> decimal
assocTy: (<floor4551>, decimal) <= decimal
assocTy: (<floor4551>, decimal) <=> decimal
assocTy: (<floor4551>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4778_amount4780, <transfer_amount4334>), decimal, decimal)
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read4545_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read4545_row}>, roleTy=<read4545>
tryFunType: cand: table:table:<{read4545_row}> key:string -> object:<{read4545_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read4545_row}>, AST=read4545::<read4545>, tyVar=<read4545>, resolvedTy=<read4545>}), (ArgVar 0, RoleTys { candArgTy=table:<{read4545_row}>, AST=marmalade.ledger.tokens4546::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4546>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4776_id4777::string, tyVar=<transfer_id4331>, resolvedTy=string})]
tryFunType: trying table:table:<{read4545_row}> key:string -> object:<{read4545_row}> with [(string, [(inlinedCallArgs4776_id4777, <transfer_id4331>, string)]), (table:<{read4545_row}>, [(marmalade.ledger.tokens4546, <marmalade.ledger.tokens4546>, table:{marmalade.ledger.token-schema})]), (object:<{read4545_row}>, [(read4545, <read4545>, <read4545>)])]
Solved overload with table:table:<{read4545_row}> key:string -> object:<{read4545_row}>: [(string, (string, [(inlinedCallArgs4776_id4777, <transfer_id4331>)])), (table:<{read4545_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4546, <marmalade.ledger.tokens4546>)])), (object:<{read4545_row}>, (object:<{read4545_row}>, [(read4545, <read4545>)]))]
Adjusting type for solution: ((inlinedCallArgs4776_id4777, <transfer_id4331>), string, string)
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4546, <marmalade.ledger.tokens4546>), table:<{read4545_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4546>, table:{marmalade.ledger.token-schema}) <=> table:<{read4545_row}>
assocTy: (<{read4545_row}>, <{read4545_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4545_row}>, <{read4545_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read4545_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read4545_row}>)
assocTy: (<marmalade.ledger.tokens4546>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4546>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read4545, <read4545>), object:<{read4545_row}>, object:<{read4545_row}>)
assocTy: (<read4545>, <read4545>) <=> object:<{read4545_row}>
assocTy: (<read4545>, <read4545>) <= object:<{read4545_row}>
assocTy: tracking/updating type variable <read4545> <= object:<{read4545_row}>
assocTy: (<read4545>, object:{marmalade.ledger.token-schema}) <=> object:<{read4545_row}>
assocTy: (<{read4545_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4545_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read4545_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4543_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4543_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4543_l>] -> <at4543_a>: roles=[(RetVar, RoleTys { candArgTy=<at4543_a>, AST=at4543::<at4543>, tyVar=<precision4547>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4543_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4543_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4543_o}> -> <at4543_a>, roles=[(RetVar, RoleTys { candArgTy=<at4543_a>, AST=at4543::<at4543>, tyVar=<precision4547>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4544::string, tyVar=<string4544>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4543_o}>, AST=read4545::<read4545>, tyVar=<read4545>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at4543_o}> -> <at4543_a> with [(<at4543_a>, [(at4543, <precision4547>, integer)]), (string, [(string4544, <string4544>, string)]), (object:<{at4543_o}>, [(read4545, <read4545>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at4543_o}> -> <at4543_a>: [(<at4543_a>, (integer, [(at4543, <precision4547>)])), (string, (string, [(string4544, <string4544>)])), (object:<{at4543_o}>, (object:{marmalade.ledger.token-schema}, [(read4545, <read4545>)]))]
Adjusting type for solution: ((at4543, <precision4547>), <at4543_a>, integer)
assocTy: (<precision4547>, integer) <=> <at4543_a>
assocTy: integer => <at4543_a>
assocTy: (<precision4547>, integer) <=> integer
assocTy: (<precision4547>, integer) <= integer
Adjusting type for solution: ((string4544, <string4544>), string, string)
assocTy: (<string4544>, string) <=> string
assocTy: (<string4544>, string) <= string
assocTy: (<string4544>, string) <=> string
assocTy: (<string4544>, string) <= string
Adjusting type for solution: ((read4545, <read4545>), object:<{at4543_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4545>, object:{marmalade.ledger.token-schema}) <=> object:<{at4543_o}>
assocTy: (<{at4543_o}>, <{at4543_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at4543_o}>, <{at4543_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at4543_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at4543_o}>)
assocTy: (<read4545>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4545>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard4518::<enforce-guard4518>, tyVar=<enforce-guard4518>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard4535::<account-guard4535>, tyVar=<account-guard4534>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard4518, <enforce-guard4518>, bool)]), (guard, [(account-guard4535, <account-guard4534>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard4518, <enforce-guard4518>)])), (guard, (guard, [(account-guard4535, <account-guard4534>)]))]
Adjusting type for solution: ((enforce-guard4518, <enforce-guard4518>), bool, bool)
assocTy: (<enforce-guard4518>, bool) <=> bool
assocTy: (<enforce-guard4518>, bool) <= bool
assocTy: (<enforce-guard4518>, bool) <=> bool
assocTy: (<enforce-guard4518>, bool) <= bool
Adjusting type for solution: ((account-guard4535, <account-guard4534>), guard, guard)
assocTy: (<account-guard4534>, guard) <=> guard
assocTy: (<account-guard4534>, guard) <= guard
assocTy: (<account-guard4534>, guard) <=> guard
assocTy: (<account-guard4534>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read4382_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read4382_row}>, roleTy=<read4382>
tryFunType: cand: table:table:<{read4382_row}> key:string -> object:<{read4382_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read4382_row}>, AST=read4382::<read4382>, tyVar=<read4382>, resolvedTy=<read4382>}), (ArgVar 0, RoleTys { candArgTy=table:<{read4382_row}>, AST=marmalade.ledger.tokens4383::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4383>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4741_id4742::string, tyVar=<transfer_id4331>, resolvedTy=string})]
tryFunType: trying table:table:<{read4382_row}> key:string -> object:<{read4382_row}> with [(string, [(inlinedCallArgs4741_id4742, <transfer_id4331>, string)]), (table:<{read4382_row}>, [(marmalade.ledger.tokens4383, <marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema})]), (object:<{read4382_row}>, [(read4382, <read4382>, <read4382>)])]
Solved overload with table:table:<{read4382_row}> key:string -> object:<{read4382_row}>: [(string, (string, [(inlinedCallArgs4741_id4742, <transfer_id4331>)])), (table:<{read4382_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4383, <marmalade.ledger.tokens4383>)])), (object:<{read4382_row}>, (object:<{read4382_row}>, [(read4382, <read4382>)]))]
Adjusting type for solution: ((inlinedCallArgs4741_id4742, <transfer_id4331>), string, string)
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4383, <marmalade.ledger.tokens4383>), table:<{read4382_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema}) <=> table:<{read4382_row}>
assocTy: (<{read4382_row}>, <{read4382_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4382_row}>, <{read4382_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read4382_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read4382_row}>)
assocTy: (<marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read4382, <read4382>), object:<{read4382_row}>, object:<{read4382_row}>)
assocTy: (<read4382>, <read4382>) <=> object:<{read4382_row}>
assocTy: (<read4382>, <read4382>) <= object:<{read4382_row}>
assocTy: tracking/updating type variable <read4382> <= object:<{read4382_row}>
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:<{read4382_row}>
assocTy: (<{read4382_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4382_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read4382_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4380_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4380_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4380_l>] -> <at4380_a>: roles=[(RetVar, RoleTys { candArgTy=<at4380_a>, AST=at4380::<at4380>, tyVar=<precision4384>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4380_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4380_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4380_o}> -> <at4380_a>, roles=[(RetVar, RoleTys { candArgTy=<at4380_a>, AST=at4380::<at4380>, tyVar=<precision4384>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4381::string, tyVar=<string4381>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4380_o}>, AST=read4382::<read4382>, tyVar=<read4382>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at4380_o}> -> <at4380_a> with [(<at4380_a>, [(at4380, <precision4384>, integer)]), (string, [(string4381, <string4381>, string)]), (object:<{at4380_o}>, [(read4382, <read4382>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at4380_o}> -> <at4380_a>: [(<at4380_a>, (integer, [(at4380, <precision4384>)])), (string, (string, [(string4381, <string4381>)])), (object:<{at4380_o}>, (object:{marmalade.ledger.token-schema}, [(read4382, <read4382>)]))]
Adjusting type for solution: ((at4380, <precision4384>), <at4380_a>, integer)
assocTy: (<precision4384>, integer) <=> <at4380_a>
assocTy: integer => <at4380_a>
assocTy: (<precision4384>, integer) <=> integer
assocTy: (<precision4384>, integer) <= integer
Adjusting type for solution: ((string4381, <string4381>), string, string)
assocTy: (<string4381>, string) <=> string
assocTy: (<string4381>, string) <= string
assocTy: (<string4381>, string) <=> string
assocTy: (<string4381>, string) <= string
Adjusting type for solution: ((read4382, <read4382>), object:<{at4380_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:<{at4380_o}>
assocTy: (<{at4380_o}>, <{at4380_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at4380_o}>, <{at4380_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at4380_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at4380_o}>)
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor4355::<floor4355>, tyVar=<floor4355>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs4731_amount4733::decimal, tyVar=<transfer_amount4334>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=inlinedCallArgs4731_precision4732::integer, tyVar=<precision4384>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(inlinedCallArgs4731_precision4732, <precision4384>, integer)]), (decimal, [(floor4355, <floor4355>, decimal), (inlinedCallArgs4731_amount4733, <transfer_amount4334>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(inlinedCallArgs4731_precision4732, <precision4384>)])), (decimal, (decimal, [(floor4355, <floor4355>), (inlinedCallArgs4731_amount4733, <transfer_amount4334>)]))]
Adjusting type for solution: ((inlinedCallArgs4731_precision4732, <precision4384>), integer, integer)
assocTy: (<precision4384>, integer) <=> integer
assocTy: (<precision4384>, integer) <= integer
assocTy: (<precision4384>, integer) <=> integer
assocTy: (<precision4384>, integer) <= integer
Adjusting type for solution: ((floor4355, <floor4355>), decimal, decimal)
assocTy: (<floor4355>, decimal) <=> decimal
assocTy: (<floor4355>, decimal) <= decimal
assocTy: (<floor4355>, decimal) <=> decimal
assocTy: (<floor4355>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs4731_amount4733, <transfer_amount4334>), decimal, decimal)
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
assocTy: (<transfer_amount4334>, decimal) <=> decimal
assocTy: (<transfer_amount4334>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read4382_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read4382_row}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: cand: table:table:<{read4382_row}> key:string -> object:<{read4382_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read4382_row}>, AST=read4382::<read4382>, tyVar=<read4382>, resolvedTy=object:{marmalade.ledger.token-schema}}), (ArgVar 0, RoleTys { candArgTy=table:<{read4382_row}>, AST=marmalade.ledger.tokens4383::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens4383>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs4741_id4742::string, tyVar=<transfer_id4331>, resolvedTy=string})]
tryFunType: trying table:table:<{read4382_row}> key:string -> object:<{read4382_row}> with [(string, [(inlinedCallArgs4741_id4742, <transfer_id4331>, string)]), (table:<{read4382_row}>, [(marmalade.ledger.tokens4383, <marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema})]), (object:<{read4382_row}>, [(read4382, <read4382>, object:{marmalade.ledger.token-schema})])]
Solved overload with table:table:<{read4382_row}> key:string -> object:<{read4382_row}>: [(string, (string, [(inlinedCallArgs4741_id4742, <transfer_id4331>)])), (table:<{read4382_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens4383, <marmalade.ledger.tokens4383>)])), (object:<{read4382_row}>, (object:{marmalade.ledger.token-schema}, [(read4382, <read4382>)]))]
Adjusting type for solution: ((inlinedCallArgs4741_id4742, <transfer_id4331>), string, string)
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
assocTy: (<transfer_id4331>, string) <=> string
assocTy: (<transfer_id4331>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens4383, <marmalade.ledger.tokens4383>), table:<{read4382_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema}) <=> table:<{read4382_row}>
assocTy: (<{read4382_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4382_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read4382_row}>)
assocTy: (<marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens4383>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read4382, <read4382>), object:<{read4382_row}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:<{read4382_row}>
assocTy: (<{read4382_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read4382_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read4382_row}>)
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4380_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4380_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4380_l>] -> <at4380_a>: roles=[(RetVar, RoleTys { candArgTy=<at4380_a>, AST=at4380::<at4380>, tyVar=<precision4384>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4380_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at4380_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4380_o}> -> <at4380_a>, roles=[(RetVar, RoleTys { candArgTy=<at4380_a>, AST=at4380::<at4380>, tyVar=<precision4384>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4381::string, tyVar=<string4381>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4380_o}>, AST=read4382::<read4382>, tyVar=<read4382>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at4380_o}> -> <at4380_a> with [(<at4380_a>, [(at4380, <precision4384>, integer)]), (string, [(string4381, <string4381>, string)]), (object:<{at4380_o}>, [(read4382, <read4382>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at4380_o}> -> <at4380_a>: [(<at4380_a>, (integer, [(at4380, <precision4384>)])), (string, (string, [(string4381, <string4381>)])), (object:<{at4380_o}>, (object:{marmalade.ledger.token-schema}, [(read4382, <read4382>)]))]
Adjusting type for solution: ((at4380, <precision4384>), <at4380_a>, integer)
assocTy: (<precision4384>, integer) <=> <at4380_a>
assocTy: (<precision4384>, integer) <=> integer
assocTy: (<precision4384>, integer) <= integer
Adjusting type for solution: ((string4381, <string4381>), string, string)
assocTy: (<string4381>, string) <=> string
assocTy: (<string4381>, string) <= string
assocTy: (<string4381>, string) <=> string
assocTy: (<string4381>, string) <= string
Adjusting type for solution: ((read4382, <read4382>), object:<{at4380_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:<{at4380_o}>
assocTy: (<{at4380_o}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{at4380_o}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at4380_o}>)
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read4382>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.transfer:bool (id:string s...
===== Fun: (defcap marmalade.ledger.SALE:bool (id:string sell...
trackAST: (SALE_id4852, string)
trackAST: (SALE_seller4853, string)
trackAST: (SALE_amount4854, decimal)
trackAST: (SALE_timeout4855, integer)
trackAST: (SALE_sale-id4856, string)
trackAST: (enforce4857, <enforce4857>)
trackAST: (>4858, <>4858>)
trackAST: (decimal4859, decimal)
trackAST: (string4860, string)
trackAST: (compose-capability4861, <compose-capability4861>)
trackAST: (OFFER_id4862, string)
trackAST: (OFFER_seller4863, string)
trackAST: (OFFER_amount4864, decimal)
trackAST: (OFFER_timeout4865, integer)
trackAST: (enforce4866, <enforce4866>)
trackAST: (sale-active_timeout4867, integer)
trackAST: (<4868, <<4868>)
trackAST: (at4869, <at4869>)
trackAST: (string4870, string)
trackAST: (chain-data4871, <chain-data4871>)
trackAST: (sale-active4872, bool)
assocAST: (sale-active4872, <sale-active4872>, bool) => (<4868, <<4868>, <<4868>)
trackAST: (sale-active4873, <sale-active4873>)
assocAST: (<4868, <sale-active4872>, bool) => (sale-active4873, <sale-active4873>, <sale-active4873>)
trackAST: (string4874, string)
trackAST: (compose-capability4875, <compose-capability4875>)
trackAST: (DEBIT_id4876, string)
trackAST: (DEBIT_sender4877, string)
trackAST: (enforce-guard4878, <enforce-guard4878>)
trackAST: (account-guard_id4879, string)
trackAST: (account-guard_account4880, string)
trackAST: (with-read4881, <with-read4881>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4882, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4883, string)
trackAST: (key_account4884, string)
trackAST: (format4885, <format4885>)
trackAST: (string4886, string)
trackAST: (list4887, [<ak>])
trackAST: (key4888, string)
assocAST: (key4888, <key4888>, string) => (format4885, <format4885>, <format4885>)
trackAST: (key4889, <key4889>)
assocAST: (format4885, <key4888>, string) => (key4889, <key4889>, <key4889>)
trackAST: (BindSchema4890, <BindSchema4890>)
trackAST: (BindSchema4890_guard4891, <BindSchema4890_guard4891_f>)
trackAST: (string4892, string)
assocAST: (BindSchema4890_guard4891, <BindSchema4890_guard4891_f>, <BindSchema4890_guard4891_f>) => (BindSchema4890, <BindSchema4890>, <BindSchema4890>)
trackAST: (BindSchema4890schema4893, *)
trackAST: (account-guard4894, guard)
assocAST: (account-guard4894, <account-guard4894>, guard) => (with-read4881, <with-read4881>, <with-read4881>)
trackAST: (account-guard4895, <account-guard4895>)
assocAST: (with-read4881, <account-guard4894>, guard) => (account-guard4895, <account-guard4895>, <account-guard4895>)
trackAST: (DEBIT4896, <e>)
assocAST: (enforce-guard4878, <enforce-guard4878>, <enforce-guard4878>) => (DEBIT4896, <e>, <e>)
trackAST: (DEBIT4897, <DEBIT4897>)
assocAST: (enforce-guard4878, <enforce-guard4878>, <enforce-guard4878>) => (DEBIT4897, <DEBIT4897>, <DEBIT4897>)
trackAST: (compose-capability4898, <compose-capability4898>)
trackAST: (CREDIT_id4899, string)
trackAST: (CREDIT_receiver4900, string)
trackAST: (bool4901, bool)
trackAST: (CREDIT4902, <g>)
assocAST: (bool4901, <bool4901>, bool) => (CREDIT4902, <g>, <g>)
trackAST: (CREDIT4903, <CREDIT4903>)
trackAST: (format4904, <format4904>)
trackAST: (string4905, string)
trackAST: (list4906, [<at>])
trackAST: (pact-id4907, <pact-id4907>)
trackAST: (sale-account4908, string)
assocAST: (sale-account4908, <sale-account4908>, string) => (format4904, <format4904>, <format4904>)
trackAST: (sale-account4909, <sale-account4909>)
assocAST: (format4904, <sale-account4908>, string) => (sale-account4909, <sale-account4909>, <sale-account4909>)
assocAST: (bool4901, <bool4901>, bool) => (CREDIT4903, <CREDIT4903>, <CREDIT4903>)
trackAST: (OFFER4910, bool)
assocAST: (OFFER4910, <OFFER4910>, bool) => (compose-capability4898, <compose-capability4898>, <compose-capability4898>)
trackAST: (OFFER4911, <OFFER4911>)
assocAST: (compose-capability4898, <OFFER4910>, bool) => (OFFER4911, <OFFER4911>, <OFFER4911>)
trackAST: (compose-capability4912, <compose-capability4912>)
trackAST: (SALE_PRIVATE_sale-id4913, string)
trackAST: (bool4914, bool)
trackAST: (SALE_PRIVATE4915, bool)
assocAST: (bool4914, <bool4914>, bool) => (SALE_PRIVATE4915, <SALE_PRIVATE4915>, bool)
trackAST: (SALE_PRIVATE4916, <SALE_PRIVATE4916>)
assocAST: (bool4914, <bool4914>, bool) => (SALE_PRIVATE4916, <SALE_PRIVATE4916>, <SALE_PRIVATE4916>)
trackAST: (SALE4917, bool)
assocAST: (SALE4917, <SALE4917>, bool) => (compose-capability4912, <compose-capability4912>, <compose-capability4912>)
--------------------------------
 Substitute defuns:

assocTy: (<sale-active4872>, bool) <=> bool
assocTy: (<sale-active4872>, bool) <= bool
trackAST: (inlinedCallArgs4918, <inlinedCallArgs4918>)
assocTy: (<inlinedCallArgs4918>, <inlinedCallArgs4918>) <=> bool
assocTy: (<inlinedCallArgs4918>, <inlinedCallArgs4918>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4918> <= bool
trackAST: (inlinedCallArgs4918_timeout4919, integer)
assocAST: (OFFER_timeout4865, <OFFER_timeout4865>, integer) => (inlinedCallArgs4918_timeout4919, <inlinedCallArgs4918_timeout4919>, integer)
assocAST: (inlinedCallArgs4918_timeout4919, <OFFER_timeout4865>, integer) => (sale-active_timeout4867, <sale-active_timeout4867>, integer)
assocTy: (<key4888>, string) <=> string
assocTy: (<key4888>, string) <= string
trackAST: (inlinedCallArgs4920, <inlinedCallArgs4920>)
assocTy: (<inlinedCallArgs4920>, <inlinedCallArgs4920>) <=> string
assocTy: (<inlinedCallArgs4920>, <inlinedCallArgs4920>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4920> <= string
trackAST: (inlinedCallArgs4920_id4921, string)
assocAST: (account-guard_id4879, <account-guard_id4879>, string) => (inlinedCallArgs4920_id4921, <inlinedCallArgs4920_id4921>, string)
trackAST: (inlinedCallArgs4920_account4922, string)
assocAST: (account-guard_account4880, <account-guard_account4880>, string) => (inlinedCallArgs4920_account4922, <inlinedCallArgs4920_account4922>, string)
assocAST: (inlinedCallArgs4920_id4921, <account-guard_id4879>, string) => (key_id4883, <key_id4883>, string)
assocAST: (inlinedCallArgs4920_account4922, <account-guard_account4880>, string) => (key_account4884, <key_account4884>, string)
assocTy: (<account-guard4894>, guard) <=> guard
assocTy: (<account-guard4894>, guard) <= guard
trackAST: (inlinedCallArgs4923, <inlinedCallArgs4923>)
assocTy: (<inlinedCallArgs4923>, <inlinedCallArgs4923>) <=> guard
assocTy: (<inlinedCallArgs4923>, <inlinedCallArgs4923>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs4923> <= guard
trackAST: (inlinedCallArgs4923_id4924, string)
assocAST: (DEBIT_id4876, <DEBIT_id4876>, string) => (inlinedCallArgs4923_id4924, <inlinedCallArgs4923_id4924>, string)
trackAST: (inlinedCallArgs4923_account4925, string)
assocAST: (DEBIT_sender4877, <DEBIT_sender4877>, string) => (inlinedCallArgs4923_account4925, <inlinedCallArgs4923_account4925>, string)
assocAST: (inlinedCallArgs4923_id4924, <DEBIT_id4876>, string) => (account-guard_id4879, <account-guard_id4879>, string)
assocAST: (inlinedCallArgs4923_id4924, <DEBIT_id4876>, string) => (account-guard_id4879, <DEBIT_id4876>, string)
assocAST: (inlinedCallArgs4923_account4925, <DEBIT_sender4877>, string) => (account-guard_account4880, <account-guard_account4880>, string)
assocAST: (inlinedCallArgs4923_account4925, <DEBIT_sender4877>, string) => (account-guard_account4880, <DEBIT_sender4877>, string)
assocTy: (<enforce-guard4878>, <enforce-guard4878>) <=> <DEBIT4897_e>
assocTy: (<enforce-guard4878>, <enforce-guard4878>) <= <DEBIT4897_e>
assocTy: tracking/updating type variable <enforce-guard4878> <= <DEBIT4897_e>
trackAST: (inlinedCallArgs4926, <inlinedCallArgs4926>)
assocTy: (<inlinedCallArgs4926>, <inlinedCallArgs4926>) <=> <DEBIT4897_e>
assocTy: (<inlinedCallArgs4926>, <inlinedCallArgs4926>) <= <DEBIT4897_e>
assocTy: tracking/updating type variable <inlinedCallArgs4926> <= <DEBIT4897_e>
trackAST: (inlinedCallArgs4926_id4927, string)
assocAST: (OFFER_id4862, <OFFER_id4862>, string) => (inlinedCallArgs4926_id4927, <inlinedCallArgs4926_id4927>, string)
trackAST: (inlinedCallArgs4926_sender4928, string)
assocAST: (OFFER_seller4863, <OFFER_seller4863>, string) => (inlinedCallArgs4926_sender4928, <inlinedCallArgs4926_sender4928>, string)
assocAST: (inlinedCallArgs4926_id4927, <OFFER_id4862>, string) => (DEBIT_id4876, <DEBIT_id4876>, string)
assocAST: (inlinedCallArgs4926_id4927, <OFFER_id4862>, string) => (DEBIT_id4876, <OFFER_id4862>, string)
assocAST: (inlinedCallArgs4926_sender4928, <OFFER_seller4863>, string) => (DEBIT_sender4877, <DEBIT_sender4877>, string)
assocAST: (inlinedCallArgs4926_sender4928, <OFFER_seller4863>, string) => (DEBIT_sender4877, <OFFER_seller4863>, string)
assocTy: (<sale-account4908>, string) <=> string
assocTy: (<sale-account4908>, string) <= string
trackAST: (inlinedCallArgs4929, <inlinedCallArgs4929>)
assocTy: (<inlinedCallArgs4929>, <inlinedCallArgs4929>) <=> string
assocTy: (<inlinedCallArgs4929>, <inlinedCallArgs4929>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs4929> <= string
assocTy: (<bool4901>, bool) <=> <CREDIT4903_g>
assocTy: bool => <CREDIT4903_g>
trackAST: (inlinedCallArgs4930, <inlinedCallArgs4930>)
assocTy: (<inlinedCallArgs4930>, <inlinedCallArgs4930>) <=> <CREDIT4903_g>
assocTy: (<inlinedCallArgs4930>, <inlinedCallArgs4930>) <= <CREDIT4903_g>
assocTy: tracking/updating type variable <inlinedCallArgs4930> <= <CREDIT4903_g>
trackAST: (inlinedCallArgs4930_id4931, string)
assocAST: (OFFER_id4862, <OFFER_id4862>, string) => (inlinedCallArgs4930_id4931, <inlinedCallArgs4930_id4931>, string)
trackAST: (inlinedCallArgs4930_receiver4932, string)
assocAST: (sale-account4909, <sale-account4908>, string) => (inlinedCallArgs4930_receiver4932, <inlinedCallArgs4930_receiver4932>, string)
assocTy: (<OFFER4910>, bool) <=> bool
assocTy: (<OFFER4910>, bool) <= bool
trackAST: (inlinedCallArgs4933, <inlinedCallArgs4933>)
assocTy: (<inlinedCallArgs4933>, <inlinedCallArgs4933>) <=> bool
assocTy: (<inlinedCallArgs4933>, <inlinedCallArgs4933>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4933> <= bool
trackAST: (inlinedCallArgs4933_id4934, string)
assocAST: (SALE_id4852, <SALE_id4852>, string) => (inlinedCallArgs4933_id4934, <inlinedCallArgs4933_id4934>, string)
trackAST: (inlinedCallArgs4933_seller4935, string)
assocAST: (SALE_seller4853, <SALE_seller4853>, string) => (inlinedCallArgs4933_seller4935, <inlinedCallArgs4933_seller4935>, string)
trackAST: (inlinedCallArgs4933_amount4936, decimal)
assocAST: (SALE_amount4854, <SALE_amount4854>, decimal) => (inlinedCallArgs4933_amount4936, <inlinedCallArgs4933_amount4936>, decimal)
trackAST: (inlinedCallArgs4933_timeout4937, integer)
assocAST: (SALE_timeout4855, <SALE_timeout4855>, integer) => (inlinedCallArgs4933_timeout4937, <inlinedCallArgs4933_timeout4937>, integer)
assocAST: (inlinedCallArgs4933_timeout4937, <SALE_timeout4855>, integer) => (OFFER_timeout4865, <OFFER_timeout4865>, integer)
assocAST: (inlinedCallArgs4933_timeout4937, <SALE_timeout4855>, integer) => (OFFER_timeout4865, <SALE_timeout4855>, integer)
assocAST: (inlinedCallArgs4933_id4934, <SALE_id4852>, string) => (OFFER_id4862, <OFFER_id4862>, string)
assocAST: (inlinedCallArgs4933_id4934, <SALE_id4852>, string) => (OFFER_id4862, <SALE_id4852>, string)
assocAST: (inlinedCallArgs4933_seller4935, <SALE_seller4853>, string) => (OFFER_seller4863, <OFFER_seller4863>, string)
assocAST: (inlinedCallArgs4933_seller4935, <SALE_seller4853>, string) => (OFFER_seller4863, <SALE_seller4853>, string)
assocAST: (inlinedCallArgs4933_id4934, <SALE_id4852>, string) => (OFFER_id4862, <SALE_id4852>, string)
assocAST: (inlinedCallArgs4933_id4934, <SALE_id4852>, string) => (OFFER_id4862, <SALE_id4852>, string)
assocTy: (<bool4914>, bool) <=> bool
assocTy: (<bool4914>, bool) <= bool
trackAST: (inlinedCallArgs4938, <inlinedCallArgs4938>)
assocTy: (<inlinedCallArgs4938>, <inlinedCallArgs4938>) <=> bool
assocTy: (<inlinedCallArgs4938>, <inlinedCallArgs4938>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs4938> <= bool
trackAST: (inlinedCallArgs4938_sale-id4939, string)
assocAST: (SALE_sale-id4856, <SALE_sale-id4856>, string) => (inlinedCallArgs4938_sale-id4939, <inlinedCallArgs4938_sale-id4939>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>4858>, <>4858>) <=> bool
assocTy: (<>4858>, <>4858>) <= bool
assocTy: tracking/updating type variable <>4858> <= bool
assocTy: (<string4860>, string) <=> string
assocTy: (<string4860>, string) <= string
assocTy: (<enforce4857>, <enforce4857>) <=> bool
assocTy: (<enforce4857>, <enforce4857>) <= bool
assocTy: tracking/updating type variable <enforce4857> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>4858_a[integer,decimal,string,time]> y:<>4858_a[integer,decimal,string,time]> -> bool
assocTy: (<SALE_amount4854>, decimal) <=> <>4858_a[integer,decimal,string,time]>
assocTy: decimal => <>4858_a[integer,decimal,string,time]>
assocTy: (<decimal4859>, decimal) <=> <>4858_a[integer,decimal,string,time]>
assocTy: (<>4858>, bool) <=> bool
assocTy: (<>4858>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<OFFER4910>, bool) <=> bool
assocTy: (<OFFER4910>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability4861>, <compose-capability4861>) <=> bool
assocTy: (<compose-capability4861>, <compose-capability4861>) <= bool
assocTy: tracking/updating type variable <compose-capability4861> <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<sale-active4872>, bool) <=> bool
assocTy: (<sale-active4872>, bool) <= bool
assocTy: (<string4874>, string) <=> string
assocTy: (<string4874>, string) <= string
assocTy: (<enforce4866>, <enforce4866>) <=> bool
assocTy: (<enforce4866>, <enforce4866>) <= bool
assocTy: tracking/updating type variable <enforce4866> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<4868_a[integer,decimal,string,time]> y:<<4868_a[integer,decimal,string,time]> -> bool
assocTy: (<at4869>, <at4869>) <=> <<4868_a[integer,decimal,string,time]>
assocTy: (<at4869>, <at4869>) <= <<4868_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at4869> <= <<4868_a[integer,decimal,string,time]>
assocTy: (<SALE_timeout4855>, integer) <=> <<4868_a[integer,decimal,string,time]>
assocTy: integer => <<4868_a[integer,decimal,string,time]>
assocTy: (<sale-active4872>, bool) <=> bool
assocTy: (<sale-active4872>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data4871>, <chain-data4871>) <=> object:{.public-chain-data}
assocTy: (<chain-data4871>, <chain-data4871>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data4871> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard4878>, <DEBIT4897_e>) <=> bool
assocTy: (<enforce-guard4878>, <DEBIT4897_e>) <= bool
assocTy: tracking/updating type variable <DEBIT4897_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability4875>, <compose-capability4875>) <=> bool
assocTy: (<compose-capability4875>, <compose-capability4875>) <= bool
assocTy: tracking/updating type variable <compose-capability4875> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4881_row}> key:string bindings:binding:<{with-read4881_row}> -> <with-read4881_a>
assocTy: (<marmalade.ledger.ledger4882>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4881_row}>
assocTy: (<{with-read4881_row}>, <{with-read4881_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4881_row}>, <{with-read4881_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4881_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4881_row}>)
assocTy: (<key4888>, string) <=> string
assocTy: (<key4888>, string) <= string
assocTy: (<account-guard4894>, guard) <=> <with-read4881_a>
assocTy: guard => <with-read4881_a>
assocTy: (<BindSchema4890_guard4891_f>, <BindSchema4890_guard4891_f>) <=> <with-read4881_a>
assocTy: (<BindSchema4890_guard4891_f>, <BindSchema4890_guard4891_f>) <= <with-read4881_a>
assocTy: tracking/updating type variable <BindSchema4890_guard4891_f> <= <with-read4881_a>
assocTy: (<BindSchema4890schema4893>, *) <=> binding:<{with-read4881_row}>
assocTy: (<BindSchema4890schema4893>, *) <= binding:<{with-read4881_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4886>, string) <=> string
assocTy: (<string4886>, string) <= string
assocTy: (<list4887>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key4888>, string) <=> string
assocTy: (<key4888>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4901>, bool) <=> bool
assocTy: (<bool4901>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<OFFER4910>, bool) <=> bool
assocTy: (<OFFER4910>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4905>, string) <=> string
assocTy: (<string4905>, string) <= string
assocTy: (<list4906>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account4908>, string) <=> string
assocTy: (<sale-account4908>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id4907>, <pact-id4907>) <=> string
assocTy: (<pact-id4907>, <pact-id4907>) <= string
assocTy: tracking/updating type variable <pact-id4907> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string4905>, string) <=> string
assocTy: (<string4905>, string) <= string
assocTy: (<list4906>, [*]) <=> [*]
assocTy: (<list4906>, [*]) <= [*]
assocTy: (<sale-account4908>, string) <=> string
assocTy: (<sale-account4908>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id4907>, string) <=> string
assocTy: (<pact-id4907>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4914>, bool) <=> bool
assocTy: (<bool4914>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<SALE4917>, bool) <=> bool
assocTy: (<SALE4917>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema4890schema4893::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema4890_guard4891_f>, guard) <=> guard
assocTy: (<BindSchema4890_guard4891_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list4887::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list4906::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list4906::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard4878::<enforce-guard4878>, tyVar=<enforce-guard4878>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard4895::<account-guard4895>, tyVar=<account-guard4894>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard4878, <enforce-guard4878>, bool)]), (guard, [(account-guard4895, <account-guard4894>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard4878, <enforce-guard4878>)])), (guard, (guard, [(account-guard4895, <account-guard4894>)]))]
Adjusting type for solution: ((enforce-guard4878, <enforce-guard4878>), bool, bool)
assocTy: (<enforce-guard4878>, bool) <=> bool
assocTy: (<enforce-guard4878>, bool) <= bool
assocTy: (<enforce-guard4878>, bool) <=> bool
assocTy: (<enforce-guard4878>, bool) <= bool
Adjusting type for solution: ((account-guard4895, <account-guard4894>), guard, guard)
assocTy: (<account-guard4894>, guard) <=> guard
assocTy: (<account-guard4894>, guard) <= guard
assocTy: (<account-guard4894>, guard) <=> guard
assocTy: (<account-guard4894>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at4869_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at4869_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at4869_l>] -> <at4869_a>: roles=[(RetVar, RoleTys { candArgTy=<at4869_a>, AST=at4869::<at4869>, tyVar=<at4869>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at4869_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at4869_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at4869_o}> -> <at4869_a>, roles=[(RetVar, RoleTys { candArgTy=<at4869_a>, AST=at4869::<at4869>, tyVar=<at4869>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string4870::string, tyVar=<string4870>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at4869_o}>, AST=chain-data4871::<chain-data4871>, tyVar=<chain-data4871>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at4869_o}> -> <at4869_a> with [(<at4869_a>, [(at4869, <at4869>, integer)]), (string, [(string4870, <string4870>, string)]), (object:<{at4869_o}>, [(chain-data4871, <chain-data4871>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at4869_o}> -> <at4869_a>: [(<at4869_a>, (integer, [(at4869, <at4869>)])), (string, (string, [(string4870, <string4870>)])), (object:<{at4869_o}>, (object:{.public-chain-data}, [(chain-data4871, <chain-data4871>)]))]
Adjusting type for solution: ((at4869, <at4869>), <at4869_a>, integer)
assocTy: (<at4869>, integer) <=> <at4869_a>
assocTy: integer => <at4869_a>
assocTy: (<at4869>, integer) <=> integer
assocTy: (<at4869>, integer) <= integer
Adjusting type for solution: ((string4870, <string4870>), string, string)
assocTy: (<string4870>, string) <=> string
assocTy: (<string4870>, string) <= string
assocTy: (<string4870>, string) <=> string
assocTy: (<string4870>, string) <= string
Adjusting type for solution: ((chain-data4871, <chain-data4871>), object:<{at4869_o}>, object:{.public-chain-data})
assocTy: (<chain-data4871>, object:{.public-chain-data}) <=> object:<{at4869_o}>
assocTy: (<{at4869_o}>, <{at4869_o}>) <=> {.public-chain-data}
assocTy: (<{at4869_o}>, <{at4869_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at4869_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at4869_o}>)
assocTy: (<chain-data4871>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data4871>, object:{.public-chain-data}) <= object:{.public-chain-data}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.SALE:bool (id:string sell...
===== Schema: (defschema policy-info  [policy:module{kip.token-p...

===== Done: (defschema policy-info  [policy:module{kip.token-p...
===== Fun: (defun marmalade.ledger.buy:bool (id:string seller...
trackAST: (buy_id4942, string)
trackAST: (buy_seller4943, string)
trackAST: (buy_buyer4944, string)
trackAST: (buy_buyer-guard4945, guard)
trackAST: (buy_amount4946, decimal)
trackAST: (buy_sale-id4947, string)
trackAST: (require-capability4948, <require-capability4948>)
trackAST: (SALE_PRIVATE_sale-id4949, string)
trackAST: (bool4950, bool)
trackAST: (SALE_PRIVATE4951, bool)
assocAST: (bool4950, <bool4950>, bool) => (SALE_PRIVATE4951, <SALE_PRIVATE4951>, bool)
trackAST: (SALE_PRIVATE4952, <SALE_PRIVATE4952>)
trackAST: (pact-id4953, <pact-id4953>)
assocAST: (bool4950, <bool4950>, bool) => (SALE_PRIVATE4952, <SALE_PRIVATE4952>, <SALE_PRIVATE4952>)
trackAST: (bind4954, <bind4954>)
trackAST: (get-policy-info_id4955, string)
trackAST: (with-read4956, <with-read4956>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens4957, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema4958, <BindSchema4958>)
trackAST: (BindSchema4958_policy4959, module{kip.token-policy-v1})
trackAST: (string4960, string)
trackAST: (BindSchema4958_supply4961, <BindSchema4958_supply4961_k>)
trackAST: (string4962, string)
trackAST: (BindSchema4958_precision4963, <BindSchema4958_precision4963_l>)
trackAST: (string4964, string)
trackAST: (BindSchema4958_manifest4965, <BindSchema4958_manifest4965_m>)
trackAST: (string4966, string)
TObject: TyAny
trackAST: (object4967, object:*)
TObject: TyAny
trackAST: (object4968, object:*)
assocAST: (object4967, <object4967>, object:*) => (BindSchema4958, <BindSchema4958>, <BindSchema4958>)
trackAST: (BindSchema4958schema4969, *)
trackAST: (get-policy-info4970, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info4970, <get-policy-info4970>, object:{marmalade.ledger.policy-info}) => (with-read4956, <with-read4956>, <with-read4956>)
trackAST: (get-policy-info4971, <get-policy-info4971>)
assocAST: (with-read4956, <get-policy-info4970>, object:{marmalade.ledger.policy-info}) => (get-policy-info4971, <get-policy-info4971>, <get-policy-info4971>)
trackAST: (BindSchema4972, <BindSchema4972>)
trackAST: (BindSchema4972_policy4973, module{kip.token-policy-v1})
trackAST: (string4974, string)
trackAST: (BindSchema4972_token4975, <BindSchema4972_token4975_aq>)
trackAST: (string4976, string)
trackAST: (enforce-buy_token4977, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-buy_seller4978, string)
trackAST: (enforce-buy_buyer4979, string)
trackAST: (enforce-buy_amount4980, decimal)
trackAST: (enforce-buy_sale-id4981, string)
trackAST: (enforce-buy4982, bool)
trackAST: (enforce-buy4983, <enforce-buy4983>)
assocAST: (enforce-buy4982, <enforce-buy4982>, bool) => (enforce-buy4983, <enforce-buy4983>, <enforce-buy4983>)
assocAST: (enforce-buy4983, <enforce-buy4982>, bool) => (BindSchema4972, <BindSchema4972>, <BindSchema4972>)
trackAST: (BindSchema4972schema4984, *)
trackAST: (BindLet4985, <BindLet4985>)
trackAST: (BindLet4985_sender4986, <BindLet4985_sender4986_ar>)
trackAST: (debit_id4987, string)
trackAST: (debit_account4988, string)
trackAST: (debit_amount4989, decimal)
trackAST: (require-capability4990, <require-capability4990>)
trackAST: (DEBIT_id4991, string)
trackAST: (DEBIT_sender4992, string)
trackAST: (enforce-guard4993, <enforce-guard4993>)
trackAST: (account-guard_id4994, string)
trackAST: (account-guard_account4995, string)
trackAST: (with-read4996, <with-read4996>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger4997, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id4998, string)
trackAST: (key_account4999, string)
trackAST: (format5000, <format5000>)
trackAST: (string5001, string)
trackAST: (list5002, [<ak>])
trackAST: (key5003, string)
assocAST: (key5003, <key5003>, string) => (format5000, <format5000>, <format5000>)
trackAST: (key5004, <key5004>)
assocAST: (format5000, <key5003>, string) => (key5004, <key5004>, <key5004>)
trackAST: (BindSchema5005, <BindSchema5005>)
trackAST: (BindSchema5005_guard5006, <BindSchema5005_guard5006_f>)
trackAST: (string5007, string)
assocAST: (BindSchema5005_guard5006, <BindSchema5005_guard5006_f>, <BindSchema5005_guard5006_f>) => (BindSchema5005, <BindSchema5005>, <BindSchema5005>)
trackAST: (BindSchema5005schema5008, *)
trackAST: (account-guard5009, guard)
assocAST: (account-guard5009, <account-guard5009>, guard) => (with-read4996, <with-read4996>, <with-read4996>)
trackAST: (account-guard5010, <account-guard5010>)
assocAST: (with-read4996, <account-guard5009>, guard) => (account-guard5010, <account-guard5010>, <account-guard5010>)
trackAST: (DEBIT5011, <e>)
assocAST: (enforce-guard4993, <enforce-guard4993>, <enforce-guard4993>) => (DEBIT5011, <e>, <e>)
trackAST: (DEBIT5012, <DEBIT5012>)
assocAST: (enforce-guard4993, <enforce-guard4993>, <enforce-guard4993>) => (DEBIT5012, <DEBIT5012>, <DEBIT5012>)
trackAST: (enforce-unit_id5013, string)
trackAST: (enforce-unit_amount5014, decimal)
trackAST: (BindLet5015, <BindLet5015>)
trackAST: (BindLet5015_p5016, <BindLet5015_p5016_ai>)
trackAST: (precision_id5017, string)
trackAST: (at5018, <at5018>)
trackAST: (string5019, string)
trackAST: (read5020, <read5020>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5021, table:{marmalade.ledger.token-schema})
trackAST: (precision5022, integer)
assocAST: (precision5022, <precision5022>, integer) => (at5018, <at5018>, <at5018>)
trackAST: (precision5023, <precision5023>)
assocAST: (at5018, <precision5022>, integer) => (precision5023, <precision5023>, <precision5023>)
assocAST: (precision5023, <precision5022>, integer) => (BindLet5015_p5016, <BindLet5015_p5016_ai>, <BindLet5015_p5016_ai>)
trackAST: (enforce5024, <enforce5024>)
trackAST: (=5025, <=5025>)
trackAST: (floor5026, <floor5026>)
trackAST: (string5027, string)
assocAST: (enforce5024, <enforce5024>, <enforce5024>) => (BindLet5015, <BindLet5015>, <BindLet5015>)
trackAST: (enforce-unit5028, bool)
assocAST: (enforce-unit5028, <enforce-unit5028>, bool) => (BindLet5015, <enforce5024>, <enforce5024>)
trackAST: (enforce-unit5029, <enforce-unit5029>)
assocAST: (BindLet5015, <enforce-unit5028>, bool) => (enforce-unit5029, <enforce-unit5029>, <enforce-unit5029>)
trackAST: (with-read5030, <with-read5030>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5031, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5032, string)
trackAST: (key_account5033, string)
trackAST: (format5034, <format5034>)
trackAST: (string5035, string)
trackAST: (list5036, [<ak>])
trackAST: (key5037, string)
assocAST: (key5037, <key5037>, string) => (format5034, <format5034>, <format5034>)
trackAST: (key5038, <key5038>)
assocAST: (format5034, <key5037>, string) => (key5038, <key5038>, <key5038>)
trackAST: (BindSchema5039, <BindSchema5039>)
trackAST: (BindSchema5039_old-bal5040, <BindSchema5039_old-bal5040_aa>)
trackAST: (string5041, string)
trackAST: (enforce5042, <enforce5042>)
trackAST: (<=5043, <<=5043>)
trackAST: (string5044, string)
trackAST: (BindLet5045, <BindLet5045>)
trackAST: (BindLet5045_new-bal5046, <BindLet5045_new-bal5046_ab>)
trackAST: (-5047, <-5047>)
assocAST: (-5047, <-5047>, <-5047>) => (BindLet5045_new-bal5046, <BindLet5045_new-bal5046_ab>, <BindLet5045_new-bal5046_ab>)
trackAST: (update5048, <update5048>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5049, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5050, string)
trackAST: (key_account5051, string)
trackAST: (format5052, <format5052>)
trackAST: (string5053, string)
trackAST: (list5054, [<ak>])
trackAST: (key5055, string)
assocAST: (key5055, <key5055>, string) => (format5052, <format5052>, <format5052>)
trackAST: (key5056, <key5056>)
assocAST: (format5052, <key5055>, string) => (key5056, <key5056>, <key5056>)
TObject: TyAny
trackAST: (object5057, object:*)
TObject: TyAny
trackAST: (object5058, object:*)
assocAST: (object5058, <object5058>, object:*) => (BindLet5045, <BindLet5045>, <BindLet5045>)
assocAST: (BindLet5045, <object5058>, object:*) => (BindSchema5039, <BindSchema5039>, <BindSchema5039>)
trackAST: (BindSchema5039schema5059, *)
trackAST: (debit5060, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (debit5060, <debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) => (with-read5030, <with-read5030>, <with-read5030>)
trackAST: (debit5061, <debit5061>)
trackAST: (format5062, <format5062>)
trackAST: (string5063, string)
trackAST: (list5064, [<at>])
trackAST: (pact-id5065, <pact-id5065>)
trackAST: (sale-account5066, string)
assocAST: (sale-account5066, <sale-account5066>, string) => (format5062, <format5062>, <format5062>)
trackAST: (sale-account5067, <sale-account5067>)
assocAST: (format5062, <sale-account5066>, string) => (sale-account5067, <sale-account5067>, <sale-account5067>)
assocAST: (with-read5030, <debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) => (debit5061, <debit5061>, <debit5061>)
assocAST: (debit5061, <debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) => (BindLet4985_sender4986, <BindLet4985_sender4986_ar>, <BindLet4985_sender4986_ar>)
trackAST: (BindLet4985_receiver5068, <BindLet4985_receiver5068_as>)
trackAST: (credit_id5069, string)
trackAST: (credit_account5070, string)
trackAST: (credit_guard5071, guard)
trackAST: (credit_amount5072, decimal)
trackAST: (enforce-valid-account_account5073, string)
trackAST: (enforce5074, <enforce5074>)
trackAST: (>5075, <>5075>)
trackAST: (length5076, <length5076>)
trackAST: (integer5077, integer)
trackAST: (string5078, string)
trackAST: (enforce-valid-account5079, <c>)
assocAST: (enforce5074, <enforce5074>, <enforce5074>) => (enforce-valid-account5079, <c>, <c>)
trackAST: (enforce-valid-account5080, <enforce-valid-account5080>)
assocAST: (enforce5074, <enforce5074>, <enforce5074>) => (enforce-valid-account5080, <enforce-valid-account5080>, <enforce-valid-account5080>)
trackAST: (enforce-unit_id5081, string)
trackAST: (enforce-unit_amount5082, decimal)
trackAST: (BindLet5083, <BindLet5083>)
trackAST: (BindLet5083_p5084, <BindLet5083_p5084_ai>)
trackAST: (precision_id5085, string)
trackAST: (at5086, <at5086>)
trackAST: (string5087, string)
trackAST: (read5088, <read5088>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5089, table:{marmalade.ledger.token-schema})
trackAST: (precision5090, integer)
assocAST: (precision5090, <precision5090>, integer) => (at5086, <at5086>, <at5086>)
trackAST: (precision5091, <precision5091>)
assocAST: (at5086, <precision5090>, integer) => (precision5091, <precision5091>, <precision5091>)
assocAST: (precision5091, <precision5090>, integer) => (BindLet5083_p5084, <BindLet5083_p5084_ai>, <BindLet5083_p5084_ai>)
trackAST: (enforce5092, <enforce5092>)
trackAST: (=5093, <=5093>)
trackAST: (floor5094, <floor5094>)
trackAST: (string5095, string)
assocAST: (enforce5092, <enforce5092>, <enforce5092>) => (BindLet5083, <BindLet5083>, <BindLet5083>)
trackAST: (enforce-unit5096, bool)
assocAST: (enforce-unit5096, <enforce-unit5096>, bool) => (BindLet5083, <enforce5092>, <enforce5092>)
trackAST: (enforce-unit5097, <enforce-unit5097>)
assocAST: (BindLet5083, <enforce-unit5096>, bool) => (enforce-unit5097, <enforce-unit5097>, <enforce-unit5097>)
trackAST: (require-capability5098, <require-capability5098>)
trackAST: (CREDIT_id5099, string)
trackAST: (CREDIT_receiver5100, string)
trackAST: (bool5101, bool)
trackAST: (CREDIT5102, <g>)
assocAST: (bool5101, <bool5101>, bool) => (CREDIT5102, <g>, <g>)
trackAST: (CREDIT5103, <CREDIT5103>)
assocAST: (bool5101, <bool5101>, bool) => (CREDIT5103, <CREDIT5103>, <CREDIT5103>)
trackAST: (with-default-read5104, <with-default-read5104>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5105, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5106, string)
trackAST: (key_account5107, string)
trackAST: (format5108, <format5108>)
trackAST: (string5109, string)
trackAST: (list5110, [<ak>])
trackAST: (key5111, string)
assocAST: (key5111, <key5111>, string) => (format5108, <format5108>, <format5108>)
trackAST: (key5112, <key5112>)
assocAST: (format5108, <key5111>, string) => (key5112, <key5112>, <key5112>)
TObject: TyAny
trackAST: (object5113, object:*)
trackAST: (decimal5114, decimal)
trackAST: (BindSchema5115, <BindSchema5115>)
trackAST: (BindSchema5115_old-bal5116, <BindSchema5115_old-bal5116_ac>)
trackAST: (string5117, string)
trackAST: (BindSchema5115_retg5118, <BindSchema5115_retg5118_ad>)
trackAST: (string5119, string)
trackAST: (enforce5120, <enforce5120>)
trackAST: (=5121, <=5121>)
trackAST: (string5122, string)
trackAST: (BindLet5123, <BindLet5123>)
trackAST: (BindLet5123_is-new5124, <BindLet5123_is-new5124_ae>)
trackAST: (if5125, <if5125>)
trackAST: (=5126, <=5126>)
trackAST: (decimal5127, decimal)
trackAST: (enforce-reserved_account5128, string)
trackAST: (enforce-reserved_guard5129, guard)
trackAST: (BindLet5130, <BindLet5130>)
trackAST: (BindLet5130_r5131, <BindLet5130_r5131_g>)
trackAST: (check-reserved_account5132, string)
trackAST: (BindLet5133, <BindLet5133>)
trackAST: (BindLet5133_pfx5134, <BindLet5133_pfx5134_f>)
trackAST: (take5135, <take5135>)
trackAST: (integer5136, integer)
assocAST: (take5135, <take5135>, <take5135>) => (BindLet5133_pfx5134, <BindLet5133_pfx5134_f>, <BindLet5133_pfx5134_f>)
trackAST: (if5137, <if5137>)
trackAST: (=5138, <=5138>)
trackAST: (string5139, string)
trackAST: (take5140, <take5140>)
trackAST: (integer5141, integer)
trackAST: (take5142, <take5142>)
trackAST: (integer5143, integer)
trackAST: (string5144, string)
assocAST: (if5137, <if5137>, <if5137>) => (BindLet5133, <BindLet5133>, <BindLet5133>)
trackAST: (check-reserved5145, string)
assocAST: (check-reserved5145, <check-reserved5145>, string) => (BindLet5133, <if5137>, <if5137>)
trackAST: (check-reserved5146, <check-reserved5146>)
assocAST: (BindLet5133, <check-reserved5145>, string) => (check-reserved5146, <check-reserved5146>, <check-reserved5146>)
assocAST: (check-reserved5146, <check-reserved5145>, string) => (BindLet5130_r5131, <BindLet5130_r5131_g>, <BindLet5130_r5131_g>)
trackAST: (if5147, <if5147>)
trackAST: (=5148, <=5148>)
trackAST: (string5149, string)
trackAST: (bool5150, bool)
trackAST: (if5151, <if5151>)
trackAST: (=5152, <=5152>)
trackAST: (string5153, string)
trackAST: (enforce5154, <enforce5154>)
trackAST: (=5155, <=5155>)
trackAST: (format5156, <format5156>)
trackAST: (string5157, string)
trackAST: (list5158, [<h>])
trackAST: (format5159, <format5159>)
trackAST: (string5160, string)
trackAST: (list5161, [<i>])
trackAST: (drop5162, <drop5162>)
trackAST: (integer5163, integer)
trackAST: (string5164, string)
trackAST: (enforce5165, <enforce5165>)
trackAST: (bool5166, bool)
trackAST: (format5167, <format5167>)
trackAST: (string5168, string)
trackAST: (list5169, [<j>])
assocAST: (if5147, <if5147>, <if5147>) => (BindLet5130, <BindLet5130>, <BindLet5130>)
trackAST: (enforce-reserved5170, bool)
assocAST: (enforce-reserved5170, <enforce-reserved5170>, bool) => (BindLet5130, <if5147>, <if5147>)
trackAST: (enforce-reserved5171, <enforce-reserved5171>)
assocAST: (BindLet5130, <enforce-reserved5170>, bool) => (enforce-reserved5171, <enforce-reserved5171>, <enforce-reserved5171>)
trackAST: (bool5172, bool)
assocAST: (if5125, <if5125>, <if5125>) => (BindLet5123_is-new5124, <BindLet5123_is-new5124_ae>, <BindLet5123_is-new5124_ae>)
trackAST: (BindLet5173, <BindLet5173>)
trackAST: (BindLet5173_new-bal5174, <BindLet5173_new-bal5174_af>)
trackAST: (if5175, <if5175>)
trackAST: (+5176, <+5176>)
assocAST: (if5175, <if5175>, <if5175>) => (BindLet5173_new-bal5174, <BindLet5173_new-bal5174_af>, <BindLet5173_new-bal5174_af>)
trackAST: (write5177, <write5177>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5178, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5179, string)
trackAST: (key_account5180, string)
trackAST: (format5181, <format5181>)
trackAST: (string5182, string)
trackAST: (list5183, [<ak>])
trackAST: (key5184, string)
assocAST: (key5184, <key5184>, string) => (format5181, <format5181>, <format5181>)
trackAST: (key5185, <key5185>)
assocAST: (format5181, <key5184>, string) => (key5185, <key5185>, <key5185>)
TObject: TyAny
trackAST: (object5186, object:*)
trackAST: (if5187, <if5187>)
trackAST: (emit-event5188, <emit-event5188>)
trackAST: (ACCOUNT_GUARD_id5189, string)
trackAST: (ACCOUNT_GUARD_account5190, string)
trackAST: (ACCOUNT_GUARD_guard5191, guard)
trackAST: (bool5192, bool)
trackAST: (ACCOUNT_GUARD5193, bool)
assocAST: (bool5192, <bool5192>, bool) => (ACCOUNT_GUARD5193, <ACCOUNT_GUARD5193>, bool)
trackAST: (ACCOUNT_GUARD5194, <ACCOUNT_GUARD5194>)
assocAST: (bool5192, <bool5192>, bool) => (ACCOUNT_GUARD5194, <ACCOUNT_GUARD5194>, <ACCOUNT_GUARD5194>)
trackAST: (bool5195, bool)
TObject: TyAny
trackAST: (object5196, object:*)
trackAST: (if5197, <if5197>)
trackAST: (decimal5198, decimal)
assocAST: (object5196, <object5196>, object:*) => (BindLet5173, <BindLet5173>, <BindLet5173>)
assocAST: (BindLet5173, <object5196>, object:*) => (BindLet5123, <BindLet5123>, <BindLet5123>)
assocAST: (BindLet5123, <object5196>, object:*) => (BindSchema5115, <BindSchema5115>, <BindSchema5115>)
trackAST: (BindSchema5115schema5199, *)
trackAST: (credit5200, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit5200, <credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read5104, <with-default-read5104>, <with-default-read5104>)
trackAST: (credit5201, <credit5201>)
assocAST: (with-default-read5104, <credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit5201, <credit5201>, <credit5201>)
assocAST: (credit5201, <credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet4985_receiver5068, <BindLet4985_receiver5068_as>, <BindLet4985_receiver5068_as>)
trackAST: (emit-event5202, <emit-event5202>)
trackAST: (TRANSFER_id5203, string)
trackAST: (TRANSFER_sender5204, string)
trackAST: (TRANSFER_receiver5205, string)
trackAST: (TRANSFER_amount5206, decimal)
trackAST: (enforce-unit_id5207, string)
trackAST: (enforce-unit_amount5208, decimal)
trackAST: (BindLet5209, <BindLet5209>)
trackAST: (BindLet5209_p5210, <BindLet5209_p5210_ai>)
trackAST: (precision_id5211, string)
trackAST: (at5212, <at5212>)
trackAST: (string5213, string)
trackAST: (read5214, <read5214>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5215, table:{marmalade.ledger.token-schema})
trackAST: (precision5216, integer)
assocAST: (precision5216, <precision5216>, integer) => (at5212, <at5212>, <at5212>)
trackAST: (precision5217, <precision5217>)
assocAST: (at5212, <precision5216>, integer) => (precision5217, <precision5217>, <precision5217>)
assocAST: (precision5217, <precision5216>, integer) => (BindLet5209_p5210, <BindLet5209_p5210_ai>, <BindLet5209_p5210_ai>)
trackAST: (enforce5218, <enforce5218>)
trackAST: (=5219, <=5219>)
trackAST: (floor5220, <floor5220>)
trackAST: (string5221, string)
assocAST: (enforce5218, <enforce5218>, <enforce5218>) => (BindLet5209, <BindLet5209>, <BindLet5209>)
trackAST: (enforce-unit5222, bool)
assocAST: (enforce-unit5222, <enforce-unit5222>, bool) => (BindLet5209, <enforce5218>, <enforce5218>)
trackAST: (enforce-unit5223, <enforce-unit5223>)
assocAST: (BindLet5209, <enforce-unit5222>, bool) => (enforce-unit5223, <enforce-unit5223>, <enforce-unit5223>)
trackAST: (enforce5224, <enforce5224>)
trackAST: (>5225, <>5225>)
trackAST: (decimal5226, decimal)
trackAST: (string5227, string)
trackAST: (compose-capability5228, <compose-capability5228>)
trackAST: (DEBIT_id5229, string)
trackAST: (DEBIT_sender5230, string)
trackAST: (enforce-guard5231, <enforce-guard5231>)
trackAST: (account-guard_id5232, string)
trackAST: (account-guard_account5233, string)
trackAST: (with-read5234, <with-read5234>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5235, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5236, string)
trackAST: (key_account5237, string)
trackAST: (format5238, <format5238>)
trackAST: (string5239, string)
trackAST: (list5240, [<ak>])
trackAST: (key5241, string)
assocAST: (key5241, <key5241>, string) => (format5238, <format5238>, <format5238>)
trackAST: (key5242, <key5242>)
assocAST: (format5238, <key5241>, string) => (key5242, <key5242>, <key5242>)
trackAST: (BindSchema5243, <BindSchema5243>)
trackAST: (BindSchema5243_guard5244, <BindSchema5243_guard5244_f>)
trackAST: (string5245, string)
assocAST: (BindSchema5243_guard5244, <BindSchema5243_guard5244_f>, <BindSchema5243_guard5244_f>) => (BindSchema5243, <BindSchema5243>, <BindSchema5243>)
trackAST: (BindSchema5243schema5246, *)
trackAST: (account-guard5247, guard)
assocAST: (account-guard5247, <account-guard5247>, guard) => (with-read5234, <with-read5234>, <with-read5234>)
trackAST: (account-guard5248, <account-guard5248>)
assocAST: (with-read5234, <account-guard5247>, guard) => (account-guard5248, <account-guard5248>, <account-guard5248>)
trackAST: (DEBIT5249, <e>)
assocAST: (enforce-guard5231, <enforce-guard5231>, <enforce-guard5231>) => (DEBIT5249, <e>, <e>)
trackAST: (DEBIT5250, <DEBIT5250>)
assocAST: (enforce-guard5231, <enforce-guard5231>, <enforce-guard5231>) => (DEBIT5250, <DEBIT5250>, <DEBIT5250>)
trackAST: (compose-capability5251, <compose-capability5251>)
trackAST: (CREDIT_id5252, string)
trackAST: (CREDIT_receiver5253, string)
trackAST: (bool5254, bool)
trackAST: (CREDIT5255, <g>)
assocAST: (bool5254, <bool5254>, bool) => (CREDIT5255, <g>, <g>)
trackAST: (CREDIT5256, <CREDIT5256>)
assocAST: (bool5254, <bool5254>, bool) => (CREDIT5256, <CREDIT5256>, <CREDIT5256>)
trackAST: (TRANSFER5257, bool)
assocAST: (TRANSFER5257, <TRANSFER5257>, bool) => (compose-capability5251, <compose-capability5251>, <compose-capability5251>)
trackAST: (TRANSFER5258, <TRANSFER5258>)
trackAST: (format5259, <format5259>)
trackAST: (string5260, string)
trackAST: (list5261, [<at>])
trackAST: (pact-id5262, <pact-id5262>)
trackAST: (sale-account5263, string)
assocAST: (sale-account5263, <sale-account5263>, string) => (format5259, <format5259>, <format5259>)
trackAST: (sale-account5264, <sale-account5264>)
assocAST: (format5259, <sale-account5263>, string) => (sale-account5264, <sale-account5264>, <sale-account5264>)
assocAST: (compose-capability5251, <TRANSFER5257>, bool) => (TRANSFER5258, <TRANSFER5258>, <TRANSFER5258>)
trackAST: (emit-event5265, <emit-event5265>)
trackAST: (RECONCILE_token-id5266, string)
trackAST: (RECONCILE_amount5267, decimal)
trackAST: (RECONCILE_sender5268, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver5269, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool5270, bool)
trackAST: (RECONCILE5271, bool)
assocAST: (bool5270, <bool5270>, bool) => (RECONCILE5271, <RECONCILE5271>, bool)
trackAST: (RECONCILE5272, <RECONCILE5272>)
assocAST: (bool5270, <bool5270>, bool) => (RECONCILE5272, <RECONCILE5272>, <RECONCILE5272>)
assocAST: (emit-event5265, <emit-event5265>, <emit-event5265>) => (BindLet4985, <BindLet4985>, <BindLet4985>)
trackAST: (buy5273, bool)
assocAST: (buy5273, <buy5273>, bool) => (BindLet4985, <emit-event5265>, <emit-event5265>)
--------------------------------
 Substitute defuns:

assocTy: (<bool4950>, bool) <=> bool
assocTy: (<bool4950>, bool) <= bool
trackAST: (inlinedCallArgs5274, <inlinedCallArgs5274>)
assocTy: (<inlinedCallArgs5274>, <inlinedCallArgs5274>) <=> bool
assocTy: (<inlinedCallArgs5274>, <inlinedCallArgs5274>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5274> <= bool
trackAST: (inlinedCallArgs5274_sale-id5275, string)
assocAST: (inlinedCallArgs5274_sale-id5275, <inlinedCallArgs5274_sale-id5275>, string) => (pact-id4953, <pact-id4953>, <pact-id4953>)
assocTy: (<enforce-buy4982>, bool) <=> bool
assocTy: (<enforce-buy4982>, bool) <= bool
trackAST: (inlinedCallArgs5276, <inlinedCallArgs5276>)
assocTy: (<inlinedCallArgs5276>, <inlinedCallArgs5276>) <=> bool
assocTy: (<inlinedCallArgs5276>, <inlinedCallArgs5276>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5276> <= bool
trackAST: (inlinedCallArgs5276_token5277, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs5276_token5277, <inlinedCallArgs5276_token5277>, object:{kip.token-policy-v1.token-info}) => (BindSchema4972_token4975, <BindSchema4972_token4975_aq>, <BindSchema4972_token4975_aq>)
trackAST: (inlinedCallArgs5276_seller5278, string)
assocAST: (buy_seller4943, <buy_seller4943>, string) => (inlinedCallArgs5276_seller5278, <inlinedCallArgs5276_seller5278>, string)
trackAST: (inlinedCallArgs5276_buyer5279, string)
assocAST: (buy_buyer4944, <buy_buyer4944>, string) => (inlinedCallArgs5276_buyer5279, <inlinedCallArgs5276_buyer5279>, string)
trackAST: (inlinedCallArgs5276_amount5280, decimal)
assocAST: (buy_amount4946, <buy_amount4946>, decimal) => (inlinedCallArgs5276_amount5280, <inlinedCallArgs5276_amount5280>, decimal)
trackAST: (inlinedCallArgs5276_sale-id5281, string)
assocAST: (buy_sale-id4947, <buy_sale-id4947>, string) => (inlinedCallArgs5276_sale-id5281, <inlinedCallArgs5276_sale-id5281>, string)
assocTy: (<get-policy-info4970>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info4970>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs5282, <inlinedCallArgs5282>)
assocTy: (<inlinedCallArgs5282>, <inlinedCallArgs5282>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs5282>, <inlinedCallArgs5282>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs5282> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs5282_id5283, string)
assocAST: (buy_id4942, <buy_id4942>, string) => (inlinedCallArgs5282_id5283, <inlinedCallArgs5282_id5283>, string)
assocAST: (inlinedCallArgs5282_id5283, <buy_id4942>, string) => (get-policy-info_id4955, <get-policy-info_id4955>, string)
assocAST: (inlinedCallArgs5282_id5283, <buy_id4942>, string) => (get-policy-info_id4955, <buy_id4942>, string)
assocTy: (<key5003>, string) <=> string
assocTy: (<key5003>, string) <= string
trackAST: (inlinedCallArgs5284, <inlinedCallArgs5284>)
assocTy: (<inlinedCallArgs5284>, <inlinedCallArgs5284>) <=> string
assocTy: (<inlinedCallArgs5284>, <inlinedCallArgs5284>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5284> <= string
trackAST: (inlinedCallArgs5284_id5285, string)
assocAST: (account-guard_id4994, <account-guard_id4994>, string) => (inlinedCallArgs5284_id5285, <inlinedCallArgs5284_id5285>, string)
trackAST: (inlinedCallArgs5284_account5286, string)
assocAST: (account-guard_account4995, <account-guard_account4995>, string) => (inlinedCallArgs5284_account5286, <inlinedCallArgs5284_account5286>, string)
assocAST: (inlinedCallArgs5284_id5285, <account-guard_id4994>, string) => (key_id4998, <key_id4998>, string)
assocAST: (inlinedCallArgs5284_account5286, <account-guard_account4995>, string) => (key_account4999, <key_account4999>, string)
assocTy: (<account-guard5009>, guard) <=> guard
assocTy: (<account-guard5009>, guard) <= guard
trackAST: (inlinedCallArgs5287, <inlinedCallArgs5287>)
assocTy: (<inlinedCallArgs5287>, <inlinedCallArgs5287>) <=> guard
assocTy: (<inlinedCallArgs5287>, <inlinedCallArgs5287>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs5287> <= guard
trackAST: (inlinedCallArgs5287_id5288, string)
assocAST: (DEBIT_id4991, <DEBIT_id4991>, string) => (inlinedCallArgs5287_id5288, <inlinedCallArgs5287_id5288>, string)
trackAST: (inlinedCallArgs5287_account5289, string)
assocAST: (DEBIT_sender4992, <DEBIT_sender4992>, string) => (inlinedCallArgs5287_account5289, <inlinedCallArgs5287_account5289>, string)
assocAST: (inlinedCallArgs5287_id5288, <DEBIT_id4991>, string) => (account-guard_id4994, <account-guard_id4994>, string)
assocAST: (inlinedCallArgs5287_id5288, <DEBIT_id4991>, string) => (account-guard_id4994, <DEBIT_id4991>, string)
assocAST: (inlinedCallArgs5287_account5289, <DEBIT_sender4992>, string) => (account-guard_account4995, <account-guard_account4995>, string)
assocAST: (inlinedCallArgs5287_account5289, <DEBIT_sender4992>, string) => (account-guard_account4995, <DEBIT_sender4992>, string)
assocTy: (<enforce-guard4993>, <enforce-guard4993>) <=> <DEBIT5012_e>
assocTy: (<enforce-guard4993>, <enforce-guard4993>) <= <DEBIT5012_e>
assocTy: tracking/updating type variable <enforce-guard4993> <= <DEBIT5012_e>
trackAST: (inlinedCallArgs5290, <inlinedCallArgs5290>)
assocTy: (<inlinedCallArgs5290>, <inlinedCallArgs5290>) <=> <DEBIT5012_e>
assocTy: (<inlinedCallArgs5290>, <inlinedCallArgs5290>) <= <DEBIT5012_e>
assocTy: tracking/updating type variable <inlinedCallArgs5290> <= <DEBIT5012_e>
trackAST: (inlinedCallArgs5290_id5291, string)
assocAST: (debit_id4987, <debit_id4987>, string) => (inlinedCallArgs5290_id5291, <inlinedCallArgs5290_id5291>, string)
trackAST: (inlinedCallArgs5290_sender5292, string)
assocAST: (debit_account4988, <debit_account4988>, string) => (inlinedCallArgs5290_sender5292, <inlinedCallArgs5290_sender5292>, string)
assocAST: (inlinedCallArgs5290_id5291, <debit_id4987>, string) => (DEBIT_id4991, <DEBIT_id4991>, string)
assocAST: (inlinedCallArgs5290_id5291, <debit_id4987>, string) => (DEBIT_id4991, <debit_id4987>, string)
assocAST: (inlinedCallArgs5290_sender5292, <debit_account4988>, string) => (DEBIT_sender4992, <DEBIT_sender4992>, string)
assocAST: (inlinedCallArgs5290_sender5292, <debit_account4988>, string) => (DEBIT_sender4992, <debit_account4988>, string)
assocTy: (<precision5022>, integer) <=> integer
assocTy: (<precision5022>, integer) <= integer
trackAST: (inlinedCallArgs5293, <inlinedCallArgs5293>)
assocTy: (<inlinedCallArgs5293>, <inlinedCallArgs5293>) <=> integer
assocTy: (<inlinedCallArgs5293>, <inlinedCallArgs5293>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs5293> <= integer
trackAST: (inlinedCallArgs5293_id5294, string)
assocAST: (enforce-unit_id5013, <enforce-unit_id5013>, string) => (inlinedCallArgs5293_id5294, <inlinedCallArgs5293_id5294>, string)
assocAST: (inlinedCallArgs5293_id5294, <enforce-unit_id5013>, string) => (precision_id5017, <precision_id5017>, string)
assocTy: (<enforce-unit5028>, bool) <=> bool
assocTy: (<enforce-unit5028>, bool) <= bool
trackAST: (inlinedCallArgs5295, <inlinedCallArgs5295>)
assocTy: (<inlinedCallArgs5295>, <inlinedCallArgs5295>) <=> bool
assocTy: (<inlinedCallArgs5295>, <inlinedCallArgs5295>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5295> <= bool
trackAST: (inlinedCallArgs5295_id5296, string)
assocAST: (debit_id4987, <debit_id4987>, string) => (inlinedCallArgs5295_id5296, <inlinedCallArgs5295_id5296>, string)
trackAST: (inlinedCallArgs5295_amount5297, decimal)
assocAST: (debit_amount4989, <debit_amount4989>, decimal) => (inlinedCallArgs5295_amount5297, <inlinedCallArgs5295_amount5297>, decimal)
assocAST: (inlinedCallArgs5295_id5296, <debit_id4987>, string) => (enforce-unit_id5013, <enforce-unit_id5013>, string)
assocAST: (inlinedCallArgs5295_id5296, <debit_id4987>, string) => (enforce-unit_id5013, <debit_id4987>, string)
assocAST: (inlinedCallArgs5295_amount5297, <debit_amount4989>, decimal) => (enforce-unit_amount5014, <enforce-unit_amount5014>, decimal)
assocAST: (inlinedCallArgs5295_amount5297, <debit_amount4989>, decimal) => (enforce-unit_amount5014, <debit_amount4989>, decimal)
assocTy: (<key5055>, string) <=> string
assocTy: (<key5055>, string) <= string
trackAST: (inlinedCallArgs5298, <inlinedCallArgs5298>)
assocTy: (<inlinedCallArgs5298>, <inlinedCallArgs5298>) <=> string
assocTy: (<inlinedCallArgs5298>, <inlinedCallArgs5298>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5298> <= string
trackAST: (inlinedCallArgs5298_id5299, string)
assocAST: (debit_id4987, <debit_id4987>, string) => (inlinedCallArgs5298_id5299, <inlinedCallArgs5298_id5299>, string)
trackAST: (inlinedCallArgs5298_account5300, string)
assocAST: (debit_account4988, <debit_account4988>, string) => (inlinedCallArgs5298_account5300, <inlinedCallArgs5298_account5300>, string)
assocAST: (inlinedCallArgs5298_id5299, <debit_id4987>, string) => (key_id5050, <key_id5050>, string)
assocAST: (inlinedCallArgs5298_account5300, <debit_account4988>, string) => (key_account5051, <key_account5051>, string)
assocTy: (<key5037>, string) <=> string
assocTy: (<key5037>, string) <= string
trackAST: (inlinedCallArgs5301, <inlinedCallArgs5301>)
assocTy: (<inlinedCallArgs5301>, <inlinedCallArgs5301>) <=> string
assocTy: (<inlinedCallArgs5301>, <inlinedCallArgs5301>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5301> <= string
trackAST: (inlinedCallArgs5301_id5302, string)
assocAST: (debit_id4987, <debit_id4987>, string) => (inlinedCallArgs5301_id5302, <inlinedCallArgs5301_id5302>, string)
trackAST: (inlinedCallArgs5301_account5303, string)
assocAST: (debit_account4988, <debit_account4988>, string) => (inlinedCallArgs5301_account5303, <inlinedCallArgs5301_account5303>, string)
assocAST: (inlinedCallArgs5301_id5302, <debit_id4987>, string) => (key_id5032, <key_id5032>, string)
assocAST: (inlinedCallArgs5301_account5303, <debit_account4988>, string) => (key_account5033, <key_account5033>, string)
assocTy: (<sale-account5066>, string) <=> string
assocTy: (<sale-account5066>, string) <= string
trackAST: (inlinedCallArgs5304, <inlinedCallArgs5304>)
assocTy: (<inlinedCallArgs5304>, <inlinedCallArgs5304>) <=> string
assocTy: (<inlinedCallArgs5304>, <inlinedCallArgs5304>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5304> <= string
assocTy: (<debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs5305, <inlinedCallArgs5305>)
assocTy: (<inlinedCallArgs5305>, <inlinedCallArgs5305>) <=> object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: (<inlinedCallArgs5305>, <inlinedCallArgs5305>) <= object:{kip.poly-fungible-v3.sender-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs5305> <= object:{kip.poly-fungible-v3.sender-balance-change}
trackAST: (inlinedCallArgs5305_id5306, string)
assocAST: (buy_id4942, <buy_id4942>, string) => (inlinedCallArgs5305_id5306, <inlinedCallArgs5305_id5306>, string)
trackAST: (inlinedCallArgs5305_account5307, string)
assocAST: (sale-account5067, <sale-account5066>, string) => (inlinedCallArgs5305_account5307, <inlinedCallArgs5305_account5307>, string)
trackAST: (inlinedCallArgs5305_amount5308, decimal)
assocAST: (buy_amount4946, <buy_amount4946>, decimal) => (inlinedCallArgs5305_amount5308, <inlinedCallArgs5305_amount5308>, decimal)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <debit_id4987>, string)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <debit_account4988>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <sale-account5066>, string)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_amount5308, <buy_amount4946>, decimal) => (debit_amount4989, <debit_amount4989>, decimal)
assocAST: (inlinedCallArgs5305_amount5308, <buy_amount4946>, decimal) => (debit_amount4989, <buy_amount4946>, decimal)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_id5306, <buy_id4942>, string) => (debit_id4987, <buy_id4942>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <sale-account5066>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <sale-account5066>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <sale-account5066>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <sale-account5066>, string)
assocAST: (inlinedCallArgs5305_account5307, <sale-account5066>, string) => (debit_account4988, <sale-account5066>, string)
assocAST: (inlinedCallArgs5305_amount5308, <buy_amount4946>, decimal) => (debit_amount4989, <buy_amount4946>, decimal)
assocAST: (inlinedCallArgs5305_amount5308, <buy_amount4946>, decimal) => (debit_amount4989, <buy_amount4946>, decimal)
assocTy: (<enforce5074>, <enforce5074>) <=> <enforce-valid-account5080_c>
assocTy: (<enforce5074>, <enforce5074>) <= <enforce-valid-account5080_c>
assocTy: tracking/updating type variable <enforce5074> <= <enforce-valid-account5080_c>
trackAST: (inlinedCallArgs5309, <inlinedCallArgs5309>)
assocTy: (<inlinedCallArgs5309>, <inlinedCallArgs5309>) <=> <enforce-valid-account5080_c>
assocTy: (<inlinedCallArgs5309>, <inlinedCallArgs5309>) <= <enforce-valid-account5080_c>
assocTy: tracking/updating type variable <inlinedCallArgs5309> <= <enforce-valid-account5080_c>
trackAST: (inlinedCallArgs5309_account5310, string)
assocAST: (credit_account5070, <credit_account5070>, string) => (inlinedCallArgs5309_account5310, <inlinedCallArgs5309_account5310>, string)
assocAST: (inlinedCallArgs5309_account5310, <credit_account5070>, string) => (enforce-valid-account_account5073, <enforce-valid-account_account5073>, string)
assocTy: (<precision5090>, integer) <=> integer
assocTy: (<precision5090>, integer) <= integer
trackAST: (inlinedCallArgs5311, <inlinedCallArgs5311>)
assocTy: (<inlinedCallArgs5311>, <inlinedCallArgs5311>) <=> integer
assocTy: (<inlinedCallArgs5311>, <inlinedCallArgs5311>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs5311> <= integer
trackAST: (inlinedCallArgs5311_id5312, string)
assocAST: (enforce-unit_id5081, <enforce-unit_id5081>, string) => (inlinedCallArgs5311_id5312, <inlinedCallArgs5311_id5312>, string)
assocAST: (inlinedCallArgs5311_id5312, <enforce-unit_id5081>, string) => (precision_id5085, <precision_id5085>, string)
assocTy: (<enforce-unit5096>, bool) <=> bool
assocTy: (<enforce-unit5096>, bool) <= bool
trackAST: (inlinedCallArgs5313, <inlinedCallArgs5313>)
assocTy: (<inlinedCallArgs5313>, <inlinedCallArgs5313>) <=> bool
assocTy: (<inlinedCallArgs5313>, <inlinedCallArgs5313>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5313> <= bool
trackAST: (inlinedCallArgs5313_id5314, string)
assocAST: (credit_id5069, <credit_id5069>, string) => (inlinedCallArgs5313_id5314, <inlinedCallArgs5313_id5314>, string)
trackAST: (inlinedCallArgs5313_amount5315, decimal)
assocAST: (credit_amount5072, <credit_amount5072>, decimal) => (inlinedCallArgs5313_amount5315, <inlinedCallArgs5313_amount5315>, decimal)
assocAST: (inlinedCallArgs5313_id5314, <credit_id5069>, string) => (enforce-unit_id5081, <enforce-unit_id5081>, string)
assocAST: (inlinedCallArgs5313_id5314, <credit_id5069>, string) => (enforce-unit_id5081, <credit_id5069>, string)
assocAST: (inlinedCallArgs5313_amount5315, <credit_amount5072>, decimal) => (enforce-unit_amount5082, <enforce-unit_amount5082>, decimal)
assocAST: (inlinedCallArgs5313_amount5315, <credit_amount5072>, decimal) => (enforce-unit_amount5082, <credit_amount5072>, decimal)
assocTy: (<bool5101>, bool) <=> <CREDIT5103_g>
assocTy: bool => <CREDIT5103_g>
trackAST: (inlinedCallArgs5316, <inlinedCallArgs5316>)
assocTy: (<inlinedCallArgs5316>, <inlinedCallArgs5316>) <=> <CREDIT5103_g>
assocTy: (<inlinedCallArgs5316>, <inlinedCallArgs5316>) <= <CREDIT5103_g>
assocTy: tracking/updating type variable <inlinedCallArgs5316> <= <CREDIT5103_g>
trackAST: (inlinedCallArgs5316_id5317, string)
assocAST: (credit_id5069, <credit_id5069>, string) => (inlinedCallArgs5316_id5317, <inlinedCallArgs5316_id5317>, string)
trackAST: (inlinedCallArgs5316_receiver5318, string)
assocAST: (credit_account5070, <credit_account5070>, string) => (inlinedCallArgs5316_receiver5318, <inlinedCallArgs5316_receiver5318>, string)
assocTy: (<check-reserved5145>, string) <=> string
assocTy: (<check-reserved5145>, string) <= string
trackAST: (inlinedCallArgs5319, <inlinedCallArgs5319>)
assocTy: (<inlinedCallArgs5319>, <inlinedCallArgs5319>) <=> string
assocTy: (<inlinedCallArgs5319>, <inlinedCallArgs5319>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5319> <= string
trackAST: (inlinedCallArgs5319_account5320, string)
assocAST: (enforce-reserved_account5128, <enforce-reserved_account5128>, string) => (inlinedCallArgs5319_account5320, <inlinedCallArgs5319_account5320>, string)
assocAST: (inlinedCallArgs5319_account5320, <enforce-reserved_account5128>, string) => (check-reserved_account5132, <check-reserved_account5132>, string)
assocTy: (<enforce-reserved5170>, bool) <=> bool
assocTy: (<enforce-reserved5170>, bool) <= bool
trackAST: (inlinedCallArgs5321, <inlinedCallArgs5321>)
assocTy: (<inlinedCallArgs5321>, <inlinedCallArgs5321>) <=> bool
assocTy: (<inlinedCallArgs5321>, <inlinedCallArgs5321>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5321> <= bool
trackAST: (inlinedCallArgs5321_account5322, string)
assocAST: (credit_account5070, <credit_account5070>, string) => (inlinedCallArgs5321_account5322, <inlinedCallArgs5321_account5322>, string)
trackAST: (inlinedCallArgs5321_guard5323, guard)
assocAST: (credit_guard5071, <credit_guard5071>, guard) => (inlinedCallArgs5321_guard5323, <inlinedCallArgs5321_guard5323>, guard)
assocAST: (inlinedCallArgs5321_account5322, <credit_account5070>, string) => (enforce-reserved_account5128, <enforce-reserved_account5128>, string)
assocAST: (inlinedCallArgs5321_account5322, <credit_account5070>, string) => (enforce-reserved_account5128, <credit_account5070>, string)
assocAST: (inlinedCallArgs5321_account5322, <credit_account5070>, string) => (enforce-reserved_account5128, <credit_account5070>, string)
assocAST: (inlinedCallArgs5321_guard5323, <credit_guard5071>, guard) => (enforce-reserved_guard5129, <enforce-reserved_guard5129>, guard)
assocTy: (<key5184>, string) <=> string
assocTy: (<key5184>, string) <= string
trackAST: (inlinedCallArgs5324, <inlinedCallArgs5324>)
assocTy: (<inlinedCallArgs5324>, <inlinedCallArgs5324>) <=> string
assocTy: (<inlinedCallArgs5324>, <inlinedCallArgs5324>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5324> <= string
trackAST: (inlinedCallArgs5324_id5325, string)
assocAST: (credit_id5069, <credit_id5069>, string) => (inlinedCallArgs5324_id5325, <inlinedCallArgs5324_id5325>, string)
trackAST: (inlinedCallArgs5324_account5326, string)
assocAST: (credit_account5070, <credit_account5070>, string) => (inlinedCallArgs5324_account5326, <inlinedCallArgs5324_account5326>, string)
assocAST: (inlinedCallArgs5324_id5325, <credit_id5069>, string) => (key_id5179, <key_id5179>, string)
assocAST: (inlinedCallArgs5324_account5326, <credit_account5070>, string) => (key_account5180, <key_account5180>, string)
assocTy: (<bool5192>, bool) <=> bool
assocTy: (<bool5192>, bool) <= bool
trackAST: (inlinedCallArgs5327, <inlinedCallArgs5327>)
assocTy: (<inlinedCallArgs5327>, <inlinedCallArgs5327>) <=> bool
assocTy: (<inlinedCallArgs5327>, <inlinedCallArgs5327>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5327> <= bool
trackAST: (inlinedCallArgs5327_id5328, string)
assocAST: (credit_id5069, <credit_id5069>, string) => (inlinedCallArgs5327_id5328, <inlinedCallArgs5327_id5328>, string)
trackAST: (inlinedCallArgs5327_account5329, string)
assocAST: (credit_account5070, <credit_account5070>, string) => (inlinedCallArgs5327_account5329, <inlinedCallArgs5327_account5329>, string)
trackAST: (inlinedCallArgs5327_guard5330, guard)
assocAST: (inlinedCallArgs5327_guard5330, <inlinedCallArgs5327_guard5330>, guard) => (BindSchema5115_retg5118, <BindSchema5115_retg5118_ad>, <BindSchema5115_retg5118_ad>)
assocTy: (<key5111>, string) <=> string
assocTy: (<key5111>, string) <= string
trackAST: (inlinedCallArgs5331, <inlinedCallArgs5331>)
assocTy: (<inlinedCallArgs5331>, <inlinedCallArgs5331>) <=> string
assocTy: (<inlinedCallArgs5331>, <inlinedCallArgs5331>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5331> <= string
trackAST: (inlinedCallArgs5331_id5332, string)
assocAST: (credit_id5069, <credit_id5069>, string) => (inlinedCallArgs5331_id5332, <inlinedCallArgs5331_id5332>, string)
trackAST: (inlinedCallArgs5331_account5333, string)
assocAST: (credit_account5070, <credit_account5070>, string) => (inlinedCallArgs5331_account5333, <inlinedCallArgs5331_account5333>, string)
assocAST: (inlinedCallArgs5331_id5332, <credit_id5069>, string) => (key_id5106, <key_id5106>, string)
assocAST: (inlinedCallArgs5331_account5333, <credit_account5070>, string) => (key_account5107, <key_account5107>, string)
assocTy: (<credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs5334, <inlinedCallArgs5334>)
assocTy: (<inlinedCallArgs5334>, <inlinedCallArgs5334>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs5334>, <inlinedCallArgs5334>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs5334> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs5334_id5335, string)
assocAST: (buy_id4942, <buy_id4942>, string) => (inlinedCallArgs5334_id5335, <inlinedCallArgs5334_id5335>, string)
trackAST: (inlinedCallArgs5334_account5336, string)
assocAST: (buy_buyer4944, <buy_buyer4944>, string) => (inlinedCallArgs5334_account5336, <inlinedCallArgs5334_account5336>, string)
trackAST: (inlinedCallArgs5334_guard5337, guard)
assocAST: (buy_buyer-guard4945, <buy_buyer-guard4945>, guard) => (inlinedCallArgs5334_guard5337, <inlinedCallArgs5334_guard5337>, guard)
trackAST: (inlinedCallArgs5334_amount5338, decimal)
assocAST: (buy_amount4946, <buy_amount4946>, decimal) => (inlinedCallArgs5334_amount5338, <inlinedCallArgs5334_amount5338>, decimal)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <credit_account5070>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <credit_id5069>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_amount5338, <buy_amount4946>, decimal) => (credit_amount5072, <credit_amount5072>, decimal)
assocAST: (inlinedCallArgs5334_amount5338, <buy_amount4946>, decimal) => (credit_amount5072, <buy_amount4946>, decimal)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_id5335, <buy_id4942>, string) => (credit_id5069, <buy_id4942>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_account5336, <buy_buyer4944>, string) => (credit_account5070, <buy_buyer4944>, string)
assocAST: (inlinedCallArgs5334_guard5337, <buy_buyer-guard4945>, guard) => (credit_guard5071, <credit_guard5071>, guard)
assocAST: (inlinedCallArgs5334_guard5337, <buy_buyer-guard4945>, guard) => (credit_guard5071, <buy_buyer-guard4945>, guard)
assocAST: (inlinedCallArgs5334_guard5337, <buy_buyer-guard4945>, guard) => (credit_guard5071, <buy_buyer-guard4945>, guard)
assocAST: (inlinedCallArgs5334_guard5337, <buy_buyer-guard4945>, guard) => (credit_guard5071, <buy_buyer-guard4945>, guard)
assocAST: (inlinedCallArgs5334_amount5338, <buy_amount4946>, decimal) => (credit_amount5072, <buy_amount4946>, decimal)
assocAST: (inlinedCallArgs5334_amount5338, <buy_amount4946>, decimal) => (credit_amount5072, <buy_amount4946>, decimal)
assocTy: (<precision5216>, integer) <=> integer
assocTy: (<precision5216>, integer) <= integer
trackAST: (inlinedCallArgs5339, <inlinedCallArgs5339>)
assocTy: (<inlinedCallArgs5339>, <inlinedCallArgs5339>) <=> integer
assocTy: (<inlinedCallArgs5339>, <inlinedCallArgs5339>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs5339> <= integer
trackAST: (inlinedCallArgs5339_id5340, string)
assocAST: (enforce-unit_id5207, <enforce-unit_id5207>, string) => (inlinedCallArgs5339_id5340, <inlinedCallArgs5339_id5340>, string)
assocAST: (inlinedCallArgs5339_id5340, <enforce-unit_id5207>, string) => (precision_id5211, <precision_id5211>, string)
assocTy: (<enforce-unit5222>, bool) <=> bool
assocTy: (<enforce-unit5222>, bool) <= bool
trackAST: (inlinedCallArgs5341, <inlinedCallArgs5341>)
assocTy: (<inlinedCallArgs5341>, <inlinedCallArgs5341>) <=> bool
assocTy: (<inlinedCallArgs5341>, <inlinedCallArgs5341>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5341> <= bool
trackAST: (inlinedCallArgs5341_id5342, string)
assocAST: (TRANSFER_id5203, <TRANSFER_id5203>, string) => (inlinedCallArgs5341_id5342, <inlinedCallArgs5341_id5342>, string)
trackAST: (inlinedCallArgs5341_amount5343, decimal)
assocAST: (TRANSFER_amount5206, <TRANSFER_amount5206>, decimal) => (inlinedCallArgs5341_amount5343, <inlinedCallArgs5341_amount5343>, decimal)
assocAST: (inlinedCallArgs5341_id5342, <TRANSFER_id5203>, string) => (enforce-unit_id5207, <enforce-unit_id5207>, string)
assocAST: (inlinedCallArgs5341_id5342, <TRANSFER_id5203>, string) => (enforce-unit_id5207, <TRANSFER_id5203>, string)
assocAST: (inlinedCallArgs5341_amount5343, <TRANSFER_amount5206>, decimal) => (enforce-unit_amount5208, <enforce-unit_amount5208>, decimal)
assocAST: (inlinedCallArgs5341_amount5343, <TRANSFER_amount5206>, decimal) => (enforce-unit_amount5208, <TRANSFER_amount5206>, decimal)
assocTy: (<key5241>, string) <=> string
assocTy: (<key5241>, string) <= string
trackAST: (inlinedCallArgs5344, <inlinedCallArgs5344>)
assocTy: (<inlinedCallArgs5344>, <inlinedCallArgs5344>) <=> string
assocTy: (<inlinedCallArgs5344>, <inlinedCallArgs5344>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5344> <= string
trackAST: (inlinedCallArgs5344_id5345, string)
assocAST: (account-guard_id5232, <account-guard_id5232>, string) => (inlinedCallArgs5344_id5345, <inlinedCallArgs5344_id5345>, string)
trackAST: (inlinedCallArgs5344_account5346, string)
assocAST: (account-guard_account5233, <account-guard_account5233>, string) => (inlinedCallArgs5344_account5346, <inlinedCallArgs5344_account5346>, string)
assocAST: (inlinedCallArgs5344_id5345, <account-guard_id5232>, string) => (key_id5236, <key_id5236>, string)
assocAST: (inlinedCallArgs5344_account5346, <account-guard_account5233>, string) => (key_account5237, <key_account5237>, string)
assocTy: (<account-guard5247>, guard) <=> guard
assocTy: (<account-guard5247>, guard) <= guard
trackAST: (inlinedCallArgs5347, <inlinedCallArgs5347>)
assocTy: (<inlinedCallArgs5347>, <inlinedCallArgs5347>) <=> guard
assocTy: (<inlinedCallArgs5347>, <inlinedCallArgs5347>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs5347> <= guard
trackAST: (inlinedCallArgs5347_id5348, string)
assocAST: (DEBIT_id5229, <DEBIT_id5229>, string) => (inlinedCallArgs5347_id5348, <inlinedCallArgs5347_id5348>, string)
trackAST: (inlinedCallArgs5347_account5349, string)
assocAST: (DEBIT_sender5230, <DEBIT_sender5230>, string) => (inlinedCallArgs5347_account5349, <inlinedCallArgs5347_account5349>, string)
assocAST: (inlinedCallArgs5347_id5348, <DEBIT_id5229>, string) => (account-guard_id5232, <account-guard_id5232>, string)
assocAST: (inlinedCallArgs5347_id5348, <DEBIT_id5229>, string) => (account-guard_id5232, <DEBIT_id5229>, string)
assocAST: (inlinedCallArgs5347_account5349, <DEBIT_sender5230>, string) => (account-guard_account5233, <account-guard_account5233>, string)
assocAST: (inlinedCallArgs5347_account5349, <DEBIT_sender5230>, string) => (account-guard_account5233, <DEBIT_sender5230>, string)
assocTy: (<enforce-guard5231>, <enforce-guard5231>) <=> <DEBIT5250_e>
assocTy: (<enforce-guard5231>, <enforce-guard5231>) <= <DEBIT5250_e>
assocTy: tracking/updating type variable <enforce-guard5231> <= <DEBIT5250_e>
trackAST: (inlinedCallArgs5350, <inlinedCallArgs5350>)
assocTy: (<inlinedCallArgs5350>, <inlinedCallArgs5350>) <=> <DEBIT5250_e>
assocTy: (<inlinedCallArgs5350>, <inlinedCallArgs5350>) <= <DEBIT5250_e>
assocTy: tracking/updating type variable <inlinedCallArgs5350> <= <DEBIT5250_e>
trackAST: (inlinedCallArgs5350_id5351, string)
assocAST: (TRANSFER_id5203, <TRANSFER_id5203>, string) => (inlinedCallArgs5350_id5351, <inlinedCallArgs5350_id5351>, string)
trackAST: (inlinedCallArgs5350_sender5352, string)
assocAST: (TRANSFER_sender5204, <TRANSFER_sender5204>, string) => (inlinedCallArgs5350_sender5352, <inlinedCallArgs5350_sender5352>, string)
assocAST: (inlinedCallArgs5350_id5351, <TRANSFER_id5203>, string) => (DEBIT_id5229, <DEBIT_id5229>, string)
assocAST: (inlinedCallArgs5350_id5351, <TRANSFER_id5203>, string) => (DEBIT_id5229, <TRANSFER_id5203>, string)
assocAST: (inlinedCallArgs5350_sender5352, <TRANSFER_sender5204>, string) => (DEBIT_sender5230, <DEBIT_sender5230>, string)
assocAST: (inlinedCallArgs5350_sender5352, <TRANSFER_sender5204>, string) => (DEBIT_sender5230, <TRANSFER_sender5204>, string)
assocTy: (<bool5254>, bool) <=> <CREDIT5256_g>
assocTy: bool => <CREDIT5256_g>
trackAST: (inlinedCallArgs5353, <inlinedCallArgs5353>)
assocTy: (<inlinedCallArgs5353>, <inlinedCallArgs5353>) <=> <CREDIT5256_g>
assocTy: (<inlinedCallArgs5353>, <inlinedCallArgs5353>) <= <CREDIT5256_g>
assocTy: tracking/updating type variable <inlinedCallArgs5353> <= <CREDIT5256_g>
trackAST: (inlinedCallArgs5353_id5354, string)
assocAST: (TRANSFER_id5203, <TRANSFER_id5203>, string) => (inlinedCallArgs5353_id5354, <inlinedCallArgs5353_id5354>, string)
trackAST: (inlinedCallArgs5353_receiver5355, string)
assocAST: (TRANSFER_receiver5205, <TRANSFER_receiver5205>, string) => (inlinedCallArgs5353_receiver5355, <inlinedCallArgs5353_receiver5355>, string)
assocTy: (<sale-account5263>, string) <=> string
assocTy: (<sale-account5263>, string) <= string
trackAST: (inlinedCallArgs5356, <inlinedCallArgs5356>)
assocTy: (<inlinedCallArgs5356>, <inlinedCallArgs5356>) <=> string
assocTy: (<inlinedCallArgs5356>, <inlinedCallArgs5356>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5356> <= string
assocTy: (<TRANSFER5257>, bool) <=> bool
assocTy: (<TRANSFER5257>, bool) <= bool
trackAST: (inlinedCallArgs5357, <inlinedCallArgs5357>)
assocTy: (<inlinedCallArgs5357>, <inlinedCallArgs5357>) <=> bool
assocTy: (<inlinedCallArgs5357>, <inlinedCallArgs5357>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5357> <= bool
trackAST: (inlinedCallArgs5357_id5358, string)
assocAST: (buy_id4942, <buy_id4942>, string) => (inlinedCallArgs5357_id5358, <inlinedCallArgs5357_id5358>, string)
trackAST: (inlinedCallArgs5357_sender5359, string)
assocAST: (sale-account5264, <sale-account5263>, string) => (inlinedCallArgs5357_sender5359, <inlinedCallArgs5357_sender5359>, string)
trackAST: (inlinedCallArgs5357_receiver5360, string)
assocAST: (buy_buyer4944, <buy_buyer4944>, string) => (inlinedCallArgs5357_receiver5360, <inlinedCallArgs5357_receiver5360>, string)
trackAST: (inlinedCallArgs5357_amount5361, decimal)
assocAST: (buy_amount4946, <buy_amount4946>, decimal) => (inlinedCallArgs5357_amount5361, <inlinedCallArgs5357_amount5361>, decimal)
assocAST: (inlinedCallArgs5357_id5358, <buy_id4942>, string) => (TRANSFER_id5203, <TRANSFER_id5203>, string)
assocAST: (inlinedCallArgs5357_id5358, <buy_id4942>, string) => (TRANSFER_id5203, <buy_id4942>, string)
assocAST: (inlinedCallArgs5357_amount5361, <buy_amount4946>, decimal) => (TRANSFER_amount5206, <TRANSFER_amount5206>, decimal)
assocAST: (inlinedCallArgs5357_amount5361, <buy_amount4946>, decimal) => (TRANSFER_amount5206, <buy_amount4946>, decimal)
assocAST: (inlinedCallArgs5357_amount5361, <buy_amount4946>, decimal) => (TRANSFER_amount5206, <buy_amount4946>, decimal)
assocAST: (inlinedCallArgs5357_id5358, <buy_id4942>, string) => (TRANSFER_id5203, <buy_id4942>, string)
assocAST: (inlinedCallArgs5357_id5358, <buy_id4942>, string) => (TRANSFER_id5203, <buy_id4942>, string)
assocAST: (inlinedCallArgs5357_sender5359, <sale-account5263>, string) => (TRANSFER_sender5204, <TRANSFER_sender5204>, string)
assocAST: (inlinedCallArgs5357_sender5359, <sale-account5263>, string) => (TRANSFER_sender5204, <sale-account5263>, string)
assocAST: (inlinedCallArgs5357_id5358, <buy_id4942>, string) => (TRANSFER_id5203, <buy_id4942>, string)
assocAST: (inlinedCallArgs5357_id5358, <buy_id4942>, string) => (TRANSFER_id5203, <buy_id4942>, string)
assocAST: (inlinedCallArgs5357_receiver5360, <buy_buyer4944>, string) => (TRANSFER_receiver5205, <TRANSFER_receiver5205>, string)
assocAST: (inlinedCallArgs5357_receiver5360, <buy_buyer4944>, string) => (TRANSFER_receiver5205, <buy_buyer4944>, string)
assocTy: (<bool5270>, bool) <=> bool
assocTy: (<bool5270>, bool) <= bool
trackAST: (inlinedCallArgs5362, <inlinedCallArgs5362>)
assocTy: (<inlinedCallArgs5362>, <inlinedCallArgs5362>) <=> bool
assocTy: (<inlinedCallArgs5362>, <inlinedCallArgs5362>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5362> <= bool
trackAST: (inlinedCallArgs5362_token-id5363, string)
assocAST: (buy_id4942, <buy_id4942>, string) => (inlinedCallArgs5362_token-id5363, <inlinedCallArgs5362_token-id5363>, string)
trackAST: (inlinedCallArgs5362_amount5364, decimal)
assocAST: (buy_amount4946, <buy_amount4946>, decimal) => (inlinedCallArgs5362_amount5364, <inlinedCallArgs5362_amount5364>, decimal)
trackAST: (inlinedCallArgs5362_sender5365, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet4985_sender4986, <debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs5362_sender5365, <inlinedCallArgs5362_sender5365>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs5362_receiver5366, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet4985_receiver5068, <credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs5362_receiver5366, <inlinedCallArgs5362_receiver5366>, object:{kip.poly-fungible-v3.receiver-balance-change})
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool4950>, bool) <=> bool
assocTy: (<bool4950>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability4948>, <require-capability4948>) <=> bool
assocTy: (<require-capability4948>, <require-capability4948>) <= bool
assocTy: tracking/updating type variable <require-capability4948> <= bool
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs5274_sale-id5275>, string) <=> string
assocTy: (<inlinedCallArgs5274_sale-id5275>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<inlinedCallArgs5274_sale-id5275>, string) <=> string
assocTy: (<inlinedCallArgs5274_sale-id5275>, string) <= string
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind4954_row}> binding:binding:<{bind4954_row}> -> <bind4954_a>
assocTy: (<get-policy-info4970>, object:{marmalade.ledger.policy-info}) <=> object:<{bind4954_row}>
assocTy: (<{bind4954_row}>, <{bind4954_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind4954_row}>, <{bind4954_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind4954_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind4954_row}>)
assocTy: (<bind4954>, <bind4954>) <=> <bind4954_a>
assocTy: (<bind4954>, <bind4954>) <= <bind4954_a>
assocTy: tracking/updating type variable <bind4954> <= <bind4954_a>
assocTy: (<enforce-buy4982>, bool) <=> <bind4954_a>
assocTy: bool => <bind4954_a>
assocTy: (<BindSchema4972schema4984>, *) <=> binding:<{bind4954_row}>
assocTy: (<BindSchema4972schema4984>, *) <= binding:<{bind4954_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4956_row}> key:string bindings:binding:<{with-read4956_row}> -> <with-read4956_a>
assocTy: (<marmalade.ledger.tokens4957>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read4956_row}>
assocTy: (<{with-read4956_row}>, <{with-read4956_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read4956_row}>, <{with-read4956_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read4956_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read4956_row}>)
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
assocTy: (<get-policy-info4970>, object:{marmalade.ledger.policy-info}) <=> <with-read4956_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read4956_a>
assocTy: (<object4967>, object:*) <=> <with-read4956_a>
assocTy: (<BindSchema4958schema4969>, *) <=> binding:<{with-read4956_row}>
assocTy: (<BindSchema4958schema4969>, *) <= binding:<{with-read4956_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5063>, string) <=> string
assocTy: (<string5063>, string) <= string
assocTy: (<list5064>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account5066>, string) <=> string
assocTy: (<sale-account5066>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id5065>, <pact-id5065>) <=> string
assocTy: (<pact-id5065>, <pact-id5065>) <= string
assocTy: tracking/updating type variable <pact-id5065> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard4993>, <DEBIT5012_e>) <=> bool
assocTy: (<enforce-guard4993>, <DEBIT5012_e>) <= bool
assocTy: tracking/updating type variable <DEBIT5012_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability4990>, <require-capability4990>) <=> bool
assocTy: (<require-capability4990>, <require-capability4990>) <= bool
assocTy: tracking/updating type variable <require-capability4990> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read4996_row}> key:string bindings:binding:<{with-read4996_row}> -> <with-read4996_a>
assocTy: (<marmalade.ledger.ledger4997>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read4996_row}>
assocTy: (<{with-read4996_row}>, <{with-read4996_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read4996_row}>, <{with-read4996_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read4996_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read4996_row}>)
assocTy: (<key5003>, string) <=> string
assocTy: (<key5003>, string) <= string
assocTy: (<account-guard5009>, guard) <=> <with-read4996_a>
assocTy: guard => <with-read4996_a>
assocTy: (<BindSchema5005_guard5006_f>, <BindSchema5005_guard5006_f>) <=> <with-read4996_a>
assocTy: (<BindSchema5005_guard5006_f>, <BindSchema5005_guard5006_f>) <= <with-read4996_a>
assocTy: tracking/updating type variable <BindSchema5005_guard5006_f> <= <with-read4996_a>
assocTy: (<BindSchema5005schema5008>, *) <=> binding:<{with-read4996_row}>
assocTy: (<BindSchema5005schema5008>, *) <= binding:<{with-read4996_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5001>, string) <=> string
assocTy: (<string5001>, string) <= string
assocTy: (<list5002>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5003>, string) <=> string
assocTy: (<key5003>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5025>, <=5025>) <=> bool
assocTy: (<=5025>, <=5025>) <= bool
assocTy: tracking/updating type variable <=5025> <= bool
assocTy: (<string5027>, string) <=> string
assocTy: (<string5027>, string) <= string
assocTy: (<enforce-unit5028>, bool) <=> bool
assocTy: (<enforce-unit5028>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor5026>, <floor5026>) <=> <=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor5026>, <floor5026>) <= <=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor5026> <= <=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<buy_amount4946>, decimal) <=> <=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=5025_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5025>, bool) <=> bool
assocTy: (<=5025>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5030_row}> key:string bindings:binding:<{with-read5030_row}> -> <with-read5030_a>
assocTy: (<marmalade.ledger.ledger5031>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5030_row}>
assocTy: (<{with-read5030_row}>, <{with-read5030_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5030_row}>, <{with-read5030_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read5030_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5030_row}>)
assocTy: (<key5037>, string) <=> string
assocTy: (<key5037>, string) <= string
assocTy: (<debit5060>, object:{kip.poly-fungible-v3.sender-balance-change}) <=> <with-read5030_a>
assocTy: object:{kip.poly-fungible-v3.sender-balance-change} => <with-read5030_a>
assocTy: (<object5058>, object:*) <=> <with-read5030_a>
assocTy: (<BindSchema5039schema5059>, *) <=> binding:<{with-read5030_row}>
assocTy: (<BindSchema5039schema5059>, *) <= binding:<{with-read5030_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<=5043>, <<=5043>) <=> bool
assocTy: (<<=5043>, <<=5043>) <= bool
assocTy: tracking/updating type variable <<=5043> <= bool
assocTy: (<string5044>, string) <=> string
assocTy: (<string5044>, string) <= string
assocTy: (<enforce5042>, <enforce5042>) <=> bool
assocTy: (<enforce5042>, <enforce5042>) <= bool
assocTy: tracking/updating type variable <enforce5042> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<=5043_a[integer,decimal,string,time]> y:<<=5043_a[integer,decimal,string,time]> -> bool
assocTy: (<buy_amount4946>, decimal) <=> <<=5043_a[integer,decimal,string,time]>
assocTy: decimal => <<=5043_a[integer,decimal,string,time]>
assocTy: (<BindSchema5039_old-bal5040_aa>, <BindSchema5039_old-bal5040_aa>) <=> <<=5043_a[integer,decimal,string,time]>
assocTy: (<BindSchema5039_old-bal5040_aa>, <BindSchema5039_old-bal5040_aa>) <= <<=5043_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <BindSchema5039_old-bal5040_aa> <= <<=5043_a[integer,decimal,string,time]>
assocTy: (<<=5043>, bool) <=> bool
assocTy: (<<=5043>, bool) <= bool
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update5048_row}> key:string object:object:~<{update5048_row}> -> string
assocTy: (<marmalade.ledger.ledger5049>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update5048_row}>
assocTy: (<{update5048_row}>, <{update5048_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update5048_row}>, <{update5048_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update5048_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update5048_row}>)
assocTy: (<key5055>, string) <=> string
assocTy: (<key5055>, string) <= string
assocTy: (<object5057>, object:*) <=> object:~<{update5048_row}>
assocTy: (<object5057>, object:*) <= object:~<{update5048_row}>
assocTy: (<update5048>, <update5048>) <=> string
assocTy: (<update5048>, <update5048>) <= string
assocTy: tracking/updating type variable <update5048> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5053>, string) <=> string
assocTy: (<string5053>, string) <= string
assocTy: (<list5054>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5055>, string) <=> string
assocTy: (<key5055>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5035>, string) <=> string
assocTy: (<string5035>, string) <= string
assocTy: (<list5036>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5037>, string) <=> string
assocTy: (<key5037>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5063>, string) <=> string
assocTy: (<string5063>, string) <= string
assocTy: (<list5064>, [*]) <=> [*]
assocTy: (<list5064>, [*]) <= [*]
assocTy: (<sale-account5066>, string) <=> string
assocTy: (<sale-account5066>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id5065>, string) <=> string
assocTy: (<pact-id5065>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>5075>, <>5075>) <=> bool
assocTy: (<>5075>, <>5075>) <= bool
assocTy: tracking/updating type variable <>5075> <= bool
assocTy: (<string5078>, string) <=> string
assocTy: (<string5078>, string) <= string
assocTy: (<enforce5074>, <enforce-valid-account5080_c>) <=> bool
assocTy: (<enforce5074>, <enforce-valid-account5080_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account5080_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>5075_a[integer,decimal,string,time]> y:<>5075_a[integer,decimal,string,time]> -> bool
assocTy: (<length5076>, <length5076>) <=> <>5075_a[integer,decimal,string,time]>
assocTy: (<length5076>, <length5076>) <= <>5075_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length5076> <= <>5075_a[integer,decimal,string,time]>
assocTy: (<integer5077>, integer) <=> <>5075_a[integer,decimal,string,time]>
assocTy: integer => <>5075_a[integer,decimal,string,time]>
assocTy: (<>5075>, bool) <=> bool
assocTy: (<>5075>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length5076_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<buy_buyer4944>, string) <=> <length5076_a[[<l>],string,object:<{o}>]>
assocTy: string => <length5076_a[[<l>],string,object:<{o}>]>
assocTy: (<length5076>, integer) <=> integer
assocTy: (<length5076>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5093>, <=5093>) <=> bool
assocTy: (<=5093>, <=5093>) <= bool
assocTy: tracking/updating type variable <=5093> <= bool
assocTy: (<string5095>, string) <=> string
assocTy: (<string5095>, string) <= string
assocTy: (<enforce-unit5096>, bool) <=> bool
assocTy: (<enforce-unit5096>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor5094>, <floor5094>) <=> <=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor5094>, <floor5094>) <= <=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor5094> <= <=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<buy_amount4946>, decimal) <=> <=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=5093_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5093>, bool) <=> bool
assocTy: (<=5093>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5101>, bool) <=> bool
assocTy: (<bool5101>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability5098>, <require-capability5098>) <=> bool
assocTy: (<require-capability5098>, <require-capability5098>) <= bool
assocTy: tracking/updating type variable <require-capability5098> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read5104_row}> key:string defaults:object:~<{with-default-read5104_row}> bindings:binding:~<{with-default-read5104_row}> -> <with-default-read5104_a>
assocTy: (<marmalade.ledger.ledger5105>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read5104_row}>
assocTy: (<{with-default-read5104_row}>, <{with-default-read5104_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read5104_row}>, <{with-default-read5104_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read5104_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read5104_row}>)
assocTy: (<key5111>, string) <=> string
assocTy: (<key5111>, string) <= string
assocTy: (<object5113>, object:*) <=> object:~<{with-default-read5104_row}>
assocTy: (<object5113>, object:*) <= object:~<{with-default-read5104_row}>
assocTy: (<credit5200>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read5104_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read5104_a>
assocTy: (<object5196>, object:*) <=> <with-default-read5104_a>
assocTy: (<BindSchema5115schema5199>, *) <=> binding:~<{with-default-read5104_row}>
assocTy: (<BindSchema5115schema5199>, *) <= binding:~<{with-default-read5104_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5121>, <=5121>) <=> bool
assocTy: (<=5121>, <=5121>) <= bool
assocTy: tracking/updating type variable <=5121> <= bool
assocTy: (<string5122>, string) <=> string
assocTy: (<string5122>, string) <= string
assocTy: (<enforce5120>, <enforce5120>) <=> bool
assocTy: (<enforce5120>, <enforce5120>) <= bool
assocTy: tracking/updating type variable <enforce5120> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5121_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5121_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs5327_guard5330>, guard) <=> <=5121_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=5121_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<buy_buyer-guard4945>, guard) <=> <=5121_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5121>, bool) <=> bool
assocTy: (<=5121>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5125_a> else:<if5125_a> -> <if5125_a>
assocTy: (<=5126>, <=5126>) <=> bool
assocTy: (<=5126>, <=5126>) <= bool
assocTy: tracking/updating type variable <=5126> <= bool
assocTy: (<enforce-reserved5170>, bool) <=> <if5125_a>
assocTy: bool => <if5125_a>
assocTy: (<bool5172>, bool) <=> <if5125_a>
assocTy: (<if5125>, <if5125>) <=> <if5125_a>
assocTy: (<if5125>, <if5125>) <= <if5125_a>
assocTy: tracking/updating type variable <if5125> <= <if5125_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema5115_old-bal5116_ac>, <BindSchema5115_old-bal5116_ac>) <=> <=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema5115_old-bal5116_ac>, <BindSchema5115_old-bal5116_ac>) <= <=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema5115_old-bal5116_ac> <= <=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal5127>, decimal) <=> <=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=5126_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5126>, bool) <=> bool
assocTy: (<=5126>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5137_a> else:<if5137_a> -> <if5137_a>
assocTy: (<=5138>, <=5138>) <=> bool
assocTy: (<=5138>, <=5138>) <= bool
assocTy: tracking/updating type variable <=5138> <= bool
assocTy: (<take5142>, <take5142>) <=> <if5137_a>
assocTy: (<take5142>, <take5142>) <= <if5137_a>
assocTy: tracking/updating type variable <take5142> <= <if5137_a>
assocTy: (<string5144>, string) <=> <if5137_a>
assocTy: string => <if5137_a>
assocTy: (<check-reserved5145>, string) <=> <if5137_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string5139>, string) <=> <=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take5140>, <take5140>) <=> <=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take5140>, <take5140>) <= <=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take5140> <= <=5138_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5138>, bool) <=> bool
assocTy: (<=5138>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5147_a> else:<if5147_a> -> <if5147_a>
assocTy: (<=5148>, <=5148>) <=> bool
assocTy: (<=5148>, <=5148>) <= bool
assocTy: tracking/updating type variable <=5148> <= bool
assocTy: (<bool5150>, bool) <=> <if5147_a>
assocTy: bool => <if5147_a>
assocTy: (<if5151>, <if5151>) <=> <if5147_a>
assocTy: (<if5151>, <if5151>) <= <if5147_a>
assocTy: tracking/updating type variable <if5151> <= <if5147_a>
assocTy: (<enforce-reserved5170>, bool) <=> <if5147_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5148_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5148_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string5149>, string) <=> <=5148_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=5148_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved5145>, string) <=> <=5148_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5148>, bool) <=> bool
assocTy: (<=5148>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5151_a> else:<if5151_a> -> <if5151_a>
assocTy: (<=5152>, <=5152>) <=> bool
assocTy: (<=5152>, <=5152>) <= bool
assocTy: tracking/updating type variable <=5152> <= bool
assocTy: (<enforce5154>, <enforce5154>) <=> <if5151_a>
assocTy: (<enforce5154>, <enforce5154>) <= <if5151_a>
assocTy: tracking/updating type variable <enforce5154> <= <if5151_a>
assocTy: (<enforce5165>, <enforce5165>) <=> <if5151_a>
assocTy: (<enforce5165>, <enforce5165>) <= <if5151_a>
assocTy: tracking/updating type variable <enforce5165> <= <if5151_a>
assocTy: (<if5151>, bool) <=> <if5151_a>
assocTy: bool => <if5151_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5152_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5152_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string5153>, string) <=> <=5152_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=5152_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved5145>, string) <=> <=5152_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5152>, bool) <=> bool
assocTy: (<=5152>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5155>, <=5155>) <=> bool
assocTy: (<=5155>, <=5155>) <= bool
assocTy: tracking/updating type variable <=5155> <= bool
assocTy: (<string5164>, string) <=> string
assocTy: (<string5164>, string) <= string
assocTy: (<enforce5154>, bool) <=> bool
assocTy: (<enforce5154>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format5156>, <format5156>) <=> <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format5156>, <format5156>) <= <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format5156> <= <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format5159>, <format5159>) <=> <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format5159>, <format5159>) <= <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format5159> <= <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5155>, bool) <=> bool
assocTy: (<=5155>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5157>, string) <=> string
assocTy: (<string5157>, string) <= string
assocTy: (<list5158>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format5156>, <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format5156>, <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=5155_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5160>, string) <=> string
assocTy: (<string5160>, string) <= string
assocTy: (<list5161>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format5159>, string) <=> string
assocTy: (<format5159>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool5166>, bool) <=> bool
assocTy: (<bool5166>, bool) <= bool
assocTy: (<format5167>, <format5167>) <=> string
assocTy: (<format5167>, <format5167>) <= string
assocTy: tracking/updating type variable <format5167> <= string
assocTy: (<enforce5165>, bool) <=> bool
assocTy: (<enforce5165>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5168>, string) <=> string
assocTy: (<string5168>, string) <= string
assocTy: (<list5169>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format5167>, string) <=> string
assocTy: (<format5167>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5175_a> else:<if5175_a> -> <if5175_a>
assocTy: (<if5125>, bool) <=> bool
assocTy: (<if5125>, bool) <= bool
assocTy: (<buy_amount4946>, decimal) <=> <if5175_a>
assocTy: decimal => <if5175_a>
assocTy: (<+5176>, <+5176>) <=> <if5175_a>
assocTy: (<+5176>, <+5176>) <= <if5175_a>
assocTy: tracking/updating type variable <+5176> <= <if5175_a>
assocTy: (<if5175>, <if5175>) <=> <if5175_a>
assocTy: (<if5175>, <if5175>) <= <if5175_a>
assocTy: tracking/updating type variable <if5175> <= <if5175_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write5177_row}> key:string object:object:<{write5177_row}> -> string
assocTy: (<marmalade.ledger.ledger5178>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write5177_row}>
assocTy: (<{write5177_row}>, <{write5177_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write5177_row}>, <{write5177_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write5177_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write5177_row}>)
assocTy: (<key5184>, string) <=> string
assocTy: (<key5184>, string) <= string
assocTy: (<object5186>, object:*) <=> object:<{write5177_row}>
assocTy: (<object5186>, object:*) <= object:<{write5177_row}>
assocTy: (<write5177>, <write5177>) <=> string
assocTy: (<write5177>, <write5177>) <= string
assocTy: tracking/updating type variable <write5177> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5182>, string) <=> string
assocTy: (<string5182>, string) <= string
assocTy: (<list5183>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5184>, string) <=> string
assocTy: (<key5184>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5187_a> else:<if5187_a> -> <if5187_a>
assocTy: (<if5125>, bool) <=> bool
assocTy: (<if5125>, bool) <= bool
assocTy: (<emit-event5188>, <emit-event5188>) <=> <if5187_a>
assocTy: (<emit-event5188>, <emit-event5188>) <= <if5187_a>
assocTy: tracking/updating type variable <emit-event5188> <= <if5187_a>
assocTy: (<bool5195>, bool) <=> <if5187_a>
assocTy: bool => <if5187_a>
assocTy: (<if5187>, <if5187>) <=> <if5187_a>
assocTy: (<if5187>, <if5187>) <= <if5187_a>
assocTy: tracking/updating type variable <if5187> <= <if5187_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5192>, bool) <=> bool
assocTy: (<bool5192>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event5188>, bool) <=> bool
assocTy: (<emit-event5188>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5197_a> else:<if5197_a> -> <if5197_a>
assocTy: (<if5125>, bool) <=> bool
assocTy: (<if5125>, bool) <= bool
assocTy: (<decimal5198>, decimal) <=> <if5197_a>
assocTy: decimal => <if5197_a>
assocTy: (<BindSchema5115_old-bal5116_ac>, decimal) <=> <if5197_a>
assocTy: (<if5197>, <if5197>) <=> <if5197_a>
assocTy: (<if5197>, <if5197>) <= <if5197_a>
assocTy: tracking/updating type variable <if5197> <= <if5197_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5109>, string) <=> string
assocTy: (<string5109>, string) <= string
assocTy: (<list5110>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5111>, string) <=> string
assocTy: (<key5111>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<TRANSFER5257>, bool) <=> bool
assocTy: (<TRANSFER5257>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event5202>, <emit-event5202>) <=> bool
assocTy: (<emit-event5202>, <emit-event5202>) <= bool
assocTy: tracking/updating type variable <emit-event5202> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5260>, string) <=> string
assocTy: (<string5260>, string) <= string
assocTy: (<list5261>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account5263>, string) <=> string
assocTy: (<sale-account5263>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id5262>, <pact-id5262>) <=> string
assocTy: (<pact-id5262>, <pact-id5262>) <= string
assocTy: tracking/updating type variable <pact-id5262> <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5219>, <=5219>) <=> bool
assocTy: (<=5219>, <=5219>) <= bool
assocTy: tracking/updating type variable <=5219> <= bool
assocTy: (<string5221>, string) <=> string
assocTy: (<string5221>, string) <= string
assocTy: (<enforce-unit5222>, bool) <=> bool
assocTy: (<enforce-unit5222>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor5220>, <floor5220>) <=> <=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor5220>, <floor5220>) <= <=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor5220> <= <=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<buy_amount4946>, decimal) <=> <=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=5219_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5219>, bool) <=> bool
assocTy: (<=5219>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>5225>, <>5225>) <=> bool
assocTy: (<>5225>, <>5225>) <= bool
assocTy: tracking/updating type variable <>5225> <= bool
assocTy: (<string5227>, string) <=> string
assocTy: (<string5227>, string) <= string
assocTy: (<enforce5224>, <enforce5224>) <=> bool
assocTy: (<enforce5224>, <enforce5224>) <= bool
assocTy: tracking/updating type variable <enforce5224> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>5225_a[integer,decimal,string,time]> y:<>5225_a[integer,decimal,string,time]> -> bool
assocTy: (<buy_amount4946>, decimal) <=> <>5225_a[integer,decimal,string,time]>
assocTy: decimal => <>5225_a[integer,decimal,string,time]>
assocTy: (<decimal5226>, decimal) <=> <>5225_a[integer,decimal,string,time]>
assocTy: (<>5225>, bool) <=> bool
assocTy: (<>5225>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard5231>, <DEBIT5250_e>) <=> bool
assocTy: (<enforce-guard5231>, <DEBIT5250_e>) <= bool
assocTy: tracking/updating type variable <DEBIT5250_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5228>, <compose-capability5228>) <=> bool
assocTy: (<compose-capability5228>, <compose-capability5228>) <= bool
assocTy: tracking/updating type variable <compose-capability5228> <= bool
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5234_row}> key:string bindings:binding:<{with-read5234_row}> -> <with-read5234_a>
assocTy: (<marmalade.ledger.ledger5235>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5234_row}>
assocTy: (<{with-read5234_row}>, <{with-read5234_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5234_row}>, <{with-read5234_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read5234_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5234_row}>)
assocTy: (<key5241>, string) <=> string
assocTy: (<key5241>, string) <= string
assocTy: (<account-guard5247>, guard) <=> <with-read5234_a>
assocTy: guard => <with-read5234_a>
assocTy: (<BindSchema5243_guard5244_f>, <BindSchema5243_guard5244_f>) <=> <with-read5234_a>
assocTy: (<BindSchema5243_guard5244_f>, <BindSchema5243_guard5244_f>) <= <with-read5234_a>
assocTy: tracking/updating type variable <BindSchema5243_guard5244_f> <= <with-read5234_a>
assocTy: (<BindSchema5243schema5246>, *) <=> binding:<{with-read5234_row}>
assocTy: (<BindSchema5243schema5246>, *) <= binding:<{with-read5234_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5239>, string) <=> string
assocTy: (<string5239>, string) <= string
assocTy: (<list5240>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5241>, string) <=> string
assocTy: (<key5241>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5254>, bool) <=> bool
assocTy: (<bool5254>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<TRANSFER5257>, bool) <=> bool
assocTy: (<TRANSFER5257>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5260>, string) <=> string
assocTy: (<string5260>, string) <= string
assocTy: (<list5261>, [*]) <=> [*]
assocTy: (<list5261>, [*]) <= [*]
assocTy: (<sale-account5263>, string) <=> string
assocTy: (<sale-account5263>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id5262>, string) <=> string
assocTy: (<pact-id5262>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5270>, bool) <=> bool
assocTy: (<bool5270>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<buy5273>, bool) <=> bool
assocTy: (<buy5273>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema4972schema4984::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema4972_policy4973>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema4972_policy4973>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs5276_token5277>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs5276_token5277>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema4958schema4969::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema4958_manifest4965_m>, <BindSchema4958_manifest4965_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema4958_manifest4965_m>, <BindSchema4958_manifest4965_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema4958_manifest4965_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema4958_policy4959>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema4958_policy4959>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema4958_precision4963_l>, <BindSchema4958_precision4963_l>) <=> integer
assocTy: (<BindSchema4958_precision4963_l>, <BindSchema4958_precision4963_l>) <= integer
assocTy: tracking/updating type variable <BindSchema4958_precision4963_l> <= integer
assocTy: (<BindSchema4958_supply4961_k>, <BindSchema4958_supply4961_k>) <=> decimal
assocTy: (<BindSchema4958_supply4961_k>, <BindSchema4958_supply4961_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema4958_supply4961_k> <= decimal
Skipping TC on specified heterogenous list for node: list5064::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5005schema5008::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5005_guard5006_f>, guard) <=> guard
assocTy: (<BindSchema5005_guard5006_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5002::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5039schema5059::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5039_old-bal5040_aa>, decimal) <=> decimal
assocTy: (<BindSchema5039_old-bal5040_aa>, decimal) <= decimal
Skipping TC on specified heterogenous list for node: list5054::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object5057::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<-5047>, <-5047>) <=> decimal
assocTy: (<-5047>, <-5047>) <= decimal
assocTy: tracking/updating type variable <-5047> <= decimal
Specializing schema ty for sublist: fromList ["balance"]
assocTy: (<object5057>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance]{kip.poly-fungible-v3.account-details}
assocTy: (<object5057>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list5036::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5064::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5115schema5199::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5115_old-bal5116_ac>, decimal) <=> decimal
assocTy: (<BindSchema5115_old-bal5116_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs5327_guard5330>, guard) <=> guard
assocTy: (<inlinedCallArgs5327_guard5330>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5158::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5161::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5169::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5183::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object5186::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<buy_buyer4944>, string) <=> string
assocTy: (<buy_buyer4944>, string) <= string
assocTy: (<if5175>, decimal) <=> decimal
assocTy: (<if5175>, decimal) <= decimal
assocTy: (<inlinedCallArgs5327_guard5330>, guard) <=> guard
assocTy: (<inlinedCallArgs5327_guard5330>, guard) <= guard
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
Skipping TC on specified heterogenous list for node: list5110::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object5113::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal5114>, decimal) <=> decimal
assocTy: (<decimal5114>, decimal) <= decimal
assocTy: (<buy_buyer-guard4945>, guard) <=> guard
assocTy: (<buy_buyer-guard4945>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object5113>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object5113>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list5261::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5243schema5246::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5243_guard5244_f>, guard) <=> guard
assocTy: (<BindSchema5243_guard5244_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5240::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5261::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard5231::<enforce-guard5231>, tyVar=<enforce-guard5231>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard5248::<account-guard5248>, tyVar=<account-guard5247>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard5231, <enforce-guard5231>, bool)]), (guard, [(account-guard5248, <account-guard5247>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard5231, <enforce-guard5231>)])), (guard, (guard, [(account-guard5248, <account-guard5247>)]))]
Adjusting type for solution: ((enforce-guard5231, <enforce-guard5231>), bool, bool)
assocTy: (<enforce-guard5231>, bool) <=> bool
assocTy: (<enforce-guard5231>, bool) <= bool
assocTy: (<enforce-guard5231>, bool) <=> bool
assocTy: (<enforce-guard5231>, bool) <= bool
Adjusting type for solution: ((account-guard5248, <account-guard5247>), guard, guard)
assocTy: (<account-guard5247>, guard) <=> guard
assocTy: (<account-guard5247>, guard) <= guard
assocTy: (<account-guard5247>, guard) <=> guard
assocTy: (<account-guard5247>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor5220::<floor5220>, tyVar=<floor5220>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs5341_amount5343::decimal, tyVar=<buy_amount4946>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet5209_p5210::<BindLet5209_p5210_ai>, tyVar=<precision5216>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet5209_p5210, <precision5216>, integer)]), (decimal, [(floor5220, <floor5220>, decimal), (inlinedCallArgs5341_amount5343, <buy_amount4946>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet5209_p5210, <precision5216>)])), (decimal, (decimal, [(floor5220, <floor5220>), (inlinedCallArgs5341_amount5343, <buy_amount4946>)]))]
Adjusting type for solution: ((BindLet5209_p5210, <precision5216>), integer, integer)
assocTy: (<precision5216>, integer) <=> integer
assocTy: (<precision5216>, integer) <= integer
assocTy: (<precision5216>, integer) <=> integer
assocTy: (<precision5216>, integer) <= integer
Adjusting type for solution: ((floor5220, <floor5220>), decimal, decimal)
assocTy: (<floor5220>, decimal) <=> decimal
assocTy: (<floor5220>, decimal) <= decimal
assocTy: (<floor5220>, decimal) <=> decimal
assocTy: (<floor5220>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5341_amount5343, <buy_amount4946>), decimal, decimal)
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read5214_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read5214_row}>, roleTy=<read5214>
tryFunType: cand: table:table:<{read5214_row}> key:string -> object:<{read5214_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read5214_row}>, AST=read5214::<read5214>, tyVar=<read5214>, resolvedTy=<read5214>}), (ArgVar 0, RoleTys { candArgTy=table:<{read5214_row}>, AST=marmalade.ledger.tokens5215::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens5215>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs5339_id5340::string, tyVar=<buy_id4942>, resolvedTy=string})]
tryFunType: trying table:table:<{read5214_row}> key:string -> object:<{read5214_row}> with [(string, [(inlinedCallArgs5339_id5340, <buy_id4942>, string)]), (table:<{read5214_row}>, [(marmalade.ledger.tokens5215, <marmalade.ledger.tokens5215>, table:{marmalade.ledger.token-schema})]), (object:<{read5214_row}>, [(read5214, <read5214>, <read5214>)])]
Solved overload with table:table:<{read5214_row}> key:string -> object:<{read5214_row}>: [(string, (string, [(inlinedCallArgs5339_id5340, <buy_id4942>)])), (table:<{read5214_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens5215, <marmalade.ledger.tokens5215>)])), (object:<{read5214_row}>, (object:<{read5214_row}>, [(read5214, <read5214>)]))]
Adjusting type for solution: ((inlinedCallArgs5339_id5340, <buy_id4942>), string, string)
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens5215, <marmalade.ledger.tokens5215>), table:<{read5214_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens5215>, table:{marmalade.ledger.token-schema}) <=> table:<{read5214_row}>
assocTy: (<{read5214_row}>, <{read5214_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5214_row}>, <{read5214_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read5214_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read5214_row}>)
assocTy: (<marmalade.ledger.tokens5215>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens5215>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read5214, <read5214>), object:<{read5214_row}>, object:<{read5214_row}>)
assocTy: (<read5214>, <read5214>) <=> object:<{read5214_row}>
assocTy: (<read5214>, <read5214>) <= object:<{read5214_row}>
assocTy: tracking/updating type variable <read5214> <= object:<{read5214_row}>
assocTy: (<read5214>, object:{marmalade.ledger.token-schema}) <=> object:<{read5214_row}>
assocTy: (<{read5214_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5214_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read5214_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at5212_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5212_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at5212_l>] -> <at5212_a>: roles=[(RetVar, RoleTys { candArgTy=<at5212_a>, AST=at5212::<at5212>, tyVar=<precision5216>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at5212_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5212_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at5212_o}> -> <at5212_a>, roles=[(RetVar, RoleTys { candArgTy=<at5212_a>, AST=at5212::<at5212>, tyVar=<precision5216>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string5213::string, tyVar=<string5213>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at5212_o}>, AST=read5214::<read5214>, tyVar=<read5214>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at5212_o}> -> <at5212_a> with [(<at5212_a>, [(at5212, <precision5216>, integer)]), (string, [(string5213, <string5213>, string)]), (object:<{at5212_o}>, [(read5214, <read5214>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at5212_o}> -> <at5212_a>: [(<at5212_a>, (integer, [(at5212, <precision5216>)])), (string, (string, [(string5213, <string5213>)])), (object:<{at5212_o}>, (object:{marmalade.ledger.token-schema}, [(read5214, <read5214>)]))]
Adjusting type for solution: ((at5212, <precision5216>), <at5212_a>, integer)
assocTy: (<precision5216>, integer) <=> <at5212_a>
assocTy: integer => <at5212_a>
assocTy: (<precision5216>, integer) <=> integer
assocTy: (<precision5216>, integer) <= integer
Adjusting type for solution: ((string5213, <string5213>), string, string)
assocTy: (<string5213>, string) <=> string
assocTy: (<string5213>, string) <= string
assocTy: (<string5213>, string) <=> string
assocTy: (<string5213>, string) <= string
Adjusting type for solution: ((read5214, <read5214>), object:<{at5212_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read5214>, object:{marmalade.ledger.token-schema}) <=> object:<{at5212_o}>
assocTy: (<{at5212_o}>, <{at5212_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at5212_o}>, <{at5212_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at5212_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at5212_o}>)
assocTy: (<read5214>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read5214>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<+5176_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+5176_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+5176_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+5176_a[integer,decimal]> y:<+5176_a[integer,decimal]> -> <+5176_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+5176_a[integer,decimal]>, AST=+5176::<+5176>, tyVar=<+5176>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+5176_a[integer,decimal]>, AST=BindSchema5115_old-bal5116::<BindSchema5115_old-bal5116_ac>, tyVar=<BindSchema5115_old-bal5116_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+5176_a[integer,decimal]>, AST=inlinedCallArgs5334_amount5338::decimal, tyVar=<buy_amount4946>, resolvedTy=decimal})]
tryFunType: trying x:<+5176_a[integer,decimal]> y:<+5176_a[integer,decimal]> -> <+5176_a[integer,decimal]> with [(<+5176_a[integer,decimal]>, [(+5176, <+5176>, decimal), (inlinedCallArgs5334_amount5338, <buy_amount4946>, decimal), (BindSchema5115_old-bal5116, <BindSchema5115_old-bal5116_ac>, decimal)])]
Solved overload with x:<+5176_a[integer,decimal]> y:<+5176_a[integer,decimal]> -> <+5176_a[integer,decimal]>: [(<+5176_a[integer,decimal]>, (decimal, [(+5176, <+5176>), (inlinedCallArgs5334_amount5338, <buy_amount4946>), (BindSchema5115_old-bal5116, <BindSchema5115_old-bal5116_ac>)]))]
Adjusting type for solution: ((+5176, <+5176>), <+5176_a[integer,decimal]>, decimal)
assocTy: (<+5176>, decimal) <=> <+5176_a[integer,decimal]>
assocTy: decimal => <+5176_a[integer,decimal]>
assocTy: (<+5176>, decimal) <=> decimal
assocTy: (<+5176>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5334_amount5338, <buy_amount4946>), <+5176_a[integer,decimal]>, decimal)
assocTy: (<buy_amount4946>, decimal) <=> <+5176_a[integer,decimal]>
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
Adjusting type for solution: ((BindSchema5115_old-bal5116, <BindSchema5115_old-bal5116_ac>), <+5176_a[integer,decimal]>, decimal)
assocTy: (<BindSchema5115_old-bal5116_ac>, decimal) <=> <+5176_a[integer,decimal]>
assocTy: (<BindSchema5115_old-bal5116_ac>, decimal) <=> decimal
assocTy: (<BindSchema5115_old-bal5116_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop5162_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop5162_a[[<l>],string]>, roleTy=<drop5162>
tryFunType: cand: count:integer list:<drop5162_a[[<l>],string]> -> <drop5162_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop5162_a[[<l>],string]>, AST=drop5162::<drop5162>, tyVar=<drop5162>, resolvedTy=<drop5162>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5163::integer, tyVar=<integer5163>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop5162_a[[<l>],string]>, AST=inlinedCallArgs5321_account5322::string, tyVar=<buy_buyer4944>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop5162_a[[<l>],string]> -> <drop5162_a[[<l>],string]> with [(<drop5162_a[[<l>],string]>, [(drop5162, <drop5162>, <drop5162>), (inlinedCallArgs5321_account5322, <buy_buyer4944>, string)]), (integer, [(integer5163, <integer5163>, integer)])]
Solved overload with count:integer list:<drop5162_a[[<l>],string]> -> <drop5162_a[[<l>],string]>: [(<drop5162_a[[<l>],string]>, (string, [(drop5162, <drop5162>), (inlinedCallArgs5321_account5322, <buy_buyer4944>)])), (integer, (integer, [(integer5163, <integer5163>)]))]
Adjusting type for solution: ((drop5162, <drop5162>), <drop5162_a[[<l>],string]>, string)
assocTy: (<drop5162>, <drop5162>) <=> <drop5162_a[[<l>],string]>
assocTy: (<drop5162>, <drop5162>) <= <drop5162_a[[<l>],string]>
assocTy: tracking/updating type variable <drop5162> <= <drop5162_a[[<l>],string]>
assocTy: (<drop5162>, <drop5162_a[[<l>],string]>) <=> string
assocTy: (<drop5162>, <drop5162_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop5162_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs5321_account5322, <buy_buyer4944>), <drop5162_a[[<l>],string]>, string)
assocTy: (<buy_buyer4944>, string) <=> <drop5162_a[[<l>],string]>
assocTy: (<buy_buyer4944>, string) <=> string
assocTy: (<buy_buyer4944>, string) <= string
Adjusting type for solution: ((integer5163, <integer5163>), integer, integer)
assocTy: (<integer5163>, integer) <=> integer
assocTy: (<integer5163>, integer) <= integer
assocTy: (<integer5163>, integer) <=> integer
assocTy: (<integer5163>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take5142_a[[<l>],string]>, roleTy=<take5135>
tryFunType: unify role: role=RetVar, candTy=<take5142_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take5142_a[[<l>],string]> -> <take5142_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take5142_a[[<l>],string]>, AST=take5142::<take5142>, tyVar=<take5142>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5143::integer, tyVar=<integer5143>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take5142_a[[<l>],string]>, AST=BindLet5133_pfx5134::<BindLet5133_pfx5134_f>, tyVar=<take5135>, resolvedTy=<take5135>})]
tryFunType: trying count:integer list:<take5142_a[[<l>],string]> -> <take5142_a[[<l>],string]> with [(<take5142_a[[<l>],string]>, [(take5142, <take5142>, string), (BindLet5133_pfx5134, <take5135>, <take5135>)]), (integer, [(integer5143, <integer5143>, integer)])]
Solved overload with count:integer list:<take5142_a[[<l>],string]> -> <take5142_a[[<l>],string]>: [(<take5142_a[[<l>],string]>, (string, [(take5142, <take5142>), (BindLet5133_pfx5134, <take5135>)])), (integer, (integer, [(integer5143, <integer5143>)]))]
Adjusting type for solution: ((take5142, <take5142>), <take5142_a[[<l>],string]>, string)
assocTy: (<take5142>, string) <=> <take5142_a[[<l>],string]>
assocTy: string => <take5142_a[[<l>],string]>
assocTy: (<take5142>, string) <=> string
assocTy: (<take5142>, string) <= string
Adjusting type for solution: ((BindLet5133_pfx5134, <take5135>), <take5142_a[[<l>],string]>, string)
assocTy: (<take5135>, <take5135>) <=> <take5142_a[[<l>],string]>
assocTy: (<take5135>, <take5135>) <= <take5142_a[[<l>],string]>
assocTy: tracking/updating type variable <take5135> <= <take5142_a[[<l>],string]>
assocTy: (<take5135>, string) <=> string
assocTy: (<take5135>, string) <= string
Adjusting type for solution: ((integer5143, <integer5143>), integer, integer)
assocTy: (<integer5143>, integer) <=> integer
assocTy: (<integer5143>, integer) <= integer
assocTy: (<integer5143>, integer) <=> integer
assocTy: (<integer5143>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take5140_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take5140_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take5140_a[[<l>],string]> -> <take5140_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take5140_a[[<l>],string]>, AST=take5140::<take5140>, tyVar=<take5140>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5141::integer, tyVar=<integer5141>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take5140_a[[<l>],string]>, AST=BindLet5133_pfx5134::<BindLet5133_pfx5134_f>, tyVar=<take5135>, resolvedTy=string})]
tryFunType: trying count:integer list:<take5140_a[[<l>],string]> -> <take5140_a[[<l>],string]> with [(<take5140_a[[<l>],string]>, [(take5140, <take5140>, string), (BindLet5133_pfx5134, <take5135>, string)]), (integer, [(integer5141, <integer5141>, integer)])]
Solved overload with count:integer list:<take5140_a[[<l>],string]> -> <take5140_a[[<l>],string]>: [(<take5140_a[[<l>],string]>, (string, [(take5140, <take5140>), (BindLet5133_pfx5134, <take5135>)])), (integer, (integer, [(integer5141, <integer5141>)]))]
Adjusting type for solution: ((take5140, <take5140>), <take5140_a[[<l>],string]>, string)
assocTy: (<take5140>, string) <=> <take5140_a[[<l>],string]>
assocTy: string => <take5140_a[[<l>],string]>
assocTy: (<take5140>, string) <=> string
assocTy: (<take5140>, string) <= string
Adjusting type for solution: ((BindLet5133_pfx5134, <take5135>), <take5140_a[[<l>],string]>, string)
assocTy: (<take5135>, string) <=> <take5140_a[[<l>],string]>
assocTy: (<take5135>, string) <=> string
assocTy: (<take5135>, string) <= string
Adjusting type for solution: ((integer5141, <integer5141>), integer, integer)
assocTy: (<integer5141>, integer) <=> integer
assocTy: (<integer5141>, integer) <= integer
assocTy: (<integer5141>, integer) <=> integer
assocTy: (<integer5141>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take5135_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take5135_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take5135_a[[<l>],string]> -> <take5135_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take5135_a[[<l>],string]>, AST=take5135::<take5135>, tyVar=<take5135>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5136::integer, tyVar=<integer5136>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take5135_a[[<l>],string]>, AST=inlinedCallArgs5319_account5320::string, tyVar=<buy_buyer4944>, resolvedTy=string})]
tryFunType: trying count:integer list:<take5135_a[[<l>],string]> -> <take5135_a[[<l>],string]> with [(<take5135_a[[<l>],string]>, [(take5135, <take5135>, string), (inlinedCallArgs5319_account5320, <buy_buyer4944>, string)]), (integer, [(integer5136, <integer5136>, integer)])]
Solved overload with count:integer list:<take5135_a[[<l>],string]> -> <take5135_a[[<l>],string]>: [(<take5135_a[[<l>],string]>, (string, [(take5135, <take5135>), (inlinedCallArgs5319_account5320, <buy_buyer4944>)])), (integer, (integer, [(integer5136, <integer5136>)]))]
Adjusting type for solution: ((take5135, <take5135>), <take5135_a[[<l>],string]>, string)
assocTy: (<take5135>, string) <=> <take5135_a[[<l>],string]>
assocTy: string => <take5135_a[[<l>],string]>
assocTy: (<take5135>, string) <=> string
assocTy: (<take5135>, string) <= string
Adjusting type for solution: ((inlinedCallArgs5319_account5320, <buy_buyer4944>), <take5135_a[[<l>],string]>, string)
assocTy: (<buy_buyer4944>, string) <=> <take5135_a[[<l>],string]>
assocTy: (<buy_buyer4944>, string) <=> string
assocTy: (<buy_buyer4944>, string) <= string
Adjusting type for solution: ((integer5136, <integer5136>), integer, integer)
assocTy: (<integer5136>, integer) <=> integer
assocTy: (<integer5136>, integer) <= integer
assocTy: (<integer5136>, integer) <=> integer
assocTy: (<integer5136>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor5094::<floor5094>, tyVar=<floor5094>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs5313_amount5315::decimal, tyVar=<buy_amount4946>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet5083_p5084::<BindLet5083_p5084_ai>, tyVar=<precision5090>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet5083_p5084, <precision5090>, integer)]), (decimal, [(floor5094, <floor5094>, decimal), (inlinedCallArgs5313_amount5315, <buy_amount4946>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet5083_p5084, <precision5090>)])), (decimal, (decimal, [(floor5094, <floor5094>), (inlinedCallArgs5313_amount5315, <buy_amount4946>)]))]
Adjusting type for solution: ((BindLet5083_p5084, <precision5090>), integer, integer)
assocTy: (<precision5090>, integer) <=> integer
assocTy: (<precision5090>, integer) <= integer
assocTy: (<precision5090>, integer) <=> integer
assocTy: (<precision5090>, integer) <= integer
Adjusting type for solution: ((floor5094, <floor5094>), decimal, decimal)
assocTy: (<floor5094>, decimal) <=> decimal
assocTy: (<floor5094>, decimal) <= decimal
assocTy: (<floor5094>, decimal) <=> decimal
assocTy: (<floor5094>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5313_amount5315, <buy_amount4946>), decimal, decimal)
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read5088_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read5088_row}>, roleTy=<read5088>
tryFunType: cand: table:table:<{read5088_row}> key:string -> object:<{read5088_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read5088_row}>, AST=read5088::<read5088>, tyVar=<read5088>, resolvedTy=<read5088>}), (ArgVar 0, RoleTys { candArgTy=table:<{read5088_row}>, AST=marmalade.ledger.tokens5089::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens5089>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs5311_id5312::string, tyVar=<buy_id4942>, resolvedTy=string})]
tryFunType: trying table:table:<{read5088_row}> key:string -> object:<{read5088_row}> with [(string, [(inlinedCallArgs5311_id5312, <buy_id4942>, string)]), (table:<{read5088_row}>, [(marmalade.ledger.tokens5089, <marmalade.ledger.tokens5089>, table:{marmalade.ledger.token-schema})]), (object:<{read5088_row}>, [(read5088, <read5088>, <read5088>)])]
Solved overload with table:table:<{read5088_row}> key:string -> object:<{read5088_row}>: [(string, (string, [(inlinedCallArgs5311_id5312, <buy_id4942>)])), (table:<{read5088_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens5089, <marmalade.ledger.tokens5089>)])), (object:<{read5088_row}>, (object:<{read5088_row}>, [(read5088, <read5088>)]))]
Adjusting type for solution: ((inlinedCallArgs5311_id5312, <buy_id4942>), string, string)
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens5089, <marmalade.ledger.tokens5089>), table:<{read5088_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens5089>, table:{marmalade.ledger.token-schema}) <=> table:<{read5088_row}>
assocTy: (<{read5088_row}>, <{read5088_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5088_row}>, <{read5088_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read5088_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read5088_row}>)
assocTy: (<marmalade.ledger.tokens5089>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens5089>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read5088, <read5088>), object:<{read5088_row}>, object:<{read5088_row}>)
assocTy: (<read5088>, <read5088>) <=> object:<{read5088_row}>
assocTy: (<read5088>, <read5088>) <= object:<{read5088_row}>
assocTy: tracking/updating type variable <read5088> <= object:<{read5088_row}>
assocTy: (<read5088>, object:{marmalade.ledger.token-schema}) <=> object:<{read5088_row}>
assocTy: (<{read5088_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5088_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read5088_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at5086_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5086_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at5086_l>] -> <at5086_a>: roles=[(RetVar, RoleTys { candArgTy=<at5086_a>, AST=at5086::<at5086>, tyVar=<precision5090>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at5086_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5086_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at5086_o}> -> <at5086_a>, roles=[(RetVar, RoleTys { candArgTy=<at5086_a>, AST=at5086::<at5086>, tyVar=<precision5090>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string5087::string, tyVar=<string5087>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at5086_o}>, AST=read5088::<read5088>, tyVar=<read5088>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at5086_o}> -> <at5086_a> with [(<at5086_a>, [(at5086, <precision5090>, integer)]), (string, [(string5087, <string5087>, string)]), (object:<{at5086_o}>, [(read5088, <read5088>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at5086_o}> -> <at5086_a>: [(<at5086_a>, (integer, [(at5086, <precision5090>)])), (string, (string, [(string5087, <string5087>)])), (object:<{at5086_o}>, (object:{marmalade.ledger.token-schema}, [(read5088, <read5088>)]))]
Adjusting type for solution: ((at5086, <precision5090>), <at5086_a>, integer)
assocTy: (<precision5090>, integer) <=> <at5086_a>
assocTy: integer => <at5086_a>
assocTy: (<precision5090>, integer) <=> integer
assocTy: (<precision5090>, integer) <= integer
Adjusting type for solution: ((string5087, <string5087>), string, string)
assocTy: (<string5087>, string) <=> string
assocTy: (<string5087>, string) <= string
assocTy: (<string5087>, string) <=> string
assocTy: (<string5087>, string) <= string
Adjusting type for solution: ((read5088, <read5088>), object:<{at5086_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read5088>, object:{marmalade.ledger.token-schema}) <=> object:<{at5086_o}>
assocTy: (<{at5086_o}>, <{at5086_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at5086_o}>, <{at5086_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at5086_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at5086_o}>)
assocTy: (<read5088>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read5088>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=<-5047_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-5047_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-5047_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-5047_a[integer,decimal]> y:<-5047_a[integer,decimal]> -> <-5047_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-5047_a[integer,decimal]>, AST=-5047::<-5047>, tyVar=<-5047>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-5047_a[integer,decimal]>, AST=BindSchema5039_old-bal5040::<BindSchema5039_old-bal5040_aa>, tyVar=<BindSchema5039_old-bal5040_aa>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-5047_a[integer,decimal]>, AST=inlinedCallArgs5305_amount5308::decimal, tyVar=<buy_amount4946>, resolvedTy=decimal})]
tryFunType: trying x:<-5047_a[integer,decimal]> y:<-5047_a[integer,decimal]> -> <-5047_a[integer,decimal]> with [(<-5047_a[integer,decimal]>, [(-5047, <-5047>, decimal), (inlinedCallArgs5305_amount5308, <buy_amount4946>, decimal), (BindSchema5039_old-bal5040, <BindSchema5039_old-bal5040_aa>, decimal)])]
Solved overload with x:<-5047_a[integer,decimal]> y:<-5047_a[integer,decimal]> -> <-5047_a[integer,decimal]>: [(<-5047_a[integer,decimal]>, (decimal, [(-5047, <-5047>), (inlinedCallArgs5305_amount5308, <buy_amount4946>), (BindSchema5039_old-bal5040, <BindSchema5039_old-bal5040_aa>)]))]
Adjusting type for solution: ((-5047, <-5047>), <-5047_a[integer,decimal]>, decimal)
assocTy: (<-5047>, decimal) <=> <-5047_a[integer,decimal]>
assocTy: decimal => <-5047_a[integer,decimal]>
assocTy: (<-5047>, decimal) <=> decimal
assocTy: (<-5047>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5305_amount5308, <buy_amount4946>), <-5047_a[integer,decimal]>, decimal)
assocTy: (<buy_amount4946>, decimal) <=> <-5047_a[integer,decimal]>
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
Adjusting type for solution: ((BindSchema5039_old-bal5040, <BindSchema5039_old-bal5040_aa>), <-5047_a[integer,decimal]>, decimal)
assocTy: (<BindSchema5039_old-bal5040_aa>, decimal) <=> <-5047_a[integer,decimal]>
assocTy: (<BindSchema5039_old-bal5040_aa>, decimal) <=> decimal
assocTy: (<BindSchema5039_old-bal5040_aa>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor5026::<floor5026>, tyVar=<floor5026>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs5295_amount5297::decimal, tyVar=<buy_amount4946>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet5015_p5016::<BindLet5015_p5016_ai>, tyVar=<precision5022>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet5015_p5016, <precision5022>, integer)]), (decimal, [(floor5026, <floor5026>, decimal), (inlinedCallArgs5295_amount5297, <buy_amount4946>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet5015_p5016, <precision5022>)])), (decimal, (decimal, [(floor5026, <floor5026>), (inlinedCallArgs5295_amount5297, <buy_amount4946>)]))]
Adjusting type for solution: ((BindLet5015_p5016, <precision5022>), integer, integer)
assocTy: (<precision5022>, integer) <=> integer
assocTy: (<precision5022>, integer) <= integer
assocTy: (<precision5022>, integer) <=> integer
assocTy: (<precision5022>, integer) <= integer
Adjusting type for solution: ((floor5026, <floor5026>), decimal, decimal)
assocTy: (<floor5026>, decimal) <=> decimal
assocTy: (<floor5026>, decimal) <= decimal
assocTy: (<floor5026>, decimal) <=> decimal
assocTy: (<floor5026>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5295_amount5297, <buy_amount4946>), decimal, decimal)
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
assocTy: (<buy_amount4946>, decimal) <=> decimal
assocTy: (<buy_amount4946>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read5020_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read5020_row}>, roleTy=<read5020>
tryFunType: cand: table:table:<{read5020_row}> key:string -> object:<{read5020_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read5020_row}>, AST=read5020::<read5020>, tyVar=<read5020>, resolvedTy=<read5020>}), (ArgVar 0, RoleTys { candArgTy=table:<{read5020_row}>, AST=marmalade.ledger.tokens5021::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens5021>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs5293_id5294::string, tyVar=<buy_id4942>, resolvedTy=string})]
tryFunType: trying table:table:<{read5020_row}> key:string -> object:<{read5020_row}> with [(string, [(inlinedCallArgs5293_id5294, <buy_id4942>, string)]), (table:<{read5020_row}>, [(marmalade.ledger.tokens5021, <marmalade.ledger.tokens5021>, table:{marmalade.ledger.token-schema})]), (object:<{read5020_row}>, [(read5020, <read5020>, <read5020>)])]
Solved overload with table:table:<{read5020_row}> key:string -> object:<{read5020_row}>: [(string, (string, [(inlinedCallArgs5293_id5294, <buy_id4942>)])), (table:<{read5020_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens5021, <marmalade.ledger.tokens5021>)])), (object:<{read5020_row}>, (object:<{read5020_row}>, [(read5020, <read5020>)]))]
Adjusting type for solution: ((inlinedCallArgs5293_id5294, <buy_id4942>), string, string)
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
assocTy: (<buy_id4942>, string) <=> string
assocTy: (<buy_id4942>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens5021, <marmalade.ledger.tokens5021>), table:<{read5020_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens5021>, table:{marmalade.ledger.token-schema}) <=> table:<{read5020_row}>
assocTy: (<{read5020_row}>, <{read5020_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5020_row}>, <{read5020_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read5020_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read5020_row}>)
assocTy: (<marmalade.ledger.tokens5021>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens5021>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read5020, <read5020>), object:<{read5020_row}>, object:<{read5020_row}>)
assocTy: (<read5020>, <read5020>) <=> object:<{read5020_row}>
assocTy: (<read5020>, <read5020>) <= object:<{read5020_row}>
assocTy: tracking/updating type variable <read5020> <= object:<{read5020_row}>
assocTy: (<read5020>, object:{marmalade.ledger.token-schema}) <=> object:<{read5020_row}>
assocTy: (<{read5020_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5020_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read5020_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at5018_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5018_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at5018_l>] -> <at5018_a>: roles=[(RetVar, RoleTys { candArgTy=<at5018_a>, AST=at5018::<at5018>, tyVar=<precision5022>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at5018_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5018_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at5018_o}> -> <at5018_a>, roles=[(RetVar, RoleTys { candArgTy=<at5018_a>, AST=at5018::<at5018>, tyVar=<precision5022>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string5019::string, tyVar=<string5019>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at5018_o}>, AST=read5020::<read5020>, tyVar=<read5020>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at5018_o}> -> <at5018_a> with [(<at5018_a>, [(at5018, <precision5022>, integer)]), (string, [(string5019, <string5019>, string)]), (object:<{at5018_o}>, [(read5020, <read5020>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at5018_o}> -> <at5018_a>: [(<at5018_a>, (integer, [(at5018, <precision5022>)])), (string, (string, [(string5019, <string5019>)])), (object:<{at5018_o}>, (object:{marmalade.ledger.token-schema}, [(read5020, <read5020>)]))]
Adjusting type for solution: ((at5018, <precision5022>), <at5018_a>, integer)
assocTy: (<precision5022>, integer) <=> <at5018_a>
assocTy: integer => <at5018_a>
assocTy: (<precision5022>, integer) <=> integer
assocTy: (<precision5022>, integer) <= integer
Adjusting type for solution: ((string5019, <string5019>), string, string)
assocTy: (<string5019>, string) <=> string
assocTy: (<string5019>, string) <= string
assocTy: (<string5019>, string) <=> string
assocTy: (<string5019>, string) <= string
Adjusting type for solution: ((read5020, <read5020>), object:<{at5018_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read5020>, object:{marmalade.ledger.token-schema}) <=> object:<{at5018_o}>
assocTy: (<{at5018_o}>, <{at5018_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at5018_o}>, <{at5018_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at5018_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at5018_o}>)
assocTy: (<read5020>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read5020>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard4993::<enforce-guard4993>, tyVar=<enforce-guard4993>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard5010::<account-guard5010>, tyVar=<account-guard5009>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard4993, <enforce-guard4993>, bool)]), (guard, [(account-guard5010, <account-guard5009>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard4993, <enforce-guard4993>)])), (guard, (guard, [(account-guard5010, <account-guard5009>)]))]
Adjusting type for solution: ((enforce-guard4993, <enforce-guard4993>), bool, bool)
assocTy: (<enforce-guard4993>, bool) <=> bool
assocTy: (<enforce-guard4993>, bool) <= bool
assocTy: (<enforce-guard4993>, bool) <=> bool
assocTy: (<enforce-guard4993>, bool) <= bool
Adjusting type for solution: ((account-guard5010, <account-guard5009>), guard, guard)
assocTy: (<account-guard5009>, guard) <=> guard
assocTy: (<account-guard5009>, guard) <= guard
assocTy: (<account-guard5009>, guard) <=> guard
assocTy: (<account-guard5009>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.buy:bool (id:string seller...
===== Fun: (defun marmalade.ledger.mint:bool (id:string accou...
trackAST: (mint_id5368, string)
trackAST: (mint_account5369, string)
trackAST: (mint_guard5370, guard)
trackAST: (mint_amount5371, decimal)
trackAST: (with-capability5372, <with-capability5372>)
trackAST: (MINT_id5373, string)
trackAST: (MINT_account5374, string)
trackAST: (MINT_amount5375, decimal)
trackAST: (enforce5376, <enforce5376>)
trackAST: (<5377, <<5377>)
trackAST: (decimal5378, decimal)
trackAST: (string5379, string)
trackAST: (compose-capability5380, <compose-capability5380>)
trackAST: (CREDIT_id5381, string)
trackAST: (CREDIT_receiver5382, string)
trackAST: (bool5383, bool)
trackAST: (CREDIT5384, <g>)
assocAST: (bool5383, <bool5383>, bool) => (CREDIT5384, <g>, <g>)
trackAST: (CREDIT5385, <CREDIT5385>)
assocAST: (bool5383, <bool5383>, bool) => (CREDIT5385, <CREDIT5385>, <CREDIT5385>)
trackAST: (compose-capability5386, <compose-capability5386>)
trackAST: (bool5387, bool)
trackAST: (UPDATE_SUPPLY5388, <h>)
assocAST: (bool5387, <bool5387>, bool) => (UPDATE_SUPPLY5388, <h>, <h>)
trackAST: (UPDATE_SUPPLY5389, <UPDATE_SUPPLY5389>)
assocAST: (bool5387, <bool5387>, bool) => (UPDATE_SUPPLY5389, <UPDATE_SUPPLY5389>, <UPDATE_SUPPLY5389>)
trackAST: (MINT5390, <i>)
assocAST: (compose-capability5386, <compose-capability5386>, <compose-capability5386>) => (MINT5390, <i>, <i>)
trackAST: (MINT5391, <MINT5391>)
assocAST: (compose-capability5386, <compose-capability5386>, <compose-capability5386>) => (MINT5391, <MINT5391>, <MINT5391>)
trackAST: (list5392, [*])
trackAST: (bind5393, <bind5393>)
trackAST: (get-policy-info_id5394, string)
trackAST: (with-read5395, <with-read5395>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5396, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema5397, <BindSchema5397>)
trackAST: (BindSchema5397_policy5398, module{kip.token-policy-v1})
trackAST: (string5399, string)
trackAST: (BindSchema5397_supply5400, <BindSchema5397_supply5400_k>)
trackAST: (string5401, string)
trackAST: (BindSchema5397_precision5402, <BindSchema5397_precision5402_l>)
trackAST: (string5403, string)
trackAST: (BindSchema5397_manifest5404, <BindSchema5397_manifest5404_m>)
trackAST: (string5405, string)
TObject: TyAny
trackAST: (object5406, object:*)
TObject: TyAny
trackAST: (object5407, object:*)
assocAST: (object5406, <object5406>, object:*) => (BindSchema5397, <BindSchema5397>, <BindSchema5397>)
trackAST: (BindSchema5397schema5408, *)
trackAST: (get-policy-info5409, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info5409, <get-policy-info5409>, object:{marmalade.ledger.policy-info}) => (with-read5395, <with-read5395>, <with-read5395>)
trackAST: (get-policy-info5410, <get-policy-info5410>)
assocAST: (with-read5395, <get-policy-info5409>, object:{marmalade.ledger.policy-info}) => (get-policy-info5410, <get-policy-info5410>, <get-policy-info5410>)
trackAST: (BindSchema5411, <BindSchema5411>)
trackAST: (BindSchema5411_policy5412, module{kip.token-policy-v1})
trackAST: (string5413, string)
trackAST: (BindSchema5411_token5414, <BindSchema5411_token5414_w>)
trackAST: (string5415, string)
trackAST: (enforce-mint_token5416, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-mint_account5417, string)
trackAST: (enforce-mint_guard5418, guard)
trackAST: (enforce-mint_amount5419, decimal)
trackAST: (enforce-mint5420, bool)
trackAST: (enforce-mint5421, <enforce-mint5421>)
assocAST: (enforce-mint5420, <enforce-mint5420>, bool) => (enforce-mint5421, <enforce-mint5421>, <enforce-mint5421>)
assocAST: (enforce-mint5421, <enforce-mint5420>, bool) => (BindSchema5411, <BindSchema5411>, <BindSchema5411>)
trackAST: (BindSchema5411schema5422, *)
trackAST: (BindLet5423, <BindLet5423>)
trackAST: (BindLet5423_receiver5424, <BindLet5423_receiver5424_x>)
trackAST: (credit_id5425, string)
trackAST: (credit_account5426, string)
trackAST: (credit_guard5427, guard)
trackAST: (credit_amount5428, decimal)
trackAST: (enforce-valid-account_account5429, string)
trackAST: (enforce5430, <enforce5430>)
trackAST: (>5431, <>5431>)
trackAST: (length5432, <length5432>)
trackAST: (integer5433, integer)
trackAST: (string5434, string)
trackAST: (enforce-valid-account5435, <c>)
assocAST: (enforce5430, <enforce5430>, <enforce5430>) => (enforce-valid-account5435, <c>, <c>)
trackAST: (enforce-valid-account5436, <enforce-valid-account5436>)
assocAST: (enforce5430, <enforce5430>, <enforce5430>) => (enforce-valid-account5436, <enforce-valid-account5436>, <enforce-valid-account5436>)
trackAST: (enforce-unit_id5437, string)
trackAST: (enforce-unit_amount5438, decimal)
trackAST: (BindLet5439, <BindLet5439>)
trackAST: (BindLet5439_p5440, <BindLet5439_p5440_ai>)
trackAST: (precision_id5441, string)
trackAST: (at5442, <at5442>)
trackAST: (string5443, string)
trackAST: (read5444, <read5444>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5445, table:{marmalade.ledger.token-schema})
trackAST: (precision5446, integer)
assocAST: (precision5446, <precision5446>, integer) => (at5442, <at5442>, <at5442>)
trackAST: (precision5447, <precision5447>)
assocAST: (at5442, <precision5446>, integer) => (precision5447, <precision5447>, <precision5447>)
assocAST: (precision5447, <precision5446>, integer) => (BindLet5439_p5440, <BindLet5439_p5440_ai>, <BindLet5439_p5440_ai>)
trackAST: (enforce5448, <enforce5448>)
trackAST: (=5449, <=5449>)
trackAST: (floor5450, <floor5450>)
trackAST: (string5451, string)
assocAST: (enforce5448, <enforce5448>, <enforce5448>) => (BindLet5439, <BindLet5439>, <BindLet5439>)
trackAST: (enforce-unit5452, bool)
assocAST: (enforce-unit5452, <enforce-unit5452>, bool) => (BindLet5439, <enforce5448>, <enforce5448>)
trackAST: (enforce-unit5453, <enforce-unit5453>)
assocAST: (BindLet5439, <enforce-unit5452>, bool) => (enforce-unit5453, <enforce-unit5453>, <enforce-unit5453>)
trackAST: (require-capability5454, <require-capability5454>)
trackAST: (CREDIT_id5455, string)
trackAST: (CREDIT_receiver5456, string)
trackAST: (bool5457, bool)
trackAST: (CREDIT5458, <g>)
assocAST: (bool5457, <bool5457>, bool) => (CREDIT5458, <g>, <g>)
trackAST: (CREDIT5459, <CREDIT5459>)
assocAST: (bool5457, <bool5457>, bool) => (CREDIT5459, <CREDIT5459>, <CREDIT5459>)
trackAST: (with-default-read5460, <with-default-read5460>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5461, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5462, string)
trackAST: (key_account5463, string)
trackAST: (format5464, <format5464>)
trackAST: (string5465, string)
trackAST: (list5466, [<ak>])
trackAST: (key5467, string)
assocAST: (key5467, <key5467>, string) => (format5464, <format5464>, <format5464>)
trackAST: (key5468, <key5468>)
assocAST: (format5464, <key5467>, string) => (key5468, <key5468>, <key5468>)
TObject: TyAny
trackAST: (object5469, object:*)
trackAST: (decimal5470, decimal)
trackAST: (BindSchema5471, <BindSchema5471>)
trackAST: (BindSchema5471_old-bal5472, <BindSchema5471_old-bal5472_ac>)
trackAST: (string5473, string)
trackAST: (BindSchema5471_retg5474, <BindSchema5471_retg5474_ad>)
trackAST: (string5475, string)
trackAST: (enforce5476, <enforce5476>)
trackAST: (=5477, <=5477>)
trackAST: (string5478, string)
trackAST: (BindLet5479, <BindLet5479>)
trackAST: (BindLet5479_is-new5480, <BindLet5479_is-new5480_ae>)
trackAST: (if5481, <if5481>)
trackAST: (=5482, <=5482>)
trackAST: (decimal5483, decimal)
trackAST: (enforce-reserved_account5484, string)
trackAST: (enforce-reserved_guard5485, guard)
trackAST: (BindLet5486, <BindLet5486>)
trackAST: (BindLet5486_r5487, <BindLet5486_r5487_g>)
trackAST: (check-reserved_account5488, string)
trackAST: (BindLet5489, <BindLet5489>)
trackAST: (BindLet5489_pfx5490, <BindLet5489_pfx5490_f>)
trackAST: (take5491, <take5491>)
trackAST: (integer5492, integer)
assocAST: (take5491, <take5491>, <take5491>) => (BindLet5489_pfx5490, <BindLet5489_pfx5490_f>, <BindLet5489_pfx5490_f>)
trackAST: (if5493, <if5493>)
trackAST: (=5494, <=5494>)
trackAST: (string5495, string)
trackAST: (take5496, <take5496>)
trackAST: (integer5497, integer)
trackAST: (take5498, <take5498>)
trackAST: (integer5499, integer)
trackAST: (string5500, string)
assocAST: (if5493, <if5493>, <if5493>) => (BindLet5489, <BindLet5489>, <BindLet5489>)
trackAST: (check-reserved5501, string)
assocAST: (check-reserved5501, <check-reserved5501>, string) => (BindLet5489, <if5493>, <if5493>)
trackAST: (check-reserved5502, <check-reserved5502>)
assocAST: (BindLet5489, <check-reserved5501>, string) => (check-reserved5502, <check-reserved5502>, <check-reserved5502>)
assocAST: (check-reserved5502, <check-reserved5501>, string) => (BindLet5486_r5487, <BindLet5486_r5487_g>, <BindLet5486_r5487_g>)
trackAST: (if5503, <if5503>)
trackAST: (=5504, <=5504>)
trackAST: (string5505, string)
trackAST: (bool5506, bool)
trackAST: (if5507, <if5507>)
trackAST: (=5508, <=5508>)
trackAST: (string5509, string)
trackAST: (enforce5510, <enforce5510>)
trackAST: (=5511, <=5511>)
trackAST: (format5512, <format5512>)
trackAST: (string5513, string)
trackAST: (list5514, [<h>])
trackAST: (format5515, <format5515>)
trackAST: (string5516, string)
trackAST: (list5517, [<i>])
trackAST: (drop5518, <drop5518>)
trackAST: (integer5519, integer)
trackAST: (string5520, string)
trackAST: (enforce5521, <enforce5521>)
trackAST: (bool5522, bool)
trackAST: (format5523, <format5523>)
trackAST: (string5524, string)
trackAST: (list5525, [<j>])
assocAST: (if5503, <if5503>, <if5503>) => (BindLet5486, <BindLet5486>, <BindLet5486>)
trackAST: (enforce-reserved5526, bool)
assocAST: (enforce-reserved5526, <enforce-reserved5526>, bool) => (BindLet5486, <if5503>, <if5503>)
trackAST: (enforce-reserved5527, <enforce-reserved5527>)
assocAST: (BindLet5486, <enforce-reserved5526>, bool) => (enforce-reserved5527, <enforce-reserved5527>, <enforce-reserved5527>)
trackAST: (bool5528, bool)
assocAST: (if5481, <if5481>, <if5481>) => (BindLet5479_is-new5480, <BindLet5479_is-new5480_ae>, <BindLet5479_is-new5480_ae>)
trackAST: (BindLet5529, <BindLet5529>)
trackAST: (BindLet5529_new-bal5530, <BindLet5529_new-bal5530_af>)
trackAST: (if5531, <if5531>)
trackAST: (+5532, <+5532>)
assocAST: (if5531, <if5531>, <if5531>) => (BindLet5529_new-bal5530, <BindLet5529_new-bal5530_af>, <BindLet5529_new-bal5530_af>)
trackAST: (write5533, <write5533>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5534, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5535, string)
trackAST: (key_account5536, string)
trackAST: (format5537, <format5537>)
trackAST: (string5538, string)
trackAST: (list5539, [<ak>])
trackAST: (key5540, string)
assocAST: (key5540, <key5540>, string) => (format5537, <format5537>, <format5537>)
trackAST: (key5541, <key5541>)
assocAST: (format5537, <key5540>, string) => (key5541, <key5541>, <key5541>)
TObject: TyAny
trackAST: (object5542, object:*)
trackAST: (if5543, <if5543>)
trackAST: (emit-event5544, <emit-event5544>)
trackAST: (ACCOUNT_GUARD_id5545, string)
trackAST: (ACCOUNT_GUARD_account5546, string)
trackAST: (ACCOUNT_GUARD_guard5547, guard)
trackAST: (bool5548, bool)
trackAST: (ACCOUNT_GUARD5549, bool)
assocAST: (bool5548, <bool5548>, bool) => (ACCOUNT_GUARD5549, <ACCOUNT_GUARD5549>, bool)
trackAST: (ACCOUNT_GUARD5550, <ACCOUNT_GUARD5550>)
assocAST: (bool5548, <bool5548>, bool) => (ACCOUNT_GUARD5550, <ACCOUNT_GUARD5550>, <ACCOUNT_GUARD5550>)
trackAST: (bool5551, bool)
TObject: TyAny
trackAST: (object5552, object:*)
trackAST: (if5553, <if5553>)
trackAST: (decimal5554, decimal)
assocAST: (object5552, <object5552>, object:*) => (BindLet5529, <BindLet5529>, <BindLet5529>)
assocAST: (BindLet5529, <object5552>, object:*) => (BindLet5479, <BindLet5479>, <BindLet5479>)
assocAST: (BindLet5479, <object5552>, object:*) => (BindSchema5471, <BindSchema5471>, <BindSchema5471>)
trackAST: (BindSchema5471schema5555, *)
trackAST: (credit5556, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (credit5556, <credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (with-default-read5460, <with-default-read5460>, <with-default-read5460>)
trackAST: (credit5557, <credit5557>)
assocAST: (with-default-read5460, <credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (credit5557, <credit5557>, <credit5557>)
assocAST: (credit5557, <credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (BindLet5423_receiver5424, <BindLet5423_receiver5424_x>, <BindLet5423_receiver5424_x>)
trackAST: (BindLet5423_sender5558, object:{kip.poly-fungible-v3.sender-balance-change})
TObject: TyAny
trackAST: (object5559, object:*)
trackAST: (string5560, string)
trackAST: (decimal5561, decimal)
trackAST: (decimal5562, decimal)
assocAST: (BindLet5423_sender5558, <BindLet5423_sender5558>, object:{kip.poly-fungible-v3.sender-balance-change}) => (object5559, <object5559>, object:*)
trackAST: (emit-event5563, <emit-event5563>)
trackAST: (RECONCILE_token-id5564, string)
trackAST: (RECONCILE_amount5565, decimal)
trackAST: (RECONCILE_sender5566, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (RECONCILE_receiver5567, object:{kip.poly-fungible-v3.receiver-balance-change})
trackAST: (bool5568, bool)
trackAST: (RECONCILE5569, bool)
assocAST: (bool5568, <bool5568>, bool) => (RECONCILE5569, <RECONCILE5569>, bool)
trackAST: (RECONCILE5570, <RECONCILE5570>)
assocAST: (bool5568, <bool5568>, bool) => (RECONCILE5570, <RECONCILE5570>, <RECONCILE5570>)
trackAST: (update-supply_id5571, string)
trackAST: (update-supply_amount5572, decimal)
trackAST: (require-capability5573, <require-capability5573>)
trackAST: (bool5574, bool)
trackAST: (UPDATE_SUPPLY5575, <h>)
assocAST: (bool5574, <bool5574>, bool) => (UPDATE_SUPPLY5575, <h>, <h>)
trackAST: (UPDATE_SUPPLY5576, <UPDATE_SUPPLY5576>)
assocAST: (bool5574, <bool5574>, bool) => (UPDATE_SUPPLY5576, <UPDATE_SUPPLY5576>, <UPDATE_SUPPLY5576>)
trackAST: (with-default-read5577, <with-default-read5577>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5578, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object5579, object:*)
trackAST: (decimal5580, decimal)
trackAST: (BindSchema5581, <BindSchema5581>)
trackAST: (BindSchema5581_s5582, <BindSchema5581_s5582_ag>)
trackAST: (string5583, string)
trackAST: (BindLet5584, <BindLet5584>)
trackAST: (BindLet5584_new-supply5585, <BindLet5584_new-supply5585_ah>)
trackAST: (+5586, <+5586>)
assocAST: (+5586, <+5586>, <+5586>) => (BindLet5584_new-supply5585, <BindLet5584_new-supply5585_ah>, <BindLet5584_new-supply5585_ah>)
trackAST: (update5587, <update5587>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5588, table:{marmalade.ledger.token-schema})
TObject: TyAny
trackAST: (object5589, object:*)
trackAST: (emit-event5590, <emit-event5590>)
trackAST: (SUPPLY_id5591, string)
trackAST: (SUPPLY_supply5592, decimal)
trackAST: (bool5593, bool)
trackAST: (SUPPLY5594, bool)
assocAST: (bool5593, <bool5593>, bool) => (SUPPLY5594, <SUPPLY5594>, bool)
trackAST: (SUPPLY5595, <SUPPLY5595>)
assocAST: (bool5593, <bool5593>, bool) => (SUPPLY5595, <SUPPLY5595>, <SUPPLY5595>)
assocAST: (emit-event5590, <emit-event5590>, <emit-event5590>) => (BindLet5584, <BindLet5584>, <BindLet5584>)
assocAST: (BindLet5584, <emit-event5590>, <emit-event5590>) => (BindSchema5581, <BindSchema5581>, <BindSchema5581>)
trackAST: (BindSchema5581schema5596, *)
trackAST: (update-supply5597, bool)
assocAST: (update-supply5597, <update-supply5597>, bool) => (with-default-read5577, <with-default-read5577>, <with-default-read5577>)
trackAST: (update-supply5598, <update-supply5598>)
assocAST: (with-default-read5577, <update-supply5597>, bool) => (update-supply5598, <update-supply5598>, <update-supply5598>)
assocAST: (update-supply5598, <update-supply5597>, bool) => (BindLet5423, <BindLet5423>, <BindLet5423>)
trackAST: (mint5599, bool)
assocAST: (mint5599, <mint5599>, bool) => (with-capability5372, <with-capability5372>, <with-capability5372>)
--------------------------------
 Substitute defuns:

assocTy: (<enforce-mint5420>, bool) <=> bool
assocTy: (<enforce-mint5420>, bool) <= bool
trackAST: (inlinedCallArgs5600, <inlinedCallArgs5600>)
assocTy: (<inlinedCallArgs5600>, <inlinedCallArgs5600>) <=> bool
assocTy: (<inlinedCallArgs5600>, <inlinedCallArgs5600>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5600> <= bool
trackAST: (inlinedCallArgs5600_token5601, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs5600_token5601, <inlinedCallArgs5600_token5601>, object:{kip.token-policy-v1.token-info}) => (BindSchema5411_token5414, <BindSchema5411_token5414_w>, <BindSchema5411_token5414_w>)
trackAST: (inlinedCallArgs5600_account5602, string)
assocAST: (mint_account5369, <mint_account5369>, string) => (inlinedCallArgs5600_account5602, <inlinedCallArgs5600_account5602>, string)
trackAST: (inlinedCallArgs5600_guard5603, guard)
assocAST: (mint_guard5370, <mint_guard5370>, guard) => (inlinedCallArgs5600_guard5603, <inlinedCallArgs5600_guard5603>, guard)
trackAST: (inlinedCallArgs5600_amount5604, decimal)
assocAST: (mint_amount5371, <mint_amount5371>, decimal) => (inlinedCallArgs5600_amount5604, <inlinedCallArgs5600_amount5604>, decimal)
assocTy: (<get-policy-info5409>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info5409>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs5605, <inlinedCallArgs5605>)
assocTy: (<inlinedCallArgs5605>, <inlinedCallArgs5605>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs5605>, <inlinedCallArgs5605>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs5605> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs5605_id5606, string)
assocAST: (mint_id5368, <mint_id5368>, string) => (inlinedCallArgs5605_id5606, <inlinedCallArgs5605_id5606>, string)
assocAST: (inlinedCallArgs5605_id5606, <mint_id5368>, string) => (get-policy-info_id5394, <get-policy-info_id5394>, string)
assocAST: (inlinedCallArgs5605_id5606, <mint_id5368>, string) => (get-policy-info_id5394, <mint_id5368>, string)
assocTy: (<enforce5430>, <enforce5430>) <=> <enforce-valid-account5436_c>
assocTy: (<enforce5430>, <enforce5430>) <= <enforce-valid-account5436_c>
assocTy: tracking/updating type variable <enforce5430> <= <enforce-valid-account5436_c>
trackAST: (inlinedCallArgs5607, <inlinedCallArgs5607>)
assocTy: (<inlinedCallArgs5607>, <inlinedCallArgs5607>) <=> <enforce-valid-account5436_c>
assocTy: (<inlinedCallArgs5607>, <inlinedCallArgs5607>) <= <enforce-valid-account5436_c>
assocTy: tracking/updating type variable <inlinedCallArgs5607> <= <enforce-valid-account5436_c>
trackAST: (inlinedCallArgs5607_account5608, string)
assocAST: (credit_account5426, <credit_account5426>, string) => (inlinedCallArgs5607_account5608, <inlinedCallArgs5607_account5608>, string)
assocAST: (inlinedCallArgs5607_account5608, <credit_account5426>, string) => (enforce-valid-account_account5429, <enforce-valid-account_account5429>, string)
assocTy: (<precision5446>, integer) <=> integer
assocTy: (<precision5446>, integer) <= integer
trackAST: (inlinedCallArgs5609, <inlinedCallArgs5609>)
assocTy: (<inlinedCallArgs5609>, <inlinedCallArgs5609>) <=> integer
assocTy: (<inlinedCallArgs5609>, <inlinedCallArgs5609>) <= integer
assocTy: tracking/updating type variable <inlinedCallArgs5609> <= integer
trackAST: (inlinedCallArgs5609_id5610, string)
assocAST: (enforce-unit_id5437, <enforce-unit_id5437>, string) => (inlinedCallArgs5609_id5610, <inlinedCallArgs5609_id5610>, string)
assocAST: (inlinedCallArgs5609_id5610, <enforce-unit_id5437>, string) => (precision_id5441, <precision_id5441>, string)
assocTy: (<enforce-unit5452>, bool) <=> bool
assocTy: (<enforce-unit5452>, bool) <= bool
trackAST: (inlinedCallArgs5611, <inlinedCallArgs5611>)
assocTy: (<inlinedCallArgs5611>, <inlinedCallArgs5611>) <=> bool
assocTy: (<inlinedCallArgs5611>, <inlinedCallArgs5611>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5611> <= bool
trackAST: (inlinedCallArgs5611_id5612, string)
assocAST: (credit_id5425, <credit_id5425>, string) => (inlinedCallArgs5611_id5612, <inlinedCallArgs5611_id5612>, string)
trackAST: (inlinedCallArgs5611_amount5613, decimal)
assocAST: (credit_amount5428, <credit_amount5428>, decimal) => (inlinedCallArgs5611_amount5613, <inlinedCallArgs5611_amount5613>, decimal)
assocAST: (inlinedCallArgs5611_id5612, <credit_id5425>, string) => (enforce-unit_id5437, <enforce-unit_id5437>, string)
assocAST: (inlinedCallArgs5611_id5612, <credit_id5425>, string) => (enforce-unit_id5437, <credit_id5425>, string)
assocAST: (inlinedCallArgs5611_amount5613, <credit_amount5428>, decimal) => (enforce-unit_amount5438, <enforce-unit_amount5438>, decimal)
assocAST: (inlinedCallArgs5611_amount5613, <credit_amount5428>, decimal) => (enforce-unit_amount5438, <credit_amount5428>, decimal)
assocTy: (<bool5457>, bool) <=> <CREDIT5459_g>
assocTy: bool => <CREDIT5459_g>
trackAST: (inlinedCallArgs5614, <inlinedCallArgs5614>)
assocTy: (<inlinedCallArgs5614>, <inlinedCallArgs5614>) <=> <CREDIT5459_g>
assocTy: (<inlinedCallArgs5614>, <inlinedCallArgs5614>) <= <CREDIT5459_g>
assocTy: tracking/updating type variable <inlinedCallArgs5614> <= <CREDIT5459_g>
trackAST: (inlinedCallArgs5614_id5615, string)
assocAST: (credit_id5425, <credit_id5425>, string) => (inlinedCallArgs5614_id5615, <inlinedCallArgs5614_id5615>, string)
trackAST: (inlinedCallArgs5614_receiver5616, string)
assocAST: (credit_account5426, <credit_account5426>, string) => (inlinedCallArgs5614_receiver5616, <inlinedCallArgs5614_receiver5616>, string)
assocTy: (<check-reserved5501>, string) <=> string
assocTy: (<check-reserved5501>, string) <= string
trackAST: (inlinedCallArgs5617, <inlinedCallArgs5617>)
assocTy: (<inlinedCallArgs5617>, <inlinedCallArgs5617>) <=> string
assocTy: (<inlinedCallArgs5617>, <inlinedCallArgs5617>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5617> <= string
trackAST: (inlinedCallArgs5617_account5618, string)
assocAST: (enforce-reserved_account5484, <enforce-reserved_account5484>, string) => (inlinedCallArgs5617_account5618, <inlinedCallArgs5617_account5618>, string)
assocAST: (inlinedCallArgs5617_account5618, <enforce-reserved_account5484>, string) => (check-reserved_account5488, <check-reserved_account5488>, string)
assocTy: (<enforce-reserved5526>, bool) <=> bool
assocTy: (<enforce-reserved5526>, bool) <= bool
trackAST: (inlinedCallArgs5619, <inlinedCallArgs5619>)
assocTy: (<inlinedCallArgs5619>, <inlinedCallArgs5619>) <=> bool
assocTy: (<inlinedCallArgs5619>, <inlinedCallArgs5619>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5619> <= bool
trackAST: (inlinedCallArgs5619_account5620, string)
assocAST: (credit_account5426, <credit_account5426>, string) => (inlinedCallArgs5619_account5620, <inlinedCallArgs5619_account5620>, string)
trackAST: (inlinedCallArgs5619_guard5621, guard)
assocAST: (credit_guard5427, <credit_guard5427>, guard) => (inlinedCallArgs5619_guard5621, <inlinedCallArgs5619_guard5621>, guard)
assocAST: (inlinedCallArgs5619_account5620, <credit_account5426>, string) => (enforce-reserved_account5484, <enforce-reserved_account5484>, string)
assocAST: (inlinedCallArgs5619_account5620, <credit_account5426>, string) => (enforce-reserved_account5484, <credit_account5426>, string)
assocAST: (inlinedCallArgs5619_account5620, <credit_account5426>, string) => (enforce-reserved_account5484, <credit_account5426>, string)
assocAST: (inlinedCallArgs5619_guard5621, <credit_guard5427>, guard) => (enforce-reserved_guard5485, <enforce-reserved_guard5485>, guard)
assocTy: (<key5540>, string) <=> string
assocTy: (<key5540>, string) <= string
trackAST: (inlinedCallArgs5622, <inlinedCallArgs5622>)
assocTy: (<inlinedCallArgs5622>, <inlinedCallArgs5622>) <=> string
assocTy: (<inlinedCallArgs5622>, <inlinedCallArgs5622>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5622> <= string
trackAST: (inlinedCallArgs5622_id5623, string)
assocAST: (credit_id5425, <credit_id5425>, string) => (inlinedCallArgs5622_id5623, <inlinedCallArgs5622_id5623>, string)
trackAST: (inlinedCallArgs5622_account5624, string)
assocAST: (credit_account5426, <credit_account5426>, string) => (inlinedCallArgs5622_account5624, <inlinedCallArgs5622_account5624>, string)
assocAST: (inlinedCallArgs5622_id5623, <credit_id5425>, string) => (key_id5535, <key_id5535>, string)
assocAST: (inlinedCallArgs5622_account5624, <credit_account5426>, string) => (key_account5536, <key_account5536>, string)
assocTy: (<bool5548>, bool) <=> bool
assocTy: (<bool5548>, bool) <= bool
trackAST: (inlinedCallArgs5625, <inlinedCallArgs5625>)
assocTy: (<inlinedCallArgs5625>, <inlinedCallArgs5625>) <=> bool
assocTy: (<inlinedCallArgs5625>, <inlinedCallArgs5625>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5625> <= bool
trackAST: (inlinedCallArgs5625_id5626, string)
assocAST: (credit_id5425, <credit_id5425>, string) => (inlinedCallArgs5625_id5626, <inlinedCallArgs5625_id5626>, string)
trackAST: (inlinedCallArgs5625_account5627, string)
assocAST: (credit_account5426, <credit_account5426>, string) => (inlinedCallArgs5625_account5627, <inlinedCallArgs5625_account5627>, string)
trackAST: (inlinedCallArgs5625_guard5628, guard)
assocAST: (inlinedCallArgs5625_guard5628, <inlinedCallArgs5625_guard5628>, guard) => (BindSchema5471_retg5474, <BindSchema5471_retg5474_ad>, <BindSchema5471_retg5474_ad>)
assocTy: (<key5467>, string) <=> string
assocTy: (<key5467>, string) <= string
trackAST: (inlinedCallArgs5629, <inlinedCallArgs5629>)
assocTy: (<inlinedCallArgs5629>, <inlinedCallArgs5629>) <=> string
assocTy: (<inlinedCallArgs5629>, <inlinedCallArgs5629>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5629> <= string
trackAST: (inlinedCallArgs5629_id5630, string)
assocAST: (credit_id5425, <credit_id5425>, string) => (inlinedCallArgs5629_id5630, <inlinedCallArgs5629_id5630>, string)
trackAST: (inlinedCallArgs5629_account5631, string)
assocAST: (credit_account5426, <credit_account5426>, string) => (inlinedCallArgs5629_account5631, <inlinedCallArgs5629_account5631>, string)
assocAST: (inlinedCallArgs5629_id5630, <credit_id5425>, string) => (key_id5462, <key_id5462>, string)
assocAST: (inlinedCallArgs5629_account5631, <credit_account5426>, string) => (key_account5463, <key_account5463>, string)
assocTy: (<credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs5632, <inlinedCallArgs5632>)
assocTy: (<inlinedCallArgs5632>, <inlinedCallArgs5632>) <=> object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: (<inlinedCallArgs5632>, <inlinedCallArgs5632>) <= object:{kip.poly-fungible-v3.receiver-balance-change}
assocTy: tracking/updating type variable <inlinedCallArgs5632> <= object:{kip.poly-fungible-v3.receiver-balance-change}
trackAST: (inlinedCallArgs5632_id5633, string)
assocAST: (mint_id5368, <mint_id5368>, string) => (inlinedCallArgs5632_id5633, <inlinedCallArgs5632_id5633>, string)
trackAST: (inlinedCallArgs5632_account5634, string)
assocAST: (mint_account5369, <mint_account5369>, string) => (inlinedCallArgs5632_account5634, <inlinedCallArgs5632_account5634>, string)
trackAST: (inlinedCallArgs5632_guard5635, guard)
assocAST: (mint_guard5370, <mint_guard5370>, guard) => (inlinedCallArgs5632_guard5635, <inlinedCallArgs5632_guard5635>, guard)
trackAST: (inlinedCallArgs5632_amount5636, decimal)
assocAST: (mint_amount5371, <mint_amount5371>, decimal) => (inlinedCallArgs5632_amount5636, <inlinedCallArgs5632_amount5636>, decimal)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <credit_account5426>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <credit_id5425>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_amount5636, <mint_amount5371>, decimal) => (credit_amount5428, <credit_amount5428>, decimal)
assocAST: (inlinedCallArgs5632_amount5636, <mint_amount5371>, decimal) => (credit_amount5428, <mint_amount5371>, decimal)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_id5633, <mint_id5368>, string) => (credit_id5425, <mint_id5368>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_account5634, <mint_account5369>, string) => (credit_account5426, <mint_account5369>, string)
assocAST: (inlinedCallArgs5632_guard5635, <mint_guard5370>, guard) => (credit_guard5427, <credit_guard5427>, guard)
assocAST: (inlinedCallArgs5632_guard5635, <mint_guard5370>, guard) => (credit_guard5427, <mint_guard5370>, guard)
assocAST: (inlinedCallArgs5632_guard5635, <mint_guard5370>, guard) => (credit_guard5427, <mint_guard5370>, guard)
assocAST: (inlinedCallArgs5632_guard5635, <mint_guard5370>, guard) => (credit_guard5427, <mint_guard5370>, guard)
assocAST: (inlinedCallArgs5632_amount5636, <mint_amount5371>, decimal) => (credit_amount5428, <mint_amount5371>, decimal)
assocAST: (inlinedCallArgs5632_amount5636, <mint_amount5371>, decimal) => (credit_amount5428, <mint_amount5371>, decimal)
assocTy: (<bool5568>, bool) <=> bool
assocTy: (<bool5568>, bool) <= bool
trackAST: (inlinedCallArgs5637, <inlinedCallArgs5637>)
assocTy: (<inlinedCallArgs5637>, <inlinedCallArgs5637>) <=> bool
assocTy: (<inlinedCallArgs5637>, <inlinedCallArgs5637>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5637> <= bool
trackAST: (inlinedCallArgs5637_token-id5638, string)
assocAST: (mint_id5368, <mint_id5368>, string) => (inlinedCallArgs5637_token-id5638, <inlinedCallArgs5637_token-id5638>, string)
trackAST: (inlinedCallArgs5637_amount5639, decimal)
assocAST: (mint_amount5371, <mint_amount5371>, decimal) => (inlinedCallArgs5637_amount5639, <inlinedCallArgs5637_amount5639>, decimal)
trackAST: (inlinedCallArgs5637_sender5640, object:{kip.poly-fungible-v3.sender-balance-change})
assocAST: (BindLet5423_sender5558, <BindLet5423_sender5558>, object:{kip.poly-fungible-v3.sender-balance-change}) => (inlinedCallArgs5637_sender5640, <inlinedCallArgs5637_sender5640>, object:{kip.poly-fungible-v3.sender-balance-change})
trackAST: (inlinedCallArgs5637_receiver5641, object:{kip.poly-fungible-v3.receiver-balance-change})
assocAST: (BindLet5423_receiver5424, <credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) => (inlinedCallArgs5637_receiver5641, <inlinedCallArgs5637_receiver5641>, object:{kip.poly-fungible-v3.receiver-balance-change})
assocTy: (<bool5574>, bool) <=> <UPDATE_SUPPLY5576_h>
assocTy: bool => <UPDATE_SUPPLY5576_h>
trackAST: (inlinedCallArgs5642, <inlinedCallArgs5642>)
assocTy: (<inlinedCallArgs5642>, <inlinedCallArgs5642>) <=> <UPDATE_SUPPLY5576_h>
assocTy: (<inlinedCallArgs5642>, <inlinedCallArgs5642>) <= <UPDATE_SUPPLY5576_h>
assocTy: tracking/updating type variable <inlinedCallArgs5642> <= <UPDATE_SUPPLY5576_h>
assocTy: (<bool5593>, bool) <=> bool
assocTy: (<bool5593>, bool) <= bool
trackAST: (inlinedCallArgs5643, <inlinedCallArgs5643>)
assocTy: (<inlinedCallArgs5643>, <inlinedCallArgs5643>) <=> bool
assocTy: (<inlinedCallArgs5643>, <inlinedCallArgs5643>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5643> <= bool
trackAST: (inlinedCallArgs5643_id5644, string)
assocAST: (update-supply_id5571, <update-supply_id5571>, string) => (inlinedCallArgs5643_id5644, <inlinedCallArgs5643_id5644>, string)
trackAST: (inlinedCallArgs5643_supply5645, decimal)
assocAST: (inlinedCallArgs5643_supply5645, <inlinedCallArgs5643_supply5645>, decimal) => (BindLet5584_new-supply5585, <+5586>, <+5586>)
assocTy: (<update-supply5597>, bool) <=> bool
assocTy: (<update-supply5597>, bool) <= bool
trackAST: (inlinedCallArgs5646, <inlinedCallArgs5646>)
assocTy: (<inlinedCallArgs5646>, <inlinedCallArgs5646>) <=> bool
assocTy: (<inlinedCallArgs5646>, <inlinedCallArgs5646>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5646> <= bool
trackAST: (inlinedCallArgs5646_id5647, string)
assocAST: (mint_id5368, <mint_id5368>, string) => (inlinedCallArgs5646_id5647, <inlinedCallArgs5646_id5647>, string)
trackAST: (inlinedCallArgs5646_amount5648, decimal)
assocAST: (mint_amount5371, <mint_amount5371>, decimal) => (inlinedCallArgs5646_amount5648, <inlinedCallArgs5646_amount5648>, decimal)
assocAST: (inlinedCallArgs5646_id5647, <mint_id5368>, string) => (update-supply_id5571, <update-supply_id5571>, string)
assocAST: (inlinedCallArgs5646_id5647, <mint_id5368>, string) => (update-supply_id5571, <mint_id5368>, string)
assocAST: (inlinedCallArgs5646_id5647, <mint_id5368>, string) => (update-supply_id5571, <mint_id5368>, string)
assocAST: (inlinedCallArgs5646_id5647, <mint_id5368>, string) => (update-supply_id5571, <mint_id5368>, string)
assocAST: (inlinedCallArgs5646_amount5648, <mint_amount5371>, decimal) => (update-supply_amount5572, <update-supply_amount5572>, decimal)
assocTy: (<bool5383>, bool) <=> <CREDIT5385_g>
assocTy: bool => <CREDIT5385_g>
trackAST: (inlinedCallArgs5649, <inlinedCallArgs5649>)
assocTy: (<inlinedCallArgs5649>, <inlinedCallArgs5649>) <=> <CREDIT5385_g>
assocTy: (<inlinedCallArgs5649>, <inlinedCallArgs5649>) <= <CREDIT5385_g>
assocTy: tracking/updating type variable <inlinedCallArgs5649> <= <CREDIT5385_g>
trackAST: (inlinedCallArgs5649_id5650, string)
assocAST: (MINT_id5373, <MINT_id5373>, string) => (inlinedCallArgs5649_id5650, <inlinedCallArgs5649_id5650>, string)
trackAST: (inlinedCallArgs5649_receiver5651, string)
assocAST: (MINT_account5374, <MINT_account5374>, string) => (inlinedCallArgs5649_receiver5651, <inlinedCallArgs5649_receiver5651>, string)
assocTy: (<bool5387>, bool) <=> <UPDATE_SUPPLY5389_h>
assocTy: bool => <UPDATE_SUPPLY5389_h>
trackAST: (inlinedCallArgs5652, <inlinedCallArgs5652>)
assocTy: (<inlinedCallArgs5652>, <inlinedCallArgs5652>) <=> <UPDATE_SUPPLY5389_h>
assocTy: (<inlinedCallArgs5652>, <inlinedCallArgs5652>) <= <UPDATE_SUPPLY5389_h>
assocTy: tracking/updating type variable <inlinedCallArgs5652> <= <UPDATE_SUPPLY5389_h>
assocTy: (<compose-capability5386>, <compose-capability5386>) <=> <MINT5391_i>
assocTy: (<compose-capability5386>, <compose-capability5386>) <= <MINT5391_i>
assocTy: tracking/updating type variable <compose-capability5386> <= <MINT5391_i>
trackAST: (inlinedCallArgs5653, <inlinedCallArgs5653>)
assocTy: (<inlinedCallArgs5653>, <inlinedCallArgs5653>) <=> <MINT5391_i>
assocTy: (<inlinedCallArgs5653>, <inlinedCallArgs5653>) <= <MINT5391_i>
assocTy: tracking/updating type variable <inlinedCallArgs5653> <= <MINT5391_i>
trackAST: (inlinedCallArgs5653_id5654, string)
assocAST: (mint_id5368, <mint_id5368>, string) => (inlinedCallArgs5653_id5654, <inlinedCallArgs5653_id5654>, string)
trackAST: (inlinedCallArgs5653_account5655, string)
assocAST: (mint_account5369, <mint_account5369>, string) => (inlinedCallArgs5653_account5655, <inlinedCallArgs5653_account5655>, string)
trackAST: (inlinedCallArgs5653_amount5656, decimal)
assocAST: (mint_amount5371, <mint_amount5371>, decimal) => (inlinedCallArgs5653_amount5656, <inlinedCallArgs5653_amount5656>, decimal)
assocAST: (inlinedCallArgs5653_amount5656, <mint_amount5371>, decimal) => (MINT_amount5375, <MINT_amount5375>, decimal)
assocAST: (inlinedCallArgs5653_id5654, <mint_id5368>, string) => (MINT_id5373, <MINT_id5373>, string)
assocAST: (inlinedCallArgs5653_id5654, <mint_id5368>, string) => (MINT_id5373, <mint_id5368>, string)
assocAST: (inlinedCallArgs5653_account5655, <mint_account5369>, string) => (MINT_account5374, <MINT_account5374>, string)
assocAST: (inlinedCallArgs5653_account5655, <mint_account5369>, string) => (MINT_account5374, <mint_account5369>, string)
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability5372_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<compose-capability5386>, <MINT5391_i>) <=> bool
assocTy: (<compose-capability5386>, <MINT5391_i>) <= bool
assocTy: tracking/updating type variable <MINT5391_i> <= bool
associating partial AST args with lambda arg types
assocTy: (<mint5599>, bool) <=> <with-capability5372_a>
assocTy: bool => <with-capability5372_a>
assocTy: (<update-supply5597>, bool) <=> <with-capability5372_a>
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind5393_row}> binding:binding:<{bind5393_row}> -> <bind5393_a>
assocTy: (<get-policy-info5409>, object:{marmalade.ledger.policy-info}) <=> object:<{bind5393_row}>
assocTy: (<{bind5393_row}>, <{bind5393_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind5393_row}>, <{bind5393_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind5393_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind5393_row}>)
assocTy: (<bind5393>, <bind5393>) <=> <bind5393_a>
assocTy: (<bind5393>, <bind5393>) <= <bind5393_a>
assocTy: tracking/updating type variable <bind5393> <= <bind5393_a>
assocTy: (<enforce-mint5420>, bool) <=> <bind5393_a>
assocTy: bool => <bind5393_a>
assocTy: (<BindSchema5411schema5422>, *) <=> binding:<{bind5393_row}>
assocTy: (<BindSchema5411schema5422>, *) <= binding:<{bind5393_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5395_row}> key:string bindings:binding:<{with-read5395_row}> -> <with-read5395_a>
assocTy: (<marmalade.ledger.tokens5396>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read5395_row}>
assocTy: (<{with-read5395_row}>, <{with-read5395_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read5395_row}>, <{with-read5395_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read5395_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read5395_row}>)
assocTy: (<mint_id5368>, string) <=> string
assocTy: (<mint_id5368>, string) <= string
assocTy: (<get-policy-info5409>, object:{marmalade.ledger.policy-info}) <=> <with-read5395_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read5395_a>
assocTy: (<object5406>, object:*) <=> <with-read5395_a>
assocTy: (<BindSchema5397schema5408>, *) <=> binding:<{with-read5395_row}>
assocTy: (<BindSchema5397schema5408>, *) <= binding:<{with-read5395_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>5431>, <>5431>) <=> bool
assocTy: (<>5431>, <>5431>) <= bool
assocTy: tracking/updating type variable <>5431> <= bool
assocTy: (<string5434>, string) <=> string
assocTy: (<string5434>, string) <= string
assocTy: (<enforce5430>, <enforce-valid-account5436_c>) <=> bool
assocTy: (<enforce5430>, <enforce-valid-account5436_c>) <= bool
assocTy: tracking/updating type variable <enforce-valid-account5436_c> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>5431_a[integer,decimal,string,time]> y:<>5431_a[integer,decimal,string,time]> -> bool
assocTy: (<length5432>, <length5432>) <=> <>5431_a[integer,decimal,string,time]>
assocTy: (<length5432>, <length5432>) <= <>5431_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <length5432> <= <>5431_a[integer,decimal,string,time]>
assocTy: (<integer5433>, integer) <=> <>5431_a[integer,decimal,string,time]>
assocTy: integer => <>5431_a[integer,decimal,string,time]>
assocTy: (<>5431>, bool) <=> bool
assocTy: (<>5431>, bool) <= bool
Mangled funtype: x:<a[[<l>],string,object:<{o}>]> -> integer -> x:<length5432_a[[<l>],string,object:<{o}>]> -> integer
assocTy: (<mint_account5369>, string) <=> <length5432_a[[<l>],string,object:<{o}>]>
assocTy: string => <length5432_a[[<l>],string,object:<{o}>]>
assocTy: (<length5432>, integer) <=> integer
assocTy: (<length5432>, integer) <= integer
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5449>, <=5449>) <=> bool
assocTy: (<=5449>, <=5449>) <= bool
assocTy: tracking/updating type variable <=5449> <= bool
assocTy: (<string5451>, string) <=> string
assocTy: (<string5451>, string) <= string
assocTy: (<enforce-unit5452>, bool) <=> bool
assocTy: (<enforce-unit5452>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<floor5450>, <floor5450>) <=> <=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<floor5450>, <floor5450>) <= <=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <floor5450> <= <=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<mint_amount5371>, decimal) <=> <=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=5449_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5449>, bool) <=> bool
assocTy: (<=5449>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5457>, bool) <=> bool
assocTy: (<bool5457>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability5454>, <require-capability5454>) <=> bool
assocTy: (<require-capability5454>, <require-capability5454>) <= bool
assocTy: tracking/updating type variable <require-capability5454> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read5460_row}> key:string defaults:object:~<{with-default-read5460_row}> bindings:binding:~<{with-default-read5460_row}> -> <with-default-read5460_a>
assocTy: (<marmalade.ledger.ledger5461>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-default-read5460_row}>
assocTy: (<{with-default-read5460_row}>, <{with-default-read5460_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-default-read5460_row}>, <{with-default-read5460_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-default-read5460_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-default-read5460_row}>)
assocTy: (<key5467>, string) <=> string
assocTy: (<key5467>, string) <= string
assocTy: (<object5469>, object:*) <=> object:~<{with-default-read5460_row}>
assocTy: (<object5469>, object:*) <= object:~<{with-default-read5460_row}>
assocTy: (<credit5556>, object:{kip.poly-fungible-v3.receiver-balance-change}) <=> <with-default-read5460_a>
assocTy: object:{kip.poly-fungible-v3.receiver-balance-change} => <with-default-read5460_a>
assocTy: (<object5552>, object:*) <=> <with-default-read5460_a>
assocTy: (<BindSchema5471schema5555>, *) <=> binding:~<{with-default-read5460_row}>
assocTy: (<BindSchema5471schema5555>, *) <= binding:~<{with-default-read5460_row}>
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5477>, <=5477>) <=> bool
assocTy: (<=5477>, <=5477>) <= bool
assocTy: tracking/updating type variable <=5477> <= bool
assocTy: (<string5478>, string) <=> string
assocTy: (<string5478>, string) <= string
assocTy: (<enforce5476>, <enforce5476>) <=> bool
assocTy: (<enforce5476>, <enforce5476>) <= bool
assocTy: tracking/updating type variable <enforce5476> <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5477_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5477_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<inlinedCallArgs5625_guard5628>, guard) <=> <=5477_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: guard => <=5477_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<mint_guard5370>, guard) <=> <=5477_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5477>, bool) <=> bool
assocTy: (<=5477>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5481_a> else:<if5481_a> -> <if5481_a>
assocTy: (<=5482>, <=5482>) <=> bool
assocTy: (<=5482>, <=5482>) <= bool
assocTy: tracking/updating type variable <=5482> <= bool
assocTy: (<enforce-reserved5526>, bool) <=> <if5481_a>
assocTy: bool => <if5481_a>
assocTy: (<bool5528>, bool) <=> <if5481_a>
assocTy: (<if5481>, <if5481>) <=> <if5481_a>
assocTy: (<if5481>, <if5481>) <= <if5481_a>
assocTy: tracking/updating type variable <if5481> <= <if5481_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<BindSchema5471_old-bal5472_ac>, <BindSchema5471_old-bal5472_ac>) <=> <=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<BindSchema5471_old-bal5472_ac>, <BindSchema5471_old-bal5472_ac>) <= <=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <BindSchema5471_old-bal5472_ac> <= <=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<decimal5483>, decimal) <=> <=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: decimal => <=5482_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5482>, bool) <=> bool
assocTy: (<=5482>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5493_a> else:<if5493_a> -> <if5493_a>
assocTy: (<=5494>, <=5494>) <=> bool
assocTy: (<=5494>, <=5494>) <= bool
assocTy: tracking/updating type variable <=5494> <= bool
assocTy: (<take5498>, <take5498>) <=> <if5493_a>
assocTy: (<take5498>, <take5498>) <= <if5493_a>
assocTy: tracking/updating type variable <take5498> <= <if5493_a>
assocTy: (<string5500>, string) <=> <if5493_a>
assocTy: string => <if5493_a>
assocTy: (<check-reserved5501>, string) <=> <if5493_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string5495>, string) <=> <=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take5496>, <take5496>) <=> <=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<take5496>, <take5496>) <= <=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <take5496> <= <=5494_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5494>, bool) <=> bool
assocTy: (<=5494>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5503_a> else:<if5503_a> -> <if5503_a>
assocTy: (<=5504>, <=5504>) <=> bool
assocTy: (<=5504>, <=5504>) <= bool
assocTy: tracking/updating type variable <=5504> <= bool
assocTy: (<bool5506>, bool) <=> <if5503_a>
assocTy: bool => <if5503_a>
assocTy: (<if5507>, <if5507>) <=> <if5503_a>
assocTy: (<if5507>, <if5507>) <= <if5503_a>
assocTy: tracking/updating type variable <if5507> <= <if5503_a>
assocTy: (<enforce-reserved5526>, bool) <=> <if5503_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5504_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5504_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string5505>, string) <=> <=5504_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=5504_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved5501>, string) <=> <=5504_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5504>, bool) <=> bool
assocTy: (<=5504>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5507_a> else:<if5507_a> -> <if5507_a>
assocTy: (<=5508>, <=5508>) <=> bool
assocTy: (<=5508>, <=5508>) <= bool
assocTy: tracking/updating type variable <=5508> <= bool
assocTy: (<enforce5510>, <enforce5510>) <=> <if5507_a>
assocTy: (<enforce5510>, <enforce5510>) <= <if5507_a>
assocTy: tracking/updating type variable <enforce5510> <= <if5507_a>
assocTy: (<enforce5521>, <enforce5521>) <=> <if5507_a>
assocTy: (<enforce5521>, <enforce5521>) <= <if5507_a>
assocTy: tracking/updating type variable <enforce5521> <= <if5507_a>
assocTy: (<if5507>, bool) <=> <if5507_a>
assocTy: bool => <if5507_a>
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5508_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5508_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<string5509>, string) <=> <=5508_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: string => <=5508_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<check-reserved5501>, string) <=> <=5508_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5508>, bool) <=> bool
assocTy: (<=5508>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<=5511>, <=5511>) <=> bool
assocTy: (<=5511>, <=5511>) <= bool
assocTy: tracking/updating type variable <=5511> <= bool
assocTy: (<string5520>, string) <=> string
assocTy: (<string5520>, string) <= string
assocTy: (<enforce5510>, bool) <=> bool
assocTy: (<enforce5510>, bool) <= bool
Mangled funtype: x:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool -> x:<=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> y:<=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> -> bool
assocTy: (<format5512>, <format5512>) <=> <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format5512>, <format5512>) <= <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format5512> <= <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format5515>, <format5515>) <=> <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<format5515>, <format5515>) <= <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: tracking/updating type variable <format5515> <= <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>
assocTy: (<=5511>, bool) <=> bool
assocTy: (<=5511>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5513>, string) <=> string
assocTy: (<string5513>, string) <= string
assocTy: (<list5514>, [<h>]) <=> [*]
assocTy: specified heterogenous list, [<h>] <= [*]
assocTy: (<format5512>, <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <=> string
assocTy: (<format5512>, <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]>) <= string
assocTy: tracking/updating type variable <=5511_a[integer,string,time,decimal,bool,[<l>],object:<{o}>,keyset]> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5516>, string) <=> string
assocTy: (<string5516>, string) <= string
assocTy: (<list5517>, [<i>]) <=> [*]
assocTy: specified heterogenous list, [<i>] <= [*]
assocTy: (<format5515>, string) <=> string
assocTy: (<format5515>, string) <= string
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<bool5522>, bool) <=> bool
assocTy: (<bool5522>, bool) <= bool
assocTy: (<format5523>, <format5523>) <=> string
assocTy: (<format5523>, <format5523>) <= string
assocTy: tracking/updating type variable <format5523> <= string
assocTy: (<enforce5521>, bool) <=> bool
assocTy: (<enforce5521>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5524>, string) <=> string
assocTy: (<string5524>, string) <= string
assocTy: (<list5525>, [<j>]) <=> [*]
assocTy: specified heterogenous list, [<j>] <= [*]
assocTy: (<format5523>, string) <=> string
assocTy: (<format5523>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5531_a> else:<if5531_a> -> <if5531_a>
assocTy: (<if5481>, bool) <=> bool
assocTy: (<if5481>, bool) <= bool
assocTy: (<mint_amount5371>, decimal) <=> <if5531_a>
assocTy: decimal => <if5531_a>
assocTy: (<+5532>, <+5532>) <=> <if5531_a>
assocTy: (<+5532>, <+5532>) <= <if5531_a>
assocTy: tracking/updating type variable <+5532> <= <if5531_a>
assocTy: (<if5531>, <if5531>) <=> <if5531_a>
assocTy: (<if5531>, <if5531>) <= <if5531_a>
assocTy: tracking/updating type variable <if5531> <= <if5531_a>
Mangled funtype: table:table:<{row}> key:string object:object:<{row}> -> string -> table:table:<{write5533_row}> key:string object:object:<{write5533_row}> -> string
assocTy: (<marmalade.ledger.ledger5534>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{write5533_row}>
assocTy: (<{write5533_row}>, <{write5533_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{write5533_row}>, <{write5533_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{write5533_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{write5533_row}>)
assocTy: (<key5540>, string) <=> string
assocTy: (<key5540>, string) <= string
assocTy: (<object5542>, object:*) <=> object:<{write5533_row}>
assocTy: (<object5542>, object:*) <= object:<{write5533_row}>
assocTy: (<write5533>, <write5533>) <=> string
assocTy: (<write5533>, <write5533>) <= string
assocTy: tracking/updating type variable <write5533> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5538>, string) <=> string
assocTy: (<string5538>, string) <= string
assocTy: (<list5539>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5540>, string) <=> string
assocTy: (<key5540>, string) <= string
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5543_a> else:<if5543_a> -> <if5543_a>
assocTy: (<if5481>, bool) <=> bool
assocTy: (<if5481>, bool) <= bool
assocTy: (<emit-event5544>, <emit-event5544>) <=> <if5543_a>
assocTy: (<emit-event5544>, <emit-event5544>) <= <if5543_a>
assocTy: tracking/updating type variable <emit-event5544> <= <if5543_a>
assocTy: (<bool5551>, bool) <=> <if5543_a>
assocTy: bool => <if5543_a>
assocTy: (<if5543>, <if5543>) <=> <if5543_a>
assocTy: (<if5543>, <if5543>) <= <if5543_a>
assocTy: tracking/updating type variable <if5543> <= <if5543_a>
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5548>, bool) <=> bool
assocTy: (<bool5548>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event5544>, bool) <=> bool
assocTy: (<emit-event5544>, bool) <= bool
Mangled funtype: cond:bool then:<a> else:<a> -> <a> -> cond:bool then:<if5553_a> else:<if5553_a> -> <if5553_a>
assocTy: (<if5481>, bool) <=> bool
assocTy: (<if5481>, bool) <= bool
assocTy: (<decimal5554>, decimal) <=> <if5553_a>
assocTy: decimal => <if5553_a>
assocTy: (<BindSchema5471_old-bal5472_ac>, decimal) <=> <if5553_a>
assocTy: (<if5553>, <if5553>) <=> <if5553_a>
assocTy: (<if5553>, <if5553>) <= <if5553_a>
assocTy: tracking/updating type variable <if5553> <= <if5553_a>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5465>, string) <=> string
assocTy: (<string5465>, string) <= string
assocTy: (<list5466>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5467>, string) <=> string
assocTy: (<key5467>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5568>, bool) <=> bool
assocTy: (<bool5568>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event5563>, <emit-event5563>) <=> bool
assocTy: (<emit-event5563>, <emit-event5563>) <= bool
assocTy: tracking/updating type variable <emit-event5563> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5574>, bool) <=> bool
assocTy: (<bool5574>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<require-capability5573>, <require-capability5573>) <=> bool
assocTy: (<require-capability5573>, <require-capability5573>) <= bool
assocTy: tracking/updating type variable <require-capability5573> <= bool
Mangled funtype: table:table:<{row}> key:string defaults:object:~<{row}> bindings:binding:~<{row}> -> <a> -> table:table:<{with-default-read5577_row}> key:string defaults:object:~<{with-default-read5577_row}> bindings:binding:~<{with-default-read5577_row}> -> <with-default-read5577_a>
assocTy: (<marmalade.ledger.tokens5578>, table:{marmalade.ledger.token-schema}) <=> table:<{with-default-read5577_row}>
assocTy: (<{with-default-read5577_row}>, <{with-default-read5577_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-default-read5577_row}>, <{with-default-read5577_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-default-read5577_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-default-read5577_row}>)
assocTy: (<mint_id5368>, string) <=> string
assocTy: (<mint_id5368>, string) <= string
assocTy: (<object5579>, object:*) <=> object:~<{with-default-read5577_row}>
assocTy: (<object5579>, object:*) <= object:~<{with-default-read5577_row}>
assocTy: (<update-supply5597>, bool) <=> <with-default-read5577_a>
assocTy: bool => <with-default-read5577_a>
assocTy: (<emit-event5590>, <emit-event5590>) <=> <with-default-read5577_a>
assocTy: (<emit-event5590>, <emit-event5590>) <= <with-default-read5577_a>
assocTy: tracking/updating type variable <emit-event5590> <= <with-default-read5577_a>
assocTy: (<BindSchema5581schema5596>, *) <=> binding:~<{with-default-read5577_row}>
assocTy: (<BindSchema5581schema5596>, *) <= binding:~<{with-default-read5577_row}>
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update5587_row}> key:string object:object:~<{update5587_row}> -> string
assocTy: (<marmalade.ledger.tokens5588>, table:{marmalade.ledger.token-schema}) <=> table:<{update5587_row}>
assocTy: (<{update5587_row}>, <{update5587_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{update5587_row}>, <{update5587_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{update5587_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{update5587_row}>)
assocTy: (<mint_id5368>, string) <=> string
assocTy: (<mint_id5368>, string) <= string
assocTy: (<object5589>, object:*) <=> object:~<{update5587_row}>
assocTy: (<object5589>, object:*) <= object:~<{update5587_row}>
assocTy: (<update5587>, <update5587>) <=> string
assocTy: (<update5587>, <update5587>) <= string
assocTy: tracking/updating type variable <update5587> <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5593>, bool) <=> bool
assocTy: (<bool5593>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event5590>, bool) <=> bool
assocTy: (<emit-event5590>, bool) <= bool
Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<5377>, <<5377>) <=> bool
assocTy: (<<5377>, <<5377>) <= bool
assocTy: tracking/updating type variable <<5377> <= bool
assocTy: (<string5379>, string) <=> string
assocTy: (<string5379>, string) <= string
assocTy: (<enforce5376>, <enforce5376>) <=> bool
assocTy: (<enforce5376>, <enforce5376>) <= bool
assocTy: tracking/updating type variable <enforce5376> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<5377_a[integer,decimal,string,time]> y:<<5377_a[integer,decimal,string,time]> -> bool
assocTy: (<decimal5378>, decimal) <=> <<5377_a[integer,decimal,string,time]>
assocTy: decimal => <<5377_a[integer,decimal,string,time]>
assocTy: (<mint_amount5371>, decimal) <=> <<5377_a[integer,decimal,string,time]>
assocTy: (<<5377>, bool) <=> bool
assocTy: (<<5377>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5383>, bool) <=> bool
assocTy: (<bool5383>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5380>, <compose-capability5380>) <=> bool
assocTy: (<compose-capability5380>, <compose-capability5380>) <= bool
assocTy: tracking/updating type variable <compose-capability5380> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5387>, bool) <=> bool
assocTy: (<bool5387>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5386>, bool) <=> bool
assocTy: (<compose-capability5386>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list5392::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema5411schema5422::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema5411_policy5412>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema5411_policy5412>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs5600_token5601>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs5600_token5601>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema5397schema5408::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema5397_manifest5404_m>, <BindSchema5397_manifest5404_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema5397_manifest5404_m>, <BindSchema5397_manifest5404_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema5397_manifest5404_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema5397_policy5398>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema5397_policy5398>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema5397_precision5402_l>, <BindSchema5397_precision5402_l>) <=> integer
assocTy: (<BindSchema5397_precision5402_l>, <BindSchema5397_precision5402_l>) <= integer
assocTy: tracking/updating type variable <BindSchema5397_precision5402_l> <= integer
assocTy: (<BindSchema5397_supply5400_k>, <BindSchema5397_supply5400_k>) <=> decimal
assocTy: (<BindSchema5397_supply5400_k>, <BindSchema5397_supply5400_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema5397_supply5400_k> <= decimal
applySchemas [binding]: (BindSchema5471schema5555::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5471_old-bal5472_ac>, decimal) <=> decimal
assocTy: (<BindSchema5471_old-bal5472_ac>, decimal) <= decimal
assocTy: (<inlinedCallArgs5625_guard5628>, guard) <=> guard
assocTy: (<inlinedCallArgs5625_guard5628>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5514::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "h", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5517::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "i", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5525::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "j", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5539::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object5542::object:*, {kip.poly-fungible-v3.account-details}, FullSchema)
assocTy: (<mint_account5369>, string) <=> string
assocTy: (<mint_account5369>, string) <= string
assocTy: (<if5531>, decimal) <=> decimal
assocTy: (<if5531>, decimal) <= decimal
assocTy: (<inlinedCallArgs5625_guard5628>, guard) <=> guard
assocTy: (<inlinedCallArgs5625_guard5628>, guard) <= guard
assocTy: (<mint_id5368>, string) <=> string
assocTy: (<mint_id5368>, string) <= string
Skipping TC on specified heterogenous list for node: list5466::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object5469::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<decimal5470>, decimal) <=> decimal
assocTy: (<decimal5470>, decimal) <= decimal
assocTy: (<mint_guard5370>, guard) <=> guard
assocTy: (<mint_guard5370>, guard) <= guard
Specializing schema ty for sublist: fromList ["balance","guard"]
assocTy: (<object5469>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[balance,guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object5469>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[balance,guard]{kip.poly-fungible-v3.account-details}
applySchemas [object]: (object5559::object:*, {kip.poly-fungible-v3.sender-balance-change}, FullSchema)
assocTy: (<string5560>, string) <=> string
assocTy: (<string5560>, string) <= string
assocTy: (<decimal5561>, decimal) <=> decimal
assocTy: (<decimal5561>, decimal) <= decimal
assocTy: (<decimal5562>, decimal) <=> decimal
assocTy: (<decimal5562>, decimal) <= decimal
applySchemas [binding]: (BindSchema5581schema5596::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema5581_s5582_ag>, <BindSchema5581_s5582_ag>) <=> decimal
assocTy: (<BindSchema5581_s5582_ag>, <BindSchema5581_s5582_ag>) <= decimal
assocTy: tracking/updating type variable <BindSchema5581_s5582_ag> <= decimal
applySchemas [object]: (object5589::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<inlinedCallArgs5643_supply5645>, decimal) <=> decimal
assocTy: (<inlinedCallArgs5643_supply5645>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object5589>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object5589>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
applySchemas [object]: (object5579::object:*, {marmalade.ledger.token-schema}, AnySubschema)
assocTy: (<decimal5580>, decimal) <=> decimal
assocTy: (<decimal5580>, decimal) <= decimal
Specializing schema ty for sublist: fromList ["supply"]
assocTy: (<object5579>, object:~{marmalade.ledger.token-schema}) <=> object:~[supply]{marmalade.ledger.token-schema}
assocTy: (<object5579>, object:~{marmalade.ledger.token-schema}) <= object:~[supply]{marmalade.ledger.token-schema}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=<+5586_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+5586_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+5586_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+5586_a[integer,decimal]> y:<+5586_a[integer,decimal]> -> <+5586_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+5586_a[integer,decimal]>, AST=+5586::<+5586>, tyVar=<inlinedCallArgs5643_supply5645>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+5586_a[integer,decimal]>, AST=BindSchema5581_s5582::<BindSchema5581_s5582_ag>, tyVar=<BindSchema5581_s5582_ag>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+5586_a[integer,decimal]>, AST=inlinedCallArgs5646_amount5648::decimal, tyVar=<mint_amount5371>, resolvedTy=decimal})]
tryFunType: trying x:<+5586_a[integer,decimal]> y:<+5586_a[integer,decimal]> -> <+5586_a[integer,decimal]> with [(<+5586_a[integer,decimal]>, [(+5586, <inlinedCallArgs5643_supply5645>, decimal), (inlinedCallArgs5646_amount5648, <mint_amount5371>, decimal), (BindSchema5581_s5582, <BindSchema5581_s5582_ag>, decimal)])]
Solved overload with x:<+5586_a[integer,decimal]> y:<+5586_a[integer,decimal]> -> <+5586_a[integer,decimal]>: [(<+5586_a[integer,decimal]>, (decimal, [(+5586, <inlinedCallArgs5643_supply5645>), (inlinedCallArgs5646_amount5648, <mint_amount5371>), (BindSchema5581_s5582, <BindSchema5581_s5582_ag>)]))]
Adjusting type for solution: ((+5586, <inlinedCallArgs5643_supply5645>), <+5586_a[integer,decimal]>, decimal)
assocTy: (<inlinedCallArgs5643_supply5645>, decimal) <=> <+5586_a[integer,decimal]>
assocTy: decimal => <+5586_a[integer,decimal]>
assocTy: (<inlinedCallArgs5643_supply5645>, decimal) <=> decimal
assocTy: (<inlinedCallArgs5643_supply5645>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5646_amount5648, <mint_amount5371>), <+5586_a[integer,decimal]>, decimal)
assocTy: (<mint_amount5371>, decimal) <=> <+5586_a[integer,decimal]>
assocTy: (<mint_amount5371>, decimal) <=> decimal
assocTy: (<mint_amount5371>, decimal) <= decimal
Adjusting type for solution: ((BindSchema5581_s5582, <BindSchema5581_s5582_ag>), <+5586_a[integer,decimal]>, decimal)
assocTy: (<BindSchema5581_s5582_ag>, decimal) <=> <+5586_a[integer,decimal]>
assocTy: (<BindSchema5581_s5582_ag>, decimal) <=> decimal
assocTy: (<BindSchema5581_s5582_ag>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=<+5532_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<+5532_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<+5532_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<+5532_a[integer,decimal]> y:<+5532_a[integer,decimal]> -> <+5532_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<+5532_a[integer,decimal]>, AST=+5532::<+5532>, tyVar=<+5532>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<+5532_a[integer,decimal]>, AST=BindSchema5471_old-bal5472::<BindSchema5471_old-bal5472_ac>, tyVar=<BindSchema5471_old-bal5472_ac>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<+5532_a[integer,decimal]>, AST=inlinedCallArgs5632_amount5636::decimal, tyVar=<mint_amount5371>, resolvedTy=decimal})]
tryFunType: trying x:<+5532_a[integer,decimal]> y:<+5532_a[integer,decimal]> -> <+5532_a[integer,decimal]> with [(<+5532_a[integer,decimal]>, [(+5532, <+5532>, decimal), (inlinedCallArgs5632_amount5636, <mint_amount5371>, decimal), (BindSchema5471_old-bal5472, <BindSchema5471_old-bal5472_ac>, decimal)])]
Solved overload with x:<+5532_a[integer,decimal]> y:<+5532_a[integer,decimal]> -> <+5532_a[integer,decimal]>: [(<+5532_a[integer,decimal]>, (decimal, [(+5532, <+5532>), (inlinedCallArgs5632_amount5636, <mint_amount5371>), (BindSchema5471_old-bal5472, <BindSchema5471_old-bal5472_ac>)]))]
Adjusting type for solution: ((+5532, <+5532>), <+5532_a[integer,decimal]>, decimal)
assocTy: (<+5532>, decimal) <=> <+5532_a[integer,decimal]>
assocTy: decimal => <+5532_a[integer,decimal]>
assocTy: (<+5532>, decimal) <=> decimal
assocTy: (<+5532>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5632_amount5636, <mint_amount5371>), <+5532_a[integer,decimal]>, decimal)
assocTy: (<mint_amount5371>, decimal) <=> <+5532_a[integer,decimal]>
assocTy: (<mint_amount5371>, decimal) <=> decimal
assocTy: (<mint_amount5371>, decimal) <= decimal
Adjusting type for solution: ((BindSchema5471_old-bal5472, <BindSchema5471_old-bal5472_ac>), <+5532_a[integer,decimal]>, decimal)
assocTy: (<BindSchema5471_old-bal5472_ac>, decimal) <=> <+5532_a[integer,decimal]>
assocTy: (<BindSchema5471_old-bal5472_ac>, decimal) <=> decimal
assocTy: (<BindSchema5471_old-bal5472_ac>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<drop5518_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<drop5518_a[[<l>],string]>, roleTy=<drop5518>
tryFunType: cand: count:integer list:<drop5518_a[[<l>],string]> -> <drop5518_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<drop5518_a[[<l>],string]>, AST=drop5518::<drop5518>, tyVar=<drop5518>, resolvedTy=<drop5518>}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5519::integer, tyVar=<integer5519>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<drop5518_a[[<l>],string]>, AST=inlinedCallArgs5619_account5620::string, tyVar=<mint_account5369>, resolvedTy=string})]
tryFunType: trying count:integer list:<drop5518_a[[<l>],string]> -> <drop5518_a[[<l>],string]> with [(<drop5518_a[[<l>],string]>, [(drop5518, <drop5518>, <drop5518>), (inlinedCallArgs5619_account5620, <mint_account5369>, string)]), (integer, [(integer5519, <integer5519>, integer)])]
Solved overload with count:integer list:<drop5518_a[[<l>],string]> -> <drop5518_a[[<l>],string]>: [(<drop5518_a[[<l>],string]>, (string, [(drop5518, <drop5518>), (inlinedCallArgs5619_account5620, <mint_account5369>)])), (integer, (integer, [(integer5519, <integer5519>)]))]
Adjusting type for solution: ((drop5518, <drop5518>), <drop5518_a[[<l>],string]>, string)
assocTy: (<drop5518>, <drop5518>) <=> <drop5518_a[[<l>],string]>
assocTy: (<drop5518>, <drop5518>) <= <drop5518_a[[<l>],string]>
assocTy: tracking/updating type variable <drop5518> <= <drop5518_a[[<l>],string]>
assocTy: (<drop5518>, <drop5518_a[[<l>],string]>) <=> string
assocTy: (<drop5518>, <drop5518_a[[<l>],string]>) <= string
assocTy: tracking/updating type variable <drop5518_a[[<l>],string]> <= string
Adjusting type for solution: ((inlinedCallArgs5619_account5620, <mint_account5369>), <drop5518_a[[<l>],string]>, string)
assocTy: (<mint_account5369>, string) <=> <drop5518_a[[<l>],string]>
assocTy: (<mint_account5369>, string) <=> string
assocTy: (<mint_account5369>, string) <= string
Adjusting type for solution: ((integer5519, <integer5519>), integer, integer)
assocTy: (<integer5519>, integer) <=> integer
assocTy: (<integer5519>, integer) <= integer
assocTy: (<integer5519>, integer) <=> integer
assocTy: (<integer5519>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take5498_a[[<l>],string]>, roleTy=<take5491>
tryFunType: unify role: role=RetVar, candTy=<take5498_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take5498_a[[<l>],string]> -> <take5498_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take5498_a[[<l>],string]>, AST=take5498::<take5498>, tyVar=<take5498>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5499::integer, tyVar=<integer5499>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take5498_a[[<l>],string]>, AST=BindLet5489_pfx5490::<BindLet5489_pfx5490_f>, tyVar=<take5491>, resolvedTy=<take5491>})]
tryFunType: trying count:integer list:<take5498_a[[<l>],string]> -> <take5498_a[[<l>],string]> with [(<take5498_a[[<l>],string]>, [(take5498, <take5498>, string), (BindLet5489_pfx5490, <take5491>, <take5491>)]), (integer, [(integer5499, <integer5499>, integer)])]
Solved overload with count:integer list:<take5498_a[[<l>],string]> -> <take5498_a[[<l>],string]>: [(<take5498_a[[<l>],string]>, (string, [(take5498, <take5498>), (BindLet5489_pfx5490, <take5491>)])), (integer, (integer, [(integer5499, <integer5499>)]))]
Adjusting type for solution: ((take5498, <take5498>), <take5498_a[[<l>],string]>, string)
assocTy: (<take5498>, string) <=> <take5498_a[[<l>],string]>
assocTy: string => <take5498_a[[<l>],string]>
assocTy: (<take5498>, string) <=> string
assocTy: (<take5498>, string) <= string
Adjusting type for solution: ((BindLet5489_pfx5490, <take5491>), <take5498_a[[<l>],string]>, string)
assocTy: (<take5491>, <take5491>) <=> <take5498_a[[<l>],string]>
assocTy: (<take5491>, <take5491>) <= <take5498_a[[<l>],string]>
assocTy: tracking/updating type variable <take5491> <= <take5498_a[[<l>],string]>
assocTy: (<take5491>, string) <=> string
assocTy: (<take5491>, string) <= string
Adjusting type for solution: ((integer5499, <integer5499>), integer, integer)
assocTy: (<integer5499>, integer) <=> integer
assocTy: (<integer5499>, integer) <= integer
assocTy: (<integer5499>, integer) <=> integer
assocTy: (<integer5499>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take5496_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take5496_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take5496_a[[<l>],string]> -> <take5496_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take5496_a[[<l>],string]>, AST=take5496::<take5496>, tyVar=<take5496>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5497::integer, tyVar=<integer5497>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take5496_a[[<l>],string]>, AST=BindLet5489_pfx5490::<BindLet5489_pfx5490_f>, tyVar=<take5491>, resolvedTy=string})]
tryFunType: trying count:integer list:<take5496_a[[<l>],string]> -> <take5496_a[[<l>],string]> with [(<take5496_a[[<l>],string]>, [(take5496, <take5496>, string), (BindLet5489_pfx5490, <take5491>, string)]), (integer, [(integer5497, <integer5497>, integer)])]
Solved overload with count:integer list:<take5496_a[[<l>],string]> -> <take5496_a[[<l>],string]>: [(<take5496_a[[<l>],string]>, (string, [(take5496, <take5496>), (BindLet5489_pfx5490, <take5491>)])), (integer, (integer, [(integer5497, <integer5497>)]))]
Adjusting type for solution: ((take5496, <take5496>), <take5496_a[[<l>],string]>, string)
assocTy: (<take5496>, string) <=> <take5496_a[[<l>],string]>
assocTy: string => <take5496_a[[<l>],string]>
assocTy: (<take5496>, string) <=> string
assocTy: (<take5496>, string) <= string
Adjusting type for solution: ((BindLet5489_pfx5490, <take5491>), <take5496_a[[<l>],string]>, string)
assocTy: (<take5491>, string) <=> <take5496_a[[<l>],string]>
assocTy: (<take5491>, string) <=> string
assocTy: (<take5491>, string) <= string
Adjusting type for solution: ((integer5497, <integer5497>), integer, integer)
assocTy: (<integer5497>, integer) <=> integer
assocTy: (<integer5497>, integer) <= integer
assocTy: (<integer5497>, integer) <=> integer
assocTy: (<integer5497>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=integer
tryFunType: unify role: role=ArgVar 1, candTy=<take5491_a[[<l>],string]>, roleTy=string
tryFunType: unify role: role=RetVar, candTy=<take5491_a[[<l>],string]>, roleTy=string
tryFunType: cand: count:integer list:<take5491_a[[<l>],string]> -> <take5491_a[[<l>],string]>, roles=[(RetVar, RoleTys { candArgTy=<take5491_a[[<l>],string]>, AST=take5491::<take5491>, tyVar=<take5491>, resolvedTy=string}), (ArgVar 0, RoleTys { candArgTy=integer, AST=integer5492::integer, tyVar=<integer5492>, resolvedTy=integer}), (ArgVar 1, RoleTys { candArgTy=<take5491_a[[<l>],string]>, AST=inlinedCallArgs5617_account5618::string, tyVar=<mint_account5369>, resolvedTy=string})]
tryFunType: trying count:integer list:<take5491_a[[<l>],string]> -> <take5491_a[[<l>],string]> with [(<take5491_a[[<l>],string]>, [(take5491, <take5491>, string), (inlinedCallArgs5617_account5618, <mint_account5369>, string)]), (integer, [(integer5492, <integer5492>, integer)])]
Solved overload with count:integer list:<take5491_a[[<l>],string]> -> <take5491_a[[<l>],string]>: [(<take5491_a[[<l>],string]>, (string, [(take5491, <take5491>), (inlinedCallArgs5617_account5618, <mint_account5369>)])), (integer, (integer, [(integer5492, <integer5492>)]))]
Adjusting type for solution: ((take5491, <take5491>), <take5491_a[[<l>],string]>, string)
assocTy: (<take5491>, string) <=> <take5491_a[[<l>],string]>
assocTy: string => <take5491_a[[<l>],string]>
assocTy: (<take5491>, string) <=> string
assocTy: (<take5491>, string) <= string
Adjusting type for solution: ((inlinedCallArgs5617_account5618, <mint_account5369>), <take5491_a[[<l>],string]>, string)
assocTy: (<mint_account5369>, string) <=> <take5491_a[[<l>],string]>
assocTy: (<mint_account5369>, string) <=> string
assocTy: (<mint_account5369>, string) <= string
Adjusting type for solution: ((integer5492, <integer5492>), integer, integer)
assocTy: (<integer5492>, integer) <=> integer
assocTy: (<integer5492>, integer) <= integer
assocTy: (<integer5492>, integer) <=> integer
assocTy: (<integer5492>, integer) <= integer
tryFunType: unify role: role=ArgVar 0, candTy=decimal, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=integer, roleTy=integer
tryFunType: unify role: role=RetVar, candTy=decimal, roleTy=decimal
tryFunType: cand: x:decimal prec:integer -> decimal, roles=[(RetVar, RoleTys { candArgTy=decimal, AST=floor5450::<floor5450>, tyVar=<floor5450>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=decimal, AST=inlinedCallArgs5611_amount5613::decimal, tyVar=<mint_amount5371>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=integer, AST=BindLet5439_p5440::<BindLet5439_p5440_ai>, tyVar=<precision5446>, resolvedTy=integer})]
tryFunType: trying x:decimal prec:integer -> decimal with [(integer, [(BindLet5439_p5440, <precision5446>, integer)]), (decimal, [(floor5450, <floor5450>, decimal), (inlinedCallArgs5611_amount5613, <mint_amount5371>, decimal)])]
Solved overload with x:decimal prec:integer -> decimal: [(integer, (integer, [(BindLet5439_p5440, <precision5446>)])), (decimal, (decimal, [(floor5450, <floor5450>), (inlinedCallArgs5611_amount5613, <mint_amount5371>)]))]
Adjusting type for solution: ((BindLet5439_p5440, <precision5446>), integer, integer)
assocTy: (<precision5446>, integer) <=> integer
assocTy: (<precision5446>, integer) <= integer
assocTy: (<precision5446>, integer) <=> integer
assocTy: (<precision5446>, integer) <= integer
Adjusting type for solution: ((floor5450, <floor5450>), decimal, decimal)
assocTy: (<floor5450>, decimal) <=> decimal
assocTy: (<floor5450>, decimal) <= decimal
assocTy: (<floor5450>, decimal) <=> decimal
assocTy: (<floor5450>, decimal) <= decimal
Adjusting type for solution: ((inlinedCallArgs5611_amount5613, <mint_amount5371>), decimal, decimal)
assocTy: (<mint_amount5371>, decimal) <=> decimal
assocTy: (<mint_amount5371>, decimal) <= decimal
assocTy: (<mint_amount5371>, decimal) <=> decimal
assocTy: (<mint_amount5371>, decimal) <= decimal
tryFunType: unify role: role=ArgVar 0, candTy=table:<{read5444_row}>, roleTy=table:{marmalade.ledger.token-schema}
tryFunType: unify role: role=ArgVar 1, candTy=string, roleTy=string
tryFunType: unify role: role=RetVar, candTy=object:<{read5444_row}>, roleTy=<read5444>
tryFunType: cand: table:table:<{read5444_row}> key:string -> object:<{read5444_row}>, roles=[(RetVar, RoleTys { candArgTy=object:<{read5444_row}>, AST=read5444::<read5444>, tyVar=<read5444>, resolvedTy=<read5444>}), (ArgVar 0, RoleTys { candArgTy=table:<{read5444_row}>, AST=marmalade.ledger.tokens5445::table:{marmalade.ledger.token-schema}, tyVar=<marmalade.ledger.tokens5445>, resolvedTy=table:{marmalade.ledger.token-schema}}), (ArgVar 1, RoleTys { candArgTy=string, AST=inlinedCallArgs5609_id5610::string, tyVar=<mint_id5368>, resolvedTy=string})]
tryFunType: trying table:table:<{read5444_row}> key:string -> object:<{read5444_row}> with [(string, [(inlinedCallArgs5609_id5610, <mint_id5368>, string)]), (table:<{read5444_row}>, [(marmalade.ledger.tokens5445, <marmalade.ledger.tokens5445>, table:{marmalade.ledger.token-schema})]), (object:<{read5444_row}>, [(read5444, <read5444>, <read5444>)])]
Solved overload with table:table:<{read5444_row}> key:string -> object:<{read5444_row}>: [(string, (string, [(inlinedCallArgs5609_id5610, <mint_id5368>)])), (table:<{read5444_row}>, (table:{marmalade.ledger.token-schema}, [(marmalade.ledger.tokens5445, <marmalade.ledger.tokens5445>)])), (object:<{read5444_row}>, (object:<{read5444_row}>, [(read5444, <read5444>)]))]
Adjusting type for solution: ((inlinedCallArgs5609_id5610, <mint_id5368>), string, string)
assocTy: (<mint_id5368>, string) <=> string
assocTy: (<mint_id5368>, string) <= string
assocTy: (<mint_id5368>, string) <=> string
assocTy: (<mint_id5368>, string) <= string
Adjusting type for solution: ((marmalade.ledger.tokens5445, <marmalade.ledger.tokens5445>), table:<{read5444_row}>, table:{marmalade.ledger.token-schema})
assocTy: (<marmalade.ledger.tokens5445>, table:{marmalade.ledger.token-schema}) <=> table:<{read5444_row}>
assocTy: (<{read5444_row}>, <{read5444_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5444_row}>, <{read5444_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{read5444_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{read5444_row}>)
assocTy: (<marmalade.ledger.tokens5445>, table:{marmalade.ledger.token-schema}) <=> table:{marmalade.ledger.token-schema}
assocTy: (<marmalade.ledger.tokens5445>, table:{marmalade.ledger.token-schema}) <= table:{marmalade.ledger.token-schema}
Adjusting type for solution: ((read5444, <read5444>), object:<{read5444_row}>, object:<{read5444_row}>)
assocTy: (<read5444>, <read5444>) <=> object:<{read5444_row}>
assocTy: (<read5444>, <read5444>) <= object:<{read5444_row}>
assocTy: tracking/updating type variable <read5444> <= object:<{read5444_row}>
assocTy: (<read5444>, object:{marmalade.ledger.token-schema}) <=> object:<{read5444_row}>
assocTy: (<{read5444_row}>, {marmalade.ledger.token-schema}) <=> {marmalade.ledger.token-schema}
assocTy: (<{read5444_row}>, {marmalade.ledger.token-schema}) <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{read5444_row}>)
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at5442_l>], roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5442_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at5442_l>] -> <at5442_a>: roles=[(RetVar, RoleTys { candArgTy=<at5442_a>, AST=at5442::<at5442>, tyVar=<precision5446>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at5442_o}>, roleTy=object:{marmalade.ledger.token-schema}
tryFunType: unify role: role=RetVar, candTy=<at5442_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at5442_o}> -> <at5442_a>, roles=[(RetVar, RoleTys { candArgTy=<at5442_a>, AST=at5442::<at5442>, tyVar=<precision5446>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string5443::string, tyVar=<string5443>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at5442_o}>, AST=read5444::<read5444>, tyVar=<read5444>, resolvedTy=object:{marmalade.ledger.token-schema}})]
tryFunType: trying idx:string object:object:<{at5442_o}> -> <at5442_a> with [(<at5442_a>, [(at5442, <precision5446>, integer)]), (string, [(string5443, <string5443>, string)]), (object:<{at5442_o}>, [(read5444, <read5444>, object:{marmalade.ledger.token-schema})])]
Solved overload with idx:string object:object:<{at5442_o}> -> <at5442_a>: [(<at5442_a>, (integer, [(at5442, <precision5446>)])), (string, (string, [(string5443, <string5443>)])), (object:<{at5442_o}>, (object:{marmalade.ledger.token-schema}, [(read5444, <read5444>)]))]
Adjusting type for solution: ((at5442, <precision5446>), <at5442_a>, integer)
assocTy: (<precision5446>, integer) <=> <at5442_a>
assocTy: integer => <at5442_a>
assocTy: (<precision5446>, integer) <=> integer
assocTy: (<precision5446>, integer) <= integer
Adjusting type for solution: ((string5443, <string5443>), string, string)
assocTy: (<string5443>, string) <=> string
assocTy: (<string5443>, string) <= string
assocTy: (<string5443>, string) <=> string
assocTy: (<string5443>, string) <= string
Adjusting type for solution: ((read5444, <read5444>), object:<{at5442_o}>, object:{marmalade.ledger.token-schema})
assocTy: (<read5444>, object:{marmalade.ledger.token-schema}) <=> object:<{at5442_o}>
assocTy: (<{at5442_o}>, <{at5442_o}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{at5442_o}>, <{at5442_o}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{at5442_o}> <= {marmalade.ledger.token-schema}
assocTy: noop: (object:{marmalade.ledger.token-schema}, object:<{at5442_o}>)
assocTy: (<read5444>, object:{marmalade.ledger.token-schema}) <=> object:{marmalade.ledger.token-schema}
assocTy: (<read5444>, object:{marmalade.ledger.token-schema}) <= object:{marmalade.ledger.token-schema}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.mint:bool (id:string accou...
===== Fun: (defcap marmalade.ledger.MINT:<i> (id:string accou...
trackAST: (MINT_id5658, string)
trackAST: (MINT_account5659, string)
trackAST: (MINT_amount5660, decimal)
trackAST: (enforce5661, <enforce5661>)
trackAST: (<5662, <<5662>)
trackAST: (decimal5663, decimal)
trackAST: (string5664, string)
trackAST: (compose-capability5665, <compose-capability5665>)
trackAST: (CREDIT_id5666, string)
trackAST: (CREDIT_receiver5667, string)
trackAST: (bool5668, bool)
trackAST: (CREDIT5669, <g>)
assocAST: (bool5668, <bool5668>, bool) => (CREDIT5669, <g>, <g>)
trackAST: (CREDIT5670, <CREDIT5670>)
assocAST: (bool5668, <bool5668>, bool) => (CREDIT5670, <CREDIT5670>, <CREDIT5670>)
trackAST: (compose-capability5671, <compose-capability5671>)
trackAST: (bool5672, bool)
trackAST: (UPDATE_SUPPLY5673, <h>)
assocAST: (bool5672, <bool5672>, bool) => (UPDATE_SUPPLY5673, <h>, <h>)
trackAST: (UPDATE_SUPPLY5674, <UPDATE_SUPPLY5674>)
assocAST: (bool5672, <bool5672>, bool) => (UPDATE_SUPPLY5674, <UPDATE_SUPPLY5674>, <UPDATE_SUPPLY5674>)
trackAST: (MINT5675, <i>)
assocAST: (compose-capability5671, <compose-capability5671>, <compose-capability5671>) => (MINT5675, <i>, <i>)
--------------------------------
 Substitute defuns:

assocTy: (<bool5668>, bool) <=> <CREDIT5670_g>
assocTy: bool => <CREDIT5670_g>
trackAST: (inlinedCallArgs5676, <inlinedCallArgs5676>)
assocTy: (<inlinedCallArgs5676>, <inlinedCallArgs5676>) <=> <CREDIT5670_g>
assocTy: (<inlinedCallArgs5676>, <inlinedCallArgs5676>) <= <CREDIT5670_g>
assocTy: tracking/updating type variable <inlinedCallArgs5676> <= <CREDIT5670_g>
trackAST: (inlinedCallArgs5676_id5677, string)
assocAST: (MINT_id5658, <MINT_id5658>, string) => (inlinedCallArgs5676_id5677, <inlinedCallArgs5676_id5677>, string)
trackAST: (inlinedCallArgs5676_receiver5678, string)
assocAST: (MINT_account5659, <MINT_account5659>, string) => (inlinedCallArgs5676_receiver5678, <inlinedCallArgs5676_receiver5678>, string)
assocTy: (<bool5672>, bool) <=> <UPDATE_SUPPLY5674_h>
assocTy: bool => <UPDATE_SUPPLY5674_h>
trackAST: (inlinedCallArgs5679, <inlinedCallArgs5679>)
assocTy: (<inlinedCallArgs5679>, <inlinedCallArgs5679>) <=> <UPDATE_SUPPLY5674_h>
assocTy: (<inlinedCallArgs5679>, <inlinedCallArgs5679>) <= <UPDATE_SUPPLY5674_h>
assocTy: tracking/updating type variable <inlinedCallArgs5679> <= <UPDATE_SUPPLY5674_h>
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<<5662>, <<5662>) <=> bool
assocTy: (<<5662>, <<5662>) <= bool
assocTy: tracking/updating type variable <<5662> <= bool
assocTy: (<string5664>, string) <=> string
assocTy: (<string5664>, string) <= string
assocTy: (<enforce5661>, <enforce5661>) <=> bool
assocTy: (<enforce5661>, <enforce5661>) <= bool
assocTy: tracking/updating type variable <enforce5661> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<5662_a[integer,decimal,string,time]> y:<<5662_a[integer,decimal,string,time]> -> bool
assocTy: (<decimal5663>, decimal) <=> <<5662_a[integer,decimal,string,time]>
assocTy: decimal => <<5662_a[integer,decimal,string,time]>
assocTy: (<MINT_amount5660>, decimal) <=> <<5662_a[integer,decimal,string,time]>
assocTy: (<<5662>, bool) <=> bool
assocTy: (<<5662>, bool) <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5668>, bool) <=> bool
assocTy: (<bool5668>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5665>, <compose-capability5665>) <=> bool
assocTy: (<compose-capability5665>, <compose-capability5665>) <= bool
assocTy: tracking/updating type variable <compose-capability5665> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5672>, bool) <=> bool
assocTy: (<bool5672>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5671>, <compose-capability5671>) <=> bool
assocTy: (<compose-capability5671>, <compose-capability5671>) <= bool
assocTy: tracking/updating type variable <compose-capability5671> <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.MINT:<i> (id:string accou...
===== Fun: (defcap marmalade.ledger.BUY:bool (id:string selle...
trackAST: (BUY_id5681, string)
trackAST: (BUY_seller5682, string)
trackAST: (BUY_buyer5683, string)
trackAST: (BUY_amount5684, decimal)
trackAST: (BUY_timeout5685, integer)
trackAST: (BUY_sale-id5686, string)
trackAST: (enforce5687, <enforce5687>)
trackAST: (sale-active_timeout5688, integer)
trackAST: (<5689, <<5689>)
trackAST: (at5690, <at5690>)
trackAST: (string5691, string)
trackAST: (chain-data5692, <chain-data5692>)
trackAST: (sale-active5693, bool)
assocAST: (sale-active5693, <sale-active5693>, bool) => (<5689, <<5689>, <<5689>)
trackAST: (sale-active5694, <sale-active5694>)
assocAST: (<5689, <sale-active5693>, bool) => (sale-active5694, <sale-active5694>, <sale-active5694>)
trackAST: (string5695, string)
trackAST: (compose-capability5696, <compose-capability5696>)
trackAST: (DEBIT_id5697, string)
trackAST: (DEBIT_sender5698, string)
trackAST: (enforce-guard5699, <enforce-guard5699>)
trackAST: (account-guard_id5700, string)
trackAST: (account-guard_account5701, string)
trackAST: (with-read5702, <with-read5702>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5703, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5704, string)
trackAST: (key_account5705, string)
trackAST: (format5706, <format5706>)
trackAST: (string5707, string)
trackAST: (list5708, [<ak>])
trackAST: (key5709, string)
assocAST: (key5709, <key5709>, string) => (format5706, <format5706>, <format5706>)
trackAST: (key5710, <key5710>)
assocAST: (format5706, <key5709>, string) => (key5710, <key5710>, <key5710>)
trackAST: (BindSchema5711, <BindSchema5711>)
trackAST: (BindSchema5711_guard5712, <BindSchema5711_guard5712_f>)
trackAST: (string5713, string)
assocAST: (BindSchema5711_guard5712, <BindSchema5711_guard5712_f>, <BindSchema5711_guard5712_f>) => (BindSchema5711, <BindSchema5711>, <BindSchema5711>)
trackAST: (BindSchema5711schema5714, *)
trackAST: (account-guard5715, guard)
assocAST: (account-guard5715, <account-guard5715>, guard) => (with-read5702, <with-read5702>, <with-read5702>)
trackAST: (account-guard5716, <account-guard5716>)
assocAST: (with-read5702, <account-guard5715>, guard) => (account-guard5716, <account-guard5716>, <account-guard5716>)
trackAST: (DEBIT5717, <e>)
assocAST: (enforce-guard5699, <enforce-guard5699>, <enforce-guard5699>) => (DEBIT5717, <e>, <e>)
trackAST: (DEBIT5718, <DEBIT5718>)
trackAST: (format5719, <format5719>)
trackAST: (string5720, string)
trackAST: (list5721, [<at>])
trackAST: (pact-id5722, <pact-id5722>)
trackAST: (sale-account5723, string)
assocAST: (sale-account5723, <sale-account5723>, string) => (format5719, <format5719>, <format5719>)
trackAST: (sale-account5724, <sale-account5724>)
assocAST: (format5719, <sale-account5723>, string) => (sale-account5724, <sale-account5724>, <sale-account5724>)
assocAST: (enforce-guard5699, <enforce-guard5699>, <enforce-guard5699>) => (DEBIT5718, <DEBIT5718>, <DEBIT5718>)
trackAST: (compose-capability5725, <compose-capability5725>)
trackAST: (CREDIT_id5726, string)
trackAST: (CREDIT_receiver5727, string)
trackAST: (bool5728, bool)
trackAST: (CREDIT5729, <g>)
assocAST: (bool5728, <bool5728>, bool) => (CREDIT5729, <g>, <g>)
trackAST: (CREDIT5730, <CREDIT5730>)
assocAST: (bool5728, <bool5728>, bool) => (CREDIT5730, <CREDIT5730>, <CREDIT5730>)
trackAST: (compose-capability5731, <compose-capability5731>)
trackAST: (SALE_PRIVATE_sale-id5732, string)
trackAST: (bool5733, bool)
trackAST: (SALE_PRIVATE5734, bool)
assocAST: (bool5733, <bool5733>, bool) => (SALE_PRIVATE5734, <SALE_PRIVATE5734>, bool)
trackAST: (SALE_PRIVATE5735, <SALE_PRIVATE5735>)
assocAST: (bool5733, <bool5733>, bool) => (SALE_PRIVATE5735, <SALE_PRIVATE5735>, <SALE_PRIVATE5735>)
trackAST: (BUY5736, bool)
assocAST: (BUY5736, <BUY5736>, bool) => (compose-capability5731, <compose-capability5731>, <compose-capability5731>)
--------------------------------
 Substitute defuns:

assocTy: (<sale-active5693>, bool) <=> bool
assocTy: (<sale-active5693>, bool) <= bool
trackAST: (inlinedCallArgs5737, <inlinedCallArgs5737>)
assocTy: (<inlinedCallArgs5737>, <inlinedCallArgs5737>) <=> bool
assocTy: (<inlinedCallArgs5737>, <inlinedCallArgs5737>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5737> <= bool
trackAST: (inlinedCallArgs5737_timeout5738, integer)
assocAST: (BUY_timeout5685, <BUY_timeout5685>, integer) => (inlinedCallArgs5737_timeout5738, <inlinedCallArgs5737_timeout5738>, integer)
assocAST: (inlinedCallArgs5737_timeout5738, <BUY_timeout5685>, integer) => (sale-active_timeout5688, <sale-active_timeout5688>, integer)
assocTy: (<key5709>, string) <=> string
assocTy: (<key5709>, string) <= string
trackAST: (inlinedCallArgs5739, <inlinedCallArgs5739>)
assocTy: (<inlinedCallArgs5739>, <inlinedCallArgs5739>) <=> string
assocTy: (<inlinedCallArgs5739>, <inlinedCallArgs5739>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5739> <= string
trackAST: (inlinedCallArgs5739_id5740, string)
assocAST: (account-guard_id5700, <account-guard_id5700>, string) => (inlinedCallArgs5739_id5740, <inlinedCallArgs5739_id5740>, string)
trackAST: (inlinedCallArgs5739_account5741, string)
assocAST: (account-guard_account5701, <account-guard_account5701>, string) => (inlinedCallArgs5739_account5741, <inlinedCallArgs5739_account5741>, string)
assocAST: (inlinedCallArgs5739_id5740, <account-guard_id5700>, string) => (key_id5704, <key_id5704>, string)
assocAST: (inlinedCallArgs5739_account5741, <account-guard_account5701>, string) => (key_account5705, <key_account5705>, string)
assocTy: (<account-guard5715>, guard) <=> guard
assocTy: (<account-guard5715>, guard) <= guard
trackAST: (inlinedCallArgs5742, <inlinedCallArgs5742>)
assocTy: (<inlinedCallArgs5742>, <inlinedCallArgs5742>) <=> guard
assocTy: (<inlinedCallArgs5742>, <inlinedCallArgs5742>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs5742> <= guard
trackAST: (inlinedCallArgs5742_id5743, string)
assocAST: (DEBIT_id5697, <DEBIT_id5697>, string) => (inlinedCallArgs5742_id5743, <inlinedCallArgs5742_id5743>, string)
trackAST: (inlinedCallArgs5742_account5744, string)
assocAST: (DEBIT_sender5698, <DEBIT_sender5698>, string) => (inlinedCallArgs5742_account5744, <inlinedCallArgs5742_account5744>, string)
assocAST: (inlinedCallArgs5742_id5743, <DEBIT_id5697>, string) => (account-guard_id5700, <account-guard_id5700>, string)
assocAST: (inlinedCallArgs5742_id5743, <DEBIT_id5697>, string) => (account-guard_id5700, <DEBIT_id5697>, string)
assocAST: (inlinedCallArgs5742_account5744, <DEBIT_sender5698>, string) => (account-guard_account5701, <account-guard_account5701>, string)
assocAST: (inlinedCallArgs5742_account5744, <DEBIT_sender5698>, string) => (account-guard_account5701, <DEBIT_sender5698>, string)
assocTy: (<sale-account5723>, string) <=> string
assocTy: (<sale-account5723>, string) <= string
trackAST: (inlinedCallArgs5745, <inlinedCallArgs5745>)
assocTy: (<inlinedCallArgs5745>, <inlinedCallArgs5745>) <=> string
assocTy: (<inlinedCallArgs5745>, <inlinedCallArgs5745>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5745> <= string
assocTy: (<enforce-guard5699>, <enforce-guard5699>) <=> <DEBIT5718_e>
assocTy: (<enforce-guard5699>, <enforce-guard5699>) <= <DEBIT5718_e>
assocTy: tracking/updating type variable <enforce-guard5699> <= <DEBIT5718_e>
trackAST: (inlinedCallArgs5746, <inlinedCallArgs5746>)
assocTy: (<inlinedCallArgs5746>, <inlinedCallArgs5746>) <=> <DEBIT5718_e>
assocTy: (<inlinedCallArgs5746>, <inlinedCallArgs5746>) <= <DEBIT5718_e>
assocTy: tracking/updating type variable <inlinedCallArgs5746> <= <DEBIT5718_e>
trackAST: (inlinedCallArgs5746_id5747, string)
assocAST: (BUY_id5681, <BUY_id5681>, string) => (inlinedCallArgs5746_id5747, <inlinedCallArgs5746_id5747>, string)
trackAST: (inlinedCallArgs5746_sender5748, string)
assocAST: (sale-account5724, <sale-account5723>, string) => (inlinedCallArgs5746_sender5748, <inlinedCallArgs5746_sender5748>, string)
assocAST: (inlinedCallArgs5746_id5747, <BUY_id5681>, string) => (DEBIT_id5697, <DEBIT_id5697>, string)
assocAST: (inlinedCallArgs5746_id5747, <BUY_id5681>, string) => (DEBIT_id5697, <BUY_id5681>, string)
assocAST: (inlinedCallArgs5746_sender5748, <sale-account5723>, string) => (DEBIT_sender5698, <DEBIT_sender5698>, string)
assocAST: (inlinedCallArgs5746_sender5748, <sale-account5723>, string) => (DEBIT_sender5698, <sale-account5723>, string)
assocTy: (<bool5728>, bool) <=> <CREDIT5730_g>
assocTy: bool => <CREDIT5730_g>
trackAST: (inlinedCallArgs5749, <inlinedCallArgs5749>)
assocTy: (<inlinedCallArgs5749>, <inlinedCallArgs5749>) <=> <CREDIT5730_g>
assocTy: (<inlinedCallArgs5749>, <inlinedCallArgs5749>) <= <CREDIT5730_g>
assocTy: tracking/updating type variable <inlinedCallArgs5749> <= <CREDIT5730_g>
trackAST: (inlinedCallArgs5749_id5750, string)
assocAST: (BUY_id5681, <BUY_id5681>, string) => (inlinedCallArgs5749_id5750, <inlinedCallArgs5749_id5750>, string)
trackAST: (inlinedCallArgs5749_receiver5751, string)
assocAST: (BUY_buyer5683, <BUY_buyer5683>, string) => (inlinedCallArgs5749_receiver5751, <inlinedCallArgs5749_receiver5751>, string)
assocTy: (<bool5733>, bool) <=> bool
assocTy: (<bool5733>, bool) <= bool
trackAST: (inlinedCallArgs5752, <inlinedCallArgs5752>)
assocTy: (<inlinedCallArgs5752>, <inlinedCallArgs5752>) <=> bool
assocTy: (<inlinedCallArgs5752>, <inlinedCallArgs5752>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5752> <= bool
trackAST: (inlinedCallArgs5752_sale-id5753, string)
assocAST: (BUY_sale-id5686, <BUY_sale-id5686>, string) => (inlinedCallArgs5752_sale-id5753, <inlinedCallArgs5752_sale-id5753>, string)
--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<sale-active5693>, bool) <=> bool
assocTy: (<sale-active5693>, bool) <= bool
assocTy: (<string5695>, string) <=> string
assocTy: (<string5695>, string) <= string
assocTy: (<enforce5687>, <enforce5687>) <=> bool
assocTy: (<enforce5687>, <enforce5687>) <= bool
assocTy: tracking/updating type variable <enforce5687> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<<5689_a[integer,decimal,string,time]> y:<<5689_a[integer,decimal,string,time]> -> bool
assocTy: (<at5690>, <at5690>) <=> <<5689_a[integer,decimal,string,time]>
assocTy: (<at5690>, <at5690>) <= <<5689_a[integer,decimal,string,time]>
assocTy: tracking/updating type variable <at5690> <= <<5689_a[integer,decimal,string,time]>
assocTy: (<BUY_timeout5685>, integer) <=> <<5689_a[integer,decimal,string,time]>
assocTy: integer => <<5689_a[integer,decimal,string,time]>
assocTy: (<sale-active5693>, bool) <=> bool
assocTy: (<sale-active5693>, bool) <= bool
Mangled funtype:  -> object:{.public-chain-data} ->  -> object:{.public-chain-data}
assocTy: (<chain-data5692>, <chain-data5692>) <=> object:{.public-chain-data}
assocTy: (<chain-data5692>, <chain-data5692>) <= object:{.public-chain-data}
assocTy: tracking/updating type variable <chain-data5692> <= object:{.public-chain-data}
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<enforce-guard5699>, <DEBIT5718_e>) <=> bool
assocTy: (<enforce-guard5699>, <DEBIT5718_e>) <= bool
assocTy: tracking/updating type variable <DEBIT5718_e> <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5696>, <compose-capability5696>) <=> bool
assocTy: (<compose-capability5696>, <compose-capability5696>) <= bool
assocTy: tracking/updating type variable <compose-capability5696> <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5720>, string) <=> string
assocTy: (<string5720>, string) <= string
assocTy: (<list5721>, [<at>]) <=> [*]
assocTy: specified heterogenous list, [<at>] <= [*]
assocTy: (<sale-account5723>, string) <=> string
assocTy: (<sale-account5723>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id5722>, <pact-id5722>) <=> string
assocTy: (<pact-id5722>, <pact-id5722>) <= string
assocTy: tracking/updating type variable <pact-id5722> <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5702_row}> key:string bindings:binding:<{with-read5702_row}> -> <with-read5702_a>
assocTy: (<marmalade.ledger.ledger5703>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5702_row}>
assocTy: (<{with-read5702_row}>, <{with-read5702_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5702_row}>, <{with-read5702_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read5702_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5702_row}>)
assocTy: (<key5709>, string) <=> string
assocTy: (<key5709>, string) <= string
assocTy: (<account-guard5715>, guard) <=> <with-read5702_a>
assocTy: guard => <with-read5702_a>
assocTy: (<BindSchema5711_guard5712_f>, <BindSchema5711_guard5712_f>) <=> <with-read5702_a>
assocTy: (<BindSchema5711_guard5712_f>, <BindSchema5711_guard5712_f>) <= <with-read5702_a>
assocTy: tracking/updating type variable <BindSchema5711_guard5712_f> <= <with-read5702_a>
assocTy: (<BindSchema5711schema5714>, *) <=> binding:<{with-read5702_row}>
assocTy: (<BindSchema5711schema5714>, *) <= binding:<{with-read5702_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5707>, string) <=> string
assocTy: (<string5707>, string) <= string
assocTy: (<list5708>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5709>, string) <=> string
assocTy: (<key5709>, string) <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5720>, string) <=> string
assocTy: (<string5720>, string) <= string
assocTy: (<list5721>, [*]) <=> [*]
assocTy: (<list5721>, [*]) <= [*]
assocTy: (<sale-account5723>, string) <=> string
assocTy: (<sale-account5723>, string) <= string
Mangled funtype:  -> string ->  -> string
assocTy: (<pact-id5722>, string) <=> string
assocTy: (<pact-id5722>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5728>, bool) <=> bool
assocTy: (<bool5728>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<compose-capability5725>, <compose-capability5725>) <=> bool
assocTy: (<compose-capability5725>, <compose-capability5725>) <= bool
assocTy: tracking/updating type variable <compose-capability5725> <= bool
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5733>, bool) <=> bool
assocTy: (<bool5733>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<BUY5736>, bool) <=> bool
assocTy: (<BUY5736>, bool) <= bool
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list5721::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5711schema5714::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5711_guard5712_f>, guard) <=> guard
assocTy: (<BindSchema5711_guard5712_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5708::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
Skipping TC on specified heterogenous list for node: list5721::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "at", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=bool
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard5699::<enforce-guard5699>, tyVar=<enforce-guard5699>, resolvedTy=bool}), (ArgVar 0, RoleTys { candArgTy=guard, AST=account-guard5716::<account-guard5716>, tyVar=<account-guard5715>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard5699, <enforce-guard5699>, bool)]), (guard, [(account-guard5716, <account-guard5715>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard5699, <enforce-guard5699>)])), (guard, (guard, [(account-guard5716, <account-guard5715>)]))]
Adjusting type for solution: ((enforce-guard5699, <enforce-guard5699>), bool, bool)
assocTy: (<enforce-guard5699>, bool) <=> bool
assocTy: (<enforce-guard5699>, bool) <= bool
assocTy: (<enforce-guard5699>, bool) <=> bool
assocTy: (<enforce-guard5699>, bool) <= bool
Adjusting type for solution: ((account-guard5716, <account-guard5715>), guard, guard)
assocTy: (<account-guard5715>, guard) <=> guard
assocTy: (<account-guard5715>, guard) <= guard
assocTy: (<account-guard5715>, guard) <=> guard
assocTy: (<account-guard5715>, guard) <= guard
tryFunType: unify role: role=ArgVar 0, candTy=integer, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=[<at5690_l>], roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at5690_a>, roleTy=integer
tryFunType: failed: idx:integer list:[<at5690_l>] -> <at5690_a>: roles=[(RetVar, RoleTys { candArgTy=<at5690_a>, AST=at5690::<at5690>, tyVar=<at5690>, resolvedTy=integer}), , ]
tryFunType: unify role: role=ArgVar 0, candTy=string, roleTy=string
tryFunType: unify role: role=ArgVar 1, candTy=object:<{at5690_o}>, roleTy=object:{.public-chain-data}
tryFunType: unify role: role=RetVar, candTy=<at5690_a>, roleTy=integer
tryFunType: cand: idx:string object:object:<{at5690_o}> -> <at5690_a>, roles=[(RetVar, RoleTys { candArgTy=<at5690_a>, AST=at5690::<at5690>, tyVar=<at5690>, resolvedTy=integer}), (ArgVar 0, RoleTys { candArgTy=string, AST=string5691::string, tyVar=<string5691>, resolvedTy=string}), (ArgVar 1, RoleTys { candArgTy=object:<{at5690_o}>, AST=chain-data5692::<chain-data5692>, tyVar=<chain-data5692>, resolvedTy=object:{.public-chain-data}})]
tryFunType: trying idx:string object:object:<{at5690_o}> -> <at5690_a> with [(<at5690_a>, [(at5690, <at5690>, integer)]), (string, [(string5691, <string5691>, string)]), (object:<{at5690_o}>, [(chain-data5692, <chain-data5692>, object:{.public-chain-data})])]
Solved overload with idx:string object:object:<{at5690_o}> -> <at5690_a>: [(<at5690_a>, (integer, [(at5690, <at5690>)])), (string, (string, [(string5691, <string5691>)])), (object:<{at5690_o}>, (object:{.public-chain-data}, [(chain-data5692, <chain-data5692>)]))]
Adjusting type for solution: ((at5690, <at5690>), <at5690_a>, integer)
assocTy: (<at5690>, integer) <=> <at5690_a>
assocTy: integer => <at5690_a>
assocTy: (<at5690>, integer) <=> integer
assocTy: (<at5690>, integer) <= integer
Adjusting type for solution: ((string5691, <string5691>), string, string)
assocTy: (<string5691>, string) <=> string
assocTy: (<string5691>, string) <= string
assocTy: (<string5691>, string) <=> string
assocTy: (<string5691>, string) <= string
Adjusting type for solution: ((chain-data5692, <chain-data5692>), object:<{at5690_o}>, object:{.public-chain-data})
assocTy: (<chain-data5692>, object:{.public-chain-data}) <=> object:<{at5690_o}>
assocTy: (<{at5690_o}>, <{at5690_o}>) <=> {.public-chain-data}
assocTy: (<{at5690_o}>, <{at5690_o}>) <= {.public-chain-data}
assocTy: tracking/updating type variable <{at5690_o}> <= {.public-chain-data}
assocTy: noop: (object:{.public-chain-data}, object:<{at5690_o}>)
assocTy: (<chain-data5692>, object:{.public-chain-data}) <=> object:{.public-chain-data}
assocTy: (<chain-data5692>, object:{.public-chain-data}) <= object:{.public-chain-data}
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.BUY:bool (id:string selle...
===== Fun: (defun marmalade.ledger.TRANSFER-mgr:decimal (mana...
trackAST: (TRANSFER-mgr_managed5755, decimal)
trackAST: (TRANSFER-mgr_requested5756, decimal)
trackAST: (BindLet5757, <BindLet5757>)
trackAST: (BindLet5757_newbal5758, <BindLet5757_newbal5758_b>)
trackAST: (-5759, <-5759>)
assocAST: (-5759, <-5759>, <-5759>) => (BindLet5757_newbal5758, <BindLet5757_newbal5758_b>, <BindLet5757_newbal5758_b>)
trackAST: (enforce5760, <enforce5760>)
trackAST: (>=5761, <>=5761>)
trackAST: (decimal5762, decimal)
trackAST: (format5763, <format5763>)
trackAST: (string5764, string)
trackAST: (list5765, [<c>])
assocAST: (BindLet5757_newbal5758, <-5759>, <-5759>) => (BindLet5757, <BindLet5757>, <BindLet5757>)
trackAST: (TRANSFER-mgr5766, decimal)
assocAST: (TRANSFER-mgr5766, <TRANSFER-mgr5766>, decimal) => (BindLet5757, <-5759>, <-5759>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: test:bool msg:string -> bool -> test:bool msg:string -> bool
assocTy: (<>=5761>, <>=5761>) <=> bool
assocTy: (<>=5761>, <>=5761>) <= bool
assocTy: tracking/updating type variable <>=5761> <= bool
assocTy: (<format5763>, <format5763>) <=> string
assocTy: (<format5763>, <format5763>) <= string
assocTy: tracking/updating type variable <format5763> <= string
assocTy: (<enforce5760>, <enforce5760>) <=> bool
assocTy: (<enforce5760>, <enforce5760>) <= bool
assocTy: tracking/updating type variable <enforce5760> <= bool
Mangled funtype: x:<a[integer,decimal,string,time]> y:<a[integer,decimal,string,time]> -> bool -> x:<>=5761_a[integer,decimal,string,time]> y:<>=5761_a[integer,decimal,string,time]> -> bool
assocTy: (<TRANSFER-mgr5766>, decimal) <=> <>=5761_a[integer,decimal,string,time]>
assocTy: decimal => <>=5761_a[integer,decimal,string,time]>
assocTy: (<decimal5762>, decimal) <=> <>=5761_a[integer,decimal,string,time]>
assocTy: (<>=5761>, bool) <=> bool
assocTy: (<>=5761>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5764>, string) <=> string
assocTy: (<string5764>, string) <= string
assocTy: (<list5765>, [<c>]) <=> [*]
assocTy: specified heterogenous list, [<c>] <= [*]
assocTy: (<format5763>, string) <=> string
assocTy: (<format5763>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list5765::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "c", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=<-5759_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=ArgVar 1, candTy=<-5759_a[integer,decimal]>, roleTy=decimal
tryFunType: unify role: role=RetVar, candTy=<-5759_a[integer,decimal]>, roleTy=decimal
tryFunType: cand: x:<-5759_a[integer,decimal]> y:<-5759_a[integer,decimal]> -> <-5759_a[integer,decimal]>, roles=[(RetVar, RoleTys { candArgTy=<-5759_a[integer,decimal]>, AST=-5759::<-5759>, tyVar=<TRANSFER-mgr5766>, resolvedTy=decimal}), (ArgVar 0, RoleTys { candArgTy=<-5759_a[integer,decimal]>, AST=TRANSFER-mgr_managed5755::decimal, tyVar=<TRANSFER-mgr_managed5755>, resolvedTy=decimal}), (ArgVar 1, RoleTys { candArgTy=<-5759_a[integer,decimal]>, AST=TRANSFER-mgr_requested5756::decimal, tyVar=<TRANSFER-mgr_requested5756>, resolvedTy=decimal})]
tryFunType: trying x:<-5759_a[integer,decimal]> y:<-5759_a[integer,decimal]> -> <-5759_a[integer,decimal]> with [(<-5759_a[integer,decimal]>, [(-5759, <TRANSFER-mgr5766>, decimal), (TRANSFER-mgr_requested5756, <TRANSFER-mgr_requested5756>, decimal), (TRANSFER-mgr_managed5755, <TRANSFER-mgr_managed5755>, decimal)])]
Solved overload with x:<-5759_a[integer,decimal]> y:<-5759_a[integer,decimal]> -> <-5759_a[integer,decimal]>: [(<-5759_a[integer,decimal]>, (decimal, [(-5759, <TRANSFER-mgr5766>), (TRANSFER-mgr_requested5756, <TRANSFER-mgr_requested5756>), (TRANSFER-mgr_managed5755, <TRANSFER-mgr_managed5755>)]))]
Adjusting type for solution: ((-5759, <TRANSFER-mgr5766>), <-5759_a[integer,decimal]>, decimal)
assocTy: (<TRANSFER-mgr5766>, decimal) <=> <-5759_a[integer,decimal]>
assocTy: decimal => <-5759_a[integer,decimal]>
assocTy: (<TRANSFER-mgr5766>, decimal) <=> decimal
assocTy: (<TRANSFER-mgr5766>, decimal) <= decimal
Adjusting type for solution: ((TRANSFER-mgr_requested5756, <TRANSFER-mgr_requested5756>), <-5759_a[integer,decimal]>, decimal)
assocTy: (<TRANSFER-mgr_requested5756>, decimal) <=> <-5759_a[integer,decimal]>
assocTy: (<TRANSFER-mgr_requested5756>, decimal) <=> decimal
assocTy: (<TRANSFER-mgr_requested5756>, decimal) <= decimal
Adjusting type for solution: ((TRANSFER-mgr_managed5755, <TRANSFER-mgr_managed5755>), <-5759_a[integer,decimal]>, decimal)
assocTy: (<TRANSFER-mgr_managed5755>, decimal) <=> <-5759_a[integer,decimal]>
assocTy: (<TRANSFER-mgr_managed5755>, decimal) <=> decimal
assocTy: (<TRANSFER-mgr_managed5755>, decimal) <= decimal
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.TRANSFER-mgr:decimal (mana...
===== Fun: (defcap marmalade.ledger.GOVERNANCE:<a> ())
trackAST: (enforce-guard5768, <enforce-guard5768>)
trackAST: (keyset-ref-guard5769, <keyset-ref-guard5769>)
trackAST: (string5770, string)
trackAST: (GOVERNANCE5771, <a>)
assocAST: (enforce-guard5768, <enforce-guard5768>, <enforce-guard5768>) => (GOVERNANCE5771, <a>, <a>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

Mangled funtype: keyset-ref:string -> guard -> keyset-ref:string -> guard
assocTy: (<string5770>, string) <=> string
assocTy: (<string5770>, string) <= string
assocTy: (<keyset-ref-guard5769>, <keyset-ref-guard5769>) <=> guard
assocTy: (<keyset-ref-guard5769>, <keyset-ref-guard5769>) <= guard
assocTy: tracking/updating type variable <keyset-ref-guard5769> <= guard
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=<enforce-guard5768>
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard5768::<enforce-guard5768>, tyVar=<enforce-guard5768>, resolvedTy=<enforce-guard5768>}), (ArgVar 0, RoleTys { candArgTy=guard, AST=keyset-ref-guard5769::<keyset-ref-guard5769>, tyVar=<keyset-ref-guard5769>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard5768, <enforce-guard5768>, <enforce-guard5768>)]), (guard, [(keyset-ref-guard5769, <keyset-ref-guard5769>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard5768, <enforce-guard5768>)])), (guard, (guard, [(keyset-ref-guard5769, <keyset-ref-guard5769>)]))]
Adjusting type for solution: ((enforce-guard5768, <enforce-guard5768>), bool, bool)
assocTy: (<enforce-guard5768>, <enforce-guard5768>) <=> bool
assocTy: (<enforce-guard5768>, <enforce-guard5768>) <= bool
assocTy: tracking/updating type variable <enforce-guard5768> <= bool
assocTy: (<enforce-guard5768>, bool) <=> bool
assocTy: (<enforce-guard5768>, bool) <= bool
Adjusting type for solution: ((keyset-ref-guard5769, <keyset-ref-guard5769>), guard, guard)
assocTy: (<keyset-ref-guard5769>, guard) <=> guard
assocTy: noop: (guard, guard)
assocTy: (<keyset-ref-guard5769>, guard) <=> guard
assocTy: (<keyset-ref-guard5769>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.GOVERNANCE:<a> ())
===== Fun: (defcap marmalade.ledger.ROTATE:<d> (id:string acc...
trackAST: (ROTATE_id5773, string)
trackAST: (ROTATE_account5774, string)
trackAST: (bool5775, bool)
trackAST: (ROTATE5776, <d>)
assocAST: (bool5775, <bool5775>, bool) => (ROTATE5776, <d>, <d>)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.ROTATE:<d> (id:string acc...
===== Fun: (defcap marmalade.ledger.SALE_PRIVATE:bool (sale-i...
trackAST: (SALE_PRIVATE_sale-id5778, string)
trackAST: (bool5779, bool)
trackAST: (SALE_PRIVATE5780, bool)
assocAST: (bool5779, <bool5779>, bool) => (SALE_PRIVATE5780, <SALE_PRIVATE5780>, bool)
--------------------------------
 Substitute defuns:

--------------------------------
Substitute natives:

--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defcap marmalade.ledger.SALE_PRIVATE:bool (sale-i...
===== Fun: (defun marmalade.ledger.rotate:bool (id:string acc...
trackAST: (rotate_id5782, string)
trackAST: (rotate_account5783, string)
trackAST: (rotate_new-guard5784, guard)
trackAST: (with-capability5785, <with-capability5785>)
trackAST: (ROTATE_id5786, string)
trackAST: (ROTATE_account5787, string)
trackAST: (bool5788, bool)
trackAST: (ROTATE5789, <d>)
assocAST: (bool5788, <bool5788>, bool) => (ROTATE5789, <d>, <d>)
trackAST: (ROTATE5790, <ROTATE5790>)
assocAST: (bool5788, <bool5788>, bool) => (ROTATE5790, <ROTATE5790>, <ROTATE5790>)
trackAST: (list5791, [*])
trackAST: (enforce-transfer-policy_id5792, string)
trackAST: (enforce-transfer-policy_sender5793, string)
trackAST: (enforce-transfer-policy_receiver5794, string)
trackAST: (enforce-transfer-policy_amount5795, decimal)
trackAST: (bind5796, <bind5796>)
trackAST: (get-policy-info_id5797, string)
trackAST: (with-read5798, <with-read5798>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "token-schema", _tModule = Just (ModuleName {_mnName = "ledger", _mnNamespace = Just (NamespaceName "marmalade")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "manifest", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "manifest", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "data", _aType = TyList {_tyListType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-datum", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "uri", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyUser {_tyUser = TVar {_tVar = Ref (TSchema {_tSchemaName = TypeName "mf-uri", _tModule = Just (ModuleName {_mnName = "token-manifest", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Nothing, _mModel = []}, _tFields = [Arg {_aName = "scheme", _aType = TyPrim TyString, _aInfo = scheme},Arg {_aName = "data", _aType = TyPrim TyString, _aInfo = data}], _tInfo = (defschema mf-uri     scheme:s...}), _tInfo = mf-uri}}, _tySchemaPartial = FullSchema}, _aInfo = uri},Arg {_aName = "hash", _aType = TyPrim TyString, _aInfo = hash},Arg {_aName = "datum", _aType = TySchema {_tySchema = TyObject, _tySchemaType = TyAny, _tySchemaPartial = FullSchema}, _aInfo = datum}], _tInfo = (defschema mf-datum     uri:ob...}), _tInfo = mf-datum}}, _tySchemaPartial = FullSchema}}, _aInfo = data}], _tInfo = (defschema manifest     uri:ob...}), _tInfo = manifest}}, _tySchemaPartial = FullSchema}, _aInfo = manifest},Arg {_aName = "precision", _aType = TyPrim TyInteger, _aInfo = precision},Arg {_aName = "supply", _aType = TyPrim TyDecimal, _aInfo = supply},Arg {_aName = "policy", _aType = TyModule {_tyModuleSpec = Just [TVar {_tVar = Ref (TModRef {_tModRef = ModRef {_modRefName = ModuleName {_mnName = "token-policy-v1", _mnNamespace = Just (NamespaceName "kip")}, _modRefSpec = Nothing, _modRefInfo = kip.token-policy-v1}, _tInfo = kip.token-policy-v1}), _tInfo = kip.token-policy-v1}]}, _aInfo = policy}], _tInfo = (defschema token-schema     id...})), _tInfo = token-schema}}
trackAST: (marmalade.ledger.tokens5799, table:{marmalade.ledger.token-schema})
trackAST: (BindSchema5800, <BindSchema5800>)
trackAST: (BindSchema5800_policy5801, module{kip.token-policy-v1})
trackAST: (string5802, string)
trackAST: (BindSchema5800_supply5803, <BindSchema5800_supply5803_k>)
trackAST: (string5804, string)
trackAST: (BindSchema5800_precision5805, <BindSchema5800_precision5805_l>)
trackAST: (string5806, string)
trackAST: (BindSchema5800_manifest5807, <BindSchema5800_manifest5807_m>)
trackAST: (string5808, string)
TObject: TyAny
trackAST: (object5809, object:*)
TObject: TyAny
trackAST: (object5810, object:*)
assocAST: (object5809, <object5809>, object:*) => (BindSchema5800, <BindSchema5800>, <BindSchema5800>)
trackAST: (BindSchema5800schema5811, *)
trackAST: (get-policy-info5812, object:{marmalade.ledger.policy-info})
assocAST: (get-policy-info5812, <get-policy-info5812>, object:{marmalade.ledger.policy-info}) => (with-read5798, <with-read5798>, <with-read5798>)
trackAST: (get-policy-info5813, <get-policy-info5813>)
assocAST: (with-read5798, <get-policy-info5812>, object:{marmalade.ledger.policy-info}) => (get-policy-info5813, <get-policy-info5813>, <get-policy-info5813>)
trackAST: (BindSchema5814, <BindSchema5814>)
trackAST: (BindSchema5814_policy5815, module{kip.token-policy-v1})
trackAST: (string5816, string)
trackAST: (BindSchema5814_token5817, <BindSchema5814_token5817_t>)
trackAST: (string5818, string)
trackAST: (enforce-transfer_token5819, object:{kip.token-policy-v1.token-info})
trackAST: (enforce-transfer_sender5820, string)
trackAST: (enforce-transfer_guard5821, guard)
trackAST: (enforce-transfer_receiver5822, string)
trackAST: (enforce-transfer_amount5823, decimal)
trackAST: (enforce-transfer5824, bool)
trackAST: (enforce-transfer5825, <enforce-transfer5825>)
trackAST: (account-guard_id5826, string)
trackAST: (account-guard_account5827, string)
trackAST: (with-read5828, <with-read5828>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5829, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5830, string)
trackAST: (key_account5831, string)
trackAST: (format5832, <format5832>)
trackAST: (string5833, string)
trackAST: (list5834, [<ak>])
trackAST: (key5835, string)
assocAST: (key5835, <key5835>, string) => (format5832, <format5832>, <format5832>)
trackAST: (key5836, <key5836>)
assocAST: (format5832, <key5835>, string) => (key5836, <key5836>, <key5836>)
trackAST: (BindSchema5837, <BindSchema5837>)
trackAST: (BindSchema5837_guard5838, <BindSchema5837_guard5838_f>)
trackAST: (string5839, string)
assocAST: (BindSchema5837_guard5838, <BindSchema5837_guard5838_f>, <BindSchema5837_guard5838_f>) => (BindSchema5837, <BindSchema5837>, <BindSchema5837>)
trackAST: (BindSchema5837schema5840, *)
trackAST: (account-guard5841, guard)
assocAST: (account-guard5841, <account-guard5841>, guard) => (with-read5828, <with-read5828>, <with-read5828>)
trackAST: (account-guard5842, <account-guard5842>)
assocAST: (with-read5828, <account-guard5841>, guard) => (account-guard5842, <account-guard5842>, <account-guard5842>)
assocAST: (enforce-transfer5824, <enforce-transfer5824>, bool) => (enforce-transfer5825, <enforce-transfer5825>, <enforce-transfer5825>)
assocAST: (enforce-transfer5825, <enforce-transfer5824>, bool) => (BindSchema5814, <BindSchema5814>, <BindSchema5814>)
trackAST: (BindSchema5814schema5843, *)
trackAST: (enforce-transfer-policy5844, <s>)
assocAST: (bind5796, <bind5796>, <bind5796>) => (enforce-transfer-policy5844, <s>, <s>)
trackAST: (enforce-transfer-policy5845, <enforce-transfer-policy5845>)
trackAST: (decimal5846, decimal)
assocAST: (bind5796, <bind5796>, <bind5796>) => (enforce-transfer-policy5845, <enforce-transfer-policy5845>, <enforce-transfer-policy5845>)
trackAST: (with-read5847, <with-read5847>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5848, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5849, string)
trackAST: (key_account5850, string)
trackAST: (format5851, <format5851>)
trackAST: (string5852, string)
trackAST: (list5853, [<ak>])
trackAST: (key5854, string)
assocAST: (key5854, <key5854>, string) => (format5851, <format5851>, <format5851>)
trackAST: (key5855, <key5855>)
assocAST: (format5851, <key5854>, string) => (key5855, <key5855>, <key5855>)
trackAST: (BindSchema5856, <BindSchema5856>)
trackAST: (BindSchema5856_old-guard5857, <BindSchema5856_old-guard5857_o>)
trackAST: (string5858, string)
trackAST: (enforce-guard5859, <enforce-guard5859>)
trackAST: (update5860, <update5860>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5861, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5862, string)
trackAST: (key_account5863, string)
trackAST: (format5864, <format5864>)
trackAST: (string5865, string)
trackAST: (list5866, [<ak>])
trackAST: (key5867, string)
assocAST: (key5867, <key5867>, string) => (format5864, <format5864>, <format5864>)
trackAST: (key5868, <key5868>)
assocAST: (format5864, <key5867>, string) => (key5868, <key5868>, <key5868>)
TObject: TyAny
trackAST: (object5869, object:*)
trackAST: (emit-event5870, <emit-event5870>)
trackAST: (ACCOUNT_GUARD_id5871, string)
trackAST: (ACCOUNT_GUARD_account5872, string)
trackAST: (ACCOUNT_GUARD_guard5873, guard)
trackAST: (bool5874, bool)
trackAST: (ACCOUNT_GUARD5875, bool)
assocAST: (bool5874, <bool5874>, bool) => (ACCOUNT_GUARD5875, <ACCOUNT_GUARD5875>, bool)
trackAST: (ACCOUNT_GUARD5876, <ACCOUNT_GUARD5876>)
assocAST: (bool5874, <bool5874>, bool) => (ACCOUNT_GUARD5876, <ACCOUNT_GUARD5876>, <ACCOUNT_GUARD5876>)
assocAST: (emit-event5870, <emit-event5870>, <emit-event5870>) => (BindSchema5856, <BindSchema5856>, <BindSchema5856>)
trackAST: (BindSchema5856schema5877, *)
trackAST: (rotate5878, bool)
assocAST: (rotate5878, <rotate5878>, bool) => (with-capability5785, <with-capability5785>, <with-capability5785>)
--------------------------------
 Substitute defuns:

assocTy: (<key5835>, string) <=> string
assocTy: (<key5835>, string) <= string
trackAST: (inlinedCallArgs5879, <inlinedCallArgs5879>)
assocTy: (<inlinedCallArgs5879>, <inlinedCallArgs5879>) <=> string
assocTy: (<inlinedCallArgs5879>, <inlinedCallArgs5879>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5879> <= string
trackAST: (inlinedCallArgs5879_id5880, string)
assocAST: (account-guard_id5826, <account-guard_id5826>, string) => (inlinedCallArgs5879_id5880, <inlinedCallArgs5879_id5880>, string)
trackAST: (inlinedCallArgs5879_account5881, string)
assocAST: (account-guard_account5827, <account-guard_account5827>, string) => (inlinedCallArgs5879_account5881, <inlinedCallArgs5879_account5881>, string)
assocAST: (inlinedCallArgs5879_id5880, <account-guard_id5826>, string) => (key_id5830, <key_id5830>, string)
assocAST: (inlinedCallArgs5879_account5881, <account-guard_account5827>, string) => (key_account5831, <key_account5831>, string)
assocTy: (<account-guard5841>, guard) <=> guard
assocTy: (<account-guard5841>, guard) <= guard
trackAST: (inlinedCallArgs5882, <inlinedCallArgs5882>)
assocTy: (<inlinedCallArgs5882>, <inlinedCallArgs5882>) <=> guard
assocTy: (<inlinedCallArgs5882>, <inlinedCallArgs5882>) <= guard
assocTy: tracking/updating type variable <inlinedCallArgs5882> <= guard
trackAST: (inlinedCallArgs5882_id5883, string)
assocAST: (enforce-transfer-policy_id5792, <enforce-transfer-policy_id5792>, string) => (inlinedCallArgs5882_id5883, <inlinedCallArgs5882_id5883>, string)
trackAST: (inlinedCallArgs5882_account5884, string)
assocAST: (enforce-transfer-policy_sender5793, <enforce-transfer-policy_sender5793>, string) => (inlinedCallArgs5882_account5884, <inlinedCallArgs5882_account5884>, string)
assocAST: (inlinedCallArgs5882_id5883, <enforce-transfer-policy_id5792>, string) => (account-guard_id5826, <account-guard_id5826>, string)
assocAST: (inlinedCallArgs5882_id5883, <enforce-transfer-policy_id5792>, string) => (account-guard_id5826, <enforce-transfer-policy_id5792>, string)
assocAST: (inlinedCallArgs5882_account5884, <enforce-transfer-policy_sender5793>, string) => (account-guard_account5827, <account-guard_account5827>, string)
assocAST: (inlinedCallArgs5882_account5884, <enforce-transfer-policy_sender5793>, string) => (account-guard_account5827, <enforce-transfer-policy_sender5793>, string)
assocTy: (<enforce-transfer5824>, bool) <=> bool
assocTy: (<enforce-transfer5824>, bool) <= bool
trackAST: (inlinedCallArgs5885, <inlinedCallArgs5885>)
assocTy: (<inlinedCallArgs5885>, <inlinedCallArgs5885>) <=> bool
assocTy: (<inlinedCallArgs5885>, <inlinedCallArgs5885>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5885> <= bool
trackAST: (inlinedCallArgs5885_token5886, object:{kip.token-policy-v1.token-info})
assocAST: (inlinedCallArgs5885_token5886, <inlinedCallArgs5885_token5886>, object:{kip.token-policy-v1.token-info}) => (BindSchema5814_token5817, <BindSchema5814_token5817_t>, <BindSchema5814_token5817_t>)
trackAST: (inlinedCallArgs5885_sender5887, string)
assocAST: (enforce-transfer-policy_sender5793, <enforce-transfer-policy_sender5793>, string) => (inlinedCallArgs5885_sender5887, <inlinedCallArgs5885_sender5887>, string)
trackAST: (inlinedCallArgs5885_guard5888, guard)
assocAST: (account-guard5842, <account-guard5841>, guard) => (inlinedCallArgs5885_guard5888, <inlinedCallArgs5885_guard5888>, guard)
trackAST: (inlinedCallArgs5885_receiver5889, string)
assocAST: (enforce-transfer-policy_receiver5794, <enforce-transfer-policy_receiver5794>, string) => (inlinedCallArgs5885_receiver5889, <inlinedCallArgs5885_receiver5889>, string)
trackAST: (inlinedCallArgs5885_amount5890, decimal)
assocAST: (enforce-transfer-policy_amount5795, <enforce-transfer-policy_amount5795>, decimal) => (inlinedCallArgs5885_amount5890, <inlinedCallArgs5885_amount5890>, decimal)
assocTy: (<get-policy-info5812>, object:{marmalade.ledger.policy-info}) <=> object:{marmalade.ledger.policy-info}
assocTy: (<get-policy-info5812>, object:{marmalade.ledger.policy-info}) <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs5891, <inlinedCallArgs5891>)
assocTy: (<inlinedCallArgs5891>, <inlinedCallArgs5891>) <=> object:{marmalade.ledger.policy-info}
assocTy: (<inlinedCallArgs5891>, <inlinedCallArgs5891>) <= object:{marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <inlinedCallArgs5891> <= object:{marmalade.ledger.policy-info}
trackAST: (inlinedCallArgs5891_id5892, string)
assocAST: (enforce-transfer-policy_id5792, <enforce-transfer-policy_id5792>, string) => (inlinedCallArgs5891_id5892, <inlinedCallArgs5891_id5892>, string)
assocAST: (inlinedCallArgs5891_id5892, <enforce-transfer-policy_id5792>, string) => (get-policy-info_id5797, <get-policy-info_id5797>, string)
assocAST: (inlinedCallArgs5891_id5892, <enforce-transfer-policy_id5792>, string) => (get-policy-info_id5797, <enforce-transfer-policy_id5792>, string)
assocTy: (<bind5796>, <bind5796>) <=> <enforce-transfer-policy5845_s>
assocTy: (<bind5796>, <bind5796>) <= <enforce-transfer-policy5845_s>
assocTy: tracking/updating type variable <bind5796> <= <enforce-transfer-policy5845_s>
trackAST: (inlinedCallArgs5893, <inlinedCallArgs5893>)
assocTy: (<inlinedCallArgs5893>, <inlinedCallArgs5893>) <=> <enforce-transfer-policy5845_s>
assocTy: (<inlinedCallArgs5893>, <inlinedCallArgs5893>) <= <enforce-transfer-policy5845_s>
assocTy: tracking/updating type variable <inlinedCallArgs5893> <= <enforce-transfer-policy5845_s>
trackAST: (inlinedCallArgs5893_id5894, string)
assocAST: (rotate_id5782, <rotate_id5782>, string) => (inlinedCallArgs5893_id5894, <inlinedCallArgs5893_id5894>, string)
trackAST: (inlinedCallArgs5893_sender5895, string)
assocAST: (rotate_account5783, <rotate_account5783>, string) => (inlinedCallArgs5893_sender5895, <inlinedCallArgs5893_sender5895>, string)
trackAST: (inlinedCallArgs5893_receiver5896, string)
assocAST: (rotate_account5783, <rotate_account5783>, string) => (inlinedCallArgs5893_receiver5896, <inlinedCallArgs5893_receiver5896>, string)
trackAST: (inlinedCallArgs5893_amount5897, decimal)
assocAST: (decimal5846, <decimal5846>, decimal) => (inlinedCallArgs5893_amount5897, <inlinedCallArgs5893_amount5897>, decimal)
assocAST: (inlinedCallArgs5893_id5894, <rotate_id5782>, string) => (enforce-transfer-policy_id5792, <enforce-transfer-policy_id5792>, string)
assocAST: (inlinedCallArgs5893_id5894, <rotate_id5782>, string) => (enforce-transfer-policy_id5792, <rotate_id5782>, string)
assocAST: (inlinedCallArgs5893_id5894, <rotate_id5782>, string) => (enforce-transfer-policy_id5792, <rotate_id5782>, string)
assocAST: (inlinedCallArgs5893_id5894, <rotate_id5782>, string) => (enforce-transfer-policy_id5792, <rotate_id5782>, string)
assocAST: (inlinedCallArgs5893_id5894, <rotate_id5782>, string) => (enforce-transfer-policy_id5792, <rotate_id5782>, string)
assocAST: (inlinedCallArgs5893_id5894, <rotate_id5782>, string) => (enforce-transfer-policy_id5792, <rotate_id5782>, string)
assocAST: (inlinedCallArgs5893_sender5895, <rotate_account5783>, string) => (enforce-transfer-policy_sender5793, <enforce-transfer-policy_sender5793>, string)
assocAST: (inlinedCallArgs5893_sender5895, <rotate_account5783>, string) => (enforce-transfer-policy_sender5793, <rotate_account5783>, string)
assocAST: (inlinedCallArgs5893_sender5895, <rotate_account5783>, string) => (enforce-transfer-policy_sender5793, <rotate_account5783>, string)
assocAST: (inlinedCallArgs5893_sender5895, <rotate_account5783>, string) => (enforce-transfer-policy_sender5793, <rotate_account5783>, string)
assocAST: (inlinedCallArgs5893_sender5895, <rotate_account5783>, string) => (enforce-transfer-policy_sender5793, <rotate_account5783>, string)
assocAST: (inlinedCallArgs5893_sender5895, <rotate_account5783>, string) => (enforce-transfer-policy_sender5793, <rotate_account5783>, string)
assocAST: (inlinedCallArgs5893_receiver5896, <rotate_account5783>, string) => (enforce-transfer-policy_receiver5794, <enforce-transfer-policy_receiver5794>, string)
assocAST: (inlinedCallArgs5893_receiver5896, <rotate_account5783>, string) => (enforce-transfer-policy_receiver5794, <rotate_account5783>, string)
assocAST: (inlinedCallArgs5893_amount5897, <decimal5846>, decimal) => (enforce-transfer-policy_amount5795, <enforce-transfer-policy_amount5795>, decimal)
assocAST: (inlinedCallArgs5893_amount5897, <decimal5846>, decimal) => (enforce-transfer-policy_amount5795, <decimal5846>, decimal)
assocTy: (<key5867>, string) <=> string
assocTy: (<key5867>, string) <= string
trackAST: (inlinedCallArgs5898, <inlinedCallArgs5898>)
assocTy: (<inlinedCallArgs5898>, <inlinedCallArgs5898>) <=> string
assocTy: (<inlinedCallArgs5898>, <inlinedCallArgs5898>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5898> <= string
trackAST: (inlinedCallArgs5898_id5899, string)
assocAST: (rotate_id5782, <rotate_id5782>, string) => (inlinedCallArgs5898_id5899, <inlinedCallArgs5898_id5899>, string)
trackAST: (inlinedCallArgs5898_account5900, string)
assocAST: (rotate_account5783, <rotate_account5783>, string) => (inlinedCallArgs5898_account5900, <inlinedCallArgs5898_account5900>, string)
assocAST: (inlinedCallArgs5898_id5899, <rotate_id5782>, string) => (key_id5862, <key_id5862>, string)
assocAST: (inlinedCallArgs5898_account5900, <rotate_account5783>, string) => (key_account5863, <key_account5863>, string)
assocTy: (<bool5874>, bool) <=> bool
assocTy: (<bool5874>, bool) <= bool
trackAST: (inlinedCallArgs5901, <inlinedCallArgs5901>)
assocTy: (<inlinedCallArgs5901>, <inlinedCallArgs5901>) <=> bool
assocTy: (<inlinedCallArgs5901>, <inlinedCallArgs5901>) <= bool
assocTy: tracking/updating type variable <inlinedCallArgs5901> <= bool
trackAST: (inlinedCallArgs5901_id5902, string)
assocAST: (rotate_id5782, <rotate_id5782>, string) => (inlinedCallArgs5901_id5902, <inlinedCallArgs5901_id5902>, string)
trackAST: (inlinedCallArgs5901_account5903, string)
assocAST: (rotate_account5783, <rotate_account5783>, string) => (inlinedCallArgs5901_account5903, <inlinedCallArgs5901_account5903>, string)
trackAST: (inlinedCallArgs5901_guard5904, guard)
assocAST: (rotate_new-guard5784, <rotate_new-guard5784>, guard) => (inlinedCallArgs5901_guard5904, <inlinedCallArgs5901_guard5904>, guard)
assocTy: (<key5854>, string) <=> string
assocTy: (<key5854>, string) <= string
trackAST: (inlinedCallArgs5905, <inlinedCallArgs5905>)
assocTy: (<inlinedCallArgs5905>, <inlinedCallArgs5905>) <=> string
assocTy: (<inlinedCallArgs5905>, <inlinedCallArgs5905>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5905> <= string
trackAST: (inlinedCallArgs5905_id5906, string)
assocAST: (rotate_id5782, <rotate_id5782>, string) => (inlinedCallArgs5905_id5906, <inlinedCallArgs5905_id5906>, string)
trackAST: (inlinedCallArgs5905_account5907, string)
assocAST: (rotate_account5783, <rotate_account5783>, string) => (inlinedCallArgs5905_account5907, <inlinedCallArgs5905_account5907>, string)
assocAST: (inlinedCallArgs5905_id5906, <rotate_id5782>, string) => (key_id5849, <key_id5849>, string)
assocAST: (inlinedCallArgs5905_account5907, <rotate_account5783>, string) => (key_account5850, <key_account5850>, string)
assocTy: (<bool5788>, bool) <=> <ROTATE5790_d>
assocTy: bool => <ROTATE5790_d>
trackAST: (inlinedCallArgs5908, <inlinedCallArgs5908>)
assocTy: (<inlinedCallArgs5908>, <inlinedCallArgs5908>) <=> <ROTATE5790_d>
assocTy: (<inlinedCallArgs5908>, <inlinedCallArgs5908>) <= <ROTATE5790_d>
assocTy: tracking/updating type variable <inlinedCallArgs5908> <= <ROTATE5790_d>
trackAST: (inlinedCallArgs5908_id5909, string)
assocAST: (rotate_id5782, <rotate_id5782>, string) => (inlinedCallArgs5908_id5909, <inlinedCallArgs5908_id5909>, string)
trackAST: (inlinedCallArgs5908_account5910, string)
assocAST: (rotate_account5783, <rotate_account5783>, string) => (inlinedCallArgs5908_account5910, <inlinedCallArgs5908_account5910>, string)
--------------------------------
Substitute natives:

Mangled funtype: capability: -> bool body:[*] -> <a> -> capability: -> bool body:[*] -> <with-capability5785_a>
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5788>, bool) <=> bool
assocTy: (<bool5788>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<rotate5878>, bool) <=> <with-capability5785_a>
assocTy: bool => <with-capability5785_a>
assocTy: (<with-read5847>, <with-read5847>) <=> <with-capability5785_a>
assocTy: (<with-read5847>, <with-read5847>) <= <with-capability5785_a>
assocTy: tracking/updating type variable <with-read5847> <= <with-capability5785_a>
Mangled funtype: src:object:<{row}> binding:binding:<{row}> -> <a> -> src:object:<{bind5796_row}> binding:binding:<{bind5796_row}> -> <bind5796_a>
assocTy: (<get-policy-info5812>, object:{marmalade.ledger.policy-info}) <=> object:<{bind5796_row}>
assocTy: (<{bind5796_row}>, <{bind5796_row}>) <=> {marmalade.ledger.policy-info}
assocTy: (<{bind5796_row}>, <{bind5796_row}>) <= {marmalade.ledger.policy-info}
assocTy: tracking/updating type variable <{bind5796_row}> <= {marmalade.ledger.policy-info}
assocTy: noop: (object:{marmalade.ledger.policy-info}, object:<{bind5796_row}>)
assocTy: (<bind5796>, <enforce-transfer-policy5845_s>) <=> <bind5796_a>
assocTy: (<bind5796>, <enforce-transfer-policy5845_s>) <= <bind5796_a>
assocTy: tracking/updating type variable <enforce-transfer-policy5845_s> <= <bind5796_a>
assocTy: (<enforce-transfer5824>, bool) <=> <bind5796_a>
assocTy: bool => <bind5796_a>
assocTy: (<BindSchema5814schema5843>, *) <=> binding:<{bind5796_row}>
assocTy: (<BindSchema5814schema5843>, *) <= binding:<{bind5796_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5828_row}> key:string bindings:binding:<{with-read5828_row}> -> <with-read5828_a>
assocTy: (<marmalade.ledger.ledger5829>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5828_row}>
assocTy: (<{with-read5828_row}>, <{with-read5828_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5828_row}>, <{with-read5828_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read5828_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5828_row}>)
assocTy: (<key5835>, string) <=> string
assocTy: (<key5835>, string) <= string
assocTy: (<account-guard5841>, guard) <=> <with-read5828_a>
assocTy: guard => <with-read5828_a>
assocTy: (<BindSchema5837_guard5838_f>, <BindSchema5837_guard5838_f>) <=> <with-read5828_a>
assocTy: (<BindSchema5837_guard5838_f>, <BindSchema5837_guard5838_f>) <= <with-read5828_a>
assocTy: tracking/updating type variable <BindSchema5837_guard5838_f> <= <with-read5828_a>
assocTy: (<BindSchema5837schema5840>, *) <=> binding:<{with-read5828_row}>
assocTy: (<BindSchema5837schema5840>, *) <= binding:<{with-read5828_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5833>, string) <=> string
assocTy: (<string5833>, string) <= string
assocTy: (<list5834>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5835>, string) <=> string
assocTy: (<key5835>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5828_row}> key:string bindings:binding:<{with-read5828_row}> -> <with-read5828_a>
assocTy: (<marmalade.ledger.ledger5829>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5828_row}>
assocTy: (<{with-read5828_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5828_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5828_row}>)
assocTy: (<key5835>, string) <=> string
assocTy: (<key5835>, string) <= string
assocTy: (<account-guard5841>, guard) <=> <with-read5828_a>
assocTy: (<BindSchema5837_guard5838_f>, guard) <=> <with-read5828_a>
assocTy: (<BindSchema5837schema5840>, binding:{kip.poly-fungible-v3.account-details}) <=> binding:<{with-read5828_row}>
assocTy: (<{with-read5828_row}>, {kip.poly-fungible-v3.account-details}) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5828_row}>, {kip.poly-fungible-v3.account-details}) <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (binding:{kip.poly-fungible-v3.account-details}, binding:<{with-read5828_row}>)
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5833>, string) <=> string
assocTy: (<string5833>, string) <= string
assocTy: (<list5834>, [*]) <=> [*]
assocTy: (<list5834>, [*]) <= [*]
assocTy: (<key5835>, string) <=> string
assocTy: (<key5835>, string) <= string
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5798_row}> key:string bindings:binding:<{with-read5798_row}> -> <with-read5798_a>
assocTy: (<marmalade.ledger.tokens5799>, table:{marmalade.ledger.token-schema}) <=> table:<{with-read5798_row}>
assocTy: (<{with-read5798_row}>, <{with-read5798_row}>) <=> {marmalade.ledger.token-schema}
assocTy: (<{with-read5798_row}>, <{with-read5798_row}>) <= {marmalade.ledger.token-schema}
assocTy: tracking/updating type variable <{with-read5798_row}> <= {marmalade.ledger.token-schema}
assocTy: noop: (table:{marmalade.ledger.token-schema}, table:<{with-read5798_row}>)
assocTy: (<rotate_id5782>, string) <=> string
assocTy: (<rotate_id5782>, string) <= string
assocTy: (<get-policy-info5812>, object:{marmalade.ledger.policy-info}) <=> <with-read5798_a>
assocTy: object:{marmalade.ledger.policy-info} => <with-read5798_a>
assocTy: (<object5809>, object:*) <=> <with-read5798_a>
assocTy: (<BindSchema5800schema5811>, *) <=> binding:<{with-read5798_row}>
assocTy: (<BindSchema5800schema5811>, *) <= binding:<{with-read5798_row}>
Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5847_row}> key:string bindings:binding:<{with-read5847_row}> -> <with-read5847_a>
assocTy: (<marmalade.ledger.ledger5848>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5847_row}>
assocTy: (<{with-read5847_row}>, <{with-read5847_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5847_row}>, <{with-read5847_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read5847_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5847_row}>)
assocTy: (<key5854>, string) <=> string
assocTy: (<key5854>, string) <= string
assocTy: (<with-read5847>, bool) <=> <with-read5847_a>
assocTy: bool => <with-read5847_a>
assocTy: (<emit-event5870>, <emit-event5870>) <=> <with-read5847_a>
assocTy: (<emit-event5870>, <emit-event5870>) <= <with-read5847_a>
assocTy: tracking/updating type variable <emit-event5870> <= <with-read5847_a>
assocTy: (<BindSchema5856schema5877>, *) <=> binding:<{with-read5847_row}>
assocTy: (<BindSchema5856schema5877>, *) <= binding:<{with-read5847_row}>
Mangled funtype: table:table:<{row}> key:string object:object:~<{row}> -> string -> table:table:<{update5860_row}> key:string object:object:~<{update5860_row}> -> string
assocTy: (<marmalade.ledger.ledger5861>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{update5860_row}>
assocTy: (<{update5860_row}>, <{update5860_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{update5860_row}>, <{update5860_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{update5860_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{update5860_row}>)
assocTy: (<key5867>, string) <=> string
assocTy: (<key5867>, string) <= string
assocTy: (<object5869>, object:*) <=> object:~<{update5860_row}>
assocTy: (<object5869>, object:*) <= object:~<{update5860_row}>
assocTy: (<update5860>, <update5860>) <=> string
assocTy: (<update5860>, <update5860>) <= string
assocTy: tracking/updating type variable <update5860> <= string
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5865>, string) <=> string
assocTy: (<string5865>, string) <= string
assocTy: (<list5866>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5867>, string) <=> string
assocTy: (<key5867>, string) <= string
Mangled funtype: capability: -> bool -> bool -> capability: -> bool -> bool
associating partial AST app with lambda return type: FunType {_ftArgs = [], _ftReturn = TyPrim TyBool}
assocTy: (<bool5874>, bool) <=> bool
assocTy: (<bool5874>, bool) <= bool
associating partial AST args with lambda arg types
assocTy: (<emit-event5870>, bool) <=> bool
assocTy: (<emit-event5870>, bool) <= bool
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5852>, string) <=> string
assocTy: (<string5852>, string) <= string
assocTy: (<list5853>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5854>, string) <=> string
assocTy: (<key5854>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

Skipping TC on specified heterogenous list for node: list5791::TyList {_tyListType = TyAny}
applySchemas [binding]: (BindSchema5814schema5843::*, {marmalade.ledger.policy-info})
assocTy: (<BindSchema5814_policy5815>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema5814_policy5815>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<inlinedCallArgs5885_token5886>, object:{kip.token-policy-v1.token-info}) <=> object:{kip.token-policy-v1.token-info}
assocTy: (<inlinedCallArgs5885_token5886>, object:{kip.token-policy-v1.token-info}) <= object:{kip.token-policy-v1.token-info}
applySchemas [binding]: (BindSchema5837schema5840::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5837_guard5838_f>, guard) <=> guard
assocTy: (<BindSchema5837_guard5838_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5834::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5837schema5840::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5837_guard5838_f>, guard) <=> guard
assocTy: (<BindSchema5837_guard5838_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5834::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [binding]: (BindSchema5800schema5811::*, {marmalade.ledger.token-schema})
assocTy: (<BindSchema5800_manifest5807_m>, <BindSchema5800_manifest5807_m>) <=> object:{kip.token-manifest.manifest}
assocTy: (<BindSchema5800_manifest5807_m>, <BindSchema5800_manifest5807_m>) <= object:{kip.token-manifest.manifest}
assocTy: tracking/updating type variable <BindSchema5800_manifest5807_m> <= object:{kip.token-manifest.manifest}
assocTy: (<BindSchema5800_policy5801>, module{kip.token-policy-v1}) <=> module{kip.token-policy-v1}
assocTy: (<BindSchema5800_policy5801>, module{kip.token-policy-v1}) <= module{kip.token-policy-v1}
assocTy: (<BindSchema5800_precision5805_l>, <BindSchema5800_precision5805_l>) <=> integer
assocTy: (<BindSchema5800_precision5805_l>, <BindSchema5800_precision5805_l>) <= integer
assocTy: tracking/updating type variable <BindSchema5800_precision5805_l> <= integer
assocTy: (<BindSchema5800_supply5803_k>, <BindSchema5800_supply5803_k>) <=> decimal
assocTy: (<BindSchema5800_supply5803_k>, <BindSchema5800_supply5803_k>) <= decimal
assocTy: tracking/updating type variable <BindSchema5800_supply5803_k> <= decimal
applySchemas [binding]: (BindSchema5856schema5877::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5856_old-guard5857_o>, <BindSchema5856_old-guard5857_o>) <=> guard
assocTy: (<BindSchema5856_old-guard5857_o>, <BindSchema5856_old-guard5857_o>) <= guard
assocTy: tracking/updating type variable <BindSchema5856_old-guard5857_o> <= guard
Skipping TC on specified heterogenous list for node: list5866::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
applySchemas [object]: (object5869::object:*, {kip.poly-fungible-v3.account-details}, AnySubschema)
assocTy: (<rotate_new-guard5784>, guard) <=> guard
assocTy: (<rotate_new-guard5784>, guard) <= guard
Specializing schema ty for sublist: fromList ["guard"]
assocTy: (<object5869>, object:~{kip.poly-fungible-v3.account-details}) <=> object:~[guard]{kip.poly-fungible-v3.account-details}
assocTy: (<object5869>, object:~{kip.poly-fungible-v3.account-details}) <= object:~[guard]{kip.poly-fungible-v3.account-details}
Skipping TC on specified heterogenous list for node: list5853::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

tryFunType: unify role: role=ArgVar 0, candTy=guard, roleTy=guard
tryFunType: unify role: role=RetVar, candTy=bool, roleTy=<enforce-guard5859>
tryFunType: cand: guard:guard -> bool, roles=[(RetVar, RoleTys { candArgTy=bool, AST=enforce-guard5859::<enforce-guard5859>, tyVar=<enforce-guard5859>, resolvedTy=<enforce-guard5859>}), (ArgVar 0, RoleTys { candArgTy=guard, AST=BindSchema5856_old-guard5857::<BindSchema5856_old-guard5857_o>, tyVar=<BindSchema5856_old-guard5857_o>, resolvedTy=guard})]
tryFunType: trying guard:guard -> bool with [(bool, [(enforce-guard5859, <enforce-guard5859>, <enforce-guard5859>)]), (guard, [(BindSchema5856_old-guard5857, <BindSchema5856_old-guard5857_o>, guard)])]
Solved overload with guard:guard -> bool: [(bool, (bool, [(enforce-guard5859, <enforce-guard5859>)])), (guard, (guard, [(BindSchema5856_old-guard5857, <BindSchema5856_old-guard5857_o>)]))]
Adjusting type for solution: ((enforce-guard5859, <enforce-guard5859>), bool, bool)
assocTy: (<enforce-guard5859>, <enforce-guard5859>) <=> bool
assocTy: (<enforce-guard5859>, <enforce-guard5859>) <= bool
assocTy: tracking/updating type variable <enforce-guard5859> <= bool
assocTy: (<enforce-guard5859>, bool) <=> bool
assocTy: (<enforce-guard5859>, bool) <= bool
Adjusting type for solution: ((BindSchema5856_old-guard5857, <BindSchema5856_old-guard5857_o>), guard, guard)
assocTy: (<BindSchema5856_old-guard5857_o>, guard) <=> guard
assocTy: (<BindSchema5856_old-guard5857_o>, guard) <= guard
assocTy: (<BindSchema5856_old-guard5857_o>, guard) <=> guard
assocTy: (<BindSchema5856_old-guard5857_o>, guard) <= guard
--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.rotate:bool (id:string acc...
===== Fun: (defun marmalade.ledger.account-guard:guard (id:st...
trackAST: (account-guard_id5912, string)
trackAST: (account-guard_account5913, string)
trackAST: (with-read5914, <with-read5914>)
TTable: TyUser {_tyUser = TVar {_tVar = Left (Ref (TSchema {_tSchemaName = TypeName "account-details", _tModule = Just (ModuleName {_mnName = "poly-fungible-v3", _mnNamespace = Just (NamespaceName "kip")}), _tMeta = Meta {_mDocs = Just " Account details: token ID, account name, balance, and guard.", _mModel = [EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "id", _atomQualifiers = [], _atomDynamic = False, _atomInfo = id }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= id "")})], _listDelimiter = Parens, _listInfo = (invariant (!= id ""))        ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "!=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = != }),EAtom (AtomExp {_atomAtom = "account", _atomQualifiers = [], _atomDynamic = False, _atomInfo = account }),ELiteral (LiteralExp {_litLiteral = LString {_lString = ""}, _litInfo = ""})], _listDelimiter = Parens, _listInfo = (!= account "")})], _listDelimiter = Parens, _listInfo = (invariant (!= account ""))   ...}),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = "invariant", _atomQualifiers = [], _atomDynamic = False, _atomInfo = invariant }),EList (ListExp {_listList = [EAtom (AtomExp {_atomAtom = ">=", _atomQualifiers = [], _atomDynamic = False, _atomInfo = >= }),EAtom (AtomExp {_atomAtom = "balance", _atomQualifiers = [], _atomDynamic = False, _atomInfo = balance }),ELiteral (LiteralExp {_litLiteral = LDecimal {_lDecimal = 0.0}, _litInfo = 0.0})], _listDelimiter = Parens, _listInfo = (>= balance 0.0)})], _listDelimiter = Parens, _listInfo = (invariant (>= balance 0.0))  ...})]}, _tFields = [Arg {_aName = "id", _aType = TyPrim TyString, _aInfo = id},Arg {_aName = "account", _aType = TyPrim TyString, _aInfo = account},Arg {_aName = "balance", _aType = TyPrim TyDecimal, _aInfo = balance},Arg {_aName = "guard", _aType = TyPrim (TyGuard Nothing), _aInfo = guard}], _tInfo = (defschema account-details    ...})), _tInfo = account-details}}
trackAST: (marmalade.ledger.ledger5915, table:{kip.poly-fungible-v3.account-details})
trackAST: (key_id5916, string)
trackAST: (key_account5917, string)
trackAST: (format5918, <format5918>)
trackAST: (string5919, string)
trackAST: (list5920, [<ak>])
trackAST: (key5921, string)
assocAST: (key5921, <key5921>, string) => (format5918, <format5918>, <format5918>)
trackAST: (key5922, <key5922>)
assocAST: (format5918, <key5921>, string) => (key5922, <key5922>, <key5922>)
trackAST: (BindSchema5923, <BindSchema5923>)
trackAST: (BindSchema5923_guard5924, <BindSchema5923_guard5924_f>)
trackAST: (string5925, string)
assocAST: (BindSchema5923_guard5924, <BindSchema5923_guard5924_f>, <BindSchema5923_guard5924_f>) => (BindSchema5923, <BindSchema5923>, <BindSchema5923>)
trackAST: (BindSchema5923schema5926, *)
trackAST: (account-guard5927, guard)
assocAST: (account-guard5927, <account-guard5927>, guard) => (with-read5914, <with-read5914>, <with-read5914>)
--------------------------------
 Substitute defuns:

assocTy: (<key5921>, string) <=> string
assocTy: (<key5921>, string) <= string
trackAST: (inlinedCallArgs5928, <inlinedCallArgs5928>)
assocTy: (<inlinedCallArgs5928>, <inlinedCallArgs5928>) <=> string
assocTy: (<inlinedCallArgs5928>, <inlinedCallArgs5928>) <= string
assocTy: tracking/updating type variable <inlinedCallArgs5928> <= string
trackAST: (inlinedCallArgs5928_id5929, string)
assocAST: (account-guard_id5912, <account-guard_id5912>, string) => (inlinedCallArgs5928_id5929, <inlinedCallArgs5928_id5929>, string)
trackAST: (inlinedCallArgs5928_account5930, string)
assocAST: (account-guard_account5913, <account-guard_account5913>, string) => (inlinedCallArgs5928_account5930, <inlinedCallArgs5928_account5930>, string)
assocAST: (inlinedCallArgs5928_id5929, <account-guard_id5912>, string) => (key_id5916, <key_id5916>, string)
assocAST: (inlinedCallArgs5928_account5930, <account-guard_account5913>, string) => (key_account5917, <key_account5917>, string)
--------------------------------
Substitute natives:

Mangled funtype: table:table:<{row}> key:string bindings:binding:<{row}> -> <a> -> table:table:<{with-read5914_row}> key:string bindings:binding:<{with-read5914_row}> -> <with-read5914_a>
assocTy: (<marmalade.ledger.ledger5915>, table:{kip.poly-fungible-v3.account-details}) <=> table:<{with-read5914_row}>
assocTy: (<{with-read5914_row}>, <{with-read5914_row}>) <=> {kip.poly-fungible-v3.account-details}
assocTy: (<{with-read5914_row}>, <{with-read5914_row}>) <= {kip.poly-fungible-v3.account-details}
assocTy: tracking/updating type variable <{with-read5914_row}> <= {kip.poly-fungible-v3.account-details}
assocTy: noop: (table:{kip.poly-fungible-v3.account-details}, table:<{with-read5914_row}>)
assocTy: (<key5921>, string) <=> string
assocTy: (<key5921>, string) <= string
assocTy: (<account-guard5927>, guard) <=> <with-read5914_a>
assocTy: guard => <with-read5914_a>
assocTy: (<BindSchema5923_guard5924_f>, <BindSchema5923_guard5924_f>) <=> <with-read5914_a>
assocTy: (<BindSchema5923_guard5924_f>, <BindSchema5923_guard5924_f>) <= <with-read5914_a>
assocTy: tracking/updating type variable <BindSchema5923_guard5924_f> <= <with-read5914_a>
assocTy: (<BindSchema5923schema5926>, *) <=> binding:<{with-read5914_row}>
assocTy: (<BindSchema5923schema5926>, *) <= binding:<{with-read5914_row}>
Mangled funtype: template:string vars:[*] -> string -> template:string vars:[*] -> string
assocTy: (<string5919>, string) <=> string
assocTy: (<string5919>, string) <= string
assocTy: (<list5920>, [<ak>]) <=> [*]
assocTy: specified heterogenous list, [<ak>] <= [*]
assocTy: (<key5921>, string) <=> string
assocTy: (<key5921>, string) <= string
--------------------------------
Assoc Yield/Resume:

--------------------------------
Apply Schemas:

applySchemas [binding]: (BindSchema5923schema5926::*, {kip.poly-fungible-v3.account-details})
assocTy: (<BindSchema5923_guard5924_f>, guard) <=> guard
assocTy: (<BindSchema5923_guard5924_f>, guard) <= guard
Skipping TC on specified heterogenous list for node: list5920::TyList {_tyListType = TyVar {_tyVar = TypeVar {_tvName = "ak", _tvConstraint = []}}}
--------------------------------
Solve Overloads:

--------------------------------
Resolve types:

Successfully resolved all types

===== Done: (defun marmalade.ledger.account-guard:guard (id:st...
